{
  "leftCurly": {
    "type": "LeftCurly",
    "text": "{",
    "range": "[(0,0)..(0,1)]"
  },
  "elements": [
    {
      "key": {
        "type": "Key",
        "text": "key",
        "range": "[(0,1)..(0,4)]"
      },
      "colon": {
        "type": "Colon",
        "text": ":",
        "range": "[(0,4)..(0,5)]"
      },
      "value": "undefined",
      "range": "[(0,1)..(0,5)]"
    }
  ],
  "commas": [],
  "rightCurly": {
    "type": "RightCurly",
    "text": "}",
    "range": "[(0,6)..(0,7)]"
  },
  "range": "[(0,0)..(0,7)]",
  "errors": {
    "lexer": [
      {
        "range": "[(0,6)..(0,7)]",
        "text": "",
        "type": "LexerError"
      }
    ],
    "parse": [
      {
        "type": "ParseError",
        "range": "[(0,6)..(0,7)]",
        "text": "}",
        "merged": [
          {
            "type": "ParseError",
            "text": "}",
            "range": "[(0,6)..(0,7)]",
            "tokenTypeName": "RightCurly"
          }
        ],
        "tokenTypeName": "RightCurly",
        "previousToken": {
          "type": "ParseError",
          "text": ":",
          "range": "[(0,4)..(0,5)]",
          "tokenTypeName": "Colon"
        },
        "message": "Expecting: one of these possible Token sequences:\n  1. [StringValue]\n  2. [NumberValue]\n  3. [{]\n  4. [[]\n  5. [BooleanValue]\n  6. [NullValue]\nbut found: '}'"
      }
    ]
  },
  "spaces": [
    {
      "type": "WhiteSpace",
      "text": " ",
      "range": "[(0,5)..(0,6)]"
    }
  ]
}
