{
  "$schema": "http://json-schema.org/draft-06/schema#",
  "$id": "http://schemas.sap.com/sapui5/designtime/api.json/1.0",
  "title": "Schema for api.json files",
  "description": "Schema that describes the structure of the api.json files that the 'sapui5-jsdoc3' template can generate for each UI5 library",
  "definitions": {
    "libraryVersion": {
      "type": "string",
      "pattern": "^\\d+(\\.\\d+(\\.\\d+([.-][a-zA-Z0-9_-]+)?)?)?(\\n)?$"
    },
    "moduleName": {
      "type": "string",
      "description": "( package '/' )* name",
      "pattern": "^([a-zA-Z_][a-zA-Z0-9_.$]*/)*[a-zA-Z][a-zA-Z0-9_.\\-$]*$"
    },
    "since": {
      "description": "Version with which the documented entity has been introduced the first time, no matter in what state it has been introduced",
      "oneOf": [
        { "$ref": "#/definitions/libraryVersion" },
        {
          "type": "string",
          "enum": ["undefined"]
        }
      ]
    },
    "experimental": {
      "description": "Describes whether the documented entity is still experimental and should not be used in productive apps. The since attribute describes since when the library is in that state, it must be equal or higher than the since version of the entity, but not higher than the current version of the whole delivery unit.",
      "type": "object",
      "properties": {
        "since": { "$ref": "#/definitions/libraryVersion" },
        "text": {
          "type": "string"
        }
      }
    },

    "deprecated": {
      "description": "If the entity has been deprecated, this element should contain information about when and why this happened and should describe any potential alternatives",
      "type": "object",
      "properties": {
        "since": { "$ref": "#/definitions/libraryVersion" },
        "text": {
          "type": "string"
        }
      }
    },
    "examples": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "caption": {
            "type": "string"
          },
          "text": {
            "type": "string"
          }
        },
        "additionalProperties": false
      }
    },
    "exceptions": {
      "description": "With this element, a callable (constructor, method) can document the exceptions that may occur during its execution",
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      }
    },
    "references": {
      "description": "references to internal or external sources of information that are related to the documented entity. References can be URLs, absolute or relative JSDoc symbol names. Relative JSDoc symbols usually are meant to be relative to the documented entity",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "nestedProperties": {
      "type": "object",
      "additionalProperties": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1
          },
          "type": {
            "type": "string"
          },
          "parameterProperties": {
            "$ref": "#/definitions/nestedProperties"
          },
          "description": {
            "type": "string"
          },
          "optional": {
            "type": "boolean",
            "defaultValue": false
          },
          "defaultValue": {},
          "since": {
            "$ref": "#/definitions/since"
          },
          "experimental": {
            "$ref": "#/definitions/experimental"
          },
          "deprecated": {
            "$ref": "#/definitions/deprecated"
          }
        },
        "additionalProperties": false,
        "required": ["name", "type"]
      }
    },

    "obj-property": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "minLength": 1
        },
        "module": {
          "$ref": "#/definitions/moduleName"
        },
        "export": {
          "type": "string"
        },
        "resource": {
          "type": "string"
        },
        "visibility": {
          "type": "string",
          "enum": ["public", "protected", "private", "restricted"],
          "defaultValue": "public"
        },
        "static": {
          "type": "boolean"
        },
        "type": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "since": {
          "$ref": "#/definitions/since"
        },
        "experimental": {
          "$ref": "#/definitions/experimental"
        },
        "deprecated": {
          "$ref": "#/definitions/deprecated"
        },
        "examples": {
          "$ref": "#/definitions/examples"
        },
        "references": {
          "$ref": "#/definitions/references"
        },
        "optional": {
          "type": "boolean"
        },
        "allowedFor": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "properties": {
          "type": "object"
        }
      },
      "additionalProperties": false,
      "required": ["name"]
    },

    "enum-property": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "minLength": 1
        },
        "module": {
          "$ref": "#/definitions/moduleName"
        },
        "export": {
          "type": "string"
        },
        "resource": {
          "type": "string"
        },
        "visibility": {
          "type": "string",
          "enum": ["public", "protected", "private", "restricted"],
          "defaultValue": "public"
        },
        "static": {
          "type": "boolean"
        },
        "type": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "since": {
          "$ref": "#/definitions/since"
        },
        "experimental": {
          "$ref": "#/definitions/experimental"
        },
        "deprecated": {
          "$ref": "#/definitions/deprecated"
        },
        "examples": {
          "$ref": "#/definitions/examples"
        },
        "references": {
          "$ref": "#/definitions/references"
        },
        "value": {
          "oneOf": [{ "type": "string" }, { "type": "integer" }]
        },
        "optional": {
          "type": "boolean"
        },
        "allowedFor": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false,
      "required": ["name"]
    },

    "obj-callable-parameters": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1
          },
          "type": {
            "type": "string"
          },
          "optional": {
            "type": "boolean",
            "defaultValue": false
          },
          "defaultValue": {},
          "parameterProperties": {
            "$ref": "#/definitions/nestedProperties"
          },
          "description": {
            "type": "string"
          },
          "since": {
            "$ref": "#/definitions/since"
          },
          "experimental": {
            "$ref": "#/definitions/experimental"
          },
          "deprecated": {
            "$ref": "#/definitions/deprecated"
          },
          "repeatable": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "required": ["name", "type"]
      }
    },
    "obj-method": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "minLength": 1
        },
        "module": {
          "$ref": "#/definitions/moduleName"
        },
        "export": {
          "type": "string"
        },
        "resource": {
          "type": "string"
        },
        "visibility": {
          "type": "string",
          "enum": ["public", "protected", "private", "restricted"],
          "defaultValue": "public"
        },
        "static": {
          "type": "boolean"
        },
        "parameters": { "$ref": "#/definitions/obj-callable-parameters" },
        "returnValue": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string"
            },
            "description": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "required": []
        },
        "throws": {
          "$ref": "#/definitions/exceptions"
        },
        "description": {
          "type": "string"
        },
        "since": {
          "$ref": "#/definitions/since"
        },
        "experimental": {
          "$ref": "#/definitions/experimental"
        },
        "deprecated": {
          "$ref": "#/definitions/deprecated"
        },
        "examples": {
          "$ref": "#/definitions/examples"
        },
        "references": {
          "$ref": "#/definitions/references"
        },
        "ui5-metamodel": {
          "type": "boolean",
          "defaultValue": false
        },
        "allowedFor": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": ["name"]
    },
    "obj-constructor": {
      "type": "object",
      "properties": {
        "visibility": {
          "type": "string",
          "enum": ["public", "protected", "private", "restricted"],
          "defaultValue": "public"
        },
        "parameters": {
          "$ref": "#/definitions/obj-callable-parameters"
        },
        "throws": {
          "$ref": "#/definitions/exceptions"
        },
        "description": {
          "type": "string"
        },
        "examples": {
          "$ref": "#/definitions/examples"
        },
        "references": {
          "$ref": "#/definitions/references"
        },
        "allowedFor": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "tsSkip": {
          "type": "boolean"
        }
      },
      "additionalProperties": false,
      "required": []
    },

    "obj-method-propertyNames": {
      "enum": [
        "name",
        "module",
        "resource",
        "visibility",
        "static",
        "returnValue",
        "parameters",
        "throws",
        "description",
        "since",
        "experimental",
        "deprecated",
        "examples",
        "references",
        "ui5-metamodel",
        "export",
        "allowedFor",
        "tsSkip"
      ]
    },
    "obj-event": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "minLength": 1
        },
        "module": {
          "$ref": "#/definitions/moduleName"
        },
        "resource": {
          "type": "string"
        },
        "visibility": {
          "type": "string",
          "enum": ["public", "protected", "private", "restricted"],
          "defaultValue": "public"
        },
        "static": {
          "type": "boolean"
        },
        "parameters": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "minLength": 1
              },
              "type": {
                "type": "string"
              },
              "parameterProperties": {
                "$ref": "#/definitions/nestedProperties"
              },
              "description": {
                "type": "string"
              },
              "since": {
                "$ref": "#/definitions/since"
              },
              "experimental": {
                "$ref": "#/definitions/experimental"
              },
              "deprecated": {
                "$ref": "#/definitions/deprecated"
              }
            },
            "additionalProperties": false,
            "required": ["name", "type"]
          }
        },
        "description": {
          "type": "string"
        },
        "since": {
          "$ref": "#/definitions/since"
        },
        "experimental": {
          "$ref": "#/definitions/experimental"
        },
        "deprecated": {
          "$ref": "#/definitions/deprecated"
        },
        "examples": {
          "$ref": "#/definitions/examples"
        },
        "references": {
          "$ref": "#/definitions/references"
        },
        "allowedFor": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false,
      "required": ["name"]
    },
    "ui5-settingName": {
      "type": "string",
      "pattern": "_*[a-z][a-zA-Z0-9_]*"
    },
    "ui5-specialSetting": {
      "type": "object",
      "properties": {
        "name": {
          "$ref": "#/definitions/ui5-settingName"
        },
        "type": {
          "type": "string",
          "defaultValue": "string"
        },
        "visibility": {
          "type": "string",
          "enum": ["public", "hidden", "restricted"],
          "defaultValue": "public"
        },
        "description": {
          "type": "string"
        },
        "since": {
          "$ref": "#/definitions/since"
        },
        "experimental": {
          "$ref": "#/definitions/experimental"
        },
        "deprecated": {
          "$ref": "#/definitions/deprecated"
        },
        "methods": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allowedFor": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false,
      "required": ["name"]
    },
    "ui5-property": {
      "type": "object",
      "properties": {
        "name": {
          "$ref": "#/definitions/ui5-settingName"
        },
        "type": {
          "type": "string",
          "defaultValue": "string"
        },
        "defaultValue": {},
        "group": {
          "type": "string"
        },
        "visibility": {
          "type": "string",
          "enum": ["public", "hidden", "restricted"],
          "defaultValue": "public"
        },
        "description": {
          "type": "string"
        },
        "since": {
          "$ref": "#/definitions/since"
        },
        "bindable": {
          "type": "boolean",
          "defaultValue": false
        },
        "experimental": {
          "$ref": "#/definitions/experimental"
        },
        "deprecated": {
          "$ref": "#/definitions/deprecated"
        },
        "methods": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "optional": {
          "type": "boolean"
        },
        "static": {
          "type": "boolean"
        },
        "allowedFor": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false,
      "required": ["name"]
    },
    "ui5-aggregation": {
      "type": "object",
      "properties": {
        "name": {
          "$ref": "#/definitions/ui5-settingName"
        },
        "singularName": {
          "$ref": "#/definitions/ui5-settingName"
        },
        "type": {
          "type": "string",
          "defaultValue": "sap.ui.core.Control"
        },
        "altTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "cardinality": {
          "type": "string",
          "enum": ["0..1", "0..n"],
          "defaultValue": "0..n"
        },
        "visibility": {
          "type": "string",
          "enum": ["public", "hidden", "restricted"],
          "defaultValue": "public"
        },
        "bindable": {
          "type": "boolean",
          "defaultValue": false
        },
        "description": {
          "type": "string"
        },
        "since": {
          "$ref": "#/definitions/since"
        },
        "experimental": {
          "$ref": "#/definitions/experimental"
        },
        "deprecated": {
          "$ref": "#/definitions/deprecated"
        },
        "methods": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dnd": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "object",
              "properties": {
                "draggable": {
                  "type": "boolean"
                },
                "droppable": {
                  "type": "boolean"
                },
                "layout": {
                  "type": "string",
                  "enum": ["Vertical", "Horizontal"],
                  "defaultValue": "Vertical"
                }
              }
            }
          ]
        },
        "allowedFor": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false,
      "required": ["name"]
    },
    "ui5-association": {
      "type": "object",
      "properties": {
        "name": {
          "$ref": "#/definitions/ui5-settingName"
        },
        "singularName": {
          "$ref": "#/definitions/ui5-settingName"
        },
        "type": {
          "type": "string",
          "defaultValue": "sap.ui.core.Control"
        },
        "cardinality": {
          "type": "string",
          "enum": ["0..1", "0..n"],
          "defaultValue": "0..1"
        },
        "visibility": {
          "type": "string",
          "enum": ["public", "hidden", "restricted"],
          "defaultValue": "public"
        },
        "description": {
          "type": "string"
        },
        "since": {
          "$ref": "#/definitions/since"
        },
        "experimental": {
          "$ref": "#/definitions/experimental"
        },
        "deprecated": {
          "$ref": "#/definitions/deprecated"
        },
        "methods": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allowedFor": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false,
      "required": ["name"]
    },
    "ui5-event": {
      "type": "object",
      "properties": {
        "name": {
          "$ref": "#/definitions/ui5-settingName"
        },
        "visibility": {
          "type": "string",
          "enum": ["public", "hidden", "restricted"],
          "defaultValue": "public"
        },
        "description": {
          "type": "string"
        },
        "since": {
          "$ref": "#/definitions/since"
        },
        "experimental": {
          "$ref": "#/definitions/experimental"
        },
        "deprecated": {
          "$ref": "#/definitions/deprecated"
        },
        "parameters": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "name": {
                "$ref": "#/definitions/ui5-settingName"
              },
              "type": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "since": {
                "$ref": "#/definitions/since"
              },
              "experimental": {
                "$ref": "#/definitions/experimental"
              },
              "deprecated": {
                "$ref": "#/definitions/deprecated"
              }
            },
            "additionalProperties": false,
            "required": ["name", "type"]
          }
        },
        "methods": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allowPreventDefault": {
          "type": "boolean"
        },
        "enableEventBubbling": {
          "type": "boolean"
        },
        "allowedFor": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false,
      "required": ["name"]
    },
    "ui5-metadata": {
      "type": "object",
      "properties": {
        "stereotype": {
          "type": "string",
          "enum": [
            "object",
            "element",
            "control",
            "component",
            "library",
            "controller",
            "controllerextension",
            "template",
            "xmlmacro",
            "webcomponent"
          ]
        },
        "specialSettings": {
          "type": "array",
          "items": { "$ref": "#/definitions/ui5-specialSetting" }
        },
        "properties": {
          "type": "array",
          "items": { "$ref": "#/definitions/ui5-property" }
        },
        "defaultProperty": {
          "$ref": "#/definitions/ui5-settingName"
        },
        "aggregations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ui5-aggregation" }
        },
        "defaultAggregation": {
          "$ref": "#/definitions/ui5-settingName"
        },
        "associations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ui5-association" }
        },
        "events": {
          "type": "array",
          "items": { "$ref": "#/definitions/ui5-event" }
        },
        "dnd": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "object",
              "properties": {
                "draggable": {
                  "type": "boolean",
                  "defaultValue": false
                },
                "droppable": {
                  "type": "boolean",
                  "defaultValue": false
                }
              },
              "additionalProperties": false
            }
          ]
        },
        "annotations": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "namespace": {
                "type": "string"
              },
              "target": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "annotation": {
                "type": "string"
              },
              "defaultValue": {},
              "appliesTo": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "description": {
                "type": "string"
              },
              "since": {
                "$ref": "#/definitions/since"
              },
              "experimental": {
                "$ref": "#/definitions/experimental"
              },
              "deprecated": {
                "$ref": "#/definitions/deprecated"
              }
            },
            "additionalProperties": false,
            "required": ["name"]
          }
        },
        "designtime": {
          "type": ["boolean", "string"],
          "defaultValue": false
        },
        "metadataClass": {
          "type": "string"
        }
      },
      "additionalProperties": false,
      "required": []
    },
    "symbol-base": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "enum": [
            "namespace",
            "member",
            "class",
            "interface",
            "enum",
            "typedef",
            "function"
          ]
        },
        "name": {
          "type": "string",
          "minLength": 1
        },
        "basename": {
          "type": "string",
          "minLength": 1
        },
        "resource": {
          "type": "string"
        },
        "module": {
          "$ref": "#/definitions/moduleName"
        },
        "export": {
          "type": "string"
        },
        "static": {
          "type": "boolean"
        },
        "visibility": {
          "type": "string",
          "enum": ["public", "protected", "private", "restricted"],
          "defaultValue": "public"
        },
        "description": {
          "type": "string"
        },
        "since": {
          "$ref": "#/definitions/since"
        },
        "experimental": {
          "$ref": "#/definitions/experimental"
        },
        "deprecated": {
          "$ref": "#/definitions/deprecated"
        },
        "references": {
          "$ref": "#/definitions/references"
        },
        "allowedFor": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": ["name", "basename"]
    },
    "symbol-propertyNames": {
      "enum": [
        "kind",
        "name",
        "basename",
        "resource",
        "module",
        "export",
        "static",
        "visibility",
        "description",
        "since",
        "experimental",
        "deprecated",
        "references",
        "allowedFor"
      ]
    },

    "typedef-symbol": {
      "description": "",
      "allOf": [
        { "$ref": "#/definitions/symbol-base" },
        {
          "anyOf": [
            {
              "$comment": "A typedef for a structure type",
              "type": "object",
              "properties": {
                "kind": {
                  "enum": ["typedef"]
                },
                "extends": {
                  "type": "string"
                },
                "ui5-metamodel": {
                  "type": "boolean"
                },
                "type": {
                  "type": "string"
                },
                "properties": {
                  "type": "array",
                  "items": { "$ref": "#/definitions/obj-property" }
                }
              },
              "propertyNames": {
                "anyOf": [
                  { "$ref": "#/definitions/symbol-propertyNames" },
                  { "enum": ["properties", "extends", "ui5-metamodel", "type"] }
                ]
              }
            },
            {
              "$comment": "A (falsy) typedef for a structure type (from sap.fe)",
              "type": "object",
              "properties": {
                "kind": {
                  "enum": ["typedef"]
                },
                "extends": {
                  "type": "string"
                },
                "ui5-metamodel": {
                  "type": "boolean"
                },
                "type": {
                  "type": "string"
                },
                "properties": {
                  "type": "array",
                  "items": { "$ref": "#/definitions/ui5-property" }
                }
              },
              "propertyNames": {
                "anyOf": [
                  { "$ref": "#/definitions/symbol-propertyNames" },
                  { "enum": ["properties", "extends", "ui5-metamodel", "type"] }
                ]
              }
            },
            {
              "$comment": "A typedef for a callback type",
              "type": "object",
              "properties": {
                "kind": {
                  "enum": ["typedef"]
                },
                "extends": {
                  "type": "string"
                },
                "parameters": {
                  "$ref": "#/definitions/obj-callable-parameters"
                },
                "returnValue": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false,
                  "required": []
                },
                "throws": {
                  "$ref": "#/definitions/exceptions"
                }
              },
              "propertyNames": {
                "anyOf": [
                  { "$ref": "#/definitions/symbol-propertyNames" },
                  { "enum": ["parameters", "returnValue", "throws", "extends"] }
                ]
              }
            }
          ]
        }
      ]
    },
    "namespace-symbol": {
      "$comment": "This schema describes a normal JavaScript namespace with properties and methods",
      "description": "Namespaces can have the common symbol properties and extend another symbol",
      "allOf": [
        { "$ref": "#/definitions/symbol-base" },
        {
          "type": "object",
          "properties": {
            "kind": {
              "enum": ["namespace", "member"]
            },
            "extends": {
              "type": "string"
            },
            "implements": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "properties": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/obj-property"
              }
            },
            "methods": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/obj-method"
              }
            },
            "events": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/obj-event"
              }
            },
            "abstract": {
              "type": "boolean"
            },
            "final": {
              "type": "boolean"
            },
            "ui5-metamodel": {
              "type": "boolean"
            },
            "ui5-metadata": {
              "$ref": "#/definitions/ui5-metadata"
            }
          },
          "propertyNames": {
            "anyOf": [
              { "$ref": "#/definitions/symbol-propertyNames" },
              {
                "enum": [
                  "extends",
                  "implements",
                  "properties",
                  "methods",
                  "events",
                  "abstract",
                  "final",
                  "ui5-metamodel",
                  "ui5-metadata"
                ]
              }
            ]
          }
        }
      ]
    },
    "datatype-symbol": {
      "$comment": "A special kind of namespace that represents a UI5 DataType instance (should be migrated to a typedef in future)",
      "description": "Namespaces can have the common symbol properties and extend another symbol",
      "allOf": [
        { "$ref": "#/definitions/symbol-base" },
        {
          "type": "object",
          "properties": {
            "kind": {
              "enum": ["namespace"]
            },
            "final": {
              "type": "boolean"
            },
            "ui5-metamodel": {
              "type": "boolean"
            },
            "ui5-metadata": {
              "type": "object",
              "properties": {
                "stereotype": {
                  "type": "string",
                  "enum": ["datatype"]
                },
                "basetype": {
                  "type": "string",
                  "enum": ["string", "int", "any", "float[]"]
                },
                "pattern": {
                  "type": "string"
                },
                "range": {
                  "type": "object",
                  "properties": {
                    "minExclusive": {
                      "type": "integer"
                    },
                    "maxInclusive": {
                      "type": "integer"
                    },
                    "minInclusive": {
                      "type": "integer"
                    },
                    "maxExclusive": {
                      "type": "integer"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "examples": {
              "$ref": "#/definitions/examples"
            }
          },
          "propertyNames": {
            "anyOf": [
              { "$ref": "#/definitions/symbol-propertyNames" },
              {
                "enum": ["final", "ui5-metamodel", "ui5-metadata", "examples"]
              }
            ]
          },
          "required": ["ui5-metadata"]
        }
      ]
    },
    "interface-symbol": {
      "description": "Interfaces can have the common symbol properties and extend another symbol",
      "allOf": [
        { "$ref": "#/definitions/symbol-base" },
        {
          "properties": {
            "kind": {
              "enum": ["interface"]
            },
            "extends": {
              "type": "string"
            },
            "ui5-metamodel": {
              "type": "boolean",
              "defaultValue": false
            },
            "methods": {
              "type": "array",
              "items": {
                "allOf": [
                  { "$ref": "#/definitions/obj-method" },
                  {
                    "type": "object",
                    "properties": {
                      "optional": {
                        "type": "boolean",
                        "defaultValue": false
                      }
                    },
                    "propertyNames": {
                      "anyOf": [
                        {
                          "$ref": "#/definitions/obj-method-propertyNames"
                        },
                        { "enum": ["optional"] }
                      ]
                    }
                  }
                ]
              }
            },
            "events": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/obj-event"
              }
            }
          },
          "propertyNames": {
            "anyOf": [
              { "$ref": "#/definitions/symbol-propertyNames" },
              {
                "enum": ["extends", "ui5-metamodel", "methods", "events"]
              }
            ]
          }
        }
      ]
    },
    "enum-symbol": {
      "description": "An enum has the standard symbol properties and may contain a set of properties",
      "allOf": [
        { "$ref": "#/definitions/symbol-base" },
        {
          "properties": {
            "kind": {
              "enum": ["enum"]
            },
            "ui5-metamodel": {
              "type": "boolean",
              "defaultValue": false
            },
            "properties": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/enum-property"
              }
            },
            "ui5-metadata": {
              "type": "object",
              "properties": {
                "stereotype": {
                  "type": "string",
                  "enum": ["enum"]
                }
              },
              "additionalProperties": false
            }
          },
          "propertyNames": {
            "anyOf": [
              { "$ref": "#/definitions/symbol-propertyNames" },
              { "enum": ["ui5-metamodel", "properties", "ui5-metadata"] }
            ]
          }
        }
      ]
    },
    "class-symbol": {
      "description": "A class is the basic building block of our user interfaces; it is a reusable entity with properties, events, methods, and relations. The most important relations are aggregations to other elements, and in this way a tree structure of elements can be created. Note that the term 'control' is used both for the individual instance (object) and for the type (class) of all such instances; sometimes the distinction will be made explicit, sometimes it becomes clear from the context.",
      "allOf": [
        { "$ref": "#/definitions/symbol-base" },
        {
          "properties": {
            "kind": {
              "enum": ["class"]
            },
            "extends": {
              "type": "string",
              "description": "any other class, control or element type, incl. the predefined types sap.ui.core/Element and sap.ui.core/Control"
            },
            "implements": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "interfaces that this class implements"
            },
            "abstract": {
              "type": "boolean",
              "defaultValue": "false"
            },
            "final": {
              "type": "boolean",
              "defaultValue": "false"
            },
            "ui5-metadata": {
              "$ref": "#/definitions/ui5-metadata"
            },
            "ui5-metamodel": {
              "type": "boolean",
              "defaultValue": false
            },
            "constructor": {
              "$ref": "#/definitions/obj-constructor"
            },
            "properties": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/obj-property"
              }
            },
            "events": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/obj-event"
              }
            },
            "methods": {
              "type": "array",
              "items": {
                "allOf": [
                  { "$ref": "#/definitions/obj-method" },
                  {
                    "type": "object",
                    "propertyNames": {
                      "$ref": "#/definitions/obj-method-propertyNames"
                    }
                  }
                ]
              }
            }
          },
          "propertyNames": {
            "anyOf": [
              { "$ref": "#/definitions/symbol-propertyNames" },
              {
                "enum": [
                  "kind",
                  "extends",
                  "implements",
                  "abstract",
                  "final",
                  "ui5-metadata",
                  "ui5-metamodel",
                  "constructor",
                  "properties",
                  "events",
                  "methods"
                ]
              }
            ]
          }
        }
      ]
    },
    "function-symbol": {
      "description": "A function can be a top-level symbol when exported from a module",
      "allOf": [
        { "$ref": "#/definitions/symbol-base" },
        { "$ref": "#/definitions/obj-method" },
        {
          "properties": {
            "kind": {
              "type": "string",
              "enum": ["function"]
            }
          },
          "propertyNames": {
            "anyOf": [
              { "$ref": "#/definitions/symbol-propertyNames" },
              { "$ref": "#/definitions/obj-method-propertyNames" },
              {
                "properties": {
                  "properties": {
                    "type": "array"
                  }
                }
              }
            ]
          }
        }
      ]
    },
    "concrete-symbol": {
      "oneOf": [
        { "$ref": "#/definitions/typedef-symbol" },
        { "$ref": "#/definitions/namespace-symbol" },
        { "$ref": "#/definitions/datatype-symbol" },
        { "$ref": "#/definitions/interface-symbol" },
        { "$ref": "#/definitions/enum-symbol" },
        { "$ref": "#/definitions/class-symbol" },
        { "$ref": "#/definitions/function-symbol" }
      ]
    }
  },

  "type": "object",

  "properties": {
    "$schema-ref": {
      "description": "A reference to this schema to make the structure of the file obvious.",
      "type": "string",
      "enum": ["http://schemas.sap.com/sapui5/designtime/api.json/1.0"]
    },
    "library": {
      "type": "string",
      "minLength": 1
    },
    "version": {
      "$ref": "#/definitions/libraryVersion"
    },
    "symbols": {
      "type": "array",
      "items": { "$ref": "#/definitions/concrete-symbol" }
    }
  },
  "additionalProperties": false,
  "required": ["$schema-ref"]
}
