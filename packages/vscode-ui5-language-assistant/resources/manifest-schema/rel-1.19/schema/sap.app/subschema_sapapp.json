{
  "title": "JSON schema for SAP.APP Namespace",

  "description": "Represents general application attributes",
  "type": "object",
  "additionalProperties": false,
  "required": ["id", "type", "title", "applicationVersion"],
  "properties": {
    "_version": {
      "description": "Application attributes format version. It is managed by namespace owner",
      "type": "string",
      "enum": [
        "1.1.0",
        "1.2.0",
        "1.3.0",
        "1.4.0",
        "1.5.0",
        "1.6.0",
        "1.7.0",
        "1.8.0",
        "1.9.0",
        "1.10.0"
      ]
    },

    "sourceTemplate": {
      "description": "Represents the template from which the app was generated",
      "type": "object",
      "required": ["id", "version"],
      "properties": {
        "id": {
          "description": "Represents id of the template from which the app was generated ",
          "type": "string"
        },
        "version": {
          "description": "Represents the version of the template from which the app was generated",
          "type": "string"
        }
      }
    },

    "id": {
      "description": "Represents mandatory unique app identifier which must correspond to component 'id/namespace'",
      "$ref": "#/definitions/id_def"
    },

    "type": {
      "description": "Represents type of an application and can be application or component or library",
      "type": "string",
      "enum": ["application", "component", "library", "card"]
    },

    "i18n": {
      "description": "Represents path inside the app to the properties file containing text symbols for the Descriptor",
      "type": "string",
      "default": "i18n/i18n.properties"
    },

    "applicationVersion": {
      "description": "Represents mandatory version of the app",
      "type": "object",
      "required": ["version"],
      "properties": {
        "version": {
          "$ref": "#/definitions/version"
        }
      }
    },

    "embeds": {
      "description": "Represents array of relative paths to the nested manifest.json's (mandatory if it contains nested 'manifest.json')",
      "type": "array",
      "items": {
        "type": "string"
      }
    },

    "embeddedBy": {
      "description": "Represents relative path back to the manifest.json of an embedding component or library (mandatory for nested 'manifest.json')",
      "type": "string"
    },

    "title": {
      "description": "Represents language-dependent mandatory title",
      "$ref": "#/definitions/i18n_key"
    },
    "subTitle": {
      "description": "Represents language-dependent additional information to the title",
      "$ref": "#/definitions/i18n_key"
    },

    "shortTitle": {
      "description": "Represents shorter version of the title (language-dependent )",
      "$ref": "#/definitions/i18n_key"
    },
    "info": {
      "description": "Represents language-dependent additional information to the title",
      "$ref": "#/definitions/i18n_key"
    },

    "description": {
      "description": "Represents language-dependent description",
      "$ref": "#/definitions/i18n_key"
    },

    "tags": {
      "description": "Represents array of keywords",
      "type": "object",
      "additionalProperties": true,
      "required": ["keywords"],
      "properties": {
        "keywords": {
          "$ref": "#/definitions/tag"
        },
        "technicalAttributes": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^[A-Z0-9_\\-\\/]+$"
          }
        }
      }
    },

    "ach": {
      "description": "Represents application component hierarchy",
      "type": "string",
      "pattern": "^([a-zA-Z0-9]{2,3})(\\-[a-zA-Z0-9]{1,6})*$"
    },

    "dataSources": {
      "description": "Represents used data sources with a unique key/alias",
      "type": "object",
      "additionalProperties": false,
      "patternProperties": {
        "^[a-zA-Z0-9_\\.\\-]*$": {
          "$ref": "#/definitions/dataSource"
        }
      }
    },

    "cdsViews": {
      "description": "Represents array of directly used CDS views, which only to be added if directly used via INA protocol and not if used via OData service",
      "type": "array",
      "items": {
        "type": "string"
      }
    },

    "resources": {
      "description": "Represents reference to a file (naming convention is resources.json) which contains list with all resources which the app needs",
      "type": "string",
      "enum": ["resources.json"]
    },

    "destination": {
      "description": "Represents a system alias",
      "type": "object",
      "required": ["name"],
      "additionalProperties": false,
      "properties": {
        "name": {
          "description": "Represents an alias for the system",
          "type": "string"
        }
      }
    },

    "openSourceComponents": {
      "description": "Represents a collection of directly used open source libs (not when used via UI5 capsulation)",
      "type": "array",
      "items": {
        "$ref": "#/definitions/openSource"
      }
    },
    "provider": {
      "description": "Represents the name of the provider which owns the application",
      "type": "string",
      "enum": ["sfsf"]
    },
    "offline": {
      "description": "Represents indicator whether the app is running offline. Possible values are true or false (default)",
      "type": "boolean",
      "default": false
    },

    "crossNavigation": {
      "description": "Represents cross navigation for inbound and outbound targets",
      "type": "object",
      "required": ["inbounds"],
      "properties": {
        "scopes": {
          "description": "Represents scopes of a site",
          "type": "object",
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9_\\.\\-]+$": {
              "description": "Represents unique id of the site",
              "type": "object",
              "required": ["value"],
              "properties": {
                "value": {
                  "type": "string"
                }
              }
            }
          }
        },

        "inbounds": {
          "description": "Represents cross navigation for inbound target",
          "$ref": "#/definitions/inbound"
        },

        "outbounds": {
          "description": "Represents cross navigation for outbound target",
          "$ref": "#/definitions/outbound"
        }
      }
    }
  },
  "definitions": {
    "version": {
      "type": "string"
    },

    "id_def": {
      "type": "string",
      "maxLength": 70
    },

    "i18n_key": {
      "type": "string",
      "pattern": "^\\{\\{[\\w][\\w\\.\\-]*\\}\\}$"
    },

    "tag": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/i18n_key"
      }
    },

    "dataSource": {
      "type": "object",
      "additionalProperties": false,
      "required": ["uri"],
      "properties": {
        "uri": {
          "description": "Represents uri of the data source",
          "type": "string"
        },
        "type": {
          "description": "Represents type of the data source. The supported types are OData, ODataAnnotation, INA, XML, JSON",
          "type": "string",
          "enum": ["OData", "ODataAnnotation", "INA", "XML", "JSON"],
          "default": "OData"
        },
        "settings": {
          "description": "Represents data source type specific attributes (key, value pairs)",
          "$ref": "#/definitions/setting"
        }
      }
    },

    "setting": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "odataVersion": {
          "description": "Represents version of OData: 2.0 is default",
          "type": "string",
          "enum": ["2.0", "4.0"]
        },
        "localUri": {
          "description": "Represents path to local meta data document or annotation uri",
          "type": "string"
        },
        "annotations": {
          "description": "Represents  array of annotation which references an existing data source of type ODataAnnotation",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "maxAge": {
          "description": "Indicates that the client is unwilling to accept a response whose age is greater than the number of seconds specified in this field",
          "type": "number",
          "multipleOf": 1.0
        }
      }
    },

    "openSource": {
      "type": "object",
      "additionalProperties": false,
      "required": ["name"],
      "properties": {
        "name": {
          "description": "Represents a name of the open source as appears on the web",
          "type": "string"
        },
        "version": {
          "description": "Represents a version of the open source (if part of app, version must be specified, if part of UI5 dist layer, version is empty)",
          "type": "string"
        },
        "packagedWithMySelf": {
          "description": "Indicates, whether it is part of the app or not",
          "type": "boolean"
        }
      }
    },

    "inbound": {
      "type": "object",
      "additionalProperties": false,
      "patternProperties": {
        "^[\\w\\.\\-]+$": {
          "type": "object",
          "additionalProperties": false,
          "required": ["semanticObject", "action"],
          "properties": {
            "semanticObject": {
              "description": "Represents semantic object",
              "type": "string",
              "pattern": "^[\\w\\*]{0,30}$"
            },
            "action": {
              "description": "Represents action an the semantic object",
              "type": "string",
              "pattern": "^[\\w\\*]{0,60}$"
            },
            "hideLauncher": {
              "description": "Indicates to not expose this inbound as a tile or link",
              "type": "boolean"
            },
            "icon": {
              "description": "Represents icon",
              "type": "string"
            },
            "title": {
              "description": "Represents language-dependent - different languages via server API or on client",
              "oneOf": [
                {
                  "$ref": "#/definitions/i18n_key"
                },
                {
                  "type": "string",
                  "pattern": "^[^\\W][\\w\\.\\-]*$"
                }
              ]
            },
            "subTitle": {
              "description": "Represents language-dependent additional information to the title and can overwrite subTitle from sap.app definition",
              "oneOf": [
                {
                  "$ref": "#/definitions/i18n_key"
                },
                {
                  "type": "string",
                  "pattern": "^[^\\W][\\w\\.\\-]*$"
                }
              ]
            },
            "shortTitle": {
              "description": "Represents shorter version of the title (language-dependent ) ",
              "oneOf": [
                {
                  "$ref": "#/definitions/i18n_key"
                },
                {
                  "type": "string",
                  "pattern": "^[^\\W][\\w\\.\\-]*$"
                }
              ]
            },

            "info": {
              "description": "Represents language-dependent  additional information to the title",
              "$ref": "#/definitions/i18n_key"
            },

            "displayMode": {
              "description": "Represents the display mode of the tile",
              "type": "string",
              "enum": ["ContentMode", "HeaderMode"],
              "default": "ContentMode"
            },

            "indicatorDataSource": {
              "description": "Represents data source",
              "type": "object",
              "required": ["dataSource", "path"],
              "properties": {
                "dataSource": {
                  "type": "string"
                },
                "path": {
                  "type": "string"
                },
                "refresh": {
                  "description": "Represents refresh interval",
                  "type": "number"
                }
              }
            },

            "deviceTypes": {
              "description": "Represents device types for which application is developed",
              "$ref": "#/definitions/deviceType"
            },

            "signature": {
              "$ref": "#/definitions/signature_def"
            }
          }
        }
      }
    },

    "signature_def": {
      "description": "Represents signature for inbound targets ",
      "type": "object",
      "required": ["parameters", "additionalParameters"],
      "additionalProperties": false,
      "properties": {
        "parameters": {
          "type": "object",
          "additionalProperties": false,
          "patternProperties": {
            "^[\\w\\.\\-\\/]+$": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "defaultValue": {
                  "type": "object",
                  "description": " Represents a default Value",
                  "additionalProperties": false,
                  "required": ["value"],
                  "properties": {
                    "value": {
                      "description": "Represents a depending on format either a verbatim default value or a reference",
                      "type": "string"
                    },
                    "format": {
                      "description": "Indicates how 'value' is to be interpreted: ('plain': the 'value' is taken as a literal string value| 'reference': the 'value' is a reference to e.g. a UserDefault parameter (e.g. 'UserDefault.CostCenter'), the resolved parameter value is used)",
                      "type": "string",
                      "enum": ["plain", "reference"]
                    }
                  },
                  "anyOf": [
                    {
                      "properties": {
                        "format": { "type": "string", "enum": ["plain"] },
                        "value": { "type": "string" }
                      }
                    },
                    {
                      "properties": {
                        "format": { "type": "string", "enum": ["reference"] },
                        "value": {
                          "type": "string",
                          "pattern": "^(User[.]env|UserDefault(.extended)?)[.][^.]+$"
                        }
                      }
                    },
                    {
                      "properties": {
                        "format": { "type": "null" },
                        "value": { "type": "string" }
                      }
                    }
                  ]
                },
                "filter": {
                  "description": "Represents a filter , only if input parameter matches filter",
                  "type": "object",
                  "additionalProperties": false,
                  "required": ["value"],
                  "properties": {
                    "value": {
                      "description": "Represents a depending on format either a verbatim filter value, a regular expression or a reference",
                      "type": "string"
                    },
                    "format": {
                      "type": "string",
                      "description": "Indicates how 'value' is to be interpreted: ('plain': the actual value must match the 'value' property directly| 'regexp': the 'value' represents a regexp which must be present in the actual value| 'reference' : the 'value' represents a reference to e.g. a UserDefault parameter (e.g. 'UserDefault.CostCenter'), the resolved parameter value is then directly compared with the actual value)",
                      "enum": ["plain", "regexp", "reference"]
                    }
                  }
                },
                "launcherValue": {
                  "type": "object",
                  "description": " Represents a value to be used when creating a tile intent for this inbound",
                  "additionalProperties": false,
                  "properties": {
                    "value": {
                      "oneOf": [
                        {
                          "description": "Represents the definition of a single-value tile intent parameter; format property must be 'plain' in this case",
                          "type": "string"
                        },
                        {
                          "description": "Represents the definition of a multi-value tile intent parameter; format property must be 'array' in this case",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      ]
                    },
                    "format": {
                      "description": "Indicates how 'value' is to be interpreted: 'plain': the 'value' is taken as a literal string value | 'array': the 'value' is an array of strings",
                      "type": "string",
                      "enum": ["plain", "array"]
                    },
                    "prompt": {
                      "description": "DEPRECATED - Indicates the administrator should be prompted to supply a value when creating a tile",
                      "type": "boolean"
                    }
                  }
                },
                "required": {
                  "type": "boolean"
                },
                "renameTo": {
                  "description": "Represents the parameter name in legacy ABAP application, e.g. 'RF05L-BUKRS' for parameter 'CompanyCode'",
                  "type": "string"
                }
              }
            }
          }
        },
        "additionalParameters": {
          "description": "Indicates how additional parameters to the declared signature are treated: ('ignored': parameters are not passed on to application | 'allowed': parameters are passed on to application | 'notallowed': additional parameters are not allowed)",
          "type": "string",
          "enum": ["ignored", "allowed", "notallowed"]
        }
      }
    },

    "outbound": {
      "type": "object",
      "additionalProperties": false,
      "patternProperties": {
        "^[\\w\\.\\-]+$": {
          "type": "object",
          "additionalProperties": false,
          "required": ["semanticObject", "action"],
          "properties": {
            "semanticObject": {
              "description": "Represents semantic object",
              "type": "string",
              "pattern": "^[\\w\\*]{0,30}$"
            },
            "action": {
              "description": "Represents action an the semantic object",
              "type": "string",
              "pattern": "^[\\w\\*]{0,60}$"
            },
            "additionalParameters": {
              "description": "Indicates whether additional context parameters are to be used: ('ignored': parameters are not used | 'allowed': parameters are passed on to application)",
              "type": "string",
              "enum": ["ignored", "allowed"]
            },
            "parameters": {
              "description": "Represents parameters for outbound targets",
              "type": "object",
              "additionalProperties": false,
              "patternProperties": {
                "^[\\w\\.\\-\\/]+$": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "value": {
                      "type": "object",
                      "description": " Represents a value to use in the outbound",
                      "additionalProperties": false,
                      "properties": {
                        "value": {
                          "description": "Represents a verbatim value (format : plain or not supplied) or a binding reference(format : binding)",
                          "type": "string"
                        },
                        "format": {
                          "description": "Indicates how 'value' is to be interpreted: ('plain': the 'value' is taken as a literal string value| 'reference': the 'value' is a reference to e.g. a UserDefault parameter (e.g. 'UserDefault.CostCenter'), the resolved parameter value is used)",
                          "type": "string",
                          "enum": ["plain", "binding"]
                        }
                      }
                    },
                    "required": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "parameter": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },

    "deviceType": {
      "type": "object",
      "description": "Represents device types on which the app is running",
      "additionalProperties": false,
      "properties": {
        "desktop": {
          "description": "Represents indicator whether desktop device is supported, default true",
          "type": "boolean"
        },
        "tablet": {
          "description": "Represents indicator whether tablet device is supported, default true",
          "type": "boolean"
        },
        "phone": {
          "description": "Represents indicator whether phone device is supported, default true",
          "type": "boolean"
        }
      }
    }
  }
}
