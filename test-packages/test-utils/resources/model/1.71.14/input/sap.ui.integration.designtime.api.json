{
  "$schema-ref": "http://schemas.sap.com/sapui5/designtime/api.json/1.0",
  "version": "1.71.12",
  "library": "sap.ui.integration",
  "symbols": [
    {
      "kind": "namespace",
      "name": "sap.ui.integration",
      "basename": "integration",
      "resource": "sap/ui/integration/library.js",
      "module": "sap/ui/integration/library",
      "export": "",
      "static": true,
      "visibility": "public",
      "description": "SAPUI5 library with controls specialized for SAP Fiori apps."
    },
    {
      "kind": "enum",
      "name": "sap.ui.integration.CardDataMode",
      "basename": "CardDataMode",
      "resource": "sap/ui/integration/library.js",
      "module": "sap/ui/integration/library",
      "export": "CardDataMode",
      "static": true,
      "visibility": "public",
      "since": "1.65",
      "description": "Possible data modes for <code>{@link sap.ui.integration.widgets.Card}</code>.",
      "experimental": { "since": "1.65" },
      "properties": [
        {
          "name": "Active",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "When in this mode, the card can make requests."
        },
        {
          "name": "Inactive",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "When in this mode, the card cannot make requests."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.integration.widgets.Card",
      "basename": "Card",
      "resource": "sap/ui/integration/widgets/Card.js",
      "module": "sap/ui/integration/widgets/Card",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.62",
      "extends": "sap.ui.core.Control",
      "implements": ["sap.f.ICard"],
      "description": "A control that represents a container with a header and content.\n\n<h3>Overview</h3> Cards are small user interface elements which provide the most important information from an app, related to a specific role or task. The information is represented in a compact manner, allowing for actions to be executed. Cards can be described as small representations of an app which can be integrated in different systems.\n\nThe integration card is defined in a declarative way, using a manifest.json to be: <ul> <li>Easily integrated into apps</li> <li>Easily reused across apps</li> <li>Understandable by other technologies</li> <li>Self-contained (has a built-in functionality and doesn't need external configuration)</li> <li>Dynamic parameter handling</li> <li>Clear separation of the roles of the card and app developers</li> </ul>\n\nThe role of the card developer is to describe the card in a manifest.json file and define: <ul> <li>Header</li> <li>Content</li> <li>Data source</li> <li>Possible actions</li> </ul>\n\nThe role of the app developer is to integrate the card into the app and define: <ul> <li>The dimensions of the card inside a layout of choice, using the <code>width</code> and <code>height</code> properties</li> <li>The behavior for the actions described in the manifest.json file, using the action event</li> </ul>\n\n<strong>You can learn more about integration cards in the <a href=\"test-resources/sap/ui/integration/demokit/cardExplorer/index.html\">Card Explorer</a></strong>\n\n<i>When to use</i> <ul> <li>When you want to reuse the card across apps.</li> <li>When you need easy integration and configuration.</li> </ul>\n\n<i>When not to use</i> <ul> <li>When you need more header and content flexibility.</li> <li>When you have to achieve simple card visualization. For such cases, use: {@link sap.f.Card Card}.</li> <li>When you have to use an application model. For such cases, use: {@link sap.f.Card Card}.</li> <li>When you need complex behavior. For such cases, use: {@link sap.f.Card Card}.</li> </ul>",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "manifest",
            "type": "any",
            "defaultValue": "",
            "group": "Misc",
            "visibility": "public",
            "description": "The URL of the manifest or an object.",
            "methods": ["getManifest", "setManifest"]
          },
          {
            "name": "parameters",
            "type": "object",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The parameters used in the manifest.",
            "experimental": {
              "since": "1.65",
              "text": "This property might be changed in future."
            },
            "methods": ["getParameters", "setParameters"]
          },
          {
            "name": "width",
            "type": "sap.ui.core.CSSSize",
            "defaultValue": "100%",
            "group": "Appearance",
            "visibility": "public",
            "description": "Defines the width of the card.",
            "methods": ["getWidth", "setWidth"]
          },
          {
            "name": "height",
            "type": "sap.ui.core.CSSSize",
            "defaultValue": "auto",
            "group": "Appearance",
            "visibility": "public",
            "description": "Defines the height of the card.",
            "methods": ["getHeight", "setHeight"]
          },
          {
            "name": "dataMode",
            "type": "sap.ui.integration.CardDataMode",
            "defaultValue": "Active",
            "group": "Behavior",
            "visibility": "public",
            "since": "1.65",
            "description": "Defines the state of the <code>Card</code>. When set to <code>Inactive</code>, the <code>Card</code> doesn't make requests.",
            "experimental": { "since": "1.65" },
            "methods": ["getDataMode", "setDataMode"]
          },
          {
            "name": "baseUrl",
            "type": "sap.ui.core.URI",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.70",
            "description": "Defines the base URL of the Card Manifest. It should be used when manifest property is an object instead of a URL.",
            "experimental": { "since": "1.70" },
            "methods": ["getBaseUrl", "setBaseUrl"]
          }
        ],
        "aggregations": [
          {
            "name": "_header",
            "singularName": "_header",
            "type": "sap.f.cards.IHeader",
            "cardinality": "0..1",
            "visibility": "hidden",
            "description": "Defines the header of the card.",
            "methods": ["get_header", "destroy_header", "set_header"]
          },
          {
            "name": "_content",
            "singularName": "_content",
            "type": "sap.ui.core.Control",
            "cardinality": "0..1",
            "visibility": "hidden",
            "description": "Defines the content of the card.",
            "methods": ["get_content", "destroy_content", "set_content"]
          }
        ],
        "associations": [
          {
            "name": "hostConfigurationId",
            "singularName": "hostConfigurationId",
            "type": "sap.ui.core.Control",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "The ID of the host configuration.",
            "methods": ["getHostConfigurationId", "setHostConfigurationId"]
          }
        ],
        "events": [
          {
            "name": "action",
            "visibility": "public",
            "description": "Fired when an action is triggered on the card.",
            "experimental": {
              "since": "1.64",
              "text": "Disclaimer: this property is in a beta state - incompatible API changes may be done before its official public release. Use at your own discretion."
            },
            "parameters": {
              "actionSource": {
                "name": "actionSource",
                "type": "sap.ui.core.Control",
                "description": "The action source."
              },
              "manifestParameters": {
                "name": "manifestParameters",
                "type": "object",
                "description": "The manifest parameters related to the triggered action."
              },
              "type": {
                "name": "type",
                "type": "sap.ui.integration.CardActionType",
                "description": "The type of the action."
              }
            },
            "methods": ["attachAction", "detachAction", "fireAction"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new <code>Card</code>.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.",
        "references": ["{@link topic:5b46b03f024542ba802d99d67bc1a3f4 Cards}"]
      },
      "events": [
        {
          "name": "action",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "actionSource": {
                      "name": "actionSource",
                      "type": "sap.ui.core.Control",
                      "optional": false,
                      "description": "The action source."
                    },
                    "manifestParameters": {
                      "name": "manifestParameters",
                      "type": "object",
                      "optional": false,
                      "description": "The manifest parameters related to the triggered action."
                    },
                    "type": {
                      "name": "type",
                      "type": "sap.ui.integration.CardActionType",
                      "optional": false,
                      "description": "The type of the action."
                    }
                  }
                }
              }
            }
          ],
          "description": "Fired when an action is triggered on the card.",
          "experimental": {
            "since": "1.64",
            "text": "Disclaimer: this property is in a beta state - incompatible API changes may be done before its official public release. Use at your own discretion."
          }
        }
      ],
      "methods": [
        {
          "name": "attachAction",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.integration.widgets.Card",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.integration.widgets.Card</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:action action} event of this <code>sap.ui.integration.widgets.Card</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.integration.widgets.Card</code> itself.\n\nFired when an action is triggered on the card.",
          "experimental": {
            "since": "1.64",
            "text": "Disclaimer: this property is in a beta state - incompatible API changes may be done before its official public release. Use at your own discretion."
          }
        },
        {
          "name": "detachAction",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.integration.widgets.Card",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:action action} event of this <code>sap.ui.integration.widgets.Card</code>.\n\nThe passed function and listener object must match the ones used for event registration.",
          "experimental": {
            "since": "1.64",
            "text": "Disclaimer: this property is in a beta state - incompatible API changes may be done before its official public release. Use at your own discretion."
          }
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.integration.widgets.Card with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "fireAction",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.integration.widgets.Card",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "actionSource": {
                  "name": "actionSource",
                  "type": "sap.ui.core.Control",
                  "optional": true,
                  "description": "The action source."
                },
                "manifestParameters": {
                  "name": "manifestParameters",
                  "type": "object",
                  "optional": true,
                  "description": "The manifest parameters related to the triggered action."
                },
                "type": {
                  "name": "type",
                  "type": "sap.ui.integration.CardActionType",
                  "optional": true,
                  "description": "The type of the action."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:action action} to attached listeners.",
          "experimental": {
            "since": "1.64",
            "text": "Disclaimer: this property is in a beta state - incompatible API changes may be done before its official public release. Use at your own discretion."
          }
        },
        {
          "name": "getBaseUrl",
          "visibility": "public",
          "since": "1.70",
          "returnValue": {
            "type": "sap.ui.core.URI",
            "description": "Value of property <code>baseUrl</code>"
          },
          "description": "Gets current value of property {@link #getBaseUrl baseUrl}.\n\nDefines the base URL of the Card Manifest. It should be used when manifest property is an object instead of a URL.",
          "experimental": { "since": "1.70" }
        },
        {
          "name": "getCardContent",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.core.Control",
            "description": "The content of the card"
          },
          "description": "Implements sap.f.ICard interface."
        },
        {
          "name": "getCardHeader",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.f.cards.IHeader",
            "description": "The header of the card"
          },
          "description": "Implements sap.f.ICard interface."
        },
        {
          "name": "getCardHeaderPosition",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.f.cards.HeaderPosition",
            "description": "The position of the header of the card."
          },
          "description": "Implements sap.f.ICard interface."
        },
        {
          "name": "getDataMode",
          "visibility": "public",
          "since": "1.65",
          "returnValue": {
            "type": "sap.ui.integration.CardDataMode",
            "description": "Value of property <code>dataMode</code>"
          },
          "description": "Gets current value of property {@link #getDataMode dataMode}.\n\nDefines the state of the <code>Card</code>. When set to <code>Inactive</code>, the <code>Card</code> doesn't make requests.\n\nDefault value is <code>Active</code>.",
          "experimental": { "since": "1.65" }
        },
        {
          "name": "getHeight",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.CSSSize",
            "description": "Value of property <code>height</code>"
          },
          "description": "Gets current value of property {@link #getHeight height}.\n\nDefines the height of the card.\n\nDefault value is <code>auto</code>."
        },
        {
          "name": "getHostConfigurationId",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.ID" },
          "description": "ID of the element which is the current target of the association {@link #getHostConfigurationId hostConfigurationId}, or <code>null</code>."
        },
        {
          "name": "getManifest",
          "visibility": "public",
          "returnValue": {
            "type": "string|Object",
            "description": "Cloned of the parameters."
          },
          "description": "Overwrites getter for card manifest."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.integration.widgets.Card."
        },
        {
          "name": "getParameters",
          "visibility": "public",
          "returnValue": {
            "type": "Object",
            "description": "A Clone of the parameters."
          },
          "description": "Overwrites getter for card parameters."
        },
        {
          "name": "getWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.CSSSize",
            "description": "Value of property <code>width</code>"
          },
          "description": "Gets current value of property {@link #getWidth width}.\n\nDefines the width of the card.\n\nDefault value is <code>100%</code>."
        },
        {
          "name": "isReady",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "If the card is ready or not."
          },
          "experimental": { "since": "1.65", "text": "The API might change." }
        },
        {
          "name": "refresh",
          "visibility": "public",
          "description": "Refreshes the card by re-applying the manifest settings and triggering all data requests.",
          "experimental": { "since": "1.65", "text": "The API might change." }
        },
        {
          "name": "setBaseUrl",
          "visibility": "public",
          "since": "1.70",
          "returnValue": {
            "type": "sap.ui.integration.widgets.Card",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sBaseUrl",
              "type": "sap.ui.core.URI",
              "optional": false,
              "description": "New value for property <code>baseUrl</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getBaseUrl baseUrl}.\n\nDefines the base URL of the Card Manifest. It should be used when manifest property is an object instead of a URL.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.",
          "experimental": { "since": "1.70" }
        },
        {
          "name": "setDataMode",
          "visibility": "public",
          "since": "1.65",
          "returnValue": {
            "type": "sap.ui.integration.widgets.Card",
            "description": "Pointer to the control instance to allow method chaining."
          },
          "parameters": [
            {
              "name": "sMode",
              "type": "sap.ui.integration.CardDataMode",
              "optional": false,
              "description": "The mode to set to the Card."
            }
          ],
          "description": "Sets a new value for the <code>dataMode</code> property.",
          "experimental": { "since": "1.65", "text": "API might change." }
        },
        {
          "name": "setHeight",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.integration.widgets.Card",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sHeight",
              "type": "sap.ui.core.CSSSize",
              "optional": false,
              "description": "New value for property <code>height</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getHeight height}.\n\nDefines the height of the card.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>auto</code>."
        },
        {
          "name": "setHostConfigurationId",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.integration.widgets.Card",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oHostConfigurationId",
              "type": "sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "ID of an element which becomes the new target of this hostConfigurationId association; alternatively, an element instance may be given"
            }
          ],
          "description": "Sets the associated {@link #getHostConfigurationId hostConfigurationId}."
        },
        {
          "name": "setManifest",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.integration.widgets.Card",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oManifest",
              "type": "any",
              "optional": false,
              "description": "New value for property <code>manifest</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getManifest manifest}.\n\nThe URL of the manifest or an object.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "setParameters",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.integration.widgets.Card",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oParameters",
              "type": "object",
              "optional": false,
              "description": "New value for property <code>parameters</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getParameters parameters}.\n\nThe parameters used in the manifest.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.",
          "experimental": {
            "since": "1.65",
            "text": "This property might be changed in future."
          }
        },
        {
          "name": "setWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.integration.widgets.Card",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sWidth",
              "type": "sap.ui.core.CSSSize",
              "optional": false,
              "description": "New value for property <code>width</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getWidth width}.\n\nDefines the width of the card.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>100%</code>."
        }
      ]
    },
    {
      "kind": "class",
      "name": "Service",
      "basename": "Service",
      "resource": "sap/ui/integration/services/Service.js",
      "module": "sap/ui/integration/services/Service",
      "visibility": "restricted",
      "experimental": {},
      "constructor": {
        "visibility": "restricted",
        "description": "Base class for all services. To inherit use the extend method <code>Service.extend</code>"
      }
    }
  ]
}
