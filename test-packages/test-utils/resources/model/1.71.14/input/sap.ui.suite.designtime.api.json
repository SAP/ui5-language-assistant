{
  "$schema-ref": "http://schemas.sap.com/sapui5/designtime/api.json/1.0",
  "version": "1.71.12",
  "library": "sap.ui.suite",
  "symbols": [
    {
      "kind": "namespace",
      "name": "sap.ui.suite",
      "basename": "suite",
      "resource": "sap/ui/suite/library.js",
      "module": "sap/ui/suite/library",
      "export": "",
      "static": true,
      "visibility": "public",
      "description": "Suite controls library."
    },
    {
      "kind": "class",
      "name": "sap.ui.suite.TaskCircle",
      "basename": "TaskCircle",
      "resource": "sap/ui/suite/TaskCircle.js",
      "module": "sap/ui/suite/TaskCircle",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.core.Control",
      "description": "This control shows a circle which radius and color depends on the given parameters",
      "experimental": {
        "since": "1.2",
        "text": "The API may change. User with care."
      },
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "value",
            "type": "int",
            "defaultValue": 0,
            "group": "Misc",
            "visibility": "public",
            "description": "Current value of the task circle to be displayed. In dependency of the parameters maxValue and minValue it controls the size of the circle.",
            "methods": ["getValue", "setValue"]
          },
          {
            "name": "maxValue",
            "type": "int",
            "defaultValue": 100,
            "group": "Misc",
            "visibility": "public",
            "description": "Upper limit of the displayed values. Default is 100.",
            "methods": ["getMaxValue", "setMaxValue"]
          },
          {
            "name": "minValue",
            "type": "int",
            "defaultValue": 0,
            "group": "Misc",
            "visibility": "public",
            "description": "Lower limit of the displayed values. Default is 0.",
            "methods": ["getMinValue", "setMinValue"]
          },
          {
            "name": "color",
            "type": "sap.ui.suite.TaskCircleColor",
            "defaultValue": "Gray",
            "group": "Misc",
            "visibility": "public",
            "description": "Color of the circle. The default color is red.",
            "methods": ["getColor", "setColor"]
          }
        ],
        "associations": [
          {
            "name": "ariaLabelledBy",
            "singularName": "ariaLabelledBy",
            "type": "sap.ui.core.Control",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby).",
            "methods": [
              "getAriaLabelledBy",
              "addAriaLabelledBy",
              "removeAriaLabelledBy",
              "removeAllAriaLabelledBy"
            ]
          },
          {
            "name": "ariaDescribedBy",
            "singularName": "ariaDescribedBy",
            "type": "sap.ui.core.Control",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Association to controls / ids which describe this control (see WAI-ARIA attribute aria-describedby).",
            "methods": [
              "getAriaDescribedBy",
              "addAriaDescribedBy",
              "removeAriaDescribedBy",
              "removeAllAriaDescribedBy"
            ]
          }
        ],
        "events": [
          {
            "name": "press",
            "visibility": "public",
            "description": "Event is fired when the user clicks the control.",
            "methods": ["attachPress", "detachPress", "firePress"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new TaskCircle.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "press",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "Event is fired when the user clicks the control."
        }
      ],
      "methods": [
        {
          "name": "addAriaDescribedBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.suite.TaskCircle",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "vAriaDescribedBy",
              "type": "sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaDescribedBy to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some ariaDescribedBy into the association {@link #getAriaDescribedBy ariaDescribedBy}."
        },
        {
          "name": "addAriaLabelledBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.suite.TaskCircle",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "vAriaLabelledBy",
              "type": "sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaLabelledBy to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "attachPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.suite.TaskCircle",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.suite.TaskCircle</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:press press} event of this <code>sap.ui.suite.TaskCircle</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.suite.TaskCircle</code> itself.\n\nEvent is fired when the user clicks the control."
        },
        {
          "name": "detachPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.suite.TaskCircle",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:press press} event of this <code>sap.ui.suite.TaskCircle</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.suite.TaskCircle with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "firePress",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.suite.TaskCircle",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:press press} to attached listeners."
        },
        {
          "name": "focus",
          "visibility": "public",
          "ui5-metamodel": true,
          "description": "Puts the focus to the control."
        },
        {
          "name": "getAriaDescribedBy",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.ID[]" },
          "description": "Returns array of IDs of the elements which are the current targets of the association {@link #getAriaDescribedBy ariaDescribedBy}."
        },
        {
          "name": "getAriaLabelledBy",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.ID[]" },
          "description": "Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "getColor",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.suite.TaskCircleColor",
            "description": "Value of property <code>color</code>"
          },
          "description": "Gets current value of property {@link #getColor color}.\n\nColor of the circle. The default color is red.\n\nDefault value is <code>Gray</code>."
        },
        {
          "name": "getMaxValue",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>maxValue</code>"
          },
          "description": "Gets current value of property {@link #getMaxValue maxValue}.\n\nUpper limit of the displayed values. Default is 100.\n\nDefault value is <code>100</code>."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.suite.TaskCircle."
        },
        {
          "name": "getMinValue",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>minValue</code>"
          },
          "description": "Gets current value of property {@link #getMinValue minValue}.\n\nLower limit of the displayed values. Default is 0.\n\nDefault value is <code>0</code>."
        },
        {
          "name": "getValue",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>value</code>"
          },
          "description": "Gets current value of property {@link #getValue value}.\n\nCurrent value of the task circle to be displayed. In dependency of the parameters maxValue and minValue it controls the size of the circle.\n\nDefault value is <code>0</code>."
        },
        {
          "name": "removeAllAriaDescribedBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.ID[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls in the association named {@link #getAriaDescribedBy ariaDescribedBy}."
        },
        {
          "name": "removeAllAriaLabelledBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.ID[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "removeAriaDescribedBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.ID",
            "description": "The removed ariaDescribedBy or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vAriaDescribedBy",
              "type": "int|sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaDescribedBy to be removed or its index or ID"
            }
          ],
          "description": "Removes an ariaDescribedBy from the association named {@link #getAriaDescribedBy ariaDescribedBy}."
        },
        {
          "name": "removeAriaLabelledBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.ID",
            "description": "The removed ariaLabelledBy or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vAriaLabelledBy",
              "type": "int|sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaLabelledBy to be removed or its index or ID"
            }
          ],
          "description": "Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "setColor",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.suite.TaskCircle",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sColor",
              "type": "sap.ui.suite.TaskCircleColor",
              "optional": false,
              "description": "New value for property <code>color</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getColor color}.\n\nColor of the circle. The default color is red.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Gray</code>."
        },
        {
          "name": "setMaxValue",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.suite.TaskCircle",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iMaxValue",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>maxValue</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getMaxValue maxValue}.\n\nUpper limit of the displayed values. Default is 100.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>100</code>."
        },
        {
          "name": "setMinValue",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.suite.TaskCircle",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iMinValue",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>minValue</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getMinValue minValue}.\n\nLower limit of the displayed values. Default is 0.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>0</code>."
        },
        {
          "name": "setValue",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.suite.TaskCircle",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iValue",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>value</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getValue value}.\n\nCurrent value of the task circle to be displayed. In dependency of the parameters maxValue and minValue it controls the size of the circle.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>0</code>."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.ui.suite.TaskCircleColor",
      "basename": "TaskCircleColor",
      "resource": "sap/ui/suite/library.js",
      "module": "sap/ui/suite/library",
      "export": "TaskCircleColor",
      "static": true,
      "visibility": "public",
      "description": "Defined color values for the Task Circle Control",
      "ui5-metamodel": true,
      "properties": [
        {
          "name": "Gray",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Default value"
        },
        {
          "name": "Green",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Green"
        },
        {
          "name": "Red",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Red"
        },
        {
          "name": "Yellow",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Yellow"
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.suite.VerticalProgressIndicator",
      "basename": "VerticalProgressIndicator",
      "resource": "sap/ui/suite/VerticalProgressIndicator.js",
      "module": "sap/ui/suite/VerticalProgressIndicator",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.core.Control",
      "description": "This control shows a vertical progress bar in dependency of the given percentage. Only values between 0 and 100 are valid.",
      "experimental": {
        "since": "1.2",
        "text": "The API may change. User with care."
      },
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "percentage",
            "type": "int",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The numerical value between 0 and 100 which determines the height of the vertical bar. Values higher than 100 will be displayed as 100%, values lower than zero will be displayed as 0%.",
            "methods": ["getPercentage", "setPercentage"]
          }
        ],
        "associations": [
          {
            "name": "ariaLabelledBy",
            "singularName": "ariaLabelledBy",
            "type": "sap.ui.core.Control",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby).",
            "methods": [
              "getAriaLabelledBy",
              "addAriaLabelledBy",
              "removeAriaLabelledBy",
              "removeAllAriaLabelledBy"
            ]
          },
          {
            "name": "ariaDescribedBy",
            "singularName": "ariaDescribedBy",
            "type": "sap.ui.core.Control",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Association to controls / ids which describe this control (see WAI-ARIA attribute aria-describedby).",
            "methods": [
              "getAriaDescribedBy",
              "addAriaDescribedBy",
              "removeAriaDescribedBy",
              "removeAllAriaDescribedBy"
            ]
          }
        ],
        "events": [
          {
            "name": "press",
            "visibility": "public",
            "description": "Event is fired when the user clicks the control.",
            "methods": ["attachPress", "detachPress", "firePress"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new VerticalProgressIndicator.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "press",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "Event is fired when the user clicks the control."
        }
      ],
      "methods": [
        {
          "name": "addAriaDescribedBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.suite.VerticalProgressIndicator",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "vAriaDescribedBy",
              "type": "sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaDescribedBy to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some ariaDescribedBy into the association {@link #getAriaDescribedBy ariaDescribedBy}."
        },
        {
          "name": "addAriaLabelledBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.suite.VerticalProgressIndicator",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "vAriaLabelledBy",
              "type": "sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaLabelledBy to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "attachPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.suite.VerticalProgressIndicator",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.suite.VerticalProgressIndicator</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:press press} event of this <code>sap.ui.suite.VerticalProgressIndicator</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.suite.VerticalProgressIndicator</code> itself.\n\nEvent is fired when the user clicks the control."
        },
        {
          "name": "detachPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.suite.VerticalProgressIndicator",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:press press} event of this <code>sap.ui.suite.VerticalProgressIndicator</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.suite.VerticalProgressIndicator with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "firePress",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.suite.VerticalProgressIndicator",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:press press} to attached listeners."
        },
        {
          "name": "focus",
          "visibility": "public",
          "ui5-metamodel": true,
          "description": "Puts the focus to the control."
        },
        {
          "name": "getAriaDescribedBy",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.ID[]" },
          "description": "Returns array of IDs of the elements which are the current targets of the association {@link #getAriaDescribedBy ariaDescribedBy}."
        },
        {
          "name": "getAriaLabelledBy",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.ID[]" },
          "description": "Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.suite.VerticalProgressIndicator."
        },
        {
          "name": "getPercentage",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>percentage</code>"
          },
          "description": "Gets current value of property {@link #getPercentage percentage}.\n\nThe numerical value between 0 and 100 which determines the height of the vertical bar. Values higher than 100 will be displayed as 100%, values lower than zero will be displayed as 0%."
        },
        {
          "name": "removeAllAriaDescribedBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.ID[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls in the association named {@link #getAriaDescribedBy ariaDescribedBy}."
        },
        {
          "name": "removeAllAriaLabelledBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.ID[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "removeAriaDescribedBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.ID",
            "description": "The removed ariaDescribedBy or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vAriaDescribedBy",
              "type": "int|sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaDescribedBy to be removed or its index or ID"
            }
          ],
          "description": "Removes an ariaDescribedBy from the association named {@link #getAriaDescribedBy ariaDescribedBy}."
        },
        {
          "name": "removeAriaLabelledBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.ID",
            "description": "The removed ariaLabelledBy or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vAriaLabelledBy",
              "type": "int|sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaLabelledBy to be removed or its index or ID"
            }
          ],
          "description": "Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "setPercentage",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.suite.VerticalProgressIndicator",
            "description": "<code>this</code> to allow method chaining"
          },
          "parameters": [
            { "name": "iPercentage", "type": "int", "optional": false }
          ],
          "description": "Property setter for the Percentage, which determines the height of the vertical bar. Values higher than 100 will be displayed as 100%, values lower than zero will be displayed as 0%. A new rendering is not necessary, only the bar will be moved"
        }
      ]
    }
  ]
}
