{
  "$schema-ref": "http://schemas.sap.com/sapui5/designtime/api.json/1.0",
  "version": "1.71.12",
  "library": "sap.ui.comp",
  "symbols": [
    {
      "kind": "namespace",
      "name": "sap.ui.comp",
      "basename": "comp",
      "resource": "sap/ui/comp/library.js",
      "module": "sap/ui/comp/library",
      "export": "",
      "static": true,
      "visibility": "public",
      "description": "SAPUI5 library with smart controls.<br> <b>Note:</b> The controls in this library only support OData V2 (see {@link sap.ui.model.odata.v2.ODataModel}) and a default model (named <code>undefined</code>). <br/> <b>Note:</b> Properties of a complex type (used in an OData entity type) cannot be bound by or used with controls of this library. <br/> <b>Note:</b> Most controls in this library do not support key user adaptation. Please see {@link topic:f1430c0337534d469da3a56307ff76af Key User Adaptation: Enable Your App} for a list of supported controls."
    },
    {
      "kind": "class",
      "name": "sap.ui.comp.filterbar.FilterBar",
      "basename": "FilterBar",
      "resource": "sap/ui/comp/filterbar/FilterBar.js",
      "module": "sap/ui/comp/filterbar/FilterBar",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.layout.Grid",
      "description": "The control displays filters in a user-friendly manner to populate values for a query. The FilterBar consists of a row containing the {@link sap.ui.comp.variants.VariantManagement VariantManagement} control, the related buttons, and an area underneath displaying the filters. The filters are arranged in a logical row that is divided depending on the space available and the width of the filters. The area containing the filters can be hidden or shown using the Hide FilterBar / Show FilterBar button. The Go button triggers the search event, and the Filters button shows the filter dialog.<br> In this dialog, the consumer has full control over the FilterBar. The filters in this dialog are displayed in one column and organized in groups. The filter items of the <code>filterItems</code> aggregation are grouped in the Basic group . Each filter can be marked as visible in the FilterBar by selecting Add to FilterBar. In addition, the items in the <code>filterGroupItems</code> aggregation can be marked as part of the current variant. The FilterBar also supports a different UI layout when used inside a value help dialog. In this case the FilterBar consists of two logical areas, one containing the general search button and one the Advanced Search area. The Advanced Search is a collapsible area displaying the advanced filters in two columns.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "persistencyKey",
            "type": "string",
            "defaultValue": "",
            "group": "Misc",
            "visibility": "public",
            "description": "Key used to access personalization data. Only if the persistencyKey is provided, will the <code>VariantManagement</code> control be used.",
            "methods": ["getPersistencyKey", "setPersistencyKey"]
          },
          {
            "name": "advancedMode",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "description": "The advanced mode is only relevant for the value help scenario. UI representation is different from the standard FilterBar.",
            "methods": ["getAdvancedMode", "setAdvancedMode"]
          },
          {
            "name": "expandAdvancedArea",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "description": "Collapses/expands the advanced area.",
            "deprecated": {
              "since": "1.30.0",
              "text": "Replaced by property <code>filterBarExpanded</code> This property is mapped to the filterBarExpanded property."
            },
            "methods": ["getExpandAdvancedArea", "setExpandAdvancedArea"]
          },
          {
            "name": "searchEnabled",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "description": "Enables/disables the Search button.",
            "deprecated": { "since": "1.32.0" },
            "methods": ["getSearchEnabled", "setSearchEnabled"]
          },
          {
            "name": "filterBarExpanded",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "since": "1.26.1",
            "description": "Shows the filters area. When property <code>useToolbar</code> is set to <code>false</code>, <code>filterBarExpanded</code> is set to <code>true</code> automatically.",
            "methods": ["getFilterBarExpanded", "setFilterBarExpanded"]
          },
          {
            "name": "considerGroupTitle",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "since": "1.28.0",
            "description": "If this property is set, then the label for filters will be prefixed with the group title.",
            "methods": ["getConsiderGroupTitle", "setConsiderGroupTitle"]
          },
          {
            "name": "showClearButton",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "since": "1.26.1",
            "description": "Handles visibility of the Clear button on the Filters dialog.",
            "methods": ["getShowClearButton", "setShowClearButton"]
          },
          {
            "name": "showRestoreButton",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "since": "1.26.1",
            "description": "Handles visibility of the \"Restore\" button on the \"Filters\" dialog. <b>Note:</b> Restore works only automatically when a property <code>persistencyKey</code> is set and therefore Variant Management is used. In all other cases the \"restore\" behavior needs to be implemented by the app, based on the event <code>reset</code>.",
            "methods": ["getShowRestoreButton", "setShowRestoreButton"]
          },
          {
            "name": "showGoOnFB",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "since": "1.28.0",
            "description": "Handles visibility of the Go button on the FilterBar.",
            "methods": ["getShowGoOnFB", "setShowGoOnFB"]
          },
          {
            "name": "showRestoreOnFB",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "since": "1.28.0",
            "description": "Handles visibility of the Restore button on the FilterBar.",
            "methods": ["getShowRestoreOnFB", "setShowRestoreOnFB"]
          },
          {
            "name": "showClearOnFB",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "since": "1.28.0",
            "description": "Handles visibility of the Clear button on the FilterBar.",
            "methods": ["getShowClearOnFB", "setShowClearOnFB"]
          },
          {
            "name": "showGoButton",
            "type": "boolean",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.26.1",
            "description": "Handles visibility of the Go button on the FilterBar.",
            "deprecated": {
              "since": "1.28.0",
              "text": "Replaced by property <code>showGoOnFB</code>"
            },
            "methods": ["getShowGoButton", "setShowGoButton"]
          },
          {
            "name": "deltaVariantMode",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "since": "1.34.0",
            "description": "Stores the delta as compared to the standard variant.",
            "methods": ["getDeltaVariantMode", "setDeltaVariantMode"]
          },
          {
            "name": "filterContainerWidth",
            "type": "string",
            "defaultValue": "12rem",
            "group": "Misc",
            "visibility": "public",
            "since": "1.34.0",
            "description": "Sets the width of the filters container.",
            "methods": ["getFilterContainerWidth", "setFilterContainerWidth"]
          },
          {
            "name": "useToolbar",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "since": "1.38.0",
            "description": "Determines what design should be used. Default is the design with toolbar. The design with toolbar is always used on phones. When property <code>useToolbar</code> is set to <code>false</code>, <code>filterBarExpanded</code> is set to <code>true</code> automatically.",
            "methods": ["getUseToolbar", "setUseToolbar"]
          },
          {
            "name": "header",
            "type": "string",
            "defaultValue": "",
            "group": "Misc",
            "visibility": "public",
            "since": "1.38.0",
            "description": "Specifies header text that is shown in the toolbar on the first position. This property is ignored, when <code>useToolbar</code> is set to <code>false</code>.",
            "methods": ["getHeader", "setHeader"]
          },
          {
            "name": "showFilterConfiguration",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "since": "1.38.0",
            "description": "Handles visibility of the Filters button on the FilterBar.",
            "methods": [
              "getShowFilterConfiguration",
              "setShowFilterConfiguration"
            ]
          },
          {
            "name": "useSnapshot",
            "type": "boolean",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.44",
            "description": "Determines the behavior when <code>reset</code> is executed. <br> <b>Note:</b> This property is only relevant if no variant management is used, and the filter bar is not used in the advanced mode. A snapshot shows the current state of the filter bar, just before the Filters dialog is opened. <ul> <li><code>undefined</code> (default) defines the standard behavior: snapshot will be applied after <code>reset</code> was triggered</li> <li><code>false</code> defines that the snapshot will not be applied</li> <li><code>true</code>is not considered at all</li> </ul>",
            "methods": ["getUseSnapshot", "setUseSnapshot"]
          }
        ],
        "aggregations": [
          {
            "name": "filterItems",
            "singularName": "filterItem",
            "type": "sap.ui.comp.filterbar.FilterItem",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Filters belonging to the basic group.",
            "deprecated": {
              "since": "1.48.0",
              "text": "Use aggregation <code>filterGroupItems</code> instead."
            },
            "methods": [
              "getFilterItems",
              "destroyFilterItems",
              "insertFilterItem",
              "addFilterItem",
              "removeFilterItem",
              "indexOfFilterItem",
              "removeAllFilterItems"
            ]
          },
          {
            "name": "filterGroupItems",
            "singularName": "filterGroupItem",
            "type": "sap.ui.comp.filterbar.FilterGroupItem",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Contains all FilterBar filters. <br> <code>Note:</code>In case a filter has to be added to the basic group <ul> <li>the property <code>groupName</code> has to be set to the constant <code>sap.ui.comp.filterbar.FilterBar.INTERNAL_GROUP</code></li> <li>the property <code>groupLabel</code> will be handled internally and will be ignored, if set</li> <li>the property <code>partOfCurrentVariant</code> has to be set to <code>true</code></li> <li>if the property <code>visibleInFilterBar</code> is set to <code>true</code>, the property <code>partOfCurrentVariant</code> will be set internally also to <code>true</code></li> </ul>",
            "methods": [
              "getFilterGroupItems",
              "destroyFilterGroupItems",
              "insertFilterGroupItem",
              "addFilterGroupItem",
              "removeFilterGroupItem",
              "indexOfFilterGroupItem",
              "removeAllFilterGroupItems"
            ]
          },
          {
            "name": "_parameters",
            "singularName": "_parameter",
            "type": "sap.ui.comp.filterbar.FilterGroupItem",
            "cardinality": "0..n",
            "visibility": "hidden",
            "description": "Special handling for analytic parameters.",
            "methods": [
              "get_parameters",
              "destroy_parameters",
              "insert_parameter",
              "add_parameter",
              "remove_parameter",
              "indexOf_parameter",
              "removeAll_parameters"
            ]
          }
        ],
        "associations": [
          {
            "name": "basicSearch",
            "singularName": "basicSearch",
            "type": "sap.m.SearchField",
            "cardinality": "0..1",
            "visibility": "public",
            "since": "1.30.0",
            "description": "Populates the basic search area on the FilterBar and the Filters dialog.",
            "methods": ["getBasicSearch", "setBasicSearch"]
          }
        ],
        "events": [
          {
            "name": "cancel",
            "visibility": "public",
            "description": "This event is fired when the Cancel button on the Filters dialog is pressed and the variant is marked as dirty.",
            "methods": ["attachCancel", "detachCancel", "fireCancel"]
          },
          {
            "name": "reset",
            "visibility": "public",
            "description": "This event is fired when the Restore button is pressed.",
            "parameters": {
              "selectionSet": {
                "name": "selectionSet",
                "type": "sap.ui.core.Control[]",
                "description": "Visible controls"
              }
            },
            "methods": ["attachReset", "detachReset", "fireReset"]
          },
          {
            "name": "search",
            "visibility": "public",
            "description": "This event is fired when the Go button is pressed.",
            "parameters": {
              "selectionSet": {
                "name": "selectionSet",
                "type": "sap.ui.core.Control[]",
                "description": "Visible controls"
              }
            },
            "methods": ["attachSearch", "detachSearch", "fireSearch"]
          },
          {
            "name": "beforeVariantSave",
            "visibility": "public",
            "description": "This event is fired before a variant is saved. The event can be used to adapt the data of the custom filters, which will be saved as variant later.",
            "deprecated": {
              "since": "1.48.2",
              "text": "Replaced by the event <code>beforeVariantFetch</code>"
            },
            "parameters": {
              "context": {
                "name": "context",
                "type": "string",
                "description": "Context of the event. Can also be <code>null</code> or <code>undefined</code>"
              }
            },
            "methods": [
              "attachBeforeVariantSave",
              "detachBeforeVariantSave",
              "fireBeforeVariantSave"
            ]
          },
          {
            "name": "beforeVariantFetch",
            "visibility": "public",
            "since": "1.28.13",
            "description": "This event is fired before a variant is fetched.",
            "methods": [
              "attachBeforeVariantFetch",
              "detachBeforeVariantFetch",
              "fireBeforeVariantFetch"
            ]
          },
          {
            "name": "afterVariantLoad",
            "visibility": "public",
            "description": "This event is fired after a variant has been loaded and applied to the FilterBar. The event can be used to adapt custom filters with data from the variant.",
            "parameters": {
              "context": {
                "name": "context",
                "type": "string",
                "description": "Context of the event. Can also be <code>null</code> or <code>undefined</code>"
              },
              "executeOnSelect": {
                "name": "executeOnSelect",
                "type": "boolean",
                "since": "1.44.0",
                "description": "executeOnSelect indicates if the variant will trigger search"
              }
            },
            "methods": [
              "attachAfterVariantLoad",
              "detachAfterVariantLoad",
              "fireAfterVariantLoad"
            ]
          },
          {
            "name": "filterChange",
            "visibility": "public",
            "description": "This event is fired when a filter or multiple filters has changed.",
            "methods": [
              "attachFilterChange",
              "detachFilterChange",
              "fireFilterChange"
            ]
          },
          {
            "name": "clear",
            "visibility": "public",
            "description": "This event is fired when the Clear button is pressed. The consumer has to clear all filters.",
            "parameters": {
              "selectionSet": {
                "name": "selectionSet",
                "type": "sap.ui.core.Control[]",
                "description": "Visible controls"
              }
            },
            "methods": ["attachClear", "detachClear", "fireClear"]
          },
          {
            "name": "initialise",
            "visibility": "public",
            "description": "This event is fired when the FilterBar is initialized to indicate that metadata are available.",
            "methods": [
              "attachInitialise",
              "detachInitialise",
              "fireInitialise"
            ]
          },
          {
            "name": "initialized",
            "visibility": "public",
            "since": "1.38.0",
            "description": "This event is fired after the <code>FilterBar</code> has been initialized, the user's default variant has been applied, and a stable filter state has been achieved. With this event all relevant filter information, for example, for navigation-related actions, is available via {@link sap.ui.comp.filterbar.FilterBar#getUiState}.",
            "methods": [
              "attachInitialized",
              "detachInitialized",
              "fireInitialized"
            ]
          },
          {
            "name": "afterVariantSave",
            "visibility": "public",
            "description": "This event is fired after a variant has been saved.",
            "methods": [
              "attachAfterVariantSave",
              "detachAfterVariantSave",
              "fireAfterVariantSave"
            ]
          },
          {
            "name": "filtersDialogClosed",
            "visibility": "public",
            "since": "1.34.0",
            "description": "This event is fired after the filters dialog is closed.",
            "parameters": {
              "context": {
                "name": "context",
                "type": "string",
                "description": "Context of the event. Can also be <code>null</code> or <code>undefined</code>"
              }
            },
            "methods": [
              "attachFiltersDialogClosed",
              "detachFiltersDialogClosed",
              "fireFiltersDialogClosed"
            ]
          },
          {
            "name": "filtersDialogBeforeOpen",
            "visibility": "public",
            "since": "1.48.0",
            "description": "This event is fired after the filters dialog is opened.",
            "methods": [
              "attachFiltersDialogBeforeOpen",
              "detachFiltersDialogBeforeOpen",
              "fireFiltersDialogBeforeOpen"
            ]
          },
          {
            "name": "filtersDialogCancel",
            "visibility": "public",
            "since": "1.48.0",
            "description": "This event is fired when the Cancel button on the filters dialog is pressed.",
            "methods": [
              "attachFiltersDialogCancel",
              "detachFiltersDialogCancel",
              "fireFiltersDialogCancel"
            ]
          },
          {
            "name": "filtersDialogSearch",
            "visibility": "public",
            "since": "1.48.0",
            "description": "This event is fired when the Go button on the filters dialog is pressed.",
            "methods": [
              "attachFiltersDialogSearch",
              "detachFiltersDialogSearch",
              "fireFiltersDialogSearch"
            ]
          },
          {
            "name": "filtersDialogSearchForFilters",
            "visibility": "public",
            "since": "1.48.0",
            "description": "This event is fired when search field of the filter dialog is changed.",
            "parameters": {
              "newValue": {
                "name": "newValue",
                "type": "string",
                "description": "Contains the entered search filed value"
              }
            },
            "methods": [
              "attachFiltersDialogSearchForFilters",
              "detachFiltersDialogSearchForFilters",
              "fireFiltersDialogSearchForFilters"
            ]
          },
          {
            "name": "assignedFiltersChanged",
            "visibility": "public",
            "since": "1.38.0",
            "description": "This event is fired when the filters information has changed. It indicates specifically that the count of assigned filters may be changed. One of the intended reaction to this event would be to call <code>retrieveFiltersWithValuesAsText</code> method.",
            "methods": [
              "attachAssignedFiltersChanged",
              "detachAssignedFiltersChanged",
              "fireAssignedFiltersChanged"
            ]
          }
        ],
        "designtime": "sap/ui/comp/designtime/filterbar/FilterBar.designtime"
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new FilterBar.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.",
        "references": [
          "{@link topic:2ae520a67c44495ab5dbc69668c47a7f Filter Bar}"
        ]
      },
      "events": [
        {
          "name": "afterVariantLoad",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "context": {
                      "name": "context",
                      "type": "string",
                      "optional": false,
                      "description": "Context of the event. Can also be <code>null</code> or <code>undefined</code>"
                    },
                    "executeOnSelect": {
                      "name": "executeOnSelect",
                      "type": "boolean",
                      "optional": false,
                      "description": "executeOnSelect indicates if the variant will trigger search"
                    }
                  }
                }
              }
            }
          ],
          "description": "This event is fired after a variant has been loaded and applied to the FilterBar. The event can be used to adapt custom filters with data from the variant."
        },
        {
          "name": "afterVariantSave",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "This event is fired after a variant has been saved."
        },
        {
          "name": "assignedFiltersChanged",
          "visibility": "public",
          "since": "1.38.0",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "This event is fired when the filters information has changed. It indicates specifically that the count of assigned filters may be changed. One of the intended reaction to this event would be to call <code>retrieveFiltersWithValuesAsText</code> method."
        },
        {
          "name": "beforeVariantFetch",
          "visibility": "public",
          "since": "1.28.13",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "This event is fired before a variant is fetched."
        },
        {
          "name": "beforeVariantSave",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "context": {
                      "name": "context",
                      "type": "string",
                      "optional": false,
                      "description": "Context of the event. Can also be <code>null</code> or <code>undefined</code>"
                    }
                  }
                }
              }
            }
          ],
          "description": "This event is fired before a variant is saved. The event can be used to adapt the data of the custom filters, which will be saved as variant later.",
          "deprecated": {
            "since": "1.48.2",
            "text": "Replaced by the event <code>beforeVariantFetch</code>"
          }
        },
        {
          "name": "cancel",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "This event is fired when the Cancel button on the Filters dialog is pressed and the variant is marked as dirty."
        },
        {
          "name": "clear",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "selectionSet": {
                      "name": "selectionSet",
                      "type": "sap.ui.core.Control[]",
                      "optional": false,
                      "description": "Visible controls"
                    }
                  }
                }
              }
            }
          ],
          "description": "This event is fired when the Clear button is pressed. The consumer has to clear all filters."
        },
        {
          "name": "filterChange",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "This event is fired when a filter or multiple filters has changed."
        },
        {
          "name": "filtersDialogBeforeOpen",
          "visibility": "public",
          "since": "1.48.0",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "This event is fired after the filters dialog is opened."
        },
        {
          "name": "filtersDialogCancel",
          "visibility": "public",
          "since": "1.48.0",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "This event is fired when the Cancel button on the filters dialog is pressed."
        },
        {
          "name": "filtersDialogClosed",
          "visibility": "public",
          "since": "1.34.0",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "context": {
                      "name": "context",
                      "type": "string",
                      "optional": false,
                      "description": "Context of the event. Can also be <code>null</code> or <code>undefined</code>"
                    }
                  }
                }
              }
            }
          ],
          "description": "This event is fired after the filters dialog is closed."
        },
        {
          "name": "filtersDialogSearch",
          "visibility": "public",
          "since": "1.48.0",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "This event is fired when the Go button on the filters dialog is pressed."
        },
        {
          "name": "filtersDialogSearchForFilters",
          "visibility": "public",
          "since": "1.48.0",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "newValue": {
                      "name": "newValue",
                      "type": "string",
                      "optional": false,
                      "description": "Contains the entered search filed value"
                    }
                  }
                }
              }
            }
          ],
          "description": "This event is fired when search field of the filter dialog is changed."
        },
        {
          "name": "initialise",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "This event is fired when the FilterBar is initialized to indicate that metadata are available."
        },
        {
          "name": "initialized",
          "visibility": "public",
          "since": "1.38.0",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "This event is fired after the <code>FilterBar</code> has been initialized, the user's default variant has been applied, and a stable filter state has been achieved. With this event all relevant filter information, for example, for navigation-related actions, is available via {@link sap.ui.comp.filterbar.FilterBar#getUiState}."
        },
        {
          "name": "reset",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "selectionSet": {
                      "name": "selectionSet",
                      "type": "sap.ui.core.Control[]",
                      "optional": false,
                      "description": "Visible controls"
                    }
                  }
                }
              }
            }
          ],
          "description": "This event is fired when the Restore button is pressed."
        },
        {
          "name": "search",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "selectionSet": {
                      "name": "selectionSet",
                      "type": "sap.ui.core.Control[]",
                      "optional": false,
                      "description": "Visible controls"
                    }
                  }
                }
              }
            }
          ],
          "description": "This event is fired when the Go button is pressed."
        }
      ],
      "methods": [
        {
          "name": "addFilterDialogContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.Control",
            "description": "oContent added or <code>null</code> when filters dialog is not active."
          },
          "parameters": [
            {
              "name": "oContent",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "to be added; if empty, nothing is inserted."
            }
          ],
          "description": "Enables to add application specific content to the filters dialog. If the content was not yet added it will be added. The content will be set to visible, all other filters dialog content will be set to invisible."
        },
        {
          "name": "addFilterGroupItem",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oFilterGroupItem",
              "type": "sap.ui.comp.filterbar.FilterGroupItem",
              "optional": false,
              "description": "The filterGroupItem to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some filterGroupItem to the aggregation {@link #getFilterGroupItems filterGroupItems}."
        },
        {
          "name": "addFilterItem",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oFilterItem",
              "type": "sap.ui.comp.filterbar.FilterItem",
              "optional": false,
              "description": "The filterItem to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some filterItem to the aggregation {@link #getFilterItems filterItems}.",
          "deprecated": {
            "since": "1.48.0",
            "text": "Use aggregation <code>filterGroupItems</code> instead."
          }
        },
        {
          "name": "applyVariant",
          "visibility": "public",
          "parameters": [
            {
              "name": "oVariant",
              "type": "object",
              "optional": false,
              "description": "JSON object"
            },
            {
              "name": "sContext",
              "type": "string",
              "optional": false,
              "description": "Describes in which context the variant is applied. The context is passed on to the application via the afterVariantLoad event"
            },
            {
              "name": "bInitial",
              "type": "boolean",
              "optional": false,
              "description": "indicates if the apply was executed during the initialization phase."
            }
          ],
          "description": "Applies the variant."
        },
        {
          "name": "attachAfterVariantLoad",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.filterbar.FilterBar</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:afterVariantLoad afterVariantLoad} event of this <code>sap.ui.comp.filterbar.FilterBar</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.filterbar.FilterBar</code> itself.\n\nThis event is fired after a variant has been loaded and applied to the FilterBar. The event can be used to adapt custom filters with data from the variant."
        },
        {
          "name": "attachAfterVariantSave",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.filterbar.FilterBar</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:afterVariantSave afterVariantSave} event of this <code>sap.ui.comp.filterbar.FilterBar</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.filterbar.FilterBar</code> itself.\n\nThis event is fired after a variant has been saved."
        },
        {
          "name": "attachAssignedFiltersChanged",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.filterbar.FilterBar</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:assignedFiltersChanged assignedFiltersChanged} event of this <code>sap.ui.comp.filterbar.FilterBar</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.filterbar.FilterBar</code> itself.\n\nThis event is fired when the filters information has changed. It indicates specifically that the count of assigned filters may be changed. One of the intended reaction to this event would be to call <code>retrieveFiltersWithValuesAsText</code> method."
        },
        {
          "name": "attachBeforeVariantFetch",
          "visibility": "public",
          "since": "1.28.13",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.filterbar.FilterBar</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:beforeVariantFetch beforeVariantFetch} event of this <code>sap.ui.comp.filterbar.FilterBar</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.filterbar.FilterBar</code> itself.\n\nThis event is fired before a variant is fetched."
        },
        {
          "name": "attachBeforeVariantSave",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.filterbar.FilterBar</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:beforeVariantSave beforeVariantSave} event of this <code>sap.ui.comp.filterbar.FilterBar</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.filterbar.FilterBar</code> itself.\n\nThis event is fired before a variant is saved. The event can be used to adapt the data of the custom filters, which will be saved as variant later.",
          "deprecated": {
            "since": "1.48.2",
            "text": "Replaced by the event <code>beforeVariantFetch</code>"
          }
        },
        {
          "name": "attachCancel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.filterbar.FilterBar</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:cancel cancel} event of this <code>sap.ui.comp.filterbar.FilterBar</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.filterbar.FilterBar</code> itself.\n\nThis event is fired when the Cancel button on the Filters dialog is pressed and the variant is marked as dirty."
        },
        {
          "name": "attachClear",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.filterbar.FilterBar</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:clear clear} event of this <code>sap.ui.comp.filterbar.FilterBar</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.filterbar.FilterBar</code> itself.\n\nThis event is fired when the Clear button is pressed. The consumer has to clear all filters."
        },
        {
          "name": "attachFilterChange",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.filterbar.FilterBar</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:filterChange filterChange} event of this <code>sap.ui.comp.filterbar.FilterBar</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.filterbar.FilterBar</code> itself.\n\nThis event is fired when a filter or multiple filters has changed."
        },
        {
          "name": "attachFiltersDialogBeforeOpen",
          "visibility": "public",
          "since": "1.48.0",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.filterbar.FilterBar</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:filtersDialogBeforeOpen filtersDialogBeforeOpen} event of this <code>sap.ui.comp.filterbar.FilterBar</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.filterbar.FilterBar</code> itself.\n\nThis event is fired after the filters dialog is opened."
        },
        {
          "name": "attachFiltersDialogCancel",
          "visibility": "public",
          "since": "1.48.0",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.filterbar.FilterBar</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:filtersDialogCancel filtersDialogCancel} event of this <code>sap.ui.comp.filterbar.FilterBar</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.filterbar.FilterBar</code> itself.\n\nThis event is fired when the Cancel button on the filters dialog is pressed."
        },
        {
          "name": "attachFiltersDialogClosed",
          "visibility": "public",
          "since": "1.34.0",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.filterbar.FilterBar</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:filtersDialogClosed filtersDialogClosed} event of this <code>sap.ui.comp.filterbar.FilterBar</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.filterbar.FilterBar</code> itself.\n\nThis event is fired after the filters dialog is closed."
        },
        {
          "name": "attachFiltersDialogSearch",
          "visibility": "public",
          "since": "1.48.0",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.filterbar.FilterBar</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:filtersDialogSearch filtersDialogSearch} event of this <code>sap.ui.comp.filterbar.FilterBar</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.filterbar.FilterBar</code> itself.\n\nThis event is fired when the Go button on the filters dialog is pressed."
        },
        {
          "name": "attachFiltersDialogSearchForFilters",
          "visibility": "public",
          "since": "1.48.0",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.filterbar.FilterBar</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:filtersDialogSearchForFilters filtersDialogSearchForFilters} event of this <code>sap.ui.comp.filterbar.FilterBar</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.filterbar.FilterBar</code> itself.\n\nThis event is fired when search field of the filter dialog is changed."
        },
        {
          "name": "attachInitialise",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.filterbar.FilterBar</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:initialise initialise} event of this <code>sap.ui.comp.filterbar.FilterBar</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.filterbar.FilterBar</code> itself.\n\nThis event is fired when the FilterBar is initialized to indicate that metadata are available."
        },
        {
          "name": "attachInitialized",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.filterbar.FilterBar</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:initialized initialized} event of this <code>sap.ui.comp.filterbar.FilterBar</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.filterbar.FilterBar</code> itself.\n\nThis event is fired after the <code>FilterBar</code> has been initialized, the user's default variant has been applied, and a stable filter state has been achieved. With this event all relevant filter information, for example, for navigation-related actions, is available via {@link sap.ui.comp.filterbar.FilterBar#getUiState}."
        },
        {
          "name": "attachReset",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.filterbar.FilterBar</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:reset reset} event of this <code>sap.ui.comp.filterbar.FilterBar</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.filterbar.FilterBar</code> itself.\n\nThis event is fired when the Restore button is pressed."
        },
        {
          "name": "attachSearch",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.filterbar.FilterBar</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:search search} event of this <code>sap.ui.comp.filterbar.FilterBar</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.filterbar.FilterBar</code> itself.\n\nThis event is fired when the Go button is pressed."
        },
        {
          "name": "clearVariantSelection",
          "visibility": "public",
          "description": "Resets the current selection in the variant management control to standard."
        },
        {
          "name": "destroyFilterGroupItems",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the filterGroupItems in the aggregation {@link #getFilterGroupItems filterGroupItems}."
        },
        {
          "name": "destroyFilterItems",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the filterItems in the aggregation {@link #getFilterItems filterItems}.",
          "deprecated": {
            "since": "1.48.0",
            "text": "Use aggregation <code>filterGroupItems</code> instead."
          }
        },
        {
          "name": "detachAfterVariantLoad",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:afterVariantLoad afterVariantLoad} event of this <code>sap.ui.comp.filterbar.FilterBar</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachAfterVariantSave",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:afterVariantSave afterVariantSave} event of this <code>sap.ui.comp.filterbar.FilterBar</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachAssignedFiltersChanged",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:assignedFiltersChanged assignedFiltersChanged} event of this <code>sap.ui.comp.filterbar.FilterBar</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachBeforeVariantFetch",
          "visibility": "public",
          "since": "1.28.13",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:beforeVariantFetch beforeVariantFetch} event of this <code>sap.ui.comp.filterbar.FilterBar</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachBeforeVariantSave",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:beforeVariantSave beforeVariantSave} event of this <code>sap.ui.comp.filterbar.FilterBar</code>.\n\nThe passed function and listener object must match the ones used for event registration.",
          "deprecated": {
            "since": "1.48.2",
            "text": "Replaced by the event <code>beforeVariantFetch</code>"
          }
        },
        {
          "name": "detachCancel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:cancel cancel} event of this <code>sap.ui.comp.filterbar.FilterBar</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachClear",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:clear clear} event of this <code>sap.ui.comp.filterbar.FilterBar</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachFilterChange",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:filterChange filterChange} event of this <code>sap.ui.comp.filterbar.FilterBar</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachFiltersDialogBeforeOpen",
          "visibility": "public",
          "since": "1.48.0",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:filtersDialogBeforeOpen filtersDialogBeforeOpen} event of this <code>sap.ui.comp.filterbar.FilterBar</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachFiltersDialogCancel",
          "visibility": "public",
          "since": "1.48.0",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:filtersDialogCancel filtersDialogCancel} event of this <code>sap.ui.comp.filterbar.FilterBar</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachFiltersDialogClosed",
          "visibility": "public",
          "since": "1.34.0",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:filtersDialogClosed filtersDialogClosed} event of this <code>sap.ui.comp.filterbar.FilterBar</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachFiltersDialogSearch",
          "visibility": "public",
          "since": "1.48.0",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:filtersDialogSearch filtersDialogSearch} event of this <code>sap.ui.comp.filterbar.FilterBar</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachFiltersDialogSearchForFilters",
          "visibility": "public",
          "since": "1.48.0",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:filtersDialogSearchForFilters filtersDialogSearchForFilters} event of this <code>sap.ui.comp.filterbar.FilterBar</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachInitialise",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:initialise initialise} event of this <code>sap.ui.comp.filterbar.FilterBar</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachInitialized",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:initialized initialized} event of this <code>sap.ui.comp.filterbar.FilterBar</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachReset",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:reset reset} event of this <code>sap.ui.comp.filterbar.FilterBar</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachSearch",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:search search} event of this <code>sap.ui.comp.filterbar.FilterBar</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "determineControlByFilterItem",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.Control",
            "description": "The corresponding control. If no match is found <code>null</code> is returned."
          },
          "parameters": [
            {
              "name": "oFilterItem",
              "type": "sap.ui.comp.filterbar.FilterItem",
              "optional": false,
              "description": "From the aggregations"
            },
            {
              "name": "bConsiderParameters",
              "type": "boolean",
              "optional": false,
              "description": "check also analytics parameter"
            }
          ],
          "description": "Retrieves the control associated to the filter."
        },
        {
          "name": "determineControlByName",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.Control",
            "description": "The corresponding control, if no match is found, <code>null</code> is returned."
          },
          "parameters": [
            {
              "name": "sName",
              "type": "string",
              "optional": false,
              "description": "Name of the filter."
            },
            {
              "name": "sGroupName",
              "type": "string",
              "optional": false,
              "description": "Group name of the filter; <code>null</code> for filter that belongs to basic group."
            }
          ],
          "description": "Retrieves the control based on the name and group name."
        },
        {
          "name": "determineFilterItemByName",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterGroupItem",
            "description": "the corresponding filter item. If no match is found <code>null</code> will returned."
          },
          "parameters": [
            {
              "name": "sName",
              "type": "string",
              "optional": false,
              "description": "the control's name"
            }
          ],
          "description": "Retrieves the filter corresponding to the filter name."
        },
        {
          "name": "determineLabelByName",
          "visibility": "public",
          "returnValue": {
            "type": "sap.m.Label",
            "description": "The associated Label, if no match is found, <code>null</code> is returned."
          },
          "parameters": [
            {
              "name": "sName",
              "type": "string",
              "optional": false,
              "description": "Name of the filter."
            },
            {
              "name": "sGroupName",
              "type": "string",
              "optional": false,
              "description": "Group name of the filter; <code>null</code> for filter that belongs to basic group."
            }
          ],
          "description": "Retrieves the associated label based on the name and group name."
        },
        {
          "name": "determineMandatoryFilterItems",
          "visibility": "public",
          "returnValue": {
            "type": "array",
            "description": "Of visible mandatory filters"
          },
          "description": "Retrieves the mandatory filters."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.comp.filterbar.FilterBar with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.layout.Grid.extend}."
        },
        {
          "name": "fetchVariant",
          "visibility": "public",
          "returnValue": { "type": "object", "description": "JSON object" },
          "description": "Creates and returns the variant representation."
        },
        {
          "name": "fireAfterVariantSave",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:afterVariantSave afterVariantSave} to attached listeners."
        },
        {
          "name": "fireAssignedFiltersChanged",
          "visibility": "protected",
          "since": "1.38.0",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:assignedFiltersChanged assignedFiltersChanged} to attached listeners."
        },
        {
          "name": "fireBeforeVariantFetch",
          "visibility": "protected",
          "since": "1.28.13",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:beforeVariantFetch beforeVariantFetch} to attached listeners."
        },
        {
          "name": "fireCancel",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:cancel cancel} to attached listeners."
        },
        {
          "name": "fireClear",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "selectionSet": {
                  "name": "selectionSet",
                  "type": "sap.ui.core.Control[]",
                  "optional": true,
                  "description": "Visible controls"
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:clear clear} to attached listeners."
        },
        {
          "name": "fireFiltersDialogBeforeOpen",
          "visibility": "protected",
          "since": "1.48.0",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:filtersDialogBeforeOpen filtersDialogBeforeOpen} to attached listeners."
        },
        {
          "name": "fireFiltersDialogCancel",
          "visibility": "protected",
          "since": "1.48.0",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:filtersDialogCancel filtersDialogCancel} to attached listeners."
        },
        {
          "name": "fireFiltersDialogClosed",
          "visibility": "protected",
          "since": "1.34.0",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "context": {
                  "name": "context",
                  "type": "string",
                  "optional": true,
                  "description": "Context of the event. Can also be <code>null</code> or <code>undefined</code>"
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:filtersDialogClosed filtersDialogClosed} to attached listeners."
        },
        {
          "name": "fireFiltersDialogSearch",
          "visibility": "protected",
          "since": "1.48.0",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:filtersDialogSearch filtersDialogSearch} to attached listeners."
        },
        {
          "name": "fireFiltersDialogSearchForFilters",
          "visibility": "protected",
          "since": "1.48.0",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "newValue": {
                  "name": "newValue",
                  "type": "string",
                  "optional": true,
                  "description": "Contains the entered search filed value"
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:filtersDialogSearchForFilters filtersDialogSearchForFilters} to attached listeners."
        },
        {
          "name": "fireInitialise",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:initialise initialise} to attached listeners."
        },
        {
          "name": "fireInitialized",
          "visibility": "protected",
          "since": "1.38.0",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:initialized initialized} to attached listeners."
        },
        {
          "name": "fireReset",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "selectionSet": {
                  "name": "selectionSet",
                  "type": "sap.ui.core.Control[]",
                  "optional": true,
                  "description": "Visible controls"
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:reset reset} to attached listeners."
        },
        {
          "name": "fireSearch",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "selectionSet": {
                  "name": "selectionSet",
                  "type": "sap.ui.core.Control[]",
                  "optional": true,
                  "description": "Visible controls"
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:search search} to attached listeners."
        },
        {
          "name": "getAdvancedMode",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>advancedMode</code>"
          },
          "description": "Gets current value of property {@link #getAdvancedMode advancedMode}.\n\nThe advanced mode is only relevant for the value help scenario. UI representation is different from the standard FilterBar.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getAllFilterItems",
          "visibility": "public",
          "returnValue": {
            "type": "array",
            "description": "filters Of the current variant"
          },
          "parameters": [
            {
              "name": "bConsiderOnlyVisibleFields",
              "type": "boolean",
              "optional": false,
              "description": "Indicates that only visible filters are retrieved. <b>Note:</b> hidden filters are treated as visible filters."
            }
          ],
          "description": "Retrieves filters belonging to the current variant."
        },
        {
          "name": "getBasicSearch",
          "visibility": "public",
          "since": "1.30.0",
          "returnValue": { "type": "sap.ui.core.ID" },
          "description": "ID of the element which is the current target of the association {@link #getBasicSearch basicSearch}, or <code>null</code>."
        },
        {
          "name": "getBasicSearchName",
          "visibility": "protected",
          "returnValue": {
            "type": "string",
            "description": "name of the basic search field."
          },
          "description": "Determine the internal basic search field name."
        },
        {
          "name": "getBasicSearchValue",
          "visibility": "protected",
          "returnValue": {
            "type": "string",
            "description": "current value of the basic search field."
          },
          "description": "Determine the value of the basic search."
        },
        {
          "name": "getConsiderGroupTitle",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>considerGroupTitle</code>"
          },
          "description": "Gets current value of property {@link #getConsiderGroupTitle considerGroupTitle}.\n\nIf this property is set, then the label for filters will be prefixed with the group title.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getCurrentVariantId",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "string",
            "description": "ID of the current variant"
          },
          "description": "Retrieves the current variant ID."
        },
        {
          "name": "getDataSuiteFormat",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "string",
            "description": "JSON string representing the selection variant for UI navigation; <code>null</code> otherwise"
          },
          "parameters": [
            {
              "name": "bConsiderAllFilters",
              "type": "boolean",
              "optional": false,
              "description": "also include empty/invisible fields filter data"
            }
          ],
          "description": "Retrieves the current variant as selection variant for UI navigation",
          "deprecated": {
            "since": "1.48",
            "text": "replaced by {@link sap.ui.comp.filterbar.FilterBar#getUiState}"
          }
        },
        {
          "name": "getDeltaVariantMode",
          "visibility": "public",
          "since": "1.34.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>deltaVariantMode</code>"
          },
          "description": "Gets current value of property {@link #getDeltaVariantMode deltaVariantMode}.\n\nStores the delta as compared to the standard variant.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getFilterBarExpanded",
          "visibility": "public",
          "since": "1.26.1",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>filterBarExpanded</code>"
          },
          "description": "Gets current value of property {@link #getFilterBarExpanded filterBarExpanded}.\n\nShows the filters area. When property <code>useToolbar</code> is set to <code>false</code>, <code>filterBarExpanded</code> is set to <code>true</code> automatically.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getFilterContainerWidth",
          "visibility": "public",
          "since": "1.34.0",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>filterContainerWidth</code>"
          },
          "description": "Gets current value of property {@link #getFilterContainerWidth filterContainerWidth}.\n\nSets the width of the filters container.\n\nDefault value is <code>12rem</code>."
        },
        {
          "name": "getFilterDialogContent",
          "visibility": "public",
          "returnValue": {
            "type": "array",
            "description": "of filters dialog content."
          },
          "description": "Returns the filter dialog content. <code>Node:</code>The original content is a {@link sap.ui.layout.form.Form Form}. The form may be enhanced with a toolbar to enable the inner switch to an added custom content. Besides such operations, the original content should not be manipulated in any way."
        },
        {
          "name": "getFilterGroupItems",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.comp.filterbar.FilterGroupItem[]" },
          "description": "Gets content of aggregation {@link #getFilterGroupItems filterGroupItems}.\n\nContains all FilterBar filters. <br> <code>Note:</code>In case a filter has to be added to the basic group <ul> <li>the property <code>groupName</code> has to be set to the constant <code>sap.ui.comp.filterbar.FilterBar.INTERNAL_GROUP</code></li> <li>the property <code>groupLabel</code> will be handled internally and will be ignored, if set</li> <li>the property <code>partOfCurrentVariant</code> has to be set to <code>true</code></li> <li>if the property <code>visibleInFilterBar</code> is set to <code>true</code>, the property <code>partOfCurrentVariant</code> will be set internally also to <code>true</code></li> </ul>"
        },
        {
          "name": "getFilterItems",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.comp.filterbar.FilterItem[]" },
          "description": "Gets content of aggregation {@link #getFilterItems filterItems}.\n\nFilters belonging to the basic group.",
          "deprecated": {
            "since": "1.48.0",
            "text": "Use aggregation <code>filterGroupItems</code> instead."
          }
        },
        {
          "name": "getHeader",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>header</code>"
          },
          "description": "Gets current value of property {@link #getHeader header}.\n\nSpecifies header text that is shown in the toolbar on the first position. This property is ignored, when <code>useToolbar</code> is set to <code>false</code>.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.comp.filterbar.FilterBar."
        },
        {
          "name": "getPersistencyKey",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>persistencyKey</code>"
          },
          "description": "Gets current value of property {@link #getPersistencyKey persistencyKey}.\n\nKey used to access personalization data. Only if the persistencyKey is provided, will the <code>VariantManagement</code> control be used.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "getSearchEnabled",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>searchEnabled</code>"
          },
          "description": "Gets current value of property {@link #getSearchEnabled searchEnabled}.\n\nEnables/disables the Search button.\n\nDefault value is <code>true</code>.",
          "deprecated": { "since": "1.32.0" }
        },
        {
          "name": "getShowClearButton",
          "visibility": "public",
          "since": "1.26.1",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showClearButton</code>"
          },
          "description": "Gets current value of property {@link #getShowClearButton showClearButton}.\n\nHandles visibility of the Clear button on the Filters dialog.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getShowClearOnFB",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showClearOnFB</code>"
          },
          "description": "Gets current value of property {@link #getShowClearOnFB showClearOnFB}.\n\nHandles visibility of the Clear button on the FilterBar.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getShowFilterConfiguration",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showFilterConfiguration</code>"
          },
          "description": "Gets current value of property {@link #getShowFilterConfiguration showFilterConfiguration}.\n\nHandles visibility of the Filters button on the FilterBar.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getShowGoButton",
          "visibility": "public",
          "since": "1.26.1",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showGoButton</code>"
          },
          "description": "Gets current value of property {@link #getShowGoButton showGoButton}.\n\nHandles visibility of the Go button on the FilterBar.",
          "deprecated": {
            "since": "1.28.0",
            "text": "Replaced by property <code>showGoOnFB</code>"
          }
        },
        {
          "name": "getShowGoOnFB",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showGoOnFB</code>"
          },
          "description": "Gets current value of property {@link #getShowGoOnFB showGoOnFB}.\n\nHandles visibility of the Go button on the FilterBar.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getShowRestoreButton",
          "visibility": "public",
          "since": "1.26.1",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showRestoreButton</code>"
          },
          "description": "Gets current value of property {@link #getShowRestoreButton showRestoreButton}.\n\nHandles visibility of the \"Restore\" button on the \"Filters\" dialog. <b>Note:</b> Restore works only automatically when a property <code>persistencyKey</code> is set and therefore Variant Management is used. In all other cases the \"restore\" behavior needs to be implemented by the app, based on the event <code>reset</code>.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getShowRestoreOnFB",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showRestoreOnFB</code>"
          },
          "description": "Gets current value of property {@link #getShowRestoreOnFB showRestoreOnFB}.\n\nHandles visibility of the Restore button on the FilterBar.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getUiState",
          "visibility": "public",
          "since": "1.48",
          "returnValue": {
            "type": "sap.ui.comp.state.UIState",
            "description": "object representing the ui-state. Currently only the SelectionVariant part is considered."
          },
          "parameters": [
            {
              "name": "mProperties",
              "type": "map",
              "optional": false,
              "parameterProperties": {
                "allFilters": {
                  "name": "allFilters",
                  "type": "boolean",
                  "optional": false,
                  "description": "include empty/invisible fields filter data. Default is <code>false</code>"
                }
              },
              "description": "controls the API behavior"
            }
          ],
          "description": "Retrieves the current UI state of the <code>FilterBar</code> control.<br> The current UI state represents the data suite format."
        },
        {
          "name": "getUseSnapshot",
          "visibility": "public",
          "since": "1.44",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>useSnapshot</code>"
          },
          "description": "Gets current value of property {@link #getUseSnapshot useSnapshot}.\n\nDetermines the behavior when <code>reset</code> is executed. <br> <b>Note:</b> This property is only relevant if no variant management is used, and the filter bar is not used in the advanced mode. A snapshot shows the current state of the filter bar, just before the Filters dialog is opened. <ul> <li><code>undefined</code> (default) defines the standard behavior: snapshot will be applied after <code>reset</code> was triggered</li> <li><code>false</code> defines that the snapshot will not be applied</li> <li><code>true</code>is not considered at all</li> </ul>"
        },
        {
          "name": "getUseToolbar",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>useToolbar</code>"
          },
          "description": "Gets current value of property {@link #getUseToolbar useToolbar}.\n\nDetermines what design should be used. Default is the design with toolbar. The design with toolbar is always used on phones. When property <code>useToolbar</code> is set to <code>false</code>, <code>filterBarExpanded</code> is set to <code>true</code> automatically.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getVariantManagement",
          "visibility": "public",
          "since": "1.44.0",
          "returnValue": {
            "type": "sap.ui.comp.variants.VariantManagement",
            "description": "the associated VariantManagement control."
          },
          "description": "Returns the associated VariantManagement control. The returned VariantManagement instance should not be cached or manipulated in any ways. It should offer the application a convenient way to verify the dirty state and to check for page variant scenario. The method may return <code>null</code> or a disabled VariantManagement control."
        },
        {
          "name": "hideGoButton",
          "visibility": "protected",
          "since": "1.40.4",
          "description": "Hides the Go button on FilterBar. Allows to hide the Go-button for dedicated scenarios, like liveMode."
        },
        {
          "name": "indexOfFilterGroupItem",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oFilterGroupItem",
              "type": "sap.ui.comp.filterbar.FilterGroupItem",
              "optional": false,
              "description": "The filterGroupItem whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.ui.comp.filterbar.FilterGroupItem</code> in the aggregation {@link #getFilterGroupItems filterGroupItems}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "indexOfFilterItem",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oFilterItem",
              "type": "sap.ui.comp.filterbar.FilterItem",
              "optional": false,
              "description": "The filterItem whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.ui.comp.filterbar.FilterItem</code> in the aggregation {@link #getFilterItems filterItems}. and returns its index if found or -1 otherwise.",
          "deprecated": {
            "since": "1.48.0",
            "text": "Use aggregation <code>filterGroupItems</code> instead."
          }
        },
        {
          "name": "isCurrentVariantExecuteOnSelectEnabled",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Flag 'executeOnSelect' flag. If varaint management is disabled <code>false</code> is retuned."
          },
          "description": "Returns the information whether the flag 'executeOnSelect' is set or not on current variant."
        },
        {
          "name": "isCurrentVariantStandard",
          "visibility": "public",
          "since": "1.44.0",
          "returnValue": {
            "type": "boolean|undefined",
            "description": "indicates if the current variant is the standard variant. In case the variant management does not exists, <code>undefined</code> is returned."
          },
          "description": "Determines if the current variant is the standard variant"
        },
        {
          "name": "isDialogOpen",
          "visibility": "protected",
          "returnValue": {
            "type": "boolean",
            "description": "State of filters dialog"
          },
          "description": "Determines if the filters dialog is opene."
        },
        {
          "name": "registerApplyData",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterBar",
            "description": "Reference to this in order to allow method chaining."
          },
          "parameters": [
            {
              "name": "fCallBack",
              "type": "function",
              "optional": false,
              "description": "Called when a variant must be applied"
            }
          ],
          "description": "Registration of a callback function. The provided callback function is executed when a variant must be applied. The callback function will receive the corresponding data set containing all relevant data in JSON, as initially provided by the callback for fetchData."
        },
        {
          "name": "registerFetchData",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterBar",
            "description": "Reference to this in order to allow method chaining."
          },
          "parameters": [
            {
              "name": "fCallBack",
              "type": "function",
              "optional": false,
              "description": "Called when a variant must be fetched"
            }
          ],
          "description": "Registration of a callback function. The provided callback function is executed when saving a variant is triggered and must provide all relevant fields and values in JSON."
        },
        {
          "name": "registerGetFiltersWithValues",
          "visibility": "public",
          "since": "1.26.1",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterBar",
            "description": "Reference to this in order to allow method chaining."
          },
          "parameters": [
            {
              "name": "fCallBack",
              "type": "function",
              "optional": false,
              "description": "Called when a variant must be applied"
            }
          ],
          "description": "Registration of a callback function. The provided callback function is executed to obtain the filters with values."
        },
        {
          "name": "removeAllFilterGroupItems",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterGroupItem[]",
            "description": "An array of the removed elements (might be empty)."
          },
          "description": "Removes all entries in the aggregation filterGroupItems."
        },
        {
          "name": "removeAllFilterItems",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterItem[]",
            "description": "An array of the removed elements (might be empty)."
          },
          "description": "Removes all entries in the aggregation filterItems.",
          "deprecated": {
            "since": "1.48.0",
            "text": "Use aggregation <code>filterGroupItems</code> instead."
          }
        },
        {
          "name": "removeAllFilters",
          "visibility": "public",
          "description": "Removes all entries in the aggregations filterItems, filterGroupItems, basicSearch"
        },
        {
          "name": "removeFilterGroupItem",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterGroupItem",
            "description": "The removed filterGroupItem or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vFilterGroupItem",
              "type": "int|string|sap.ui.comp.filterbar.FilterGroupItem",
              "optional": false,
              "description": "The filterGroupItem to remove or its index or id"
            }
          ],
          "description": "Removes a filterGroupItem from the aggregation {@link #getFilterGroupItems filterGroupItems}."
        },
        {
          "name": "removeFilterItem",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterItem",
            "description": "The removed filterItem or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vFilterItem",
              "type": "int|string|sap.ui.comp.filterbar.FilterItem",
              "optional": false,
              "description": "The filterItem to remove or its index or id"
            }
          ],
          "description": "Removes a filterItem from the aggregation {@link #getFilterItems filterItems}.",
          "deprecated": {
            "since": "1.48.0",
            "text": "Use aggregation <code>filterGroupItems</code> instead."
          }
        },
        {
          "name": "restoreGoButton",
          "visibility": "protected",
          "since": "1.40.4",
          "description": "Restores the visibility of the Go button on FilterBar. The visibilty of the Go button will be set, according to the showGoOnFB property."
        },
        {
          "name": "retrieveFiltersWithValues",
          "visibility": "public",
          "returnValue": {
            "type": "array",
            "description": "Filter labels that represents relevant filters with values"
          },
          "description": "Retrieves the labels of all visible filters that belongs to the current variant and have an assigned value."
        },
        {
          "name": "retrieveFiltersWithValuesAsText",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "A string that contains the number of set filters and their names"
          },
          "description": "Returns a summary string that contains information about the filters currently assigned. The string starts with \"Filtered By\", followed by the number of set filters and their labels.<br> Example:<br> <i>Filtered By (3): Company Code, Fiscal Year, Customer</i>"
        },
        {
          "name": "search",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "indicates the validation result. true means no validation errors."
          },
          "description": "Executes the search event. Controls of all visible filters will be passed as event-parameters."
        },
        {
          "name": "setAdvancedMode",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bAdvancedMode",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>advancedMode</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getAdvancedMode advancedMode}.\n\nThe advanced mode is only relevant for the value help scenario. UI representation is different from the standard FilterBar.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setBasicSearch",
          "visibility": "public",
          "since": "1.30.0",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oBasicSearch",
              "type": "sap.ui.core.ID|sap.m.SearchField",
              "optional": false,
              "description": "ID of an element which becomes the new target of this basicSearch association; alternatively, an element instance may be given"
            }
          ],
          "description": "Sets the associated {@link #getBasicSearch basicSearch}."
        },
        {
          "name": "setConsiderGroupTitle",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bConsiderGroupTitle",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>considerGroupTitle</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getConsiderGroupTitle considerGroupTitle}.\n\nIf this property is set, then the label for filters will be prefixed with the group title.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setContentHeight",
          "visibility": "public",
          "parameters": [
            {
              "name": "nHeight",
              "type": "Number",
              "optional": false,
              "description": "the content height of the filters dialog."
            }
          ],
          "description": "Sets the height of the content area of the dialog. The passed dimension will be interpreted as 'px'."
        },
        {
          "name": "setContentWidth",
          "visibility": "public",
          "parameters": [
            {
              "name": "nWidth",
              "type": "Number",
              "optional": false,
              "description": "the content width of the filters dialog."
            }
          ],
          "description": "Sets the width of the content area of the dialog. The passed dimension will be interpreted as 'px'."
        },
        {
          "name": "setCurrentVariantId",
          "visibility": "public",
          "since": "1.28.0",
          "parameters": [
            {
              "name": "sVariantId",
              "type": "string",
              "optional": false,
              "description": "ID of the variant"
            },
            {
              "name": "bDoNotApplyVariant",
              "type": "boolean",
              "optional": false,
              "description": "If set to <code>true</code>, the <code>applyVariant</code> method is not executed yet. Relevant during navigation, when called before the initialise event has been executed."
            }
          ],
          "description": "Sets the current variant ID."
        },
        {
          "name": "setDataSuiteFormat",
          "visibility": "public",
          "since": "1.28.0",
          "parameters": [
            {
              "name": "sSuiteData",
              "type": "string",
              "optional": false,
              "description": "Represents the selection variants for UI navigation"
            },
            {
              "name": "bReplace",
              "type": "boolean",
              "optional": false,
              "description": "Replaces existing filter data"
            }
          ],
          "description": "Sets the selection variant for UI navigation to FilterBar.",
          "deprecated": {
            "since": "1.48",
            "text": "replaced by {@link sap.ui.comp.filterbar.FilterBar#setUiState}"
          }
        },
        {
          "name": "setDeltaVariantMode",
          "visibility": "public",
          "since": "1.34.0",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bDeltaVariantMode",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>deltaVariantMode</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getDeltaVariantMode deltaVariantMode}.\n\nStores the delta as compared to the standard variant.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setFilterBarExpanded",
          "visibility": "public",
          "since": "1.26.1",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bFilterBarExpanded",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>filterBarExpanded</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getFilterBarExpanded filterBarExpanded}.\n\nShows the filters area. When property <code>useToolbar</code> is set to <code>false</code>, <code>filterBarExpanded</code> is set to <code>true</code> automatically.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setFilterContainerWidth",
          "visibility": "public",
          "since": "1.34.0",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sFilterContainerWidth",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>filterContainerWidth</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getFilterContainerWidth filterContainerWidth}.\n\nSets the width of the filters container.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>12rem</code>."
        },
        {
          "name": "setHeader",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sHeader",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>header</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getHeader header}.\n\nSpecifies header text that is shown in the toolbar on the first position. This property is ignored, when <code>useToolbar</code> is set to <code>false</code>.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "setPersistencyKey",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sPersistencyKey",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>persistencyKey</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getPersistencyKey persistencyKey}.\n\nKey used to access personalization data. Only if the persistencyKey is provided, will the <code>VariantManagement</code> control be used.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "setSearchEnabled",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bSearchEnabled",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>searchEnabled</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSearchEnabled searchEnabled}.\n\nEnables/disables the Search button.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>.",
          "deprecated": { "since": "1.32.0" }
        },
        {
          "name": "setShowClearButton",
          "visibility": "public",
          "since": "1.26.1",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowClearButton",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showClearButton</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowClearButton showClearButton}.\n\nHandles visibility of the Clear button on the Filters dialog.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setShowClearOnFB",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowClearOnFB",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showClearOnFB</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowClearOnFB showClearOnFB}.\n\nHandles visibility of the Clear button on the FilterBar.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setShowFilterConfiguration",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowFilterConfiguration",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showFilterConfiguration</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowFilterConfiguration showFilterConfiguration}.\n\nHandles visibility of the Filters button on the FilterBar.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setShowGoButton",
          "visibility": "public",
          "since": "1.26.1",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowGoButton",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showGoButton</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowGoButton showGoButton}.\n\nHandles visibility of the Go button on the FilterBar.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.",
          "deprecated": {
            "since": "1.28.0",
            "text": "Replaced by property <code>showGoOnFB</code>"
          }
        },
        {
          "name": "setShowGoOnFB",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowGoOnFB",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showGoOnFB</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowGoOnFB showGoOnFB}.\n\nHandles visibility of the Go button on the FilterBar.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setShowRestoreButton",
          "visibility": "public",
          "since": "1.26.1",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowRestoreButton",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showRestoreButton</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowRestoreButton showRestoreButton}.\n\nHandles visibility of the \"Restore\" button on the \"Filters\" dialog. <b>Note:</b> Restore works only automatically when a property <code>persistencyKey</code> is set and therefore Variant Management is used. In all other cases the \"restore\" behavior needs to be implemented by the app, based on the event <code>reset</code>.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setShowRestoreOnFB",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowRestoreOnFB",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showRestoreOnFB</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowRestoreOnFB showRestoreOnFB}.\n\nHandles visibility of the Restore button on the FilterBar.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setUiState",
          "visibility": "public",
          "since": "1.48",
          "parameters": [
            {
              "name": "oUiState",
              "type": "sap.ui.comp.state.UIState",
              "optional": false,
              "description": "object representing the ui-state. Currently only the SelectionVariant part is considered."
            },
            {
              "name": "mProperties",
              "type": "map",
              "optional": false,
              "parameterProperties": {
                "replace": {
                  "name": "replace",
                  "type": "boolean",
                  "optional": false,
                  "description": "Replaces existing filter data"
                },
                "strictMode": {
                  "name": "strictMode",
                  "type": "boolean",
                  "optional": false,
                  "description": "Determines filters and parameters based on the name.<BR> <ul> <li><code>true</code>: Determines filters and parameters based on their exact name and type. If there is no exact match, the filter/parameter will be ignored.</li> <li><code>false</code>: Determines parameters first following this rule set: <ul> <li>If a parameter is found, use it.</li> <li>If a filter is found, check first if a matching parameter exists with the filter name prefixed with \"P_\". If there is a match, use it as parameter, otherwise use it as filter.</li> </ul> </ul>"
                }
              },
              "description": "controls the API behavior"
            }
          ],
          "description": "Sets the current UI state of the <code>FilterBar</code> control.<br> The current UI state represents the data suite format."
        },
        {
          "name": "setUiStateAsVariant",
          "visibility": "public",
          "since": "1.54",
          "parameters": [
            {
              "name": "oUiState",
              "type": "sap.ui.comp.state.UIState",
              "optional": false,
              "description": "object representing the ui-state.Only the SelectionVariant part is considered."
            }
          ],
          "description": "Apply the SelectionPresentationVariant annotated information as a variant. The current UI state represents the data suite format."
        },
        {
          "name": "setUseSnapshot",
          "visibility": "public",
          "since": "1.44",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bUseSnapshot",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>useSnapshot</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getUseSnapshot useSnapshot}.\n\nDetermines the behavior when <code>reset</code> is executed. <br> <b>Note:</b> This property is only relevant if no variant management is used, and the filter bar is not used in the advanced mode. A snapshot shows the current state of the filter bar, just before the Filters dialog is opened. <ul> <li><code>undefined</code> (default) defines the standard behavior: snapshot will be applied after <code>reset</code> was triggered</li> <li><code>false</code> defines that the snapshot will not be applied</li> <li><code>true</code>is not considered at all</li> </ul>\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setUseToolbar",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bUseToolbar",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>useToolbar</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getUseToolbar useToolbar}.\n\nDetermines what design should be used. Default is the design with toolbar. The design with toolbar is always used on phones. When property <code>useToolbar</code> is set to <code>false</code>, <code>filterBarExpanded</code> is set to <code>true</code> automatically.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "showFilterDialog",
          "visibility": "public",
          "description": "Creates and shows the filters dialog. This method may only be called when FilterBar is displayed and basically accessible. It may also only be called when the filters dialog is currently not opened."
        },
        {
          "name": "variantsInitialized",
          "visibility": "protected",
          "description": "This method will be called by the SmartVariantMangement and indicates, that the standard variant was obtained. It indicates, that the variant management is fully initialized."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.comp.filterbar.FilterGroupItem",
      "basename": "FilterGroupItem",
      "resource": "sap/ui/comp/filterbar/FilterGroupItem.js",
      "module": "sap/ui/comp/filterbar/FilterGroupItem",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.comp.filterbar.FilterItem",
      "description": "Represents a filter belonging to a group other than basic.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "element",
        "properties": [
          {
            "name": "groupTitle",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Title of the group.",
            "methods": ["getGroupTitle", "setGroupTitle"]
          },
          {
            "name": "groupName",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Name of the group.",
            "methods": ["getGroupName", "setGroupName"]
          },
          {
            "name": "visibleInAdvancedArea",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "since": "1.24.0",
            "description": "If set to true, this filter is visible on the filter bar by default. Mapped against the <code>visibleInFilterBar</code> property.",
            "deprecated": {
              "since": "1.26.1",
              "text": "Replaced by property <code>visibleInFilterBar</code>"
            },
            "methods": ["getVisibleInAdvancedArea", "setVisibleInAdvancedArea"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new FilterBar/FilterGroupItem.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "properties": [
        {
          "name": "getVisibleInFilterBar",
          "visibility": "public",
          "since": "1.26.1",
          "type": "undefined",
          "description": "Controls the visibility of a filter item in the filter bar.<BR> Default value is <code>false</code>."
        }
      ],
      "methods": [
        {
          "name": "destroy",
          "visibility": "public",
          "description": "Destroys this element."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.comp.filterbar.FilterGroupItem with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.comp.filterbar.FilterItem.extend}."
        },
        {
          "name": "getGroupName",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>groupName</code>"
          },
          "description": "Gets current value of property {@link #getGroupName groupName}.\n\nName of the group."
        },
        {
          "name": "getGroupTitle",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>groupTitle</code>"
          },
          "description": "Gets current value of property {@link #getGroupTitle groupTitle}.\n\nTitle of the group."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.comp.filterbar.FilterGroupItem."
        },
        {
          "name": "setGroupName",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterGroupItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sGroupName",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>groupName</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getGroupName groupName}.\n\nName of the group.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setGroupTitle",
          "visibility": "public",
          "parameters": [
            {
              "name": "sValue",
              "type": "string",
              "optional": false,
              "description": "Group title"
            }
          ],
          "description": "Setter for group title."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.comp.filterbar.FilterItem",
      "basename": "FilterItem",
      "resource": "sap/ui/comp/filterbar/FilterItem.js",
      "module": "sap/ui/comp/filterbar/FilterItem",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.core.Element",
      "description": "Represents a filter belonging to the basic group.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "element",
        "properties": [
          {
            "name": "label",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Label of the filter.",
            "methods": ["getLabel", "setLabel"]
          },
          {
            "name": "name",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Name of the filter. This is an identifier for the filter and has to be unique.",
            "methods": ["getName", "setName"]
          },
          {
            "name": "mandatory",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "description": "Mandatory flag.",
            "methods": ["getMandatory", "setMandatory"]
          },
          {
            "name": "visible",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "description": "Visibility state of the filter.",
            "methods": ["getVisible", "setVisible"]
          },
          {
            "name": "labelTooltip",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Tooltip for the filter.",
            "methods": ["getLabelTooltip", "setLabelTooltip"]
          },
          {
            "name": "controlTooltip",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.52.0",
            "description": "Tooltip for the filter'c control.",
            "methods": ["getControlTooltip", "setControlTooltip"]
          },
          {
            "name": "partOfCurrentVariant",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "since": "1.26.1",
            "description": "Determines if a filter is part of the currently selected variant. <br> <b>Note:</b> This property can also be changed using the <code>visibleInFilterBar</code> property and by user interaction in the Select Filters dialog or the variant handling.",
            "methods": ["getPartOfCurrentVariant", "setPartOfCurrentVariant"]
          },
          {
            "name": "visibleInFilterBar",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "since": "1.26.1",
            "description": "Controls the visibility of a filter item in the filter bar.",
            "methods": ["getVisibleInFilterBar", "setVisibleInFilterBar"]
          },
          {
            "name": "hiddenFilter",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "since": "1.44.0",
            "description": "A hidden filter will never be visible in the filter bar control",
            "methods": ["getHiddenFilter", "setHiddenFilter"]
          },
          {
            "name": "entitySetName",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.58.0",
            "description": "EntitySet name to which the filter belongs",
            "methods": ["getEntitySetName", "setEntitySetName"]
          },
          {
            "name": "entityTypeName",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.58.0",
            "description": "EntityType name to which the filter belongs",
            "methods": ["getEntityTypeName", "setEntityTypeName"]
          }
        ],
        "aggregations": [
          {
            "name": "control",
            "singularName": "control",
            "type": "sap.ui.core.Control",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "The control of the filter.",
            "methods": ["getControl", "destroyControl", "setControl"]
          }
        ],
        "events": [
          {
            "name": "change",
            "visibility": "public",
            "description": "This event is fired when one of the properties is changed.",
            "parameters": {
              "propertyName": {
                "name": "propertyName",
                "type": "string",
                "description": "Name of the changed property"
              }
            },
            "methods": ["attachChange", "detachChange", "fireChange"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new FilterBar/FilterItem.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "change",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "propertyName": {
                      "name": "propertyName",
                      "type": "string",
                      "optional": false,
                      "description": "Name of the changed property"
                    }
                  }
                }
              }
            }
          ],
          "description": "This event is fired when one of the properties is changed."
        }
      ],
      "methods": [
        {
          "name": "attachChange",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.filterbar.FilterItem</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:change change} event of this <code>sap.ui.comp.filterbar.FilterItem</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.filterbar.FilterItem</code> itself.\n\nThis event is fired when one of the properties is changed."
        },
        {
          "name": "destroy",
          "visibility": "public",
          "description": "Destroys this element."
        },
        {
          "name": "destroyControl",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the control in the aggregation {@link #getControl control}."
        },
        {
          "name": "detachChange",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:change change} event of this <code>sap.ui.comp.filterbar.FilterItem</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.comp.filterbar.FilterItem with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
        },
        {
          "name": "fireChange",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "propertyName": {
                  "name": "propertyName",
                  "type": "string",
                  "optional": true,
                  "description": "Name of the changed property"
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:change change} to attached listeners."
        },
        {
          "name": "getControl",
          "visibility": "public",
          "description": "Always returns the initially added control."
        },
        {
          "name": "getControlTooltip",
          "visibility": "public",
          "since": "1.52.0",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>controlTooltip</code>"
          },
          "description": "Gets current value of property {@link #getControlTooltip controlTooltip}.\n\nTooltip for the filter'c control."
        },
        {
          "name": "getEntitySetName",
          "visibility": "public",
          "since": "1.58.0",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>entitySetName</code>"
          },
          "description": "Gets current value of property {@link #getEntitySetName entitySetName}.\n\nEntitySet name to which the filter belongs"
        },
        {
          "name": "getEntityTypeName",
          "visibility": "public",
          "since": "1.58.0",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>entityTypeName</code>"
          },
          "description": "Gets current value of property {@link #getEntityTypeName entityTypeName}.\n\nEntityType name to which the filter belongs"
        },
        {
          "name": "getHiddenFilter",
          "visibility": "public",
          "since": "1.44.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>hiddenFilter</code>"
          },
          "description": "Gets current value of property {@link #getHiddenFilter hiddenFilter}.\n\nA hidden filter will never be visible in the filter bar control\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getLabel",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>label</code>"
          },
          "description": "Gets current value of property {@link #getLabel label}.\n\nLabel of the filter."
        },
        {
          "name": "getLabelTooltip",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>labelTooltip</code>"
          },
          "description": "Gets current value of property {@link #getLabelTooltip labelTooltip}.\n\nTooltip for the filter."
        },
        {
          "name": "getMandatory",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>mandatory</code>"
          },
          "description": "Gets current value of property {@link #getMandatory mandatory}.\n\nMandatory flag.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.comp.filterbar.FilterItem."
        },
        {
          "name": "getName",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>name</code>"
          },
          "description": "Gets current value of property {@link #getName name}.\n\nName of the filter. This is an identifier for the filter and has to be unique."
        },
        {
          "name": "getPartOfCurrentVariant",
          "visibility": "public",
          "since": "1.26.1",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>partOfCurrentVariant</code>"
          },
          "description": "Gets current value of property {@link #getPartOfCurrentVariant partOfCurrentVariant}.\n\nDetermines if a filter is part of the currently selected variant. <br> <b>Note:</b> This property can also be changed using the <code>visibleInFilterBar</code> property and by user interaction in the Select Filters dialog or the variant handling.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getVisible",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>visible</code>"
          },
          "description": "Gets current value of property {@link #getVisible visible}.\n\nVisibility state of the filter.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getVisibleInFilterBar",
          "visibility": "public",
          "since": "1.26.1",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>visibleInFilterBar</code>"
          },
          "description": "Gets current value of property {@link #getVisibleInFilterBar visibleInFilterBar}.\n\nControls the visibility of a filter item in the filter bar.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "init",
          "visibility": "public",
          "description": "Initializes the filter item."
        },
        {
          "name": "setControl",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControl",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "associated with the filter."
            }
          ],
          "description": "Sets the corresponding control. The control may not be overwritten by the application, once the filter item is assigned to the FilterBar."
        },
        {
          "name": "setControlTooltip",
          "visibility": "public",
          "since": "1.52.0",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sControlTooltip",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>controlTooltip</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getControlTooltip controlTooltip}.\n\nTooltip for the filter'c control.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setEntitySetName",
          "visibility": "public",
          "since": "1.58.0",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sEntitySetName",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>entitySetName</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getEntitySetName entitySetName}.\n\nEntitySet name to which the filter belongs\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setEntityTypeName",
          "visibility": "public",
          "since": "1.58.0",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sEntityTypeName",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>entityTypeName</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getEntityTypeName entityTypeName}.\n\nEntityType name to which the filter belongs\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setHiddenFilter",
          "visibility": "public",
          "since": "1.44.0",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bHiddenFilter",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>hiddenFilter</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getHiddenFilter hiddenFilter}.\n\nA hidden filter will never be visible in the filter bar control\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setLabel",
          "visibility": "public",
          "parameters": [
            {
              "name": "sValue",
              "type": "string",
              "optional": false,
              "description": "Label text"
            }
          ],
          "description": "Setter for label."
        },
        {
          "name": "setLabelTooltip",
          "visibility": "public",
          "parameters": [
            {
              "name": "sText",
              "type": "string",
              "optional": false,
              "description": "Tooltip text"
            }
          ],
          "description": "Setter for tooltip."
        },
        {
          "name": "setMandatory",
          "visibility": "public",
          "parameters": [
            {
              "name": "bValue",
              "type": "string",
              "optional": false,
              "description": "Mandatory state"
            }
          ],
          "description": "Setter for mandatory flag."
        },
        {
          "name": "setName",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sName",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>name</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getName name}.\n\nName of the filter. This is an identifier for the filter and has to be unique.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setPartOfCurrentVariant",
          "visibility": "public",
          "parameters": [
            {
              "name": "bVisible",
              "type": "boolean",
              "optional": false,
              "description": "State of visibility in filter bar"
            }
          ],
          "description": "Setter for partOfCurrentVariant in filter bar."
        },
        {
          "name": "setVisible",
          "visibility": "public",
          "parameters": [
            {
              "name": "bVisible",
              "type": "boolean",
              "optional": false,
              "description": "State of visibility"
            }
          ],
          "description": "Setter for visible property."
        },
        {
          "name": "setVisibleInFilterBar",
          "visibility": "public",
          "since": "1.26.1",
          "parameters": [
            {
              "name": "bVisible",
              "type": "boolean",
              "optional": false,
              "description": "State of visibility in filter bar"
            }
          ],
          "description": "Setter for visible in filter bar."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.ui.comp.navpopover.ChangeHandlerType",
      "basename": "ChangeHandlerType",
      "resource": "sap/ui/comp/library.js",
      "module": "sap/ui/comp/library",
      "export": "navpopover.ChangeHandlerType",
      "static": true,
      "visibility": "public",
      "description": "Type of change handler type for link personalization.",
      "ui5-metamodel": true,
      "properties": [
        {
          "name": "addLink",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Change handler creating a change for an added link."
        },
        {
          "name": "moveLink",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Change handler creating a change for a moved link."
        },
        {
          "name": "removeLink",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Change handler creating a change for a removed link."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.comp.navpopover.LinkData",
      "basename": "LinkData",
      "resource": "sap/ui/comp/navpopover/LinkData.js",
      "module": "sap/ui/comp/navpopover/LinkData",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.28.0",
      "extends": "sap.ui.core.Element",
      "description": "Stores display text together with a navigation target hyperlink.<br> The LinkData class is used by {@link sap.ui.comp.navpopover.SmartLink SmartLink} and {@link sap.ui.comp.navpopover.SemanticObjectController SemanticObjectController} to define the visible links on {@link sap.ui.comp.navpopover.NavigationPopover NavigationPopover}.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "element",
        "properties": [
          {
            "name": "text",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Text which can be displayed on the UI",
            "methods": ["getText", "setText"]
          },
          {
            "name": "href",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Destination link for a navigation operation in internal format. <b>Note</b>: The link will be encoded before it is shown in external format using the <code>hrefForExternal</code> method of the CrossApplicationNavigation service.",
            "methods": ["getHref", "setHref"]
          },
          {
            "name": "target",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The standard values for the <code>target</code> property are: _self, _top, _blank, _parent, _search. Alternatively, a frame name can be entered. This property is only used if the <code>href</code> property is set.",
            "methods": ["getTarget", "setTarget"]
          },
          {
            "name": "description",
            "type": "string",
            "group": "Misc",
            "visibility": "public",
            "since": "1.42.0",
            "description": "Description of the link.",
            "methods": ["getDescription", "setDescription"]
          },
          {
            "name": "visible",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "since": "1.44.0",
            "description": "Describes whether the link should be visible on the screen.",
            "methods": ["getVisible", "setVisible"]
          },
          {
            "name": "key",
            "type": "string",
            "group": "Misc",
            "visibility": "public",
            "since": "1.44.0",
            "description": "Key of link.",
            "methods": ["getKey", "setKey"]
          },
          {
            "name": "press",
            "type": "object",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.46.0",
            "description": "Callback for <code>press</code> event.",
            "methods": ["getPress", "setPress"]
          },
          {
            "name": "isSuperiorAction",
            "type": "boolean",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.48.0",
            "description": "Marker for superior action.",
            "methods": ["getIsSuperiorAction", "setIsSuperiorAction"]
          },
          {
            "name": "visibleChangedByUser",
            "type": "boolean",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.58.0",
            "description": "Describes whether the visibility is changed by end user or not.",
            "methods": ["getVisibleChangedByUser", "setVisibleChangedByUser"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new navpopover/LinkData.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.comp.navpopover.LinkData with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
        },
        {
          "name": "getDescription",
          "visibility": "public",
          "since": "1.42.0",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>description</code>"
          },
          "description": "Gets current value of property {@link #getDescription description}.\n\nDescription of the link.\n\nDefault value is <code>undefined</code>."
        },
        {
          "name": "getHref",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>href</code>"
          },
          "description": "Gets current value of property {@link #getHref href}.\n\nDestination link for a navigation operation in internal format. <b>Note</b>: The link will be encoded before it is shown in external format using the <code>hrefForExternal</code> method of the CrossApplicationNavigation service."
        },
        {
          "name": "getIsSuperiorAction",
          "visibility": "public",
          "since": "1.48.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>isSuperiorAction</code>"
          },
          "description": "Gets current value of property {@link #getIsSuperiorAction isSuperiorAction}.\n\nMarker for superior action."
        },
        {
          "name": "getKey",
          "visibility": "public",
          "since": "1.44.0",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>key</code>"
          },
          "description": "Gets current value of property {@link #getKey key}.\n\nKey of link.\n\nDefault value is <code>undefined</code>."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.comp.navpopover.LinkData."
        },
        {
          "name": "getPress",
          "visibility": "public",
          "since": "1.46.0",
          "returnValue": {
            "type": "object",
            "description": "Value of property <code>press</code>"
          },
          "description": "Gets current value of property {@link #getPress press}.\n\nCallback for <code>press</code> event."
        },
        {
          "name": "getTarget",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>target</code>"
          },
          "description": "Gets current value of property {@link #getTarget target}.\n\nThe standard values for the <code>target</code> property are: _self, _top, _blank, _parent, _search. Alternatively, a frame name can be entered. This property is only used if the <code>href</code> property is set."
        },
        {
          "name": "getText",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>text</code>"
          },
          "description": "Gets current value of property {@link #getText text}.\n\nText which can be displayed on the UI"
        },
        {
          "name": "getVisible",
          "visibility": "public",
          "since": "1.44.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>visible</code>"
          },
          "description": "Gets current value of property {@link #getVisible visible}.\n\nDescribes whether the link should be visible on the screen.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getVisibleChangedByUser",
          "visibility": "public",
          "since": "1.58.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>visibleChangedByUser</code>"
          },
          "description": "Gets current value of property {@link #getVisibleChangedByUser visibleChangedByUser}.\n\nDescribes whether the visibility is changed by end user or not."
        },
        {
          "name": "setDescription",
          "visibility": "public",
          "since": "1.42.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.LinkData",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sDescription",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>description</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getDescription description}.\n\nDescription of the link.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>undefined</code>."
        },
        {
          "name": "setHref",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.LinkData",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sHref",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>href</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getHref href}.\n\nDestination link for a navigation operation in internal format. <b>Note</b>: The link will be encoded before it is shown in external format using the <code>hrefForExternal</code> method of the CrossApplicationNavigation service.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setIsSuperiorAction",
          "visibility": "public",
          "since": "1.48.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.LinkData",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bIsSuperiorAction",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>isSuperiorAction</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getIsSuperiorAction isSuperiorAction}.\n\nMarker for superior action.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setKey",
          "visibility": "public",
          "since": "1.44.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.LinkData",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sKey",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>key</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getKey key}.\n\nKey of link.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>undefined</code>."
        },
        {
          "name": "setPress",
          "visibility": "public",
          "since": "1.46.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.LinkData",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oPress",
              "type": "object",
              "optional": false,
              "description": "New value for property <code>press</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getPress press}.\n\nCallback for <code>press</code> event.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setTarget",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.LinkData",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sTarget",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>target</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getTarget target}.\n\nThe standard values for the <code>target</code> property are: _self, _top, _blank, _parent, _search. Alternatively, a frame name can be entered. This property is only used if the <code>href</code> property is set.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setText",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.LinkData",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sText",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>text</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getText text}.\n\nText which can be displayed on the UI\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setVisible",
          "visibility": "public",
          "since": "1.44.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.LinkData",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bVisible",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>visible</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getVisible visible}.\n\nDescribes whether the link should be visible on the screen.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setVisibleChangedByUser",
          "visibility": "public",
          "since": "1.58.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.LinkData",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bVisibleChangedByUser",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>visibleChangedByUser</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getVisibleChangedByUser visibleChangedByUser}.\n\nDescribes whether the visibility is changed by end user or not.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.comp.navpopover.NavigationPopover",
      "basename": "NavigationPopover",
      "resource": "sap/ui/comp/navpopover/NavigationPopover.js",
      "module": "sap/ui/comp/navpopover/NavigationPopover",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.m.ResponsivePopover",
      "description": "The NavigationPopover control is used to present information in a specific format. <b>Note</b>: This control is used by the {@link sap.ui.comp.navpopover.NavigationPopoverHandler NavigationPopoverHandler} and must not be used manually.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "semanticObjectName",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.28.0",
            "description": "The name of the semantic object.",
            "deprecated": {
              "since": "1.40.0",
              "text": "The property <code>semanticObjectName</code> is obsolete as target determination is no longer done by NavigationPopover. Instead the NavigationPopoverHandler is responsible for target determination."
            },
            "methods": ["getSemanticObjectName", "setSemanticObjectName"]
          },
          {
            "name": "semanticAttributes",
            "type": "object",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.28.0",
            "description": "Describes the semantic attributes. The attribute has to be a map.",
            "deprecated": {
              "since": "1.40.0",
              "text": "The property <code>semanticAttributes</code> is obsolete as target determination is no longer done by NavigationPopover. Instead the NavigationPopoverHandler is responsible for target determination."
            },
            "methods": ["getSemanticAttributes", "setSemanticAttributes"]
          },
          {
            "name": "appStateKey",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.28.0",
            "description": "The application state key passed to retrieve the navigation targets.",
            "deprecated": {
              "since": "1.40.0",
              "text": "The property <code>appStateKey</code> is obsolete as target determination is no longer done by NavigationPopover. Instead the NavigationPopoverHandler is responsible for target determination."
            },
            "methods": ["getAppStateKey", "setAppStateKey"]
          },
          {
            "name": "mainNavigationId",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.28.0",
            "description": "Sets the description of the main navigation link. If <code>mainNavigation</code> also contains an href description, then <code>mainNavigationId</code> is displayed. If <code>mainNavigationId</code> is set to an empty string <code>''</code>, neither description nor subtitle are displayed.",
            "methods": ["getMainNavigationId", "setMainNavigationId"]
          },
          {
            "name": "availableActionsPersonalizationText",
            "type": "string",
            "group": "Misc",
            "visibility": "public",
            "since": "1.44.0",
            "description": "Determines the text of personalization link. If this property is set to some string, choosing the personalization link will trigger the <code>availableActionsPersonalizationPress</code> event. If this property is not set, the personalization link is not shown.",
            "methods": [
              "getAvailableActionsPersonalizationText",
              "setAvailableActionsPersonalizationText"
            ]
          }
        ],
        "aggregations": [
          {
            "name": "availableActions",
            "singularName": "availableAction",
            "type": "sap.ui.comp.navpopover.LinkData",
            "cardinality": "0..n",
            "visibility": "public",
            "since": "1.28.0",
            "description": "A list of available actions shown as links.",
            "methods": [
              "getAvailableActions",
              "destroyAvailableActions",
              "insertAvailableAction",
              "addAvailableAction",
              "removeAvailableAction",
              "indexOfAvailableAction",
              "removeAllAvailableActions"
            ]
          },
          {
            "name": "mainNavigation",
            "singularName": "mainNavigation",
            "type": "sap.ui.comp.navpopover.LinkData",
            "cardinality": "0..1",
            "visibility": "public",
            "since": "1.28.0",
            "description": "The main navigation link. If <code>mainNavigationId</code> is not set then <code>text</code> of <code>mainNavigation</code> is displayed. Otherwise the <code>mainNavigationId</code> is displayed.",
            "methods": [
              "getMainNavigation",
              "destroyMainNavigation",
              "setMainNavigation"
            ]
          },
          {
            "name": "ownNavigation",
            "singularName": "ownNavigation",
            "type": "sap.ui.comp.navpopover.LinkData",
            "cardinality": "0..1",
            "visibility": "public",
            "since": "1.28.0",
            "description": "The navigation taking the user back to the source application.",
            "deprecated": {
              "since": "1.40.0",
              "text": "The property <code>ownNavigation</code> is obsolete as target determination is no longer done by NavigationPopover. Instead the NavigationPopoverHandler is responsible for target determination."
            },
            "methods": [
              "getOwnNavigation",
              "destroyOwnNavigation",
              "setOwnNavigation"
            ]
          }
        ],
        "associations": [
          {
            "name": "source",
            "singularName": "source",
            "type": "sap.ui.core.Control",
            "cardinality": "0..1",
            "visibility": "public",
            "since": "1.28.0",
            "description": "Source control for which the popover is displayed.",
            "methods": ["getSource", "setSource"]
          },
          {
            "name": "extraContent",
            "singularName": "extraContent",
            "type": "sap.ui.core.Control",
            "cardinality": "0..1",
            "visibility": "public",
            "since": "1.28.0",
            "description": "In addition to main navigation link and available links some additional content can be displayed in the popover.",
            "methods": ["getExtraContent", "setExtraContent"]
          },
          {
            "name": "component",
            "singularName": "component",
            "type": "sap.ui.core.Element",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "The parent component.",
            "methods": ["getComponent", "setComponent"]
          }
        ],
        "events": [
          {
            "name": "targetsObtained",
            "visibility": "public",
            "since": "1.28.0",
            "description": "The navigation targets that are shown.",
            "deprecated": {
              "since": "1.40.0",
              "text": "The event <code>navigationTargetsObtained</code> is obsolete as target determination is no longer done by NavigationPopover. Instead the NavigationPopoverHandler is responsible for target determination. The event <code>navigationTargetsObtained</code> is fired from NavigationPopoverHandler after navigation targets are determined."
            },
            "methods": [
              "attachTargetsObtained",
              "detachTargetsObtained",
              "fireTargetsObtained"
            ]
          },
          {
            "name": "navigate",
            "visibility": "public",
            "since": "1.28.0",
            "description": "This event is fired when a link is chosen.",
            "parameters": {
              "text": {
                "name": "text",
                "type": "string",
                "description": "The UI text shown in the chosen link"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "The navigation target of the chosen link"
              }
            },
            "methods": ["attachNavigate", "detachNavigate", "fireNavigate"]
          },
          {
            "name": "availableActionsPersonalizationPress",
            "visibility": "public",
            "since": "1.44.0",
            "description": "This event is fired when personalization of <code>availableActions</code> is chosen.",
            "methods": [
              "attachAvailableActionsPersonalizationPress",
              "detachAvailableActionsPersonalizationPress",
              "fireAvailableActionsPersonalizationPress"
            ]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new navpopover/NavigationPopover.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "availableActionsPersonalizationPress",
          "visibility": "public",
          "since": "1.44.0",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "This event is fired when personalization of <code>availableActions</code> is chosen."
        },
        {
          "name": "navigate",
          "visibility": "public",
          "since": "1.28.0",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "text": {
                      "name": "text",
                      "type": "string",
                      "optional": false,
                      "description": "The UI text shown in the chosen link"
                    },
                    "href": {
                      "name": "href",
                      "type": "string",
                      "optional": false,
                      "description": "The navigation target of the chosen link"
                    }
                  }
                }
              }
            }
          ],
          "description": "This event is fired when a link is chosen."
        },
        {
          "name": "targetsObtained",
          "visibility": "public",
          "since": "1.28.0",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "The navigation targets that are shown.",
          "deprecated": {
            "since": "1.40.0",
            "text": "The event <code>navigationTargetsObtained</code> is obsolete as target determination is no longer done by NavigationPopover. Instead the NavigationPopoverHandler is responsible for target determination. The event <code>navigationTargetsObtained</code> is fired from NavigationPopoverHandler after navigation targets are determined."
          }
        }
      ],
      "methods": [
        {
          "name": "addAvailableAction",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.NavigationPopover",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oAvailableAction",
              "type": "sap.ui.comp.navpopover.LinkData",
              "optional": false,
              "description": "The availableAction to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some availableAction to the aggregation {@link #getAvailableActions availableActions}."
        },
        {
          "name": "attachAvailableActionsPersonalizationPress",
          "visibility": "public",
          "since": "1.44.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.NavigationPopover",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.navpopover.NavigationPopover</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:availableActionsPersonalizationPress availableActionsPersonalizationPress} event of this <code>sap.ui.comp.navpopover.NavigationPopover</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.navpopover.NavigationPopover</code> itself.\n\nThis event is fired when personalization of <code>availableActions</code> is chosen."
        },
        {
          "name": "attachNavigate",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.NavigationPopover",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.navpopover.NavigationPopover</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:navigate navigate} event of this <code>sap.ui.comp.navpopover.NavigationPopover</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.navpopover.NavigationPopover</code> itself.\n\nThis event is fired when a link is chosen."
        },
        {
          "name": "attachTargetsObtained",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.NavigationPopover",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.navpopover.NavigationPopover</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:targetsObtained targetsObtained} event of this <code>sap.ui.comp.navpopover.NavigationPopover</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.navpopover.NavigationPopover</code> itself.\n\nThe navigation targets that are shown.",
          "deprecated": {
            "since": "1.40.0",
            "text": "The event <code>navigationTargetsObtained</code> is obsolete as target determination is no longer done by NavigationPopover. Instead the NavigationPopoverHandler is responsible for target determination. The event <code>navigationTargetsObtained</code> is fired from NavigationPopoverHandler after navigation targets are determined."
          }
        },
        {
          "name": "destroyAvailableActions",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.NavigationPopover",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the availableActions in the aggregation {@link #getAvailableActions availableActions}."
        },
        {
          "name": "destroyMainNavigation",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.NavigationPopover",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the mainNavigation in the aggregation {@link #getMainNavigation mainNavigation}."
        },
        {
          "name": "destroyOwnNavigation",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.NavigationPopover",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the ownNavigation in the aggregation {@link #getOwnNavigation ownNavigation}.",
          "deprecated": {
            "since": "1.40.0",
            "text": "The property <code>ownNavigation</code> is obsolete as target determination is no longer done by NavigationPopover. Instead the NavigationPopoverHandler is responsible for target determination."
          }
        },
        {
          "name": "detachAvailableActionsPersonalizationPress",
          "visibility": "public",
          "since": "1.44.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.NavigationPopover",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:availableActionsPersonalizationPress availableActionsPersonalizationPress} event of this <code>sap.ui.comp.navpopover.NavigationPopover</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachNavigate",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.NavigationPopover",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:navigate navigate} event of this <code>sap.ui.comp.navpopover.NavigationPopover</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachTargetsObtained",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.NavigationPopover",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:targetsObtained targetsObtained} event of this <code>sap.ui.comp.navpopover.NavigationPopover</code>.\n\nThe passed function and listener object must match the ones used for event registration.",
          "deprecated": {
            "since": "1.40.0",
            "text": "The event <code>navigationTargetsObtained</code> is obsolete as target determination is no longer done by NavigationPopover. Instead the NavigationPopoverHandler is responsible for target determination. The event <code>navigationTargetsObtained</code> is fired from NavigationPopoverHandler after navigation targets are determined."
          }
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.comp.navpopover.NavigationPopover with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.m.ResponsivePopover.extend}."
        },
        {
          "name": "fireAvailableActionsPersonalizationPress",
          "visibility": "protected",
          "since": "1.44.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.NavigationPopover",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:availableActionsPersonalizationPress availableActionsPersonalizationPress} to attached listeners."
        },
        {
          "name": "fireNavigate",
          "visibility": "protected",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.NavigationPopover",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "text": {
                  "name": "text",
                  "type": "string",
                  "optional": true,
                  "description": "The UI text shown in the chosen link"
                },
                "href": {
                  "name": "href",
                  "type": "string",
                  "optional": true,
                  "description": "The navigation target of the chosen link"
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:navigate navigate} to attached listeners."
        },
        {
          "name": "fireTargetsObtained",
          "visibility": "protected",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.NavigationPopover",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:targetsObtained targetsObtained} to attached listeners.",
          "deprecated": {
            "since": "1.40.0",
            "text": "The event <code>navigationTargetsObtained</code> is obsolete as target determination is no longer done by NavigationPopover. Instead the NavigationPopoverHandler is responsible for target determination. The event <code>navigationTargetsObtained</code> is fired from NavigationPopoverHandler after navigation targets are determined."
          }
        },
        {
          "name": "getAppStateKey",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>appStateKey</code>"
          },
          "description": "Gets current value of property {@link #getAppStateKey appStateKey}.\n\nThe application state key passed to retrieve the navigation targets.",
          "deprecated": {
            "since": "1.40.0",
            "text": "The property <code>appStateKey</code> is obsolete as target determination is no longer done by NavigationPopover. Instead the NavigationPopoverHandler is responsible for target determination."
          }
        },
        {
          "name": "getAvailableActions",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": { "type": "sap.ui.comp.navpopover.LinkData[]" },
          "description": "Gets content of aggregation {@link #getAvailableActions availableActions}.\n\nA list of available actions shown as links."
        },
        {
          "name": "getAvailableActionsPersonalizationText",
          "visibility": "public",
          "since": "1.44.0",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>availableActionsPersonalizationText</code>"
          },
          "description": "Gets current value of property {@link #getAvailableActionsPersonalizationText availableActionsPersonalizationText}.\n\nDetermines the text of personalization link. If this property is set to some string, choosing the personalization link will trigger the <code>availableActionsPersonalizationPress</code> event. If this property is not set, the personalization link is not shown.\n\nDefault value is <code>undefined</code>."
        },
        {
          "name": "getComponent",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.ID" },
          "description": "ID of the element which is the current target of the association {@link #getComponent component}, or <code>null</code>."
        },
        {
          "name": "getDirectLink",
          "visibility": "public",
          "returnValue": {
            "type": "sap.m.Link|null",
            "description": "Link for direct navigation"
          },
          "description": "Returns link for direct navigation if the NavigationPopover has only <code>mainNavigation</code> or one <code>availableAction</code> and no <code>extraContent</code>."
        },
        {
          "name": "getExtraContent",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": { "type": "sap.ui.core.ID" },
          "description": "ID of the element which is the current target of the association {@link #getExtraContent extraContent}, or <code>null</code>."
        },
        {
          "name": "getMainNavigation",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": { "type": "sap.ui.comp.navpopover.LinkData" },
          "description": "Gets content of aggregation {@link #getMainNavigation mainNavigation}.\n\nThe main navigation link. If <code>mainNavigationId</code> is not set then <code>text</code> of <code>mainNavigation</code> is displayed. Otherwise the <code>mainNavigationId</code> is displayed."
        },
        {
          "name": "getMainNavigationId",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>mainNavigationId</code>"
          },
          "description": "Gets current value of property {@link #getMainNavigationId mainNavigationId}.\n\nSets the description of the main navigation link. If <code>mainNavigation</code> also contains an href description, then <code>mainNavigationId</code> is displayed. If <code>mainNavigationId</code> is set to an empty string <code>''</code>, neither description nor subtitle are displayed."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.comp.navpopover.NavigationPopover."
        },
        {
          "name": "getOwnNavigation",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": { "type": "sap.ui.comp.navpopover.LinkData" },
          "description": "Gets content of aggregation {@link #getOwnNavigation ownNavigation}.\n\nThe navigation taking the user back to the source application.",
          "deprecated": {
            "since": "1.40.0",
            "text": "The property <code>ownNavigation</code> is obsolete as target determination is no longer done by NavigationPopover. Instead the NavigationPopoverHandler is responsible for target determination."
          }
        },
        {
          "name": "getSemanticAttributes",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "object",
            "description": "Value of property <code>semanticAttributes</code>"
          },
          "description": "Gets current value of property {@link #getSemanticAttributes semanticAttributes}.\n\nDescribes the semantic attributes. The attribute has to be a map.",
          "deprecated": {
            "since": "1.40.0",
            "text": "The property <code>semanticAttributes</code> is obsolete as target determination is no longer done by NavigationPopover. Instead the NavigationPopoverHandler is responsible for target determination."
          }
        },
        {
          "name": "getSemanticObjectName",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>semanticObjectName</code>"
          },
          "description": "Gets current value of property {@link #getSemanticObjectName semanticObjectName}.\n\nThe name of the semantic object.",
          "deprecated": {
            "since": "1.40.0",
            "text": "The property <code>semanticObjectName</code> is obsolete as target determination is no longer done by NavigationPopover. Instead the NavigationPopoverHandler is responsible for target determination."
          }
        },
        {
          "name": "getSource",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": { "type": "sap.ui.core.ID" },
          "description": "ID of the element which is the current target of the association {@link #getSource source}, or <code>null</code>."
        },
        {
          "name": "indexOfAvailableAction",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oAvailableAction",
              "type": "sap.ui.comp.navpopover.LinkData",
              "optional": false,
              "description": "The availableAction whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.ui.comp.navpopover.LinkData</code> in the aggregation {@link #getAvailableActions availableActions}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "insertAvailableAction",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.NavigationPopover",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oAvailableAction",
              "type": "sap.ui.comp.navpopover.LinkData",
              "optional": false,
              "description": "The availableAction to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the availableAction should be inserted at; for a negative value of <code>iIndex</code>, the availableAction is inserted at position 0; for a value greater than the current size of the aggregation, the availableAction is inserted at the last position"
            }
          ],
          "description": "Inserts a availableAction into the aggregation {@link #getAvailableActions availableActions}."
        },
        {
          "name": "removeAllAvailableActions",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.LinkData[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getAvailableActions availableActions}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeAvailableAction",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.LinkData",
            "description": "The removed availableAction or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vAvailableAction",
              "type": "int|string|sap.ui.comp.navpopover.LinkData",
              "optional": false,
              "description": "The availableAction to remove or its index or id"
            }
          ],
          "description": "Removes a availableAction from the aggregation {@link #getAvailableActions availableActions}."
        },
        {
          "name": "retrieveNavTargets",
          "visibility": "public",
          "description": "Determines the potential navigation targets for the semantical object and visualize the popover.",
          "deprecated": {
            "since": "1.42.0",
            "text": "Target determination is no longer done by NavigationPopover. Instead the NavigationPopoverHandler is responsible for target determination."
          }
        },
        {
          "name": "setAppStateKey",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.NavigationPopover",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sAppStateKey",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>appStateKey</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getAppStateKey appStateKey}.\n\nThe application state key passed to retrieve the navigation targets.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.",
          "deprecated": {
            "since": "1.40.0",
            "text": "The property <code>appStateKey</code> is obsolete as target determination is no longer done by NavigationPopover. Instead the NavigationPopoverHandler is responsible for target determination."
          }
        },
        {
          "name": "setAvailableActionsPersonalizationText",
          "visibility": "public",
          "since": "1.44.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.NavigationPopover",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sAvailableActionsPersonalizationText",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>availableActionsPersonalizationText</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getAvailableActionsPersonalizationText availableActionsPersonalizationText}.\n\nDetermines the text of personalization link. If this property is set to some string, choosing the personalization link will trigger the <code>availableActionsPersonalizationPress</code> event. If this property is not set, the personalization link is not shown.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>undefined</code>."
        },
        {
          "name": "setComponent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.NavigationPopover",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oComponent",
              "type": "sap.ui.core.ID|sap.ui.core.Element",
              "optional": false,
              "description": "ID of an element which becomes the new target of this component association; alternatively, an element instance may be given"
            }
          ],
          "description": "Sets the associated {@link #getComponent component}."
        },
        {
          "name": "setExtraContent",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.NavigationPopover",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oExtraContent",
              "type": "sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "ID of an element which becomes the new target of this extraContent association; alternatively, an element instance may be given"
            }
          ],
          "description": "Sets the associated {@link #getExtraContent extraContent}."
        },
        {
          "name": "setMainNavigation",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.NavigationPopover",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oMainNavigation",
              "type": "sap.ui.comp.navpopover.LinkData",
              "optional": false,
              "description": "The mainNavigation to set"
            }
          ],
          "description": "Sets the aggregated {@link #getMainNavigation mainNavigation}."
        },
        {
          "name": "setMainNavigationId",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.NavigationPopover",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sMainNavigationId",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>mainNavigationId</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getMainNavigationId mainNavigationId}.\n\nSets the description of the main navigation link. If <code>mainNavigation</code> also contains an href description, then <code>mainNavigationId</code> is displayed. If <code>mainNavigationId</code> is set to an empty string <code>''</code>, neither description nor subtitle are displayed.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setOwnNavigation",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.NavigationPopover",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oOwnNavigation",
              "type": "sap.ui.comp.navpopover.LinkData",
              "optional": false,
              "description": "The ownNavigation to set"
            }
          ],
          "description": "Sets the aggregated {@link #getOwnNavigation ownNavigation}.",
          "deprecated": {
            "since": "1.40.0",
            "text": "The property <code>ownNavigation</code> is obsolete as target determination is no longer done by NavigationPopover. Instead the NavigationPopoverHandler is responsible for target determination."
          }
        },
        {
          "name": "setSemanticAttributes",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.NavigationPopover",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oSemanticAttributes",
              "type": "object",
              "optional": false,
              "description": "New value for property <code>semanticAttributes</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSemanticAttributes semanticAttributes}.\n\nDescribes the semantic attributes. The attribute has to be a map.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.",
          "deprecated": {
            "since": "1.40.0",
            "text": "The property <code>semanticAttributes</code> is obsolete as target determination is no longer done by NavigationPopover. Instead the NavigationPopoverHandler is responsible for target determination."
          }
        },
        {
          "name": "setSemanticObjectName",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.NavigationPopover",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sSemanticObjectName",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>semanticObjectName</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSemanticObjectName semanticObjectName}.\n\nThe name of the semantic object.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.",
          "deprecated": {
            "since": "1.40.0",
            "text": "The property <code>semanticObjectName</code> is obsolete as target determination is no longer done by NavigationPopover. Instead the NavigationPopoverHandler is responsible for target determination."
          }
        },
        {
          "name": "setSource",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.NavigationPopover",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oSource",
              "type": "sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "ID of an element which becomes the new target of this source association; alternatively, an element instance may be given"
            }
          ],
          "description": "Sets the associated {@link #getSource source}."
        },
        {
          "name": "show",
          "visibility": "public",
          "description": "Displays the popover. This method should be called, once all navigation targets are adapted by the application."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.comp.navpopover.NavigationPopoverHandler",
      "basename": "NavigationPopoverHandler",
      "resource": "sap/ui/comp/navpopover/NavigationPopoverHandler.js",
      "module": "sap/ui/comp/navpopover/NavigationPopoverHandler",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.base.ManagedObject",
      "description": "The NavigationPopoverHandler control determines navigation targets for a semantic object and shows them together with further information in a Popover.<br> <b>Note:</b> Navigation targets are determined using {@link sap.ushell.services.CrossApplicationNavigation CrossApplicationNavigation} of the unified shell service.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "object",
        "properties": [
          {
            "name": "semanticObject",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.36.0",
            "description": "Name of semantic object which is used to determine target navigations.",
            "methods": ["getSemanticObject", "setSemanticObject"]
          },
          {
            "name": "additionalSemanticObjects",
            "type": "string[]",
            "defaultValue": "[]",
            "group": "Misc",
            "visibility": "public",
            "since": "1.42.0",
            "description": "Names of additional semantic objects which are used to determine target navigations.",
            "methods": [
              "getAdditionalSemanticObjects",
              "setAdditionalSemanticObjects"
            ]
          },
          {
            "name": "semanticObjectController",
            "type": "any",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.36.0",
            "description": "The semantic object controller controls events for several NavigationPopoverHandler controls. If the controller is not set manually, it tries to find a SemanticObjectController in its parent hierarchy.",
            "methods": [
              "getSemanticObjectController",
              "setSemanticObjectController"
            ]
          },
          {
            "name": "fieldName",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.36.0",
            "description": "The metadata field name for this NavigationPopoverHandler control.",
            "methods": ["getFieldName", "setFieldName"]
          },
          {
            "name": "semanticObjectLabel",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.36.0",
            "description": "Shown title of semantic object.",
            "deprecated": {
              "since": "1.40.0",
              "text": "Title section with <code>semanticObjectLabel</code> has been removed due to new UI design"
            },
            "methods": ["getSemanticObjectLabel", "setSemanticObjectLabel"]
          },
          {
            "name": "mapFieldToSemanticObject",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "since": "1.36.0",
            "description": "If set to <code>false</code>, the NavigationPopoverHandler control will not replace its field name with the according <code>semanticObject</code> property during the calculation of the semantic attributes. This enables the usage of several NavigationPopoverHandler on the same semantic object. *",
            "methods": [
              "getMapFieldToSemanticObject",
              "setMapFieldToSemanticObject"
            ]
          },
          {
            "name": "contactAnnotationPath",
            "type": "string",
            "group": "Misc",
            "visibility": "public",
            "since": "1.40.0",
            "description": "Navigation property that points from the current to the related entity type where the com.sap.vocabularies.Communication.v1.Contact annotation is defined, for example, <code>'to_Supplier'</code>. An empty string means that the related entity type is the current one.",
            "methods": ["getContactAnnotationPath", "setContactAnnotationPath"]
          },
          {
            "name": "enableAvailableActionsPersonalization",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "since": "1.44.0",
            "description": "Determines whether the personalization link is shown inside the NavigationPopover control.",
            "methods": [
              "getEnableAvailableActionsPersonalization",
              "setEnableAvailableActionsPersonalization"
            ]
          }
        ],
        "associations": [
          {
            "name": "control",
            "singularName": "control",
            "type": "sap.ui.core.Control",
            "cardinality": "0..1",
            "visibility": "public",
            "since": "1.36.0",
            "description": "The parent control.",
            "methods": ["getControl", "setControl"]
          }
        ],
        "events": [
          {
            "name": "beforePopoverOpens",
            "visibility": "public",
            "since": "1.36.0",
            "description": "Event is fired before the navigation popover opens and before navigation target links are getting retrieved. Event can be used to change the parameters used to retrieve the navigation targets. In case of NavigationPopoverHandler, the <code>beforePopoverOpens</code> is fired after the link has been clicked.",
            "parameters": {
              "semanticObject": {
                "name": "semanticObject",
                "type": "string",
                "description": "The semantic object for which the navigation targets will be retrieved."
              },
              "semanticAttributes": {
                "name": "semanticAttributes",
                "type": "object",
                "description": "Map containing the semantic attributes calculated from the binding that will be used to retrieve the navigation targets.",
                "deprecated": {
                  "since": "1.42.0",
                  "text": "The parameter <code>semanticAttributes</code> is obsolete. Instead use the parameter <code>semanticAttributesOfSemanticObjects</code>."
                }
              },
              "semanticAttributesOfSemanticObjects": {
                "name": "semanticAttributesOfSemanticObjects",
                "type": "object",
                "since": "1.42.0",
                "description": "A map of semantic objects for which the navigation targets will be retrieved and it's semantic attributes calculated from the binding context. The semantic attributes will be used as parameters in order to retrieve the navigation targets."
              },
              "setSemanticAttributes": {
                "name": "setSemanticAttributes",
                "type": "function",
                "description": "This callback function enables you to define a changed semantic attributes map. Signatures: <code>setSemanticAttributes(oSemanticAttributesMap)</code> Parameter: <ul> <li>{object} oSemanticAttributesMap New map containing the semantic attributes</li> <li>{string} sSemanticObject Semantic Object for which the oSemanticAttributesMap belongs</li> </ul>"
              },
              "setAppStateKey": {
                "name": "setAppStateKey",
                "type": "function",
                "description": "This callback function sets an application state key that is used over the cross-application navigation. Signatures: <code>setAppStateKey(sAppStateKey)</code> Parameter: <ul> <li>{string} sAppStateKey</li> </ul>"
              },
              "originalId": {
                "name": "originalId",
                "type": "string",
                "description": "The ID of the NavigationPopoverHandler."
              },
              "open": {
                "name": "open",
                "type": "function",
                "description": "This callback function triggers the retrieval of navigation targets and leads to the opening of the navigation popover. Signatures: <code>open()</code> If the <code>beforePopoverOpens</code> has been registered, the <code>open</code> function has to be called manually in order to open the navigation popover."
              }
            },
            "methods": [
              "attachBeforePopoverOpens",
              "detachBeforePopoverOpens",
              "fireBeforePopoverOpens"
            ]
          },
          {
            "name": "navigationTargetsObtained",
            "visibility": "public",
            "since": "1.36.0",
            "description": "After the navigation targets are retrieved, <code>navigationTargetsObtained</code> is fired and provides the possibility to change the targets.",
            "parameters": {
              "mainNavigation": {
                "name": "mainNavigation",
                "type": "sap.ui.comp.navpopover.LinkData",
                "description": "The main navigation object."
              },
              "actions": {
                "name": "actions",
                "type": "sap.ui.comp.navpopover.LinkData[]",
                "description": "Array of available navigation target objects."
              },
              "ownNavigation": {
                "name": "ownNavigation",
                "type": "sap.ui.comp.navpopover.LinkData",
                "description": "The navigation object for the own application. This navigation option is by default not visible on the popover."
              },
              "popoverForms": {
                "name": "popoverForms",
                "type": "sap.ui.layout.form.SimpleForm[]",
                "description": "Array containing contact data."
              },
              "semanticObject": {
                "name": "semanticObject",
                "type": "string",
                "description": "The semantic object for which the navigation targets have been retrieved."
              },
              "semanticAttributes": {
                "name": "semanticAttributes",
                "type": "object",
                "description": "Map containing the semantic attributes."
              },
              "originalId": {
                "name": "originalId",
                "type": "string",
                "description": "The ID of the NavigationPopoverHandler."
              },
              "show": {
                "name": "show",
                "type": "function",
                "description": "This callback function shows the actual navigation popover. If the <code>navigationTargetsObtained</code> has been registered, the <code>show</code> function has to be called manually in order to open the navigation popover. Signatures: <code>show()</code> <ul> <li><code>show(oMainNavigation, aAvailableActions, oAdditionalContent)</code> Parameters: <ul> <li>{sap.ui.comp.navpopover.LinkData | null | undefined} oMainNavigation The main navigation object. With <code>null</code> the main navigation object will be removed. With <code>undefined</code> the old object will remain.</li> <li>{sap.ui.comp.navpopover.LinkData[] | [] | undefined} aAvailableActions Array containing the cross application navigation links. With empty array all available links will be removed. With <code>undefined</code> the old links will remain.</li> <li>{sap.ui.core.Control | null | undefined} oAdditionalContent Control that will be displayed in extra content section on the popover. With <code>null</code> the main extra content object will be removed. With <code>undefined</code> the old object still remains.</li> </ul> </li> <li><code>show(sMainNavigationId, oMainNavigation, aAvailableActions, oAdditionalContent)</code> Parameters: <ul> <li>{string | undefined} sMainNavigationId The visible description for the main navigation link. With <code>''</code>, both the description and subtitle will be removed. With <code>undefined</code>, the description is calculated using the binding context of a given source object (for example <code>SmartLink</code> control).</li> <li>{sap.ui.comp.navpopover.LinkData | null | undefined} oMainNavigation The main navigation object. With <code>null</code> the main navigation object will be removed. With <code>undefined</code> the old object will remain.</li> <li>{sap.ui.comp.navpopover.LinkData[] | [] | undefined} aAvailableActions Array containing the cross application navigation links. With empty array all available links will be removed. With <code>undefined</code> the old links will remain.</li> <li>{sap.ui.core.Control | null | undefined} oAdditionalContent Control that will be displayed in extra content section on the popover. With <code>null</code> the main extra content object will be removed. With <code>undefined</code> the old object still remains.</li> </ul> </li> </ul>"
              }
            },
            "methods": [
              "attachNavigationTargetsObtained",
              "detachNavigationTargetsObtained",
              "fireNavigationTargetsObtained"
            ]
          },
          {
            "name": "innerNavigate",
            "visibility": "public",
            "since": "1.36.0",
            "description": "This event is fired after a navigation link on the navigation popover has been clicked. This event is only fired, if the user left-clicks the link. Right-clicking the link and selecting 'Open in New Window' etc. in the context menu does not fire the event.",
            "parameters": {
              "text": {
                "name": "text",
                "type": "string",
                "description": "The UI text shown in the clicked link."
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "The navigation target of the clicked link."
              },
              "semanticObject": {
                "name": "semanticObject",
                "type": "string",
                "description": "The semantic object used to retrieve this target."
              },
              "semanticAttributes": {
                "name": "semanticAttributes",
                "type": "object",
                "description": "Map containing the semantic attributes used to retrieve this target."
              },
              "originalId": {
                "name": "originalId",
                "type": "string",
                "description": "The ID of the NavigationPopoverHandler."
              }
            },
            "methods": [
              "attachInnerNavigate",
              "detachInnerNavigate",
              "fireInnerNavigate"
            ]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new navpopover/NavigationPopoverHandler.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "beforePopoverOpens",
          "visibility": "public",
          "since": "1.36.0",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "semanticObject": {
                      "name": "semanticObject",
                      "type": "string",
                      "optional": false,
                      "description": "The semantic object for which the navigation targets will be retrieved."
                    },
                    "semanticAttributes": {
                      "name": "semanticAttributes",
                      "type": "object",
                      "optional": false,
                      "description": "Map containing the semantic attributes calculated from the binding that will be used to retrieve the navigation targets."
                    },
                    "semanticAttributesOfSemanticObjects": {
                      "name": "semanticAttributesOfSemanticObjects",
                      "type": "object",
                      "optional": false,
                      "description": "A map of semantic objects for which the navigation targets will be retrieved and it's semantic attributes calculated from the binding context. The semantic attributes will be used as parameters in order to retrieve the navigation targets."
                    },
                    "setSemanticAttributes": {
                      "name": "setSemanticAttributes",
                      "type": "function",
                      "optional": false,
                      "description": "This callback function enables you to define a changed semantic attributes map. Signatures: <code>setSemanticAttributes(oSemanticAttributesMap)</code> Parameter: <ul> <li>{object} oSemanticAttributesMap New map containing the semantic attributes</li> <li>{string} sSemanticObject Semantic Object for which the oSemanticAttributesMap belongs</li> </ul>"
                    },
                    "setAppStateKey": {
                      "name": "setAppStateKey",
                      "type": "function",
                      "optional": false,
                      "description": "This callback function sets an application state key that is used over the cross-application navigation. Signatures: <code>setAppStateKey(sAppStateKey)</code> Parameter: <ul> <li>{string} sAppStateKey</li> </ul>"
                    },
                    "originalId": {
                      "name": "originalId",
                      "type": "string",
                      "optional": false,
                      "description": "The ID of the NavigationPopoverHandler."
                    },
                    "open": {
                      "name": "open",
                      "type": "function",
                      "optional": false,
                      "description": "This callback function triggers the retrieval of navigation targets and leads to the opening of the navigation popover. Signatures: <code>open()</code> If the <code>beforePopoverOpens</code> has been registered, the <code>open</code> function has to be called manually in order to open the navigation popover."
                    }
                  }
                }
              }
            }
          ],
          "description": "Event is fired before the navigation popover opens and before navigation target links are getting retrieved. Event can be used to change the parameters used to retrieve the navigation targets. In case of NavigationPopoverHandler, the <code>beforePopoverOpens</code> is fired after the link has been clicked."
        },
        {
          "name": "innerNavigate",
          "visibility": "public",
          "since": "1.36.0",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "text": {
                      "name": "text",
                      "type": "string",
                      "optional": false,
                      "description": "The UI text shown in the clicked link."
                    },
                    "href": {
                      "name": "href",
                      "type": "string",
                      "optional": false,
                      "description": "The navigation target of the clicked link."
                    },
                    "semanticObject": {
                      "name": "semanticObject",
                      "type": "string",
                      "optional": false,
                      "description": "The semantic object used to retrieve this target."
                    },
                    "semanticAttributes": {
                      "name": "semanticAttributes",
                      "type": "object",
                      "optional": false,
                      "description": "Map containing the semantic attributes used to retrieve this target."
                    },
                    "originalId": {
                      "name": "originalId",
                      "type": "string",
                      "optional": false,
                      "description": "The ID of the NavigationPopoverHandler."
                    }
                  }
                }
              }
            }
          ],
          "description": "This event is fired after a navigation link on the navigation popover has been clicked. This event is only fired, if the user left-clicks the link. Right-clicking the link and selecting 'Open in New Window' etc. in the context menu does not fire the event."
        },
        {
          "name": "navigationTargetsObtained",
          "visibility": "public",
          "since": "1.36.0",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "mainNavigation": {
                      "name": "mainNavigation",
                      "type": "sap.ui.comp.navpopover.LinkData",
                      "optional": false,
                      "description": "The main navigation object."
                    },
                    "actions": {
                      "name": "actions",
                      "type": "sap.ui.comp.navpopover.LinkData[]",
                      "optional": false,
                      "description": "Array of available navigation target objects."
                    },
                    "ownNavigation": {
                      "name": "ownNavigation",
                      "type": "sap.ui.comp.navpopover.LinkData",
                      "optional": false,
                      "description": "The navigation object for the own application. This navigation option is by default not visible on the popover."
                    },
                    "popoverForms": {
                      "name": "popoverForms",
                      "type": "sap.ui.layout.form.SimpleForm[]",
                      "optional": false,
                      "description": "Array containing contact data."
                    },
                    "semanticObject": {
                      "name": "semanticObject",
                      "type": "string",
                      "optional": false,
                      "description": "The semantic object for which the navigation targets have been retrieved."
                    },
                    "semanticAttributes": {
                      "name": "semanticAttributes",
                      "type": "object",
                      "optional": false,
                      "description": "Map containing the semantic attributes."
                    },
                    "originalId": {
                      "name": "originalId",
                      "type": "string",
                      "optional": false,
                      "description": "The ID of the NavigationPopoverHandler."
                    },
                    "show": {
                      "name": "show",
                      "type": "function",
                      "optional": false,
                      "description": "This callback function shows the actual navigation popover. If the <code>navigationTargetsObtained</code> has been registered, the <code>show</code> function has to be called manually in order to open the navigation popover. Signatures: <code>show()</code> <ul> <li><code>show(oMainNavigation, aAvailableActions, oAdditionalContent)</code> Parameters: <ul> <li>{sap.ui.comp.navpopover.LinkData | null | undefined} oMainNavigation The main navigation object. With <code>null</code> the main navigation object will be removed. With <code>undefined</code> the old object will remain.</li> <li>{sap.ui.comp.navpopover.LinkData[] | [] | undefined} aAvailableActions Array containing the cross application navigation links. With empty array all available links will be removed. With <code>undefined</code> the old links will remain.</li> <li>{sap.ui.core.Control | null | undefined} oAdditionalContent Control that will be displayed in extra content section on the popover. With <code>null</code> the main extra content object will be removed. With <code>undefined</code> the old object still remains.</li> </ul> </li> <li><code>show(sMainNavigationId, oMainNavigation, aAvailableActions, oAdditionalContent)</code> Parameters: <ul> <li>{string | undefined} sMainNavigationId The visible description for the main navigation link. With <code>''</code>, both the description and subtitle will be removed. With <code>undefined</code>, the description is calculated using the binding context of a given source object (for example <code>SmartLink</code> control).</li> <li>{sap.ui.comp.navpopover.LinkData | null | undefined} oMainNavigation The main navigation object. With <code>null</code> the main navigation object will be removed. With <code>undefined</code> the old object will remain.</li> <li>{sap.ui.comp.navpopover.LinkData[] | [] | undefined} aAvailableActions Array containing the cross application navigation links. With empty array all available links will be removed. With <code>undefined</code> the old links will remain.</li> <li>{sap.ui.core.Control | null | undefined} oAdditionalContent Control that will be displayed in extra content section on the popover. With <code>null</code> the main extra content object will be removed. With <code>undefined</code> the old object still remains.</li> </ul> </li> </ul>"
                    }
                  }
                }
              }
            }
          ],
          "description": "After the navigation targets are retrieved, <code>navigationTargetsObtained</code> is fired and provides the possibility to change the targets."
        }
      ],
      "methods": [
        {
          "name": "attachBeforePopoverOpens",
          "visibility": "public",
          "since": "1.36.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.NavigationPopoverHandler",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.navpopover.NavigationPopoverHandler</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:beforePopoverOpens beforePopoverOpens} event of this <code>sap.ui.comp.navpopover.NavigationPopoverHandler</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.navpopover.NavigationPopoverHandler</code> itself.\n\nEvent is fired before the navigation popover opens and before navigation target links are getting retrieved. Event can be used to change the parameters used to retrieve the navigation targets. In case of NavigationPopoverHandler, the <code>beforePopoverOpens</code> is fired after the link has been clicked."
        },
        {
          "name": "attachInnerNavigate",
          "visibility": "public",
          "since": "1.36.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.NavigationPopoverHandler",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.navpopover.NavigationPopoverHandler</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:innerNavigate innerNavigate} event of this <code>sap.ui.comp.navpopover.NavigationPopoverHandler</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.navpopover.NavigationPopoverHandler</code> itself.\n\nThis event is fired after a navigation link on the navigation popover has been clicked. This event is only fired, if the user left-clicks the link. Right-clicking the link and selecting 'Open in New Window' etc. in the context menu does not fire the event."
        },
        {
          "name": "attachNavigationTargetsObtained",
          "visibility": "public",
          "since": "1.36.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.NavigationPopoverHandler",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.navpopover.NavigationPopoverHandler</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:navigationTargetsObtained navigationTargetsObtained} event of this <code>sap.ui.comp.navpopover.NavigationPopoverHandler</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.navpopover.NavigationPopoverHandler</code> itself.\n\nAfter the navigation targets are retrieved, <code>navigationTargetsObtained</code> is fired and provides the possibility to change the targets."
        },
        {
          "name": "detachBeforePopoverOpens",
          "visibility": "public",
          "since": "1.36.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.NavigationPopoverHandler",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:beforePopoverOpens beforePopoverOpens} event of this <code>sap.ui.comp.navpopover.NavigationPopoverHandler</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachInnerNavigate",
          "visibility": "public",
          "since": "1.36.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.NavigationPopoverHandler",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:innerNavigate innerNavigate} event of this <code>sap.ui.comp.navpopover.NavigationPopoverHandler</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachNavigationTargetsObtained",
          "visibility": "public",
          "since": "1.36.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.NavigationPopoverHandler",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:navigationTargetsObtained navigationTargetsObtained} event of this <code>sap.ui.comp.navpopover.NavigationPopoverHandler</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.comp.navpopover.NavigationPopoverHandler with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.ManagedObject.extend}."
        },
        {
          "name": "fireBeforePopoverOpens",
          "visibility": "protected",
          "since": "1.36.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.NavigationPopoverHandler",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "semanticObject": {
                  "name": "semanticObject",
                  "type": "string",
                  "optional": true,
                  "description": "The semantic object for which the navigation targets will be retrieved."
                },
                "semanticAttributes": {
                  "name": "semanticAttributes",
                  "type": "object",
                  "optional": true,
                  "description": "Map containing the semantic attributes calculated from the binding that will be used to retrieve the navigation targets."
                },
                "semanticAttributesOfSemanticObjects": {
                  "name": "semanticAttributesOfSemanticObjects",
                  "type": "object",
                  "optional": true,
                  "description": "A map of semantic objects for which the navigation targets will be retrieved and it's semantic attributes calculated from the binding context. The semantic attributes will be used as parameters in order to retrieve the navigation targets."
                },
                "setSemanticAttributes": {
                  "name": "setSemanticAttributes",
                  "type": "function",
                  "optional": true,
                  "description": "This callback function enables you to define a changed semantic attributes map. Signatures: <code>setSemanticAttributes(oSemanticAttributesMap)</code> Parameter: <ul> <li>{object} oSemanticAttributesMap New map containing the semantic attributes</li> <li>{string} sSemanticObject Semantic Object for which the oSemanticAttributesMap belongs</li> </ul>"
                },
                "setAppStateKey": {
                  "name": "setAppStateKey",
                  "type": "function",
                  "optional": true,
                  "description": "This callback function sets an application state key that is used over the cross-application navigation. Signatures: <code>setAppStateKey(sAppStateKey)</code> Parameter: <ul> <li>{string} sAppStateKey</li> </ul>"
                },
                "originalId": {
                  "name": "originalId",
                  "type": "string",
                  "optional": true,
                  "description": "The ID of the NavigationPopoverHandler."
                },
                "open": {
                  "name": "open",
                  "type": "function",
                  "optional": true,
                  "description": "This callback function triggers the retrieval of navigation targets and leads to the opening of the navigation popover. Signatures: <code>open()</code> If the <code>beforePopoverOpens</code> has been registered, the <code>open</code> function has to be called manually in order to open the navigation popover."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:beforePopoverOpens beforePopoverOpens} to attached listeners."
        },
        {
          "name": "fireInnerNavigate",
          "visibility": "protected",
          "since": "1.36.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.NavigationPopoverHandler",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "text": {
                  "name": "text",
                  "type": "string",
                  "optional": true,
                  "description": "The UI text shown in the clicked link."
                },
                "href": {
                  "name": "href",
                  "type": "string",
                  "optional": true,
                  "description": "The navigation target of the clicked link."
                },
                "semanticObject": {
                  "name": "semanticObject",
                  "type": "string",
                  "optional": true,
                  "description": "The semantic object used to retrieve this target."
                },
                "semanticAttributes": {
                  "name": "semanticAttributes",
                  "type": "object",
                  "optional": true,
                  "description": "Map containing the semantic attributes used to retrieve this target."
                },
                "originalId": {
                  "name": "originalId",
                  "type": "string",
                  "optional": true,
                  "description": "The ID of the NavigationPopoverHandler."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:innerNavigate innerNavigate} to attached listeners."
        },
        {
          "name": "fireNavigationTargetsObtained",
          "visibility": "protected",
          "since": "1.36.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.NavigationPopoverHandler",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "mainNavigation": {
                  "name": "mainNavigation",
                  "type": "sap.ui.comp.navpopover.LinkData",
                  "optional": true,
                  "description": "The main navigation object."
                },
                "actions": {
                  "name": "actions",
                  "type": "sap.ui.comp.navpopover.LinkData[]",
                  "optional": true,
                  "description": "Array of available navigation target objects."
                },
                "ownNavigation": {
                  "name": "ownNavigation",
                  "type": "sap.ui.comp.navpopover.LinkData",
                  "optional": true,
                  "description": "The navigation object for the own application. This navigation option is by default not visible on the popover."
                },
                "popoverForms": {
                  "name": "popoverForms",
                  "type": "sap.ui.layout.form.SimpleForm[]",
                  "optional": true,
                  "description": "Array containing contact data."
                },
                "semanticObject": {
                  "name": "semanticObject",
                  "type": "string",
                  "optional": true,
                  "description": "The semantic object for which the navigation targets have been retrieved."
                },
                "semanticAttributes": {
                  "name": "semanticAttributes",
                  "type": "object",
                  "optional": true,
                  "description": "Map containing the semantic attributes."
                },
                "originalId": {
                  "name": "originalId",
                  "type": "string",
                  "optional": true,
                  "description": "The ID of the NavigationPopoverHandler."
                },
                "show": {
                  "name": "show",
                  "type": "function",
                  "optional": true,
                  "description": "This callback function shows the actual navigation popover. If the <code>navigationTargetsObtained</code> has been registered, the <code>show</code> function has to be called manually in order to open the navigation popover. Signatures: <code>show()</code> <ul> <li><code>show(oMainNavigation, aAvailableActions, oAdditionalContent)</code> Parameters: <ul> <li>{sap.ui.comp.navpopover.LinkData | null | undefined} oMainNavigation The main navigation object. With <code>null</code> the main navigation object will be removed. With <code>undefined</code> the old object will remain.</li> <li>{sap.ui.comp.navpopover.LinkData[] | [] | undefined} aAvailableActions Array containing the cross application navigation links. With empty array all available links will be removed. With <code>undefined</code> the old links will remain.</li> <li>{sap.ui.core.Control | null | undefined} oAdditionalContent Control that will be displayed in extra content section on the popover. With <code>null</code> the main extra content object will be removed. With <code>undefined</code> the old object still remains.</li> </ul> </li> <li><code>show(sMainNavigationId, oMainNavigation, aAvailableActions, oAdditionalContent)</code> Parameters: <ul> <li>{string | undefined} sMainNavigationId The visible description for the main navigation link. With <code>''</code>, both the description and subtitle will be removed. With <code>undefined</code>, the description is calculated using the binding context of a given source object (for example <code>SmartLink</code> control).</li> <li>{sap.ui.comp.navpopover.LinkData | null | undefined} oMainNavigation The main navigation object. With <code>null</code> the main navigation object will be removed. With <code>undefined</code> the old object will remain.</li> <li>{sap.ui.comp.navpopover.LinkData[] | [] | undefined} aAvailableActions Array containing the cross application navigation links. With empty array all available links will be removed. With <code>undefined</code> the old links will remain.</li> <li>{sap.ui.core.Control | null | undefined} oAdditionalContent Control that will be displayed in extra content section on the popover. With <code>null</code> the main extra content object will be removed. With <code>undefined</code> the old object still remains.</li> </ul> </li> </ul>"
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:navigationTargetsObtained navigationTargetsObtained} to attached listeners."
        },
        {
          "name": "getAdditionalSemanticObjects",
          "visibility": "public",
          "since": "1.42.0",
          "returnValue": {
            "type": "string[]",
            "description": "Value of property <code>additionalSemanticObjects</code>"
          },
          "description": "Gets current value of property {@link #getAdditionalSemanticObjects additionalSemanticObjects}.\n\nNames of additional semantic objects which are used to determine target navigations.\n\nDefault value is <code>[]</code>."
        },
        {
          "name": "getContactAnnotationPath",
          "visibility": "public",
          "since": "1.40.0",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>contactAnnotationPath</code>"
          },
          "description": "Gets current value of property {@link #getContactAnnotationPath contactAnnotationPath}.\n\nNavigation property that points from the current to the related entity type where the com.sap.vocabularies.Communication.v1.Contact annotation is defined, for example, <code>'to_Supplier'</code>. An empty string means that the related entity type is the current one.\n\nDefault value is <code>undefined</code>."
        },
        {
          "name": "getControl",
          "visibility": "public",
          "since": "1.36.0",
          "returnValue": { "type": "sap.ui.core.ID" },
          "description": "ID of the element which is the current target of the association {@link #getControl control}, or <code>null</code>."
        },
        {
          "name": "getEnableAvailableActionsPersonalization",
          "visibility": "public",
          "since": "1.44.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>enableAvailableActionsPersonalization</code>"
          },
          "description": "Gets current value of property {@link #getEnableAvailableActionsPersonalization enableAvailableActionsPersonalization}.\n\nDetermines whether the personalization link is shown inside the NavigationPopover control.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getFieldName",
          "visibility": "public",
          "since": "1.36.0",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>fieldName</code>"
          },
          "description": "Gets current value of property {@link #getFieldName fieldName}.\n\nThe metadata field name for this NavigationPopoverHandler control."
        },
        {
          "name": "getMapFieldToSemanticObject",
          "visibility": "public",
          "since": "1.36.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>mapFieldToSemanticObject</code>"
          },
          "description": "Gets current value of property {@link #getMapFieldToSemanticObject mapFieldToSemanticObject}.\n\nIf set to <code>false</code>, the NavigationPopoverHandler control will not replace its field name with the according <code>semanticObject</code> property during the calculation of the semantic attributes. This enables the usage of several NavigationPopoverHandler on the same semantic object. *\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.comp.navpopover.NavigationPopoverHandler."
        },
        {
          "name": "getSemanticObject",
          "visibility": "public",
          "since": "1.36.0",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>semanticObject</code>"
          },
          "description": "Gets current value of property {@link #getSemanticObject semanticObject}.\n\nName of semantic object which is used to determine target navigations."
        },
        {
          "name": "getSemanticObjectController",
          "visibility": "public",
          "since": "1.36.0",
          "returnValue": {
            "type": "any",
            "description": "Value of property <code>semanticObjectController</code>"
          },
          "description": "Gets current value of property {@link #getSemanticObjectController semanticObjectController}.\n\nThe semantic object controller controls events for several NavigationPopoverHandler controls. If the controller is not set manually, it tries to find a SemanticObjectController in its parent hierarchy."
        },
        {
          "name": "getSemanticObjectLabel",
          "visibility": "public",
          "since": "1.36.0",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>semanticObjectLabel</code>"
          },
          "description": "Gets current value of property {@link #getSemanticObjectLabel semanticObjectLabel}.\n\nShown title of semantic object.",
          "deprecated": {
            "since": "1.40.0",
            "text": "Title section with <code>semanticObjectLabel</code> has been removed due to new UI design"
          }
        },
        {
          "name": "getSemanticObjectValue",
          "visibility": "public",
          "returnValue": {
            "type": "object",
            "description": "The semantic object's value."
          },
          "description": "Gets the current value assigned to the field with the NavigationPopoverHandler's semantic object name."
        },
        {
          "name": "openPopover",
          "visibility": "public",
          "returnValue": {
            "type": "Promise",
            "description": "A <code>Promise</code> for asynchronous execution"
          },
          "parameters": [
            {
              "name": "oDomRef",
              "type": "object",
              "optional": false,
              "description": "Optional DOM reference to which the popover is attached. By default the <code>control</code> association is used as DOM reference."
            }
          ],
          "description": "Opens the <code>sap.m.Popover</code> with navigation targets in an asynchronous manner."
        },
        {
          "name": "setAdditionalSemanticObjects",
          "visibility": "public",
          "since": "1.42.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.NavigationPopoverHandler",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sAdditionalSemanticObjects",
              "type": "string[]",
              "optional": false,
              "description": "New value for property <code>additionalSemanticObjects</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getAdditionalSemanticObjects additionalSemanticObjects}.\n\nNames of additional semantic objects which are used to determine target navigations.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>[]</code>."
        },
        {
          "name": "setContactAnnotationPath",
          "visibility": "public",
          "since": "1.40.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.NavigationPopoverHandler",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sContactAnnotationPath",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>contactAnnotationPath</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getContactAnnotationPath contactAnnotationPath}.\n\nNavigation property that points from the current to the related entity type where the com.sap.vocabularies.Communication.v1.Contact annotation is defined, for example, <code>'to_Supplier'</code>. An empty string means that the related entity type is the current one.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>undefined</code>."
        },
        {
          "name": "setControl",
          "visibility": "public",
          "since": "1.36.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.NavigationPopoverHandler",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oControl",
              "type": "sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "ID of an element which becomes the new target of this control association; alternatively, an element instance may be given"
            }
          ],
          "description": "Sets the associated {@link #getControl control}."
        },
        {
          "name": "setEnableAvailableActionsPersonalization",
          "visibility": "public",
          "since": "1.44.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.NavigationPopoverHandler",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bEnableAvailableActionsPersonalization",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>enableAvailableActionsPersonalization</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getEnableAvailableActionsPersonalization enableAvailableActionsPersonalization}.\n\nDetermines whether the personalization link is shown inside the NavigationPopover control.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setFieldName",
          "visibility": "public",
          "since": "1.36.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.NavigationPopoverHandler",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sFieldName",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>fieldName</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getFieldName fieldName}.\n\nThe metadata field name for this NavigationPopoverHandler control.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setMapFieldToSemanticObject",
          "visibility": "public",
          "since": "1.36.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.NavigationPopoverHandler",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bMapFieldToSemanticObject",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>mapFieldToSemanticObject</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getMapFieldToSemanticObject mapFieldToSemanticObject}.\n\nIf set to <code>false</code>, the NavigationPopoverHandler control will not replace its field name with the according <code>semanticObject</code> property during the calculation of the semantic attributes. This enables the usage of several NavigationPopoverHandler on the same semantic object. *\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setSemanticObject",
          "visibility": "public",
          "since": "1.36.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.NavigationPopoverHandler",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sSemanticObject",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>semanticObject</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSemanticObject semanticObject}.\n\nName of semantic object which is used to determine target navigations.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setSemanticObjectController",
          "visibility": "public",
          "since": "1.36.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.NavigationPopoverHandler",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oSemanticObjectController",
              "type": "any",
              "optional": false,
              "description": "New value for property <code>semanticObjectController</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSemanticObjectController semanticObjectController}.\n\nThe semantic object controller controls events for several NavigationPopoverHandler controls. If the controller is not set manually, it tries to find a SemanticObjectController in its parent hierarchy.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setSemanticObjectLabel",
          "visibility": "public",
          "since": "1.36.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.NavigationPopoverHandler",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sSemanticObjectLabel",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>semanticObjectLabel</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSemanticObjectLabel semanticObjectLabel}.\n\nShown title of semantic object.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.",
          "deprecated": {
            "since": "1.40.0",
            "text": "Title section with <code>semanticObjectLabel</code> has been removed due to new UI design"
          }
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.comp.navpopover.SemanticObjectController",
      "basename": "SemanticObjectController",
      "resource": "sap/ui/comp/navpopover/SemanticObjectController.js",
      "module": "sap/ui/comp/navpopover/SemanticObjectController",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.core.Element",
      "description": "The <code>SemanticObjectController</code> control operates as a single entry point for <code>SmartLink</code> controls created automatically by {@link sap.ui.comp.smarttable.SmartTable SmartTable} control, {@link sap.ui.comp.smartchart.SmartChart SmartChart} control, {@link sap.ui.comp.smartform.SmartForm SmartForm} control and {@link sap.ui.comp.smartfield.SmartField SmartField} control based on OData metadata. Additionally, all events provided by the <code>SmartLink</code> control are registered by the SemanticObjectController and can be consumed there in a single place. As usual, the SemanticObjectController can be defined within the XML view as well as in the code.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "element",
        "properties": [
          {
            "name": "ignoredFields",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.28.0",
            "description": "Comma-separated list of fields that must not be displayed as links.",
            "methods": ["getIgnoredFields", "setIgnoredFields"]
          },
          {
            "name": "prefetchNavigationTargets",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "since": "1.28.0",
            "description": "If set to <code>true</code>, the SemanticObjectController will retrieve all navigation targets once and will disable links for which no targets were found. Setting this value to <code>true</code> will trigger an additional roundtrip.",
            "deprecated": {
              "since": "1.42.0",
              "text": "The property <code>prefetchNavigationTargets</code> is obsolete as navigation targets are determined automatically. The SmartLink controls are re-rendered as soon as the asynchronous determination of navigation targets has been completed."
            },
            "methods": [
              "getPrefetchNavigationTargets",
              "setPrefetchNavigationTargets"
            ]
          },
          {
            "name": "fieldSemanticObjectMap",
            "type": "object",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.28.0",
            "description": "Maps the fields to the related semantic objects. When accessing this property for the first time, the mapping will be calculated from the metadata within the provided model.",
            "methods": [
              "getFieldSemanticObjectMap",
              "setFieldSemanticObjectMap"
            ]
          },
          {
            "name": "entitySet",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.28.0",
            "description": "The name of the entity set used. If <code>entitySet</code> has not been defined, the SemanticObjectController tries to retrieve the name from its parents. <b>Note:</b> This is not a dynamic UI5 property.",
            "methods": ["getEntitySet", "setEntitySet"]
          },
          {
            "name": "contactAnnotationPaths",
            "type": "object",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.40.0",
            "description": "Navigation property that points from the current to the related entity type where the <code>com.sap.vocabularies.Communication.v1.Contact</code> annotation is defined, for example, <code> '\\{\"Supplier\":\"to_Supplier\", \"CompanyName\":\"to_Company\"\\}' </code>. An empty string means that the related entity type is the current one.",
            "methods": [
              "getContactAnnotationPaths",
              "setContactAnnotationPaths"
            ]
          },
          {
            "name": "enableAvailableActionsPersonalization",
            "type": "object",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.44.0",
            "description": "Determines whether the personalization link is shown inside the NavigationPopover control. For example, <code> '\\{\"Supplier\":false, \"CompanyName\":true\\}' </code>.",
            "methods": [
              "getEnableAvailableActionsPersonalization",
              "setEnableAvailableActionsPersonalization"
            ]
          },
          {
            "name": "mapFieldToSemanticObject",
            "type": "boolean",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.48.0",
            "description": "If set to <code>false</code>, the SmartLink control will not replace its field name with the according <code>semanticObject</code> property during the calculation of the semantic attributes.",
            "methods": [
              "getMapFieldToSemanticObject",
              "setMapFieldToSemanticObject"
            ]
          },
          {
            "name": "forceLinkRendering",
            "type": "object",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.58.0",
            "description": "Object containing fields for which the corresponding <code>SmartLink</code> control is rendered as a link even if <code>contactAnnotationPaths</code> is not set and navigation targets do not exist. Setting this property to <code>true</code> allows the application, for example, to modify the <code>SmartLink</code> control in the event handler, after the user has clicked on a link and the registered event handler has been called.\\n\n\n<b>Note:</b> The <code>ignoredFields</code> property and the <code>ignoreLinkRendering</code> property of the <code>SmartLink</code> control take precedence over <code>forceLinkRendering</code>.\\n\n\nExample of usage: <code> '\\{\"Supplier\":\"true\", \"CompanyName\":\"true\"\\}' </code>",
            "methods": ["getForceLinkRendering", "setForceLinkRendering"]
          }
        ],
        "events": [
          {
            "name": "navigationTargetsObtained",
            "visibility": "public",
            "since": "1.28.0",
            "description": "After the navigation targets have been retrieved, <code>navigationTargetsObtained</code> is fired and makes it possible you to change the targets.",
            "parameters": {
              "mainNavigation": {
                "name": "mainNavigation",
                "type": "sap.ui.comp.navpopover.LinkData",
                "description": "The main navigation object."
              },
              "actions": {
                "name": "actions",
                "type": "sap.ui.comp.navpopover.LinkData[]",
                "description": "Array of available navigation target objects."
              },
              "ownNavigation": {
                "name": "ownNavigation",
                "type": "sap.ui.comp.navpopover.LinkData",
                "description": "The navigation object for the own application. This navigation option is by default not visible on the popover."
              },
              "popoverForms": {
                "name": "popoverForms",
                "type": "sap.ui.layout.form.SimpleForm[]",
                "description": "Array containing contact data."
              },
              "semanticObject": {
                "name": "semanticObject",
                "type": "string",
                "description": "The semantic object for which the navigation targets have been retrieved."
              },
              "semanticAttributes": {
                "name": "semanticAttributes",
                "type": "object",
                "description": "Map containing the semantic attributes."
              },
              "originalId": {
                "name": "originalId",
                "type": "string",
                "description": "The ID of the control that fires this event. If <code>navigationTargetsObtained</code> is registered on the SmartLink, <code>originalId</code> is the same as the event's source ID which is also the SmartLink's ID. If <code>navigationTargetsObtained</code> is registered on the SemanticObjectController, <code>originalId</code> helps to identify the original SmartLink control which triggered the event."
              },
              "show": {
                "name": "show",
                "type": "function",
                "description": "This callback function shows the actual navigation popover. If the <code>navigationTargetsObtained</code> has been registered, the <code>show</code> function has to be called manually in order to open the navigation popover. Signatures: <code>show()</code> <ul> <li><code>show(oMainNavigation, aAvailableActions, oAdditionalContent)</code> Parameters: <ul> <li>{sap.ui.comp.navpopover.LinkData | null | undefined} oMainNavigation The main navigation object. With <code>null</code> the main navigation object will be removed. With <code>undefined</code> the old object will remain.</li> <li>{sap.ui.comp.navpopover.LinkData[] | [] | undefined} aAvailableActions Array containing the cross-application navigation links. With empty array all available links will be removed. With <code>undefined</code> the old links will remain.</li> <li>{sap.ui.core.Control | null | undefined} oAdditionalContent Control that will be displayed in extra content section on the popover. With <code>null</code> the main extra content object will be removed. With <code>undefined</code> the old object still remains.</li> </ul> </li> <li><code>show(sMainNavigationId, oMainNavigation, aAvailableActions, oAdditionalContent)</code> Parameters: <ul> <li>{string | undefined} sMainNavigationId The visible description for the main navigation link. With <code>''</code>, both the description and subtitle will be removed. With <code>undefined</code>, the description is calculated using the binding context of a given source object (for example <code>SmartLink</code> control).</li> <li>{sap.ui.comp.navpopover.LinkData | null | undefined} oMainNavigation The main navigation object. With <code>null</code> the main navigation object will be removed. With <code>undefined</code> the old object will remain.</li> <li>{sap.ui.comp.navpopover.LinkData[] | [] | undefined} aAvailableActions Array containing the cross-application navigation links. With empty array all available links will be removed. With <code>undefined</code> the old links will remain.</li> <li>{sap.ui.core.Control | null | undefined} oAdditionalContent Control that will be displayed in extra content section on the popover. With <code>null</code> the main extra content object will be removed. With <code>undefined</code> the old object still remains.</li> </ul> </li> </ul>"
              }
            },
            "methods": [
              "attachNavigationTargetsObtained",
              "detachNavigationTargetsObtained",
              "fireNavigationTargetsObtained"
            ]
          },
          {
            "name": "beforePopoverOpens",
            "visibility": "public",
            "since": "1.28.0",
            "description": "Event is fired before the navigation popover opens and before navigation target links are retrieved. Event can be used to change the parameters used to retrieve the navigation targets. In case of SmartLink, <code>beforePopoverOpens</code> is fired after the link has been clicked.",
            "parameters": {
              "semanticObject": {
                "name": "semanticObject",
                "type": "string",
                "description": "The semantic object for which the navigation targets will be retrieved."
              },
              "semanticAttributes": {
                "name": "semanticAttributes",
                "type": "object",
                "description": "Map containing the semantic attributes calculated from the binding that will be used to retrieve the navigation targets.",
                "deprecated": {
                  "since": "1.42.0",
                  "text": "The parameter <code>semanticAttributes</code> is obsolete. Instead use the parameter <code>semanticAttributesOfSemanticObjects</code>."
                }
              },
              "semanticAttributesOfSemanticObjects": {
                "name": "semanticAttributesOfSemanticObjects",
                "type": "object",
                "since": "1.42.0",
                "description": "A map of semantic objects for which the navigation targets will be retrieved and it's semantic attributes calculated from the binding context. The semantic attributes will be used as parameters in order to retrieve the navigation targets."
              },
              "setSemanticAttributes": {
                "name": "setSemanticAttributes",
                "type": "function",
                "description": "This callback function enables you to define a changed semantic attributes map. Signatures: <code>setSemanticAttributes(oSemanticAttributesMap)</code> Parameter: <ul> <li>{object} oSemanticAttributesMap New map containing the semantic attributes</li> <li>{string} sSemanticObject Semantic Object for which the oSemanticAttributesMap belongs</li> </ul>"
              },
              "setAppStateKey": {
                "name": "setAppStateKey",
                "type": "function",
                "description": "This callback function sets an application state key that is used over the cross-application navigation. Signatures: <code>setAppStateKey(sAppStateKey)</code> Parameter: <ul> <li>{string} sAppStateKey</li> </ul>"
              },
              "originalId": {
                "name": "originalId",
                "type": "string",
                "description": "The ID of the control that fires this event. If <code>beforePopoverOpens</code> is registered on the SmartLink, <code>originalId</code> is the same as the event's source ID which is also the SmartLink's ID. If the <code>beforePopoverOpens</code> is registered on the SemanticObjectController, <code>originalId</code> helps to identify the original SmartLink control which triggered the event."
              },
              "open": {
                "name": "open",
                "type": "function",
                "description": "This callback function triggers the retrieval of navigation targets and leads to the opening of the navigation popover. Signatures: <code>open()</code> If <code>beforePopoverOpens</code> has been registered, <code>open</code> function has to be called manually in order to open the navigation popover."
              }
            },
            "methods": [
              "attachBeforePopoverOpens",
              "detachBeforePopoverOpens",
              "fireBeforePopoverOpens"
            ]
          },
          {
            "name": "navigate",
            "visibility": "public",
            "since": "1.28.0",
            "description": "This event is fired after a navigation link on the navigation popover has been clicked. This event is only fired, if the user left-clicks the link. Right-clicking the link and selecting 'Open in New Window' etc. in the context menu does not fire the event.",
            "parameters": {
              "text": {
                "name": "text",
                "type": "string",
                "description": "The UI text shown in the clicked link."
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "The navigation target of the clicked link."
              },
              "semanticObject": {
                "name": "semanticObject",
                "type": "string",
                "description": "The semantic object used to retrieve this target."
              },
              "semanticAttributes": {
                "name": "semanticAttributes",
                "type": "object",
                "description": "Map containing the semantic attributes used to retrieve this target."
              },
              "originalId": {
                "name": "originalId",
                "type": "string",
                "description": "The ID of the control that fires this event. If <code>navigate</code> is registered on the SmartLink, <code>originalId</code> is the same as the event's source ID which is the SmartLink's ID. If <code>navigate</code> is registered on the SemanticObjectController, <code>originalId</code> helps to identify the original SmartLink control which triggered the event."
              }
            },
            "methods": ["attachNavigate", "detachNavigate", "fireNavigate"]
          },
          {
            "name": "prefetchDone",
            "visibility": "public",
            "since": "1.28.0",
            "description": "If the property <code>prefetchNavigationTargets</code> is set to <code>true</code>, event <code>prefetchDone</code> is fired after all navigation targets have been retrieved.",
            "deprecated": {
              "since": "1.42.0",
              "text": "The event <code>prefetchDone</code> is obsolete because it depends on the property <code>prefetchNavigationTargets</code> which has been deprecated."
            },
            "parameters": {
              "semanticObjects": {
                "name": "semanticObjects",
                "type": "object",
                "description": "A map containing all semantic objects as keys for which at least one navigation target has been found. The value for each semantic object key is an array containing the available actions found for this semantic object."
              }
            },
            "methods": [
              "attachPrefetchDone",
              "detachPrefetchDone",
              "firePrefetchDone"
            ]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sID",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Accepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "beforePopoverOpens",
          "visibility": "public",
          "since": "1.28.0",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "semanticObject": {
                      "name": "semanticObject",
                      "type": "string",
                      "optional": false,
                      "description": "The semantic object for which the navigation targets will be retrieved."
                    },
                    "semanticAttributes": {
                      "name": "semanticAttributes",
                      "type": "object",
                      "optional": false,
                      "description": "Map containing the semantic attributes calculated from the binding that will be used to retrieve the navigation targets."
                    },
                    "semanticAttributesOfSemanticObjects": {
                      "name": "semanticAttributesOfSemanticObjects",
                      "type": "object",
                      "optional": false,
                      "description": "A map of semantic objects for which the navigation targets will be retrieved and it's semantic attributes calculated from the binding context. The semantic attributes will be used as parameters in order to retrieve the navigation targets."
                    },
                    "setSemanticAttributes": {
                      "name": "setSemanticAttributes",
                      "type": "function",
                      "optional": false,
                      "description": "This callback function enables you to define a changed semantic attributes map. Signatures: <code>setSemanticAttributes(oSemanticAttributesMap)</code> Parameter: <ul> <li>{object} oSemanticAttributesMap New map containing the semantic attributes</li> <li>{string} sSemanticObject Semantic Object for which the oSemanticAttributesMap belongs</li> </ul>"
                    },
                    "setAppStateKey": {
                      "name": "setAppStateKey",
                      "type": "function",
                      "optional": false,
                      "description": "This callback function sets an application state key that is used over the cross-application navigation. Signatures: <code>setAppStateKey(sAppStateKey)</code> Parameter: <ul> <li>{string} sAppStateKey</li> </ul>"
                    },
                    "originalId": {
                      "name": "originalId",
                      "type": "string",
                      "optional": false,
                      "description": "The ID of the control that fires this event. If <code>beforePopoverOpens</code> is registered on the SmartLink, <code>originalId</code> is the same as the event's source ID which is also the SmartLink's ID. If the <code>beforePopoverOpens</code> is registered on the SemanticObjectController, <code>originalId</code> helps to identify the original SmartLink control which triggered the event."
                    },
                    "open": {
                      "name": "open",
                      "type": "function",
                      "optional": false,
                      "description": "This callback function triggers the retrieval of navigation targets and leads to the opening of the navigation popover. Signatures: <code>open()</code> If <code>beforePopoverOpens</code> has been registered, <code>open</code> function has to be called manually in order to open the navigation popover."
                    }
                  }
                }
              }
            }
          ],
          "description": "Event is fired before the navigation popover opens and before navigation target links are retrieved. Event can be used to change the parameters used to retrieve the navigation targets. In case of SmartLink, <code>beforePopoverOpens</code> is fired after the link has been clicked."
        },
        {
          "name": "navigate",
          "visibility": "public",
          "since": "1.28.0",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "text": {
                      "name": "text",
                      "type": "string",
                      "optional": false,
                      "description": "The UI text shown in the clicked link."
                    },
                    "href": {
                      "name": "href",
                      "type": "string",
                      "optional": false,
                      "description": "The navigation target of the clicked link."
                    },
                    "semanticObject": {
                      "name": "semanticObject",
                      "type": "string",
                      "optional": false,
                      "description": "The semantic object used to retrieve this target."
                    },
                    "semanticAttributes": {
                      "name": "semanticAttributes",
                      "type": "object",
                      "optional": false,
                      "description": "Map containing the semantic attributes used to retrieve this target."
                    },
                    "originalId": {
                      "name": "originalId",
                      "type": "string",
                      "optional": false,
                      "description": "The ID of the control that fires this event. If <code>navigate</code> is registered on the SmartLink, <code>originalId</code> is the same as the event's source ID which is the SmartLink's ID. If <code>navigate</code> is registered on the SemanticObjectController, <code>originalId</code> helps to identify the original SmartLink control which triggered the event."
                    }
                  }
                }
              }
            }
          ],
          "description": "This event is fired after a navigation link on the navigation popover has been clicked. This event is only fired, if the user left-clicks the link. Right-clicking the link and selecting 'Open in New Window' etc. in the context menu does not fire the event."
        },
        {
          "name": "navigationTargetsObtained",
          "visibility": "public",
          "since": "1.28.0",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "mainNavigation": {
                      "name": "mainNavigation",
                      "type": "sap.ui.comp.navpopover.LinkData",
                      "optional": false,
                      "description": "The main navigation object."
                    },
                    "actions": {
                      "name": "actions",
                      "type": "sap.ui.comp.navpopover.LinkData[]",
                      "optional": false,
                      "description": "Array of available navigation target objects."
                    },
                    "ownNavigation": {
                      "name": "ownNavigation",
                      "type": "sap.ui.comp.navpopover.LinkData",
                      "optional": false,
                      "description": "The navigation object for the own application. This navigation option is by default not visible on the popover."
                    },
                    "popoverForms": {
                      "name": "popoverForms",
                      "type": "sap.ui.layout.form.SimpleForm[]",
                      "optional": false,
                      "description": "Array containing contact data."
                    },
                    "semanticObject": {
                      "name": "semanticObject",
                      "type": "string",
                      "optional": false,
                      "description": "The semantic object for which the navigation targets have been retrieved."
                    },
                    "semanticAttributes": {
                      "name": "semanticAttributes",
                      "type": "object",
                      "optional": false,
                      "description": "Map containing the semantic attributes."
                    },
                    "originalId": {
                      "name": "originalId",
                      "type": "string",
                      "optional": false,
                      "description": "The ID of the control that fires this event. If <code>navigationTargetsObtained</code> is registered on the SmartLink, <code>originalId</code> is the same as the event's source ID which is also the SmartLink's ID. If <code>navigationTargetsObtained</code> is registered on the SemanticObjectController, <code>originalId</code> helps to identify the original SmartLink control which triggered the event."
                    },
                    "show": {
                      "name": "show",
                      "type": "function",
                      "optional": false,
                      "description": "This callback function shows the actual navigation popover. If the <code>navigationTargetsObtained</code> has been registered, the <code>show</code> function has to be called manually in order to open the navigation popover. Signatures: <code>show()</code> <ul> <li><code>show(oMainNavigation, aAvailableActions, oAdditionalContent)</code> Parameters: <ul> <li>{sap.ui.comp.navpopover.LinkData | null | undefined} oMainNavigation The main navigation object. With <code>null</code> the main navigation object will be removed. With <code>undefined</code> the old object will remain.</li> <li>{sap.ui.comp.navpopover.LinkData[] | [] | undefined} aAvailableActions Array containing the cross-application navigation links. With empty array all available links will be removed. With <code>undefined</code> the old links will remain.</li> <li>{sap.ui.core.Control | null | undefined} oAdditionalContent Control that will be displayed in extra content section on the popover. With <code>null</code> the main extra content object will be removed. With <code>undefined</code> the old object still remains.</li> </ul> </li> <li><code>show(sMainNavigationId, oMainNavigation, aAvailableActions, oAdditionalContent)</code> Parameters: <ul> <li>{string | undefined} sMainNavigationId The visible description for the main navigation link. With <code>''</code>, both the description and subtitle will be removed. With <code>undefined</code>, the description is calculated using the binding context of a given source object (for example <code>SmartLink</code> control).</li> <li>{sap.ui.comp.navpopover.LinkData | null | undefined} oMainNavigation The main navigation object. With <code>null</code> the main navigation object will be removed. With <code>undefined</code> the old object will remain.</li> <li>{sap.ui.comp.navpopover.LinkData[] | [] | undefined} aAvailableActions Array containing the cross-application navigation links. With empty array all available links will be removed. With <code>undefined</code> the old links will remain.</li> <li>{sap.ui.core.Control | null | undefined} oAdditionalContent Control that will be displayed in extra content section on the popover. With <code>null</code> the main extra content object will be removed. With <code>undefined</code> the old object still remains.</li> </ul> </li> </ul>"
                    }
                  }
                }
              }
            }
          ],
          "description": "After the navigation targets have been retrieved, <code>navigationTargetsObtained</code> is fired and makes it possible you to change the targets."
        },
        {
          "name": "prefetchDone",
          "visibility": "public",
          "since": "1.28.0",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "semanticObjects": {
                      "name": "semanticObjects",
                      "type": "object",
                      "optional": false,
                      "description": "A map containing all semantic objects as keys for which at least one navigation target has been found. The value for each semantic object key is an array containing the available actions found for this semantic object."
                    }
                  }
                }
              }
            }
          ],
          "description": "If the property <code>prefetchNavigationTargets</code> is set to <code>true</code>, event <code>prefetchDone</code> is fired after all navigation targets have been retrieved.",
          "deprecated": {
            "since": "1.42.0",
            "text": "The event <code>prefetchDone</code> is obsolete because it depends on the property <code>prefetchNavigationTargets</code> which has been deprecated."
          }
        }
      ],
      "methods": [
        {
          "name": "attachBeforePopoverOpens",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.SemanticObjectController",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.navpopover.SemanticObjectController</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:beforePopoverOpens beforePopoverOpens} event of this <code>sap.ui.comp.navpopover.SemanticObjectController</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.navpopover.SemanticObjectController</code> itself.\n\nEvent is fired before the navigation popover opens and before navigation target links are retrieved. Event can be used to change the parameters used to retrieve the navigation targets. In case of SmartLink, <code>beforePopoverOpens</code> is fired after the link has been clicked."
        },
        {
          "name": "attachNavigate",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.SemanticObjectController",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.navpopover.SemanticObjectController</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:navigate navigate} event of this <code>sap.ui.comp.navpopover.SemanticObjectController</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.navpopover.SemanticObjectController</code> itself.\n\nThis event is fired after a navigation link on the navigation popover has been clicked. This event is only fired, if the user left-clicks the link. Right-clicking the link and selecting 'Open in New Window' etc. in the context menu does not fire the event."
        },
        {
          "name": "attachNavigationTargetsObtained",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.SemanticObjectController",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.navpopover.SemanticObjectController</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:navigationTargetsObtained navigationTargetsObtained} event of this <code>sap.ui.comp.navpopover.SemanticObjectController</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.navpopover.SemanticObjectController</code> itself.\n\nAfter the navigation targets have been retrieved, <code>navigationTargetsObtained</code> is fired and makes it possible you to change the targets."
        },
        {
          "name": "attachPrefetchDone",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.SemanticObjectController",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.navpopover.SemanticObjectController</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:prefetchDone prefetchDone} event of this <code>sap.ui.comp.navpopover.SemanticObjectController</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.navpopover.SemanticObjectController</code> itself.\n\nIf the property <code>prefetchNavigationTargets</code> is set to <code>true</code>, event <code>prefetchDone</code> is fired after all navigation targets have been retrieved.",
          "deprecated": {
            "since": "1.42.0",
            "text": "The event <code>prefetchDone</code> is obsolete because it depends on the property <code>prefetchNavigationTargets</code> which has been deprecated."
          }
        },
        {
          "name": "detachBeforePopoverOpens",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.SemanticObjectController",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:beforePopoverOpens beforePopoverOpens} event of this <code>sap.ui.comp.navpopover.SemanticObjectController</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachNavigate",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.SemanticObjectController",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:navigate navigate} event of this <code>sap.ui.comp.navpopover.SemanticObjectController</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachNavigationTargetsObtained",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.SemanticObjectController",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:navigationTargetsObtained navigationTargetsObtained} event of this <code>sap.ui.comp.navpopover.SemanticObjectController</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachPrefetchDone",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.SemanticObjectController",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:prefetchDone prefetchDone} event of this <code>sap.ui.comp.navpopover.SemanticObjectController</code>.\n\nThe passed function and listener object must match the ones used for event registration.",
          "deprecated": {
            "since": "1.42.0",
            "text": "The event <code>prefetchDone</code> is obsolete because it depends on the property <code>prefetchNavigationTargets</code> which has been deprecated."
          }
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.comp.navpopover.SemanticObjectController with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
        },
        {
          "name": "fireBeforePopoverOpens",
          "visibility": "protected",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.SemanticObjectController",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "semanticObject": {
                  "name": "semanticObject",
                  "type": "string",
                  "optional": true,
                  "description": "The semantic object for which the navigation targets will be retrieved."
                },
                "semanticAttributes": {
                  "name": "semanticAttributes",
                  "type": "object",
                  "optional": true,
                  "description": "Map containing the semantic attributes calculated from the binding that will be used to retrieve the navigation targets."
                },
                "semanticAttributesOfSemanticObjects": {
                  "name": "semanticAttributesOfSemanticObjects",
                  "type": "object",
                  "optional": true,
                  "description": "A map of semantic objects for which the navigation targets will be retrieved and it's semantic attributes calculated from the binding context. The semantic attributes will be used as parameters in order to retrieve the navigation targets."
                },
                "setSemanticAttributes": {
                  "name": "setSemanticAttributes",
                  "type": "function",
                  "optional": true,
                  "description": "This callback function enables you to define a changed semantic attributes map. Signatures: <code>setSemanticAttributes(oSemanticAttributesMap)</code> Parameter: <ul> <li>{object} oSemanticAttributesMap New map containing the semantic attributes</li> <li>{string} sSemanticObject Semantic Object for which the oSemanticAttributesMap belongs</li> </ul>"
                },
                "setAppStateKey": {
                  "name": "setAppStateKey",
                  "type": "function",
                  "optional": true,
                  "description": "This callback function sets an application state key that is used over the cross-application navigation. Signatures: <code>setAppStateKey(sAppStateKey)</code> Parameter: <ul> <li>{string} sAppStateKey</li> </ul>"
                },
                "originalId": {
                  "name": "originalId",
                  "type": "string",
                  "optional": true,
                  "description": "The ID of the control that fires this event. If <code>beforePopoverOpens</code> is registered on the SmartLink, <code>originalId</code> is the same as the event's source ID which is also the SmartLink's ID. If the <code>beforePopoverOpens</code> is registered on the SemanticObjectController, <code>originalId</code> helps to identify the original SmartLink control which triggered the event."
                },
                "open": {
                  "name": "open",
                  "type": "function",
                  "optional": true,
                  "description": "This callback function triggers the retrieval of navigation targets and leads to the opening of the navigation popover. Signatures: <code>open()</code> If <code>beforePopoverOpens</code> has been registered, <code>open</code> function has to be called manually in order to open the navigation popover."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:beforePopoverOpens beforePopoverOpens} to attached listeners."
        },
        {
          "name": "fireNavigate",
          "visibility": "protected",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.SemanticObjectController",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "text": {
                  "name": "text",
                  "type": "string",
                  "optional": true,
                  "description": "The UI text shown in the clicked link."
                },
                "href": {
                  "name": "href",
                  "type": "string",
                  "optional": true,
                  "description": "The navigation target of the clicked link."
                },
                "semanticObject": {
                  "name": "semanticObject",
                  "type": "string",
                  "optional": true,
                  "description": "The semantic object used to retrieve this target."
                },
                "semanticAttributes": {
                  "name": "semanticAttributes",
                  "type": "object",
                  "optional": true,
                  "description": "Map containing the semantic attributes used to retrieve this target."
                },
                "originalId": {
                  "name": "originalId",
                  "type": "string",
                  "optional": true,
                  "description": "The ID of the control that fires this event. If <code>navigate</code> is registered on the SmartLink, <code>originalId</code> is the same as the event's source ID which is the SmartLink's ID. If <code>navigate</code> is registered on the SemanticObjectController, <code>originalId</code> helps to identify the original SmartLink control which triggered the event."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:navigate navigate} to attached listeners."
        },
        {
          "name": "fireNavigationTargetsObtained",
          "visibility": "protected",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.SemanticObjectController",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "mainNavigation": {
                  "name": "mainNavigation",
                  "type": "sap.ui.comp.navpopover.LinkData",
                  "optional": true,
                  "description": "The main navigation object."
                },
                "actions": {
                  "name": "actions",
                  "type": "sap.ui.comp.navpopover.LinkData[]",
                  "optional": true,
                  "description": "Array of available navigation target objects."
                },
                "ownNavigation": {
                  "name": "ownNavigation",
                  "type": "sap.ui.comp.navpopover.LinkData",
                  "optional": true,
                  "description": "The navigation object for the own application. This navigation option is by default not visible on the popover."
                },
                "popoverForms": {
                  "name": "popoverForms",
                  "type": "sap.ui.layout.form.SimpleForm[]",
                  "optional": true,
                  "description": "Array containing contact data."
                },
                "semanticObject": {
                  "name": "semanticObject",
                  "type": "string",
                  "optional": true,
                  "description": "The semantic object for which the navigation targets have been retrieved."
                },
                "semanticAttributes": {
                  "name": "semanticAttributes",
                  "type": "object",
                  "optional": true,
                  "description": "Map containing the semantic attributes."
                },
                "originalId": {
                  "name": "originalId",
                  "type": "string",
                  "optional": true,
                  "description": "The ID of the control that fires this event. If <code>navigationTargetsObtained</code> is registered on the SmartLink, <code>originalId</code> is the same as the event's source ID which is also the SmartLink's ID. If <code>navigationTargetsObtained</code> is registered on the SemanticObjectController, <code>originalId</code> helps to identify the original SmartLink control which triggered the event."
                },
                "show": {
                  "name": "show",
                  "type": "function",
                  "optional": true,
                  "description": "This callback function shows the actual navigation popover. If the <code>navigationTargetsObtained</code> has been registered, the <code>show</code> function has to be called manually in order to open the navigation popover. Signatures: <code>show()</code> <ul> <li><code>show(oMainNavigation, aAvailableActions, oAdditionalContent)</code> Parameters: <ul> <li>{sap.ui.comp.navpopover.LinkData | null | undefined} oMainNavigation The main navigation object. With <code>null</code> the main navigation object will be removed. With <code>undefined</code> the old object will remain.</li> <li>{sap.ui.comp.navpopover.LinkData[] | [] | undefined} aAvailableActions Array containing the cross-application navigation links. With empty array all available links will be removed. With <code>undefined</code> the old links will remain.</li> <li>{sap.ui.core.Control | null | undefined} oAdditionalContent Control that will be displayed in extra content section on the popover. With <code>null</code> the main extra content object will be removed. With <code>undefined</code> the old object still remains.</li> </ul> </li> <li><code>show(sMainNavigationId, oMainNavigation, aAvailableActions, oAdditionalContent)</code> Parameters: <ul> <li>{string | undefined} sMainNavigationId The visible description for the main navigation link. With <code>''</code>, both the description and subtitle will be removed. With <code>undefined</code>, the description is calculated using the binding context of a given source object (for example <code>SmartLink</code> control).</li> <li>{sap.ui.comp.navpopover.LinkData | null | undefined} oMainNavigation The main navigation object. With <code>null</code> the main navigation object will be removed. With <code>undefined</code> the old object will remain.</li> <li>{sap.ui.comp.navpopover.LinkData[] | [] | undefined} aAvailableActions Array containing the cross-application navigation links. With empty array all available links will be removed. With <code>undefined</code> the old links will remain.</li> <li>{sap.ui.core.Control | null | undefined} oAdditionalContent Control that will be displayed in extra content section on the popover. With <code>null</code> the main extra content object will be removed. With <code>undefined</code> the old object still remains.</li> </ul> </li> </ul>"
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:navigationTargetsObtained navigationTargetsObtained} to attached listeners."
        },
        {
          "name": "firePrefetchDone",
          "visibility": "protected",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.SemanticObjectController",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "semanticObjects": {
                  "name": "semanticObjects",
                  "type": "object",
                  "optional": true,
                  "description": "A map containing all semantic objects as keys for which at least one navigation target has been found. The value for each semantic object key is an array containing the available actions found for this semantic object."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:prefetchDone prefetchDone} to attached listeners.",
          "deprecated": {
            "since": "1.42.0",
            "text": "The event <code>prefetchDone</code> is obsolete because it depends on the property <code>prefetchNavigationTargets</code> which has been deprecated."
          }
        },
        {
          "name": "getContactAnnotationPaths",
          "visibility": "public",
          "since": "1.40.0",
          "returnValue": {
            "type": "object",
            "description": "Value of property <code>contactAnnotationPaths</code>"
          },
          "description": "Gets current value of property {@link #getContactAnnotationPaths contactAnnotationPaths}.\n\nNavigation property that points from the current to the related entity type where the <code>com.sap.vocabularies.Communication.v1.Contact</code> annotation is defined, for example, <code> '\\{\"Supplier\":\"to_Supplier\", \"CompanyName\":\"to_Company\"\\}' </code>. An empty string means that the related entity type is the current one."
        },
        {
          "name": "getEnableAvailableActionsPersonalization",
          "visibility": "public",
          "since": "1.44.0",
          "returnValue": {
            "type": "object",
            "description": "Value of property <code>enableAvailableActionsPersonalization</code>"
          },
          "description": "Gets current value of property {@link #getEnableAvailableActionsPersonalization enableAvailableActionsPersonalization}.\n\nDetermines whether the personalization link is shown inside the NavigationPopover control. For example, <code> '\\{\"Supplier\":false, \"CompanyName\":true\\}' </code>."
        },
        {
          "name": "getEntitySet",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>entitySet</code>"
          },
          "description": "Gets current value of property {@link #getEntitySet entitySet}.\n\nThe name of the entity set used. If <code>entitySet</code> has not been defined, the SemanticObjectController tries to retrieve the name from its parents. <b>Note:</b> This is not a dynamic UI5 property."
        },
        {
          "name": "getFieldSemanticObjectMap",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "object",
            "description": "Value of property <code>fieldSemanticObjectMap</code>"
          },
          "description": "Gets current value of property {@link #getFieldSemanticObjectMap fieldSemanticObjectMap}.\n\nMaps the fields to the related semantic objects. When accessing this property for the first time, the mapping will be calculated from the metadata within the provided model."
        },
        {
          "name": "getForceLinkRendering",
          "visibility": "public",
          "since": "1.58.0",
          "returnValue": {
            "type": "object",
            "description": "Value of property <code>forceLinkRendering</code>"
          },
          "description": "Gets current value of property {@link #getForceLinkRendering forceLinkRendering}.\n\nObject containing fields for which the corresponding <code>SmartLink</code> control is rendered as a link even if <code>contactAnnotationPaths</code> is not set and navigation targets do not exist. Setting this property to <code>true</code> allows the application, for example, to modify the <code>SmartLink</code> control in the event handler, after the user has clicked on a link and the registered event handler has been called.\\n\n\n<b>Note:</b> The <code>ignoredFields</code> property and the <code>ignoreLinkRendering</code> property of the <code>SmartLink</code> control take precedence over <code>forceLinkRendering</code>.\\n\n\nExample of usage: <code> '\\{\"Supplier\":\"true\", \"CompanyName\":\"true\"\\}' </code>"
        },
        {
          "name": "getIgnoredFields",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>ignoredFields</code>"
          },
          "description": "Gets current value of property {@link #getIgnoredFields ignoredFields}.\n\nComma-separated list of fields that must not be displayed as links."
        },
        {
          "name": "getMapFieldToSemanticObject",
          "visibility": "public",
          "since": "1.48.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>mapFieldToSemanticObject</code>"
          },
          "description": "Gets current value of property {@link #getMapFieldToSemanticObject mapFieldToSemanticObject}.\n\nIf set to <code>false</code>, the SmartLink control will not replace its field name with the according <code>semanticObject</code> property during the calculation of the semantic attributes."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.comp.navpopover.SemanticObjectController."
        },
        {
          "name": "getPrefetchNavigationTargets",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>prefetchNavigationTargets</code>"
          },
          "description": "Gets current value of property {@link #getPrefetchNavigationTargets prefetchNavigationTargets}.\n\nIf set to <code>true</code>, the SemanticObjectController will retrieve all navigation targets once and will disable links for which no targets were found. Setting this value to <code>true</code> will trigger an additional roundtrip.\n\nDefault value is <code>false</code>.",
          "deprecated": {
            "since": "1.42.0",
            "text": "The property <code>prefetchNavigationTargets</code> is obsolete as navigation targets are determined automatically. The SmartLink controls are re-rendered as soon as the asynchronous determination of navigation targets has been completed."
          }
        },
        {
          "name": "hasSemanticObjectLinks",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "true if the semantic object has any navigation links"
          },
          "parameters": [
            {
              "name": "sSemanticObject",
              "type": "string",
              "optional": false,
              "description": "Name of semantic object"
            }
          ],
          "description": "Checks if the given semantic object name has a navigation link. <b>Note</b>: this method returns a valid value only after the event <code>prefetchDone</code> has been raised. The event <code>prefetchDone</code> is raised if the property <code>prefetchNavigationTargets</code> is set to <code>true</code>.",
          "deprecated": {
            "since": "1.42.0",
            "text": "The method <code>hasSemanticObjectLinks</code> is obsolete because it depends on the property <code>prefetchNavigationTargets</code> which has been deprecated."
          }
        },
        {
          "name": "isControlRegistered",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "<code>true</code> if the given control has been registered"
          },
          "parameters": [
            {
              "name": "oControl",
              "type": "sap.ui.comp.navpopover.SmartLink|sap.ui.comp.navpopover.NavigationPopoverHandler",
              "optional": false,
              "description": "Control registered by <code>SemanticObjectController</code>"
            }
          ],
          "description": "Returns whether the given control has been registered by the SemanticObjectController."
        },
        {
          "name": "registerControl",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControl",
              "type": "sap.ui.comp.navpopover.SmartLink|sap.ui.comp.navpopover.NavigationPopoverHandler",
              "optional": false,
              "description": "Control to be registered by <code>SemanticObjectController</code>"
            }
          ],
          "description": "Adds the given control to the SemanticObjectController and registers all relevant events."
        },
        {
          "name": "setContactAnnotationPaths",
          "visibility": "public",
          "since": "1.40.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.SemanticObjectController",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oContactAnnotationPaths",
              "type": "object",
              "optional": false,
              "description": "New value for property <code>contactAnnotationPaths</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getContactAnnotationPaths contactAnnotationPaths}.\n\nNavigation property that points from the current to the related entity type where the <code>com.sap.vocabularies.Communication.v1.Contact</code> annotation is defined, for example, <code> '\\{\"Supplier\":\"to_Supplier\", \"CompanyName\":\"to_Company\"\\}' </code>. An empty string means that the related entity type is the current one.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setEnableAvailableActionsPersonalization",
          "visibility": "public",
          "since": "1.44.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.SemanticObjectController",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oEnableAvailableActionsPersonalization",
              "type": "object",
              "optional": false,
              "description": "New value for property <code>enableAvailableActionsPersonalization</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getEnableAvailableActionsPersonalization enableAvailableActionsPersonalization}.\n\nDetermines whether the personalization link is shown inside the NavigationPopover control. For example, <code> '\\{\"Supplier\":false, \"CompanyName\":true\\}' </code>.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setEntitySet",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.SemanticObjectController",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sEntitySet",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>entitySet</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getEntitySet entitySet}.\n\nThe name of the entity set used. If <code>entitySet</code> has not been defined, the SemanticObjectController tries to retrieve the name from its parents. <b>Note:</b> This is not a dynamic UI5 property.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setFieldSemanticObjectMap",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.SemanticObjectController",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oFieldSemanticObjectMap",
              "type": "object",
              "optional": false,
              "description": "New value for property <code>fieldSemanticObjectMap</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getFieldSemanticObjectMap fieldSemanticObjectMap}.\n\nMaps the fields to the related semantic objects. When accessing this property for the first time, the mapping will be calculated from the metadata within the provided model.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setForceLinkRendering",
          "visibility": "public",
          "since": "1.58.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.SemanticObjectController",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oForceLinkRendering",
              "type": "object",
              "optional": false,
              "description": "New value for property <code>forceLinkRendering</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getForceLinkRendering forceLinkRendering}.\n\nObject containing fields for which the corresponding <code>SmartLink</code> control is rendered as a link even if <code>contactAnnotationPaths</code> is not set and navigation targets do not exist. Setting this property to <code>true</code> allows the application, for example, to modify the <code>SmartLink</code> control in the event handler, after the user has clicked on a link and the registered event handler has been called.\\n\n\n<b>Note:</b> The <code>ignoredFields</code> property and the <code>ignoreLinkRendering</code> property of the <code>SmartLink</code> control take precedence over <code>forceLinkRendering</code>.\\n\n\nExample of usage: <code> '\\{\"Supplier\":\"true\", \"CompanyName\":\"true\"\\}' </code>\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setIgnoredFields",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.SemanticObjectController",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sIgnoredFields",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>ignoredFields</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getIgnoredFields ignoredFields}.\n\nComma-separated list of fields that must not be displayed as links.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setIgnoredState",
          "visibility": "public",
          "parameters": [
            {
              "name": "oSmartLink",
              "type": "sap.ui.comp.navpopover.SmartLink",
              "optional": false,
              "description": "the SmartLink which should be enabled or disabled."
            }
          ],
          "description": "Checks if the given SmartLink has to be enabled or disabled and sets the state.",
          "deprecated": {
            "since": "1.42.0",
            "text": "The method <code>setIgnoredState</code> is obsolete as SmartLink is processing the internal state on its own."
          }
        },
        {
          "name": "setMapFieldToSemanticObject",
          "visibility": "public",
          "since": "1.48.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.SemanticObjectController",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bMapFieldToSemanticObject",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>mapFieldToSemanticObject</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getMapFieldToSemanticObject mapFieldToSemanticObject}.\n\nIf set to <code>false</code>, the SmartLink control will not replace its field name with the according <code>semanticObject</code> property during the calculation of the semantic attributes.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setPrefetchNavigationTargets",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.SemanticObjectController",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bPrefetchNavigationTargets",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>prefetchNavigationTargets</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getPrefetchNavigationTargets prefetchNavigationTargets}.\n\nIf set to <code>true</code>, the SemanticObjectController will retrieve all navigation targets once and will disable links for which no targets were found. Setting this value to <code>true</code> will trigger an additional roundtrip.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>.",
          "deprecated": {
            "since": "1.42.0",
            "text": "The property <code>prefetchNavigationTargets</code> is obsolete as navigation targets are determined automatically. The SmartLink controls are re-rendered as soon as the asynchronous determination of navigation targets has been completed."
          }
        },
        {
          "name": "unregisterControl",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControl",
              "type": "sap.ui.comp.navpopover.SmartLink|sap.ui.comp.navpopover.NavigationPopoverHandler",
              "optional": false,
              "description": "Control to be unregistered by <code>SemanticObjectController</code>"
            }
          ],
          "description": "Removes the given control from the SemanticObjectController and unregisters all relevant events."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.comp.navpopover.SmartLink",
      "basename": "SmartLink",
      "resource": "sap/ui/comp/navpopover/SmartLink.js",
      "module": "sap/ui/comp/navpopover/SmartLink",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.m.Link",
      "description": "The SmartLink control uses a semantic object to display {@link sap.ui.comp.navpopover.NavigationPopover NavigationPopover} for further navigation steps.<br> <b>Note:</b> Navigation targets are determined using {@link sap.ushell.services.CrossApplicationNavigation CrossApplicationNavigation} of the unified shell service.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "semanticObject",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.28.0",
            "description": "Name of semantic object which is used to fill the navigation popover. <b>Note</b>: Setting a value triggers an asynchronous determination, so the effect can be delayed.",
            "methods": ["getSemanticObject", "setSemanticObject"]
          },
          {
            "name": "additionalSemanticObjects",
            "type": "string[]",
            "defaultValue": "[]",
            "group": "Misc",
            "visibility": "public",
            "since": "1.42.0",
            "description": "Semantic object names which can be used additional to the default <code>semanticObject</code> property in order to get navigation targets links.",
            "methods": [
              "getAdditionalSemanticObjects",
              "setAdditionalSemanticObjects"
            ]
          },
          {
            "name": "semanticObjectController",
            "type": "any",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.28.0",
            "description": "The semantic object controller controls events for several SmartLink controls. If the controller is not set manually, it tries to find a SemanticObjectController in its parent hierarchy.",
            "methods": [
              "getSemanticObjectController",
              "setSemanticObjectController"
            ]
          },
          {
            "name": "fieldName",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.28.0",
            "description": "The metadata field name for this SmartLink control.",
            "methods": ["getFieldName", "setFieldName"]
          },
          {
            "name": "semanticObjectLabel",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.28.0",
            "description": "Shown label of semantic object.",
            "deprecated": {
              "since": "1.40.0",
              "text": "Title section with <code>semanticObjectLabel</code> has been removed due to new UI design"
            },
            "methods": ["getSemanticObjectLabel", "setSemanticObjectLabel"]
          },
          {
            "name": "createControlCallback",
            "type": "object",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.28.0",
            "description": "Function that enables the SmartLink control to create an alternative control, which is displayed if no navigation targets are available. The function has no parameters and has to return an instance of sap.ui.core.Control.",
            "methods": ["getCreateControlCallback", "setCreateControlCallback"]
          },
          {
            "name": "mapFieldToSemanticObject",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "description": "If set to <code>false</code>, the SmartLink control will not replace its field name with the according <code>semanticObject</code> property during the calculation of the semantic attributes. This enables the usage of several SmartLink controls on the same semantic object.",
            "methods": [
              "getMapFieldToSemanticObject",
              "setMapFieldToSemanticObject"
            ]
          },
          {
            "name": "contactAnnotationPath",
            "type": "string",
            "group": "Misc",
            "visibility": "public",
            "since": "1.40.0",
            "description": "Navigation property that points from the current to the related entity type where the com.sap.vocabularies.Communication.v1.Contact annotation is defined, for example, <code>'to_Supplier'</code>. An empty string means that the related entity type is the current one.",
            "methods": ["getContactAnnotationPath", "setContactAnnotationPath"]
          },
          {
            "name": "ignoreLinkRendering",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "since": "1.28.0",
            "description": "If set to <code>true</code>, the SmartLink control will render the <code>innerControl</code> or the control provided by <code>createControlCallback</code> instead of the actual link. This is used for example by the SemanticObjectController if this SmartLink is listed in its <code>ignoredFields</code> or no navigation targets were found during prefetch.",
            "methods": ["getIgnoreLinkRendering", "setIgnoreLinkRendering"]
          },
          {
            "name": "enableAvailableActionsPersonalization",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "since": "1.44.0",
            "description": "Determines whether the personalization link is shown inside the NavigationPopover control.",
            "methods": [
              "getEnableAvailableActionsPersonalization",
              "setEnableAvailableActionsPersonalization"
            ]
          },
          {
            "name": "forceLinkRendering",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "since": "1.58.0",
            "description": "If set to true, the <code>SmartLink</code> control is rendered as a link even if <code>contactAnnotationPath</code> is not set and navigation targets do not exist. Setting this property to <code>true</code> allows the application, for example, to modify the <code>SmartLink</code> control in the event handler, after the user has clicked on a link and the registered event handler has been called.\n\n<b>Note:</b> The <code>ignoreLinkRendering</code> property and the <code>ignoredFields</code> property of the associated <code>SemanticObjectController</code> take precedence over <code>forceLinkRendering</code>.",
            "methods": ["getForceLinkRendering", "setForceLinkRendering"]
          },
          {
            "name": "uom",
            "type": "string",
            "group": "Misc",
            "visibility": "public",
            "since": "1.48.0",
            "description": "Additionally to the <code>text</code> property the Unit of Measure can be displayed.",
            "methods": ["getUom", "setUom"]
          }
        ],
        "aggregations": [
          {
            "name": "innerControl",
            "singularName": "innerControl",
            "type": "sap.ui.core.Control",
            "cardinality": "0..1",
            "visibility": "public",
            "since": "1.28.0",
            "description": "Control that is displayed instead of SmartLink control, if the SmartLink is disabled (for example, if no navigation targets are available). If <code>innerControl</code> is not provided, the SmartLink control tries to create one with property <code>createControlCallback</code>.",
            "methods": [
              "getInnerControl",
              "destroyInnerControl",
              "setInnerControl"
            ]
          }
        ],
        "events": [
          {
            "name": "beforePopoverOpens",
            "visibility": "public",
            "since": "1.28.0",
            "description": "Event is fired before the navigation popover opens and before navigation target links are getting retrieved. Event can be used to change the parameters used to retrieve the navigation targets. In case of SmartLink control, the <code>beforePopoverOpens</code> is fired after the link has been clicked.",
            "parameters": {
              "semanticObject": {
                "name": "semanticObject",
                "type": "string",
                "description": "The semantic object for which the navigation targets will be retrieved."
              },
              "semanticAttributes": {
                "name": "semanticAttributes",
                "type": "object",
                "description": "Map containing the semantic attributes calculated from the binding that will be used to retrieve the navigation targets.",
                "deprecated": {
                  "since": "1.42.0",
                  "text": "The parameter <code>semanticAttributes</code> is obsolete. Instead use the parameter <code>semanticAttributesOfSemanticObjects</code>."
                }
              },
              "semanticAttributesOfSemanticObjects": {
                "name": "semanticAttributesOfSemanticObjects",
                "type": "object",
                "since": "1.42.0",
                "description": "A map of semantic objects for which the navigation targets will be retrieved and it's semantic attributes calculated from the binding context. The semantic attributes will be used as parameters in order to retrieve the navigation targets."
              },
              "setSemanticAttributes": {
                "name": "setSemanticAttributes",
                "type": "function",
                "description": "This callback function enables you to define a changed semantic attributes map. Signatures: <code>setSemanticAttributes(oSemanticAttributesMap)</code> Parameter: <ul> <li>{object} oSemanticAttributesMap New map containing the semantic attributes</li> <li>{string} sSemanticObject Semantic Object for which the oSemanticAttributesMap belongs</li> </ul>"
              },
              "setAppStateKey": {
                "name": "setAppStateKey",
                "type": "function",
                "description": "This callback function sets an application state key that is used over the cross-application navigation. Signatures: <code>setAppStateKey(sAppStateKey)</code> Parameter: <ul> <li>{string} sAppStateKey</li> </ul>"
              },
              "originalId": {
                "name": "originalId",
                "type": "string",
                "description": "The ID of the SmartLink control."
              },
              "open": {
                "name": "open",
                "type": "function",
                "description": "This callback function triggers the retrieval of navigation targets and leads to the opening of the navigation popover. Signatures: <code>open()</code> If the <code>beforePopoverOpens</code> has been registered, the <code>open</code> function has to be called manually in order to open the navigation popover."
              }
            },
            "methods": [
              "attachBeforePopoverOpens",
              "detachBeforePopoverOpens",
              "fireBeforePopoverOpens"
            ]
          },
          {
            "name": "navigationTargetsObtained",
            "visibility": "public",
            "since": "1.28.0",
            "description": "After the navigation targets are retrieved, <code>navigationTargetsObtained</code> is fired and provides the possibility to change the targets.",
            "parameters": {
              "mainNavigation": {
                "name": "mainNavigation",
                "type": "sap.ui.comp.navpopover.LinkData",
                "description": "The main navigation object."
              },
              "actions": {
                "name": "actions",
                "type": "sap.ui.comp.navpopover.LinkData[]",
                "description": "Array of available navigation target objects."
              },
              "ownNavigation": {
                "name": "ownNavigation",
                "type": "sap.ui.comp.navpopover.LinkData",
                "description": "The navigation object for the own application. This navigation option is by default not visible on the popover."
              },
              "popoverForms": {
                "name": "popoverForms",
                "type": "sap.ui.layout.form.SimpleForm[]",
                "description": "Array containing contact data."
              },
              "semanticObject": {
                "name": "semanticObject",
                "type": "string",
                "description": "The semantic object for which the navigation targets have been retrieved."
              },
              "semanticAttributes": {
                "name": "semanticAttributes",
                "type": "object",
                "description": "Map containing the semantic attributes."
              },
              "originalId": {
                "name": "originalId",
                "type": "string",
                "description": "The ID of the SmartLink control."
              },
              "show": {
                "name": "show",
                "type": "function",
                "description": "This callback function shows the actual navigation popover. If the <code>navigationTargetsObtained</code> has been registered, the <code>show</code> function has to be called manually in order to open the navigation popover. Signatures: <code>show()</code> <ul> <li><code>show(oMainNavigation, aAvailableActions, oAdditionalContent)</code> Parameters: <ul> <li>{sap.ui.comp.navpopover.LinkData | null | undefined} oMainNavigation The main navigation object. With <code>null</code> the main navigation object will be removed. With <code>undefined</code> the old object will remain.</li> <li>{sap.ui.comp.navpopover.LinkData[] | [] | undefined} aAvailableActions Array containing the cross application navigation links. With empty array all available links will be removed. With <code>undefined</code> the old links will remain.</li> <li>{sap.ui.core.Control | null | undefined} oAdditionalContent Control that will be displayed in extra content section on the popover. With <code>null</code> the main extra content object will be removed. With <code>undefined</code> the old object still remains.</li> </ul> </li> <li><code>show(sMainNavigationId, oMainNavigation, aAvailableActions, oAdditionalContent)</code> Parameters: <ul> <li>{string | undefined} sMainNavigationId The visible description for the main navigation link. With <code>''</code>, both the description and subtitle will be removed. With <code>undefined</code>, the description is calculated using the binding context of a given source object (for example <code>SmartLink</code> control).</li> <li>{sap.ui.comp.navpopover.LinkData | null | undefined} oMainNavigation The main navigation object. With <code>null</code> the main navigation object will be removed. With <code>undefined</code> the old object will remain.</li> <li>{sap.ui.comp.navpopover.LinkData[] | [] | undefined} aAvailableActions Array containing the cross application navigation links. With empty array all available links will be removed. With <code>undefined</code> the old links will remain.</li> <li>{sap.ui.core.Control | null | undefined} oAdditionalContent Control that will be displayed in extra content section on the popover. With <code>null</code> the main extra content object will be removed. With <code>undefined</code> the old object still remains.</li> </ul> </li> </ul>"
              }
            },
            "methods": [
              "attachNavigationTargetsObtained",
              "detachNavigationTargetsObtained",
              "fireNavigationTargetsObtained"
            ]
          },
          {
            "name": "innerNavigate",
            "visibility": "public",
            "since": "1.28.0",
            "description": "This event is fired after a navigation link on the navigation popover has been clicked. This event is only fired, if the user left-clicks the link. Right-clicking the link and selecting 'Open in New Window' etc. in the context menu does not fire the event.",
            "parameters": {
              "text": {
                "name": "text",
                "type": "string",
                "description": "The UI text shown in the clicked link."
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "The navigation target of the clicked link."
              },
              "semanticObject": {
                "name": "semanticObject",
                "type": "string",
                "description": "The semantic object used to retrieve this target."
              },
              "semanticAttributes": {
                "name": "semanticAttributes",
                "type": "object",
                "description": "Map containing the semantic attributes used to retrieve this target."
              },
              "originalId": {
                "name": "originalId",
                "type": "string",
                "description": "The ID of the SmartLink control."
              }
            },
            "methods": [
              "attachInnerNavigate",
              "detachInnerNavigate",
              "fireInnerNavigate"
            ]
          }
        ],
        "annotations": [
          {
            "name": "semanticObjectMapping",
            "namespace": "com.sap.vocabularies.Common.v1",
            "target": ["Property"],
            "annotation": "SemanticObjectMapping",
            "defaultValue": "null",
            "appliesTo": ["text"],
            "since": "1.48.0",
            "description": "Maps properties of the annotated <code>EntityType</code> or sibling properties of the annotated property to properties of the Semantic Object. The <code>SmartLink</code> control can be created from the XML view or from the OData metadata. <i>XML Example of OData V4 with SemanticObjectMapping on Product/Name</i>\n\n<pre>\n &lt;Annotations Target=&quot;ProductCollection.Product/Name&quot; xmlns=&quot;http://docs.oasis-open.org/odata/ns/edm&quot;&gt;\n\t\t&lt;Annotation Term=&quot;com.sap.vocabularies.Common.v1.SemanticObject&quot; String=&quot;SemanticObjectName&quot; /&gt;\n\t\t&lt;Annotation Term=&quot;com.sap.vocabularies.Common.v1.SemanticObjectMapping&quot;&gt;\n\t\t\t&lt;Collection&gt;\n\t\t\t\t&lt;Record&gt;\n\t\t\t\t\t&lt;PropertyValue Property=&quot;LocalProperty&quot; PropertyPath=&quot;SupplierId&quot; /&gt;\n\t\t\t\t\t&lt;PropertyValue Property=&quot;SemanticObjectProperty&quot; String=&quot;SupplierIdOfSemanticObjectName&quot; /&gt;\n\t\t\t\t&lt;/Record&gt;\n\t\t\t&lt;/Collection&gt;\n\t\t&lt;/Annotation&gt;\n\t&lt;/Annotations&gt;\n</pre>"
          },
          {
            "name": "contact",
            "namespace": "com.sap.vocabularies.Communication.v1",
            "target": ["EntityType"],
            "annotation": "Contact",
            "defaultValue": "null",
            "appliesTo": ["text", "label", "value"],
            "since": "1.40.1",
            "description": "Renders the contact information inside the <code>NavigationPopover</code> control. The Contact annotation contains various <code>ContactType</code> which can be used for providing additional information for distinguishing between the contact details. List of enumeration types supported is listed below: <ul> <li><code>com.sap.vocabularies.Communication.v1.PhoneType/fax</code>: This enumeration type can be used for defining a fax number.</li> <li><code>com.sap.vocabularies.Communication.v1.PhoneType/work</code>: This enumeration type can be used for defining a work phone number.</li> <li><code>com.sap.vocabularies.Communication.v1.PhoneType/cell</code>: This enumeration type can be used for defining a mobile number.</li> <li><code>com.sap.vocabularies.Communication.v1.ContactInformationType/work\"</code>: This enumeration type can be used for defining a work email address.</li> </ul> <i>XML Example of OData V4 with Contact Annotation</i>\n\n<pre>\n   &lt;Annotations Target=&quot;EntityTypeName.Supplier&quot;\n     xmlns=&quot;http://docs.oasis-open.org/odata/ns/edm&quot;&gt;\n      &lt;Annotation Term=&quot;com.sap.vocabularies.Communication.v1.Contact&quot;&gt;\n        &lt;Record&gt;\n          &lt;PropertyValue Property=&quot;fn&quot; Path=&quot;FormattedName&quot; /&gt;\n          &lt;PropertyValue Property=&quot;title&quot; Path=&quot;Title&quot; /&gt;\n          &lt;PropertyValue Property=&quot;org&quot; Path=&quot;CompanyName&quot; /&gt;\n          &lt;PropertyValue Property=&quot;role&quot; Path=&quot;OrganizationRole&quot; /&gt;\n          &lt;PropertyValue Property=&quot;photo&quot; Path=&quot;Photo&quot; /&gt;\n          &lt;PropertyValue Property=&quot;tel&quot;&gt;\n            &lt;Collection&gt;\n              &lt;Record&gt;\n                &lt;PropertyValue Property=&quot;type&quot;\n                  EnumMember=&quot;com.sap.vocabularies.Communication.v1.PhoneType/fax&quot; /&gt;\n                &lt;PropertyValue Property=&quot;uri&quot; Path=&quot;FaxNumber&quot; /&gt;\n              &lt;/Record&gt;\n              &lt;Record&gt;\n                &lt;PropertyValue Property=&quot;type&quot;\n                  EnumMember=&quot;com.sap.vocabularies.Communication.v1.PhoneType/work /&gt;\n                &lt;PropertyValue Property=&quot;uri&quot; Path=&quot;PhoneNumber&quot; /&gt;\n              &lt;/Record&gt;\n              &lt;Record&gt;\n                &lt;PropertyValue Property=&quot;type&quot;\n                  EnumMember=&quot;com.sap.vocabularies.Communication.v1.PhoneType/cell&quot; /&gt;\n                &lt;PropertyValue Property=&quot;uri&quot; Path=&quot;MobileNumber&quot; /&gt;\n              &lt;/Record&gt;\n            &lt;/Collection&gt;\n          &lt;/PropertyValue&gt;\n          &lt;PropertyValue Property=&quot;email&quot;&gt;\n            &lt;Collection&gt;\n              &lt;Record&gt;\n                &lt;PropertyValue Property=&quot;type&quot;\n                  EnumMember=&quot;com.sap.vocabularies.Communication.v1.ContactInformationType/work&quot; /&gt;\n                &lt;PropertyValue Property=&quot;address&quot; Path=&quot;EmailAddress&quot; /&gt;\n              &lt;/Record&gt;\n            &lt;/Collection&gt;\n          &lt;/PropertyValue&gt;\n        &lt;/Record&gt;\n     &lt;/Annotation&gt;\n   &lt;/Annotations&gt;\n</pre>\n\nThe <code>SmartLink</code> control interprets the <code>com.sap.vocabularies.UI.v1.Hidden</code> annotation. Fields which are annotated as <code>Bool: \"true\"</code> are not shown in the contact information but the corresponding data is requested by the backend.\n\n<i>XML Example of OData V4 with com.sap.vocabularies.UI.v1.Hidden Title Property</i> <pre>\n\t&lt;Annotations Target=&quot;EPM_DEVELOPER_SCENARIO_SRV.Supplier/Title&quot; xmlns=&quot;http://docs.oasis-open.org/odata/ns/edm&quot;&gt;\n\t\t&lt;Annotation Term=&quot;com.sap.vocabularies.UI.v1.Hidden&quot;/&gt;\n\t&lt;/Annotations&gt;\n</pre>"
          },
          {
            "name": "semanticObjectUnavailableActions",
            "namespace": "com.sap.vocabularies.Common.v1",
            "target": ["Property"],
            "annotation": "SemanticObjectUnavailableActions",
            "defaultValue": "null",
            "appliesTo": ["text"],
            "since": "1.60.0",
            "description": "List of actions of the related semantic object that are not shown in the navigation popover. <i>XML Example of OData with SemanticObjectUnavailableActions on Product/CustomerId</i>\n\n<pre>\n &lt;Annotations Target=&quot;ProductCollection.Product/CustomerId&quot; xmlns=&quot;http://docs.oasis-open.org/odata/ns/edm&quot;&gt;\n\t\t&lt;Annotation Term=&quot;com.sap.vocabularies.Common.v1.SemanticObject&quot; String=&quot;CustomerSO&quot; /&gt;\n\t\t&lt;Annotation Term=&quot;com.sap.vocabularies.Common.v1.SemanticObjectUnavailableActions&quot;&gt;\n\t\t\t&lt;Collection&gt;\n\t\t\t\t\t&lt;String&gt;DeleteCustomer&lt;String/&gt;\n\t\t\t&lt;/Collection&gt;\n\t\t&lt;/Annotation&gt;\n\t&lt;/Annotations&gt;\n</pre>"
          }
        ],
        "designtime": "sap/ui/comp/designtime/navpopover/SmartLink.designtime"
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Accepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.",
        "references": [
          "{@link topic:f638884d0d624ad8a243f4005f8e9972 Smart Link}"
        ]
      },
      "events": [
        {
          "name": "beforePopoverOpens",
          "visibility": "public",
          "since": "1.28.0",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "semanticObject": {
                      "name": "semanticObject",
                      "type": "string",
                      "optional": false,
                      "description": "The semantic object for which the navigation targets will be retrieved."
                    },
                    "semanticAttributes": {
                      "name": "semanticAttributes",
                      "type": "object",
                      "optional": false,
                      "description": "Map containing the semantic attributes calculated from the binding that will be used to retrieve the navigation targets."
                    },
                    "semanticAttributesOfSemanticObjects": {
                      "name": "semanticAttributesOfSemanticObjects",
                      "type": "object",
                      "optional": false,
                      "description": "A map of semantic objects for which the navigation targets will be retrieved and it's semantic attributes calculated from the binding context. The semantic attributes will be used as parameters in order to retrieve the navigation targets."
                    },
                    "setSemanticAttributes": {
                      "name": "setSemanticAttributes",
                      "type": "function",
                      "optional": false,
                      "description": "This callback function enables you to define a changed semantic attributes map. Signatures: <code>setSemanticAttributes(oSemanticAttributesMap)</code> Parameter: <ul> <li>{object} oSemanticAttributesMap New map containing the semantic attributes</li> <li>{string} sSemanticObject Semantic Object for which the oSemanticAttributesMap belongs</li> </ul>"
                    },
                    "setAppStateKey": {
                      "name": "setAppStateKey",
                      "type": "function",
                      "optional": false,
                      "description": "This callback function sets an application state key that is used over the cross-application navigation. Signatures: <code>setAppStateKey(sAppStateKey)</code> Parameter: <ul> <li>{string} sAppStateKey</li> </ul>"
                    },
                    "originalId": {
                      "name": "originalId",
                      "type": "string",
                      "optional": false,
                      "description": "The ID of the SmartLink control."
                    },
                    "open": {
                      "name": "open",
                      "type": "function",
                      "optional": false,
                      "description": "This callback function triggers the retrieval of navigation targets and leads to the opening of the navigation popover. Signatures: <code>open()</code> If the <code>beforePopoverOpens</code> has been registered, the <code>open</code> function has to be called manually in order to open the navigation popover."
                    }
                  }
                }
              }
            }
          ],
          "description": "Event is fired before the navigation popover opens and before navigation target links are getting retrieved. Event can be used to change the parameters used to retrieve the navigation targets. In case of SmartLink control, the <code>beforePopoverOpens</code> is fired after the link has been clicked."
        },
        {
          "name": "innerNavigate",
          "visibility": "public",
          "since": "1.28.0",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "text": {
                      "name": "text",
                      "type": "string",
                      "optional": false,
                      "description": "The UI text shown in the clicked link."
                    },
                    "href": {
                      "name": "href",
                      "type": "string",
                      "optional": false,
                      "description": "The navigation target of the clicked link."
                    },
                    "semanticObject": {
                      "name": "semanticObject",
                      "type": "string",
                      "optional": false,
                      "description": "The semantic object used to retrieve this target."
                    },
                    "semanticAttributes": {
                      "name": "semanticAttributes",
                      "type": "object",
                      "optional": false,
                      "description": "Map containing the semantic attributes used to retrieve this target."
                    },
                    "originalId": {
                      "name": "originalId",
                      "type": "string",
                      "optional": false,
                      "description": "The ID of the SmartLink control."
                    }
                  }
                }
              }
            }
          ],
          "description": "This event is fired after a navigation link on the navigation popover has been clicked. This event is only fired, if the user left-clicks the link. Right-clicking the link and selecting 'Open in New Window' etc. in the context menu does not fire the event."
        },
        {
          "name": "navigationTargetsObtained",
          "visibility": "public",
          "since": "1.28.0",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "mainNavigation": {
                      "name": "mainNavigation",
                      "type": "sap.ui.comp.navpopover.LinkData",
                      "optional": false,
                      "description": "The main navigation object."
                    },
                    "actions": {
                      "name": "actions",
                      "type": "sap.ui.comp.navpopover.LinkData[]",
                      "optional": false,
                      "description": "Array of available navigation target objects."
                    },
                    "ownNavigation": {
                      "name": "ownNavigation",
                      "type": "sap.ui.comp.navpopover.LinkData",
                      "optional": false,
                      "description": "The navigation object for the own application. This navigation option is by default not visible on the popover."
                    },
                    "popoverForms": {
                      "name": "popoverForms",
                      "type": "sap.ui.layout.form.SimpleForm[]",
                      "optional": false,
                      "description": "Array containing contact data."
                    },
                    "semanticObject": {
                      "name": "semanticObject",
                      "type": "string",
                      "optional": false,
                      "description": "The semantic object for which the navigation targets have been retrieved."
                    },
                    "semanticAttributes": {
                      "name": "semanticAttributes",
                      "type": "object",
                      "optional": false,
                      "description": "Map containing the semantic attributes."
                    },
                    "originalId": {
                      "name": "originalId",
                      "type": "string",
                      "optional": false,
                      "description": "The ID of the SmartLink control."
                    },
                    "show": {
                      "name": "show",
                      "type": "function",
                      "optional": false,
                      "description": "This callback function shows the actual navigation popover. If the <code>navigationTargetsObtained</code> has been registered, the <code>show</code> function has to be called manually in order to open the navigation popover. Signatures: <code>show()</code> <ul> <li><code>show(oMainNavigation, aAvailableActions, oAdditionalContent)</code> Parameters: <ul> <li>{sap.ui.comp.navpopover.LinkData | null | undefined} oMainNavigation The main navigation object. With <code>null</code> the main navigation object will be removed. With <code>undefined</code> the old object will remain.</li> <li>{sap.ui.comp.navpopover.LinkData[] | [] | undefined} aAvailableActions Array containing the cross application navigation links. With empty array all available links will be removed. With <code>undefined</code> the old links will remain.</li> <li>{sap.ui.core.Control | null | undefined} oAdditionalContent Control that will be displayed in extra content section on the popover. With <code>null</code> the main extra content object will be removed. With <code>undefined</code> the old object still remains.</li> </ul> </li> <li><code>show(sMainNavigationId, oMainNavigation, aAvailableActions, oAdditionalContent)</code> Parameters: <ul> <li>{string | undefined} sMainNavigationId The visible description for the main navigation link. With <code>''</code>, both the description and subtitle will be removed. With <code>undefined</code>, the description is calculated using the binding context of a given source object (for example <code>SmartLink</code> control).</li> <li>{sap.ui.comp.navpopover.LinkData | null | undefined} oMainNavigation The main navigation object. With <code>null</code> the main navigation object will be removed. With <code>undefined</code> the old object will remain.</li> <li>{sap.ui.comp.navpopover.LinkData[] | [] | undefined} aAvailableActions Array containing the cross application navigation links. With empty array all available links will be removed. With <code>undefined</code> the old links will remain.</li> <li>{sap.ui.core.Control | null | undefined} oAdditionalContent Control that will be displayed in extra content section on the popover. With <code>null</code> the main extra content object will be removed. With <code>undefined</code> the old object still remains.</li> </ul> </li> </ul>"
                    }
                  }
                }
              }
            }
          ],
          "description": "After the navigation targets are retrieved, <code>navigationTargetsObtained</code> is fired and provides the possibility to change the targets."
        }
      ],
      "methods": [
        {
          "name": "attachBeforePopoverOpens",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.SmartLink",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.navpopover.SmartLink</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:beforePopoverOpens beforePopoverOpens} event of this <code>sap.ui.comp.navpopover.SmartLink</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.navpopover.SmartLink</code> itself.\n\nEvent is fired before the navigation popover opens and before navigation target links are getting retrieved. Event can be used to change the parameters used to retrieve the navigation targets. In case of SmartLink control, the <code>beforePopoverOpens</code> is fired after the link has been clicked."
        },
        {
          "name": "attachInnerNavigate",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.SmartLink",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.navpopover.SmartLink</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:innerNavigate innerNavigate} event of this <code>sap.ui.comp.navpopover.SmartLink</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.navpopover.SmartLink</code> itself.\n\nThis event is fired after a navigation link on the navigation popover has been clicked. This event is only fired, if the user left-clicks the link. Right-clicking the link and selecting 'Open in New Window' etc. in the context menu does not fire the event."
        },
        {
          "name": "attachNavigationTargetsObtained",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.SmartLink",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.navpopover.SmartLink</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:navigationTargetsObtained navigationTargetsObtained} event of this <code>sap.ui.comp.navpopover.SmartLink</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.navpopover.SmartLink</code> itself.\n\nAfter the navigation targets are retrieved, <code>navigationTargetsObtained</code> is fired and provides the possibility to change the targets."
        },
        {
          "name": "destroyInnerControl",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.SmartLink",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the innerControl in the aggregation {@link #getInnerControl innerControl}."
        },
        {
          "name": "detachBeforePopoverOpens",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.SmartLink",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:beforePopoverOpens beforePopoverOpens} event of this <code>sap.ui.comp.navpopover.SmartLink</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachInnerNavigate",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.SmartLink",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:innerNavigate innerNavigate} event of this <code>sap.ui.comp.navpopover.SmartLink</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachNavigationTargetsObtained",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.SmartLink",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:navigationTargetsObtained navigationTargetsObtained} event of this <code>sap.ui.comp.navpopover.SmartLink</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.comp.navpopover.SmartLink with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.m.Link.extend}."
        },
        {
          "name": "fireBeforePopoverOpens",
          "visibility": "protected",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.SmartLink",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "semanticObject": {
                  "name": "semanticObject",
                  "type": "string",
                  "optional": true,
                  "description": "The semantic object for which the navigation targets will be retrieved."
                },
                "semanticAttributes": {
                  "name": "semanticAttributes",
                  "type": "object",
                  "optional": true,
                  "description": "Map containing the semantic attributes calculated from the binding that will be used to retrieve the navigation targets."
                },
                "semanticAttributesOfSemanticObjects": {
                  "name": "semanticAttributesOfSemanticObjects",
                  "type": "object",
                  "optional": true,
                  "description": "A map of semantic objects for which the navigation targets will be retrieved and it's semantic attributes calculated from the binding context. The semantic attributes will be used as parameters in order to retrieve the navigation targets."
                },
                "setSemanticAttributes": {
                  "name": "setSemanticAttributes",
                  "type": "function",
                  "optional": true,
                  "description": "This callback function enables you to define a changed semantic attributes map. Signatures: <code>setSemanticAttributes(oSemanticAttributesMap)</code> Parameter: <ul> <li>{object} oSemanticAttributesMap New map containing the semantic attributes</li> <li>{string} sSemanticObject Semantic Object for which the oSemanticAttributesMap belongs</li> </ul>"
                },
                "setAppStateKey": {
                  "name": "setAppStateKey",
                  "type": "function",
                  "optional": true,
                  "description": "This callback function sets an application state key that is used over the cross-application navigation. Signatures: <code>setAppStateKey(sAppStateKey)</code> Parameter: <ul> <li>{string} sAppStateKey</li> </ul>"
                },
                "originalId": {
                  "name": "originalId",
                  "type": "string",
                  "optional": true,
                  "description": "The ID of the SmartLink control."
                },
                "open": {
                  "name": "open",
                  "type": "function",
                  "optional": true,
                  "description": "This callback function triggers the retrieval of navigation targets and leads to the opening of the navigation popover. Signatures: <code>open()</code> If the <code>beforePopoverOpens</code> has been registered, the <code>open</code> function has to be called manually in order to open the navigation popover."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:beforePopoverOpens beforePopoverOpens} to attached listeners."
        },
        {
          "name": "fireInnerNavigate",
          "visibility": "protected",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.SmartLink",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "text": {
                  "name": "text",
                  "type": "string",
                  "optional": true,
                  "description": "The UI text shown in the clicked link."
                },
                "href": {
                  "name": "href",
                  "type": "string",
                  "optional": true,
                  "description": "The navigation target of the clicked link."
                },
                "semanticObject": {
                  "name": "semanticObject",
                  "type": "string",
                  "optional": true,
                  "description": "The semantic object used to retrieve this target."
                },
                "semanticAttributes": {
                  "name": "semanticAttributes",
                  "type": "object",
                  "optional": true,
                  "description": "Map containing the semantic attributes used to retrieve this target."
                },
                "originalId": {
                  "name": "originalId",
                  "type": "string",
                  "optional": true,
                  "description": "The ID of the SmartLink control."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:innerNavigate innerNavigate} to attached listeners."
        },
        {
          "name": "fireNavigationTargetsObtained",
          "visibility": "protected",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.SmartLink",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "mainNavigation": {
                  "name": "mainNavigation",
                  "type": "sap.ui.comp.navpopover.LinkData",
                  "optional": true,
                  "description": "The main navigation object."
                },
                "actions": {
                  "name": "actions",
                  "type": "sap.ui.comp.navpopover.LinkData[]",
                  "optional": true,
                  "description": "Array of available navigation target objects."
                },
                "ownNavigation": {
                  "name": "ownNavigation",
                  "type": "sap.ui.comp.navpopover.LinkData",
                  "optional": true,
                  "description": "The navigation object for the own application. This navigation option is by default not visible on the popover."
                },
                "popoverForms": {
                  "name": "popoverForms",
                  "type": "sap.ui.layout.form.SimpleForm[]",
                  "optional": true,
                  "description": "Array containing contact data."
                },
                "semanticObject": {
                  "name": "semanticObject",
                  "type": "string",
                  "optional": true,
                  "description": "The semantic object for which the navigation targets have been retrieved."
                },
                "semanticAttributes": {
                  "name": "semanticAttributes",
                  "type": "object",
                  "optional": true,
                  "description": "Map containing the semantic attributes."
                },
                "originalId": {
                  "name": "originalId",
                  "type": "string",
                  "optional": true,
                  "description": "The ID of the SmartLink control."
                },
                "show": {
                  "name": "show",
                  "type": "function",
                  "optional": true,
                  "description": "This callback function shows the actual navigation popover. If the <code>navigationTargetsObtained</code> has been registered, the <code>show</code> function has to be called manually in order to open the navigation popover. Signatures: <code>show()</code> <ul> <li><code>show(oMainNavigation, aAvailableActions, oAdditionalContent)</code> Parameters: <ul> <li>{sap.ui.comp.navpopover.LinkData | null | undefined} oMainNavigation The main navigation object. With <code>null</code> the main navigation object will be removed. With <code>undefined</code> the old object will remain.</li> <li>{sap.ui.comp.navpopover.LinkData[] | [] | undefined} aAvailableActions Array containing the cross application navigation links. With empty array all available links will be removed. With <code>undefined</code> the old links will remain.</li> <li>{sap.ui.core.Control | null | undefined} oAdditionalContent Control that will be displayed in extra content section on the popover. With <code>null</code> the main extra content object will be removed. With <code>undefined</code> the old object still remains.</li> </ul> </li> <li><code>show(sMainNavigationId, oMainNavigation, aAvailableActions, oAdditionalContent)</code> Parameters: <ul> <li>{string | undefined} sMainNavigationId The visible description for the main navigation link. With <code>''</code>, both the description and subtitle will be removed. With <code>undefined</code>, the description is calculated using the binding context of a given source object (for example <code>SmartLink</code> control).</li> <li>{sap.ui.comp.navpopover.LinkData | null | undefined} oMainNavigation The main navigation object. With <code>null</code> the main navigation object will be removed. With <code>undefined</code> the old object will remain.</li> <li>{sap.ui.comp.navpopover.LinkData[] | [] | undefined} aAvailableActions Array containing the cross application navigation links. With empty array all available links will be removed. With <code>undefined</code> the old links will remain.</li> <li>{sap.ui.core.Control | null | undefined} oAdditionalContent Control that will be displayed in extra content section on the popover. With <code>null</code> the main extra content object will be removed. With <code>undefined</code> the old object still remains.</li> </ul> </li> </ul>"
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:navigationTargetsObtained navigationTargetsObtained} to attached listeners."
        },
        {
          "name": "getAdditionalSemanticObjects",
          "visibility": "public",
          "since": "1.42.0",
          "returnValue": {
            "type": "string[]",
            "description": "Value of property <code>additionalSemanticObjects</code>"
          },
          "description": "Gets current value of property {@link #getAdditionalSemanticObjects additionalSemanticObjects}.\n\nSemantic object names which can be used additional to the default <code>semanticObject</code> property in order to get navigation targets links.\n\nDefault value is <code>[]</code>."
        },
        {
          "name": "getContactAnnotationPath",
          "visibility": "public",
          "since": "1.40.0",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>contactAnnotationPath</code>"
          },
          "description": "Gets current value of property {@link #getContactAnnotationPath contactAnnotationPath}.\n\nNavigation property that points from the current to the related entity type where the com.sap.vocabularies.Communication.v1.Contact annotation is defined, for example, <code>'to_Supplier'</code>. An empty string means that the related entity type is the current one.\n\nDefault value is <code>undefined</code>."
        },
        {
          "name": "getCreateControlCallback",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "object",
            "description": "Value of property <code>createControlCallback</code>"
          },
          "description": "Gets current value of property {@link #getCreateControlCallback createControlCallback}.\n\nFunction that enables the SmartLink control to create an alternative control, which is displayed if no navigation targets are available. The function has no parameters and has to return an instance of sap.ui.core.Control."
        },
        {
          "name": "getEnableAvailableActionsPersonalization",
          "visibility": "public",
          "since": "1.44.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>enableAvailableActionsPersonalization</code>"
          },
          "description": "Gets current value of property {@link #getEnableAvailableActionsPersonalization enableAvailableActionsPersonalization}.\n\nDetermines whether the personalization link is shown inside the NavigationPopover control.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getFieldName",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>fieldName</code>"
          },
          "description": "Gets current value of property {@link #getFieldName fieldName}.\n\nThe metadata field name for this SmartLink control."
        },
        {
          "name": "getForceLinkRendering",
          "visibility": "public",
          "since": "1.58.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>forceLinkRendering</code>"
          },
          "description": "Gets current value of property {@link #getForceLinkRendering forceLinkRendering}.\n\nIf set to true, the <code>SmartLink</code> control is rendered as a link even if <code>contactAnnotationPath</code> is not set and navigation targets do not exist. Setting this property to <code>true</code> allows the application, for example, to modify the <code>SmartLink</code> control in the event handler, after the user has clicked on a link and the registered event handler has been called.\n\n<b>Note:</b> The <code>ignoreLinkRendering</code> property and the <code>ignoredFields</code> property of the associated <code>SemanticObjectController</code> take precedence over <code>forceLinkRendering</code>.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getIgnoreLinkRendering",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>ignoreLinkRendering</code>"
          },
          "description": "Gets current value of property {@link #getIgnoreLinkRendering ignoreLinkRendering}.\n\nIf set to <code>true</code>, the SmartLink control will render the <code>innerControl</code> or the control provided by <code>createControlCallback</code> instead of the actual link. This is used for example by the SemanticObjectController if this SmartLink is listed in its <code>ignoredFields</code> or no navigation targets were found during prefetch.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getInnerControl",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": { "type": "sap.ui.core.Control" },
          "description": "Gets content of aggregation {@link #getInnerControl innerControl}.\n\nControl that is displayed instead of SmartLink control, if the SmartLink is disabled (for example, if no navigation targets are available). If <code>innerControl</code> is not provided, the SmartLink control tries to create one with property <code>createControlCallback</code>."
        },
        {
          "name": "getInnerControlValue",
          "visibility": "public",
          "returnValue": { "type": "object", "description": "the value" },
          "description": "Gets the inner control's value, if no inner control is available, the text of SmartLink control will be returned."
        },
        {
          "name": "getMapFieldToSemanticObject",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>mapFieldToSemanticObject</code>"
          },
          "description": "Gets current value of property {@link #getMapFieldToSemanticObject mapFieldToSemanticObject}.\n\nIf set to <code>false</code>, the SmartLink control will not replace its field name with the according <code>semanticObject</code> property during the calculation of the semantic attributes. This enables the usage of several SmartLink controls on the same semantic object.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.comp.navpopover.SmartLink."
        },
        {
          "name": "getSemanticObject",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>semanticObject</code>"
          },
          "description": "Gets current value of property {@link #getSemanticObject semanticObject}.\n\nName of semantic object which is used to fill the navigation popover. <b>Note</b>: Setting a value triggers an asynchronous determination, so the effect can be delayed."
        },
        {
          "name": "getSemanticObjectController",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "any",
            "description": "Value of property <code>semanticObjectController</code>"
          },
          "description": "Gets current value of property {@link #getSemanticObjectController semanticObjectController}.\n\nThe semantic object controller controls events for several SmartLink controls. If the controller is not set manually, it tries to find a SemanticObjectController in its parent hierarchy."
        },
        {
          "name": "getSemanticObjectLabel",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>semanticObjectLabel</code>"
          },
          "description": "Gets current value of property {@link #getSemanticObjectLabel semanticObjectLabel}.\n\nShown label of semantic object.",
          "deprecated": {
            "since": "1.40.0",
            "text": "Title section with <code>semanticObjectLabel</code> has been removed due to new UI design"
          }
        },
        {
          "name": "getUom",
          "visibility": "public",
          "since": "1.48.0",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>uom</code>"
          },
          "description": "Gets current value of property {@link #getUom uom}.\n\nAdditionally to the <code>text</code> property the Unit of Measure can be displayed.\n\nDefault value is <code>undefined</code>."
        },
        {
          "name": "setAdditionalSemanticObjects",
          "visibility": "public",
          "since": "1.42.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.SmartLink",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sAdditionalSemanticObjects",
              "type": "string[]",
              "optional": false,
              "description": "New value for property <code>additionalSemanticObjects</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getAdditionalSemanticObjects additionalSemanticObjects}.\n\nSemantic object names which can be used additional to the default <code>semanticObject</code> property in order to get navigation targets links.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>[]</code>."
        },
        {
          "name": "setContactAnnotationPath",
          "visibility": "public",
          "since": "1.40.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.SmartLink",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sContactAnnotationPath",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>contactAnnotationPath</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getContactAnnotationPath contactAnnotationPath}.\n\nNavigation property that points from the current to the related entity type where the com.sap.vocabularies.Communication.v1.Contact annotation is defined, for example, <code>'to_Supplier'</code>. An empty string means that the related entity type is the current one.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>undefined</code>."
        },
        {
          "name": "setCreateControlCallback",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.SmartLink",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oCreateControlCallback",
              "type": "object",
              "optional": false,
              "description": "New value for property <code>createControlCallback</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getCreateControlCallback createControlCallback}.\n\nFunction that enables the SmartLink control to create an alternative control, which is displayed if no navigation targets are available. The function has no parameters and has to return an instance of sap.ui.core.Control.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setEnableAvailableActionsPersonalization",
          "visibility": "public",
          "since": "1.44.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.SmartLink",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bEnableAvailableActionsPersonalization",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>enableAvailableActionsPersonalization</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getEnableAvailableActionsPersonalization enableAvailableActionsPersonalization}.\n\nDetermines whether the personalization link is shown inside the NavigationPopover control.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setFieldName",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.SmartLink",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sFieldName",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>fieldName</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getFieldName fieldName}.\n\nThe metadata field name for this SmartLink control.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setForceLinkRendering",
          "visibility": "public",
          "since": "1.58.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.SmartLink",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bForceLinkRendering",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>forceLinkRendering</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getForceLinkRendering forceLinkRendering}.\n\nIf set to true, the <code>SmartLink</code> control is rendered as a link even if <code>contactAnnotationPath</code> is not set and navigation targets do not exist. Setting this property to <code>true</code> allows the application, for example, to modify the <code>SmartLink</code> control in the event handler, after the user has clicked on a link and the registered event handler has been called.\n\n<b>Note:</b> The <code>ignoreLinkRendering</code> property and the <code>ignoredFields</code> property of the associated <code>SemanticObjectController</code> take precedence over <code>forceLinkRendering</code>.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setIgnoreLinkRendering",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.SmartLink",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bIgnoreLinkRendering",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>ignoreLinkRendering</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getIgnoreLinkRendering ignoreLinkRendering}.\n\nIf set to <code>true</code>, the SmartLink control will render the <code>innerControl</code> or the control provided by <code>createControlCallback</code> instead of the actual link. This is used for example by the SemanticObjectController if this SmartLink is listed in its <code>ignoredFields</code> or no navigation targets were found during prefetch.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setInnerControl",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.SmartLink",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oInnerControl",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The innerControl to set"
            }
          ],
          "description": "Sets the aggregated {@link #getInnerControl innerControl}."
        },
        {
          "name": "setMapFieldToSemanticObject",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.SmartLink",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bMapFieldToSemanticObject",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>mapFieldToSemanticObject</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getMapFieldToSemanticObject mapFieldToSemanticObject}.\n\nIf set to <code>false</code>, the SmartLink control will not replace its field name with the according <code>semanticObject</code> property during the calculation of the semantic attributes. This enables the usage of several SmartLink controls on the same semantic object.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setSemanticObject",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.SmartLink",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sSemanticObject",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>semanticObject</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSemanticObject semanticObject}.\n\nName of semantic object which is used to fill the navigation popover. <b>Note</b>: Setting a value triggers an asynchronous determination, so the effect can be delayed.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setSemanticObjectController",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.SmartLink",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oSemanticObjectController",
              "type": "any",
              "optional": false,
              "description": "New value for property <code>semanticObjectController</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSemanticObjectController semanticObjectController}.\n\nThe semantic object controller controls events for several SmartLink controls. If the controller is not set manually, it tries to find a SemanticObjectController in its parent hierarchy.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setSemanticObjectLabel",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.SmartLink",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sSemanticObjectLabel",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>semanticObjectLabel</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSemanticObjectLabel semanticObjectLabel}.\n\nShown label of semantic object.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.",
          "deprecated": {
            "since": "1.40.0",
            "text": "Title section with <code>semanticObjectLabel</code> has been removed due to new UI design"
          }
        },
        {
          "name": "setUom",
          "visibility": "public",
          "since": "1.48.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.SmartLink",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sUom",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>uom</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getUom uom}.\n\nAdditionally to the <code>text</code> property the Unit of Measure can be displayed.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>undefined</code>."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.ui.comp.personalization.AggregationRole",
      "basename": "AggregationRole",
      "resource": "sap/ui/comp/library.js",
      "module": "sap/ui/comp/library",
      "export": "personalization.AggregationRole",
      "static": true,
      "visibility": "public",
      "description": "Provides enumeration sap.ui.comp.personalization.AggregationRole. A subset of aggregation roles used in table personalization.",
      "ui5-metamodel": true,
      "properties": [
        {
          "name": "Dimension",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Dimension role."
        },
        {
          "name": "Measure",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Measure role."
        },
        {
          "name": "NotDimeasure",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Role which is neither dimension nor measure."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.ui.comp.personalization.ChangeType",
      "basename": "ChangeType",
      "resource": "sap/ui/comp/library.js",
      "module": "sap/ui/comp/library",
      "export": "personalization.ChangeType",
      "static": true,
      "visibility": "public",
      "description": "Provides enumeration sap.ui.comp.personalization.ChangeType. A subset of changes done during table personalization.",
      "ui5-metamodel": true,
      "properties": [
        {
          "name": "ModelChanged",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Change is applied to model but not applied to table"
        },
        {
          "name": "TableChanged",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Change is applied to model and to table"
        },
        {
          "name": "Unchanged",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Not changed"
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.ui.comp.personalization.ColumnType",
      "basename": "ColumnType",
      "resource": "sap/ui/comp/library.js",
      "module": "sap/ui/comp/library",
      "export": "personalization.ColumnType",
      "static": true,
      "visibility": "public",
      "description": "Provides enumeration sap.ui.comp.personalization.ColumnType. A subset of column types that fit for table personalization.",
      "ui5-metamodel": true,
      "properties": [
        {
          "name": "ColumnWrapper",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Represents <code>sap.ui.comp.personalization.ColumnWrapper</code>."
        },
        {
          "name": "ResponsiveColumn",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Represents <code>sap.m.Column</code>."
        },
        {
          "name": "TableColumn",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Represents <code>sap.ui.table.Column</code>."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.ui.comp.personalization.ResetType",
      "basename": "ResetType",
      "resource": "sap/ui/comp/library.js",
      "module": "sap/ui/comp/library",
      "export": "personalization.ResetType",
      "static": true,
      "visibility": "public",
      "description": "Provides enumeration sap.ui.comp.personalization.ResetType. A subset of reset types used in table personalization.",
      "ui5-metamodel": true,
      "properties": [
        {
          "name": "ResetFull",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Reset back to Restore (i.e. the version of the table with which the controller was instantiated or via setter updated) was triggered (either via API or via reset button)"
        },
        {
          "name": "ResetPartial",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Reset back to the CurrentVariant was triggered"
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.ui.comp.personalization.TableType",
      "basename": "TableType",
      "resource": "sap/ui/comp/library.js",
      "module": "sap/ui/comp/library",
      "export": "personalization.TableType",
      "static": true,
      "visibility": "public",
      "description": "Provides enumeration sap.ui.comp.personalization.TableType. A subset of table types that fit for table personalization.",
      "ui5-metamodel": true,
      "properties": [
        {
          "name": "AnalyticalTable",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Represents <code>sap.ui.table.AnalyticalTable</code>."
        },
        {
          "name": "ChartWrapper",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Represents <code>sap.ui.comp.personalization.ChartWrapper</code>."
        },
        {
          "name": "ResponsiveTable",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Represents <code>sap.m.Table</code>."
        },
        {
          "name": "SelectionWrapper",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Represents <code>sap.ui.comp.personalization.SelectionWrapper</code>."
        },
        {
          "name": "Table",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Represents <code>sap.ui.table.Table</code>."
        },
        {
          "name": "TreeTable",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Represents <code>sap.ui.table.TreeTable</code>."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.ui.comp.smartchart.SelectionMode",
      "basename": "SelectionMode",
      "resource": "sap/ui/comp/library.js",
      "module": "sap/ui/comp/library",
      "export": "smartchart.SelectionMode",
      "static": true,
      "visibility": "public",
      "description": "Enumeration for supported selection mode in SmartChart",
      "ui5-metamodel": true,
      "properties": [
        {
          "name": "Multi",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Multi selection mode, multiple sets of data points can be selected at once."
        },
        {
          "name": "None",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "None selection mode, no data points can be selected."
        },
        {
          "name": "Single",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Single selection mode, only one set of data points can be selected at once."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.comp.smartchart.SmartChart",
      "basename": "SmartChart",
      "resource": "sap/ui/comp/smartchart/SmartChart.js",
      "module": "sap/ui/comp/smartchart/SmartChart",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.m.VBox",
      "description": "The SmartChart control creates a chart based on the OData metadata and the provided configuration. To use the control, the <code>entitySet</code> property must be specified. This property is used to fetch the metadata, from which the chart UI will be generated.<br> Based on the chartType property, this control will render initially the corresponding chart.<br> <b>Note:</b> Most of the properties are not dynamic and cannot be changed once the control has been initialized.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "entitySet",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The entity set name from which to fetch data and generate the columns.<br> <b>Note</b> This is not a dynamic property.",
            "methods": ["getEntitySet", "setEntitySet"]
          },
          {
            "name": "smartFilterId",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "ID of the corresponding SmartFilter control. If specified, the SmartChart control searches for the SmartFilter control (also in the closest parent view) and attaches to the relevant events of the SmartFilter control to fetch data, show overlay etc.",
            "methods": ["getSmartFilterId", "setSmartFilterId"]
          },
          {
            "name": "ignoredFields",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "CSV of fields that must be ignored in the OData metadata by the SmartChart control.<br> <b>Note:</b> No validation is done. Please ensure that you do not add spaces or special characters.",
            "methods": ["getIgnoredFields", "setIgnoredFields"]
          },
          {
            "name": "requestAtLeastFields",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "CSV of fields that must be always requested by the backend system.<br> This property is mainly meant to be used if there is no PresentationVariant annotation.<br> If both this property and the PresentationVariant annotation exist, the select request sent to the backend would be a combination of both.<br> <b>Note:</b> No validation is done. Please ensure that you do not add spaces or special characters. Also, setting this property during runtime, will delete the current drill-stack and lead to a loss of the drill history.",
            "methods": ["getRequestAtLeastFields", "setRequestAtLeastFields"]
          },
          {
            "name": "ignoreFromPersonalisation",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "CSV of fields that is not shown in the personalization dialog.<br> <b>Note:</b> No validation is done. Please ensure that you do not add spaces or special characters.",
            "methods": [
              "getIgnoreFromPersonalisation",
              "setIgnoreFromPersonalisation"
            ]
          },
          {
            "name": "chartType",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Specifies the type of chart to be created by the SmartChart control.",
            "methods": ["getChartType", "setChartType"]
          },
          {
            "name": "ignoredChartTypes",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "CSV of fields that is not shown in the list of available chart types.<br> <b>Note:</b> No validation is done. Please ensure that you do not add spaces or special characters.",
            "methods": ["getIgnoredChartTypes", "setIgnoredChartTypes"]
          },
          {
            "name": "useVariantManagement",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "description": "If set to <code>true</code>, variants are used. As a prerequisite, you need to specify the persistencyKey property.",
            "methods": ["getUseVariantManagement", "setUseVariantManagement"]
          },
          {
            "name": "useChartPersonalisation",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "description": "If set to <code>true</code>, personalized chart settings are defined. If you want to persist the chart personalization, you need to specify the persistencyKey property.",
            "methods": [
              "getUseChartPersonalisation",
              "setUseChartPersonalisation"
            ]
          },
          {
            "name": "header",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Specifies header text that is shown in the chart.",
            "methods": ["getHeader", "setHeader"]
          },
          {
            "name": "persistencyKey",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Key used to access personalization data.",
            "methods": ["getPersistencyKey", "setPersistencyKey"]
          },
          {
            "name": "currentVariantId",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Retrieves or applies the current variant.",
            "methods": ["getCurrentVariantId", "setCurrentVariantId"]
          },
          {
            "name": "enableAutoBinding",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "description": "If set to <code>true</code>, this enables automatic binding of the chart using the chartBindingPath (if it exists) or entitySet property. This happens right after the <code>initialise</code> event has been fired.",
            "methods": ["getEnableAutoBinding", "setEnableAutoBinding"]
          },
          {
            "name": "chartBindingPath",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Specifies the path that is used during the binding of the chart. If not specified, the entitySet property is used instead. (used only if binding is established internally/automatically - See enableAutoBinding)",
            "methods": ["getChartBindingPath", "setChartBindingPath"]
          },
          {
            "name": "showDrillButtons",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "description": "Controls the visibility of the Drill Up and Drill Down buttons.",
            "methods": ["getShowDrillButtons", "setShowDrillButtons"]
          },
          {
            "name": "showZoomButtons",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "since": "1.36",
            "description": "Controls the visibility of the Zoom In and Zoom Out buttons.",
            "methods": ["getShowZoomButtons", "setShowZoomButtons"]
          },
          {
            "name": "showSemanticNavigationButton",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "since": "1.36",
            "description": "Controls the visibility of the Navigation button",
            "methods": [
              "getShowSemanticNavigationButton",
              "setShowSemanticNavigationButton"
            ]
          },
          {
            "name": "showVariantManagement",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "since": "1.38",
            "description": "Controls the visibility of the Variant Management.",
            "methods": ["getShowVariantManagement", "setShowVariantManagement"]
          },
          {
            "name": "showDownloadButton",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "since": "1.39",
            "description": "Controls the visibility of the chart download button.",
            "methods": ["getShowDownloadButton", "setShowDownloadButton"]
          },
          {
            "name": "showDetailsButton",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "since": "1.38",
            "description": "Controls the visibility of the Details button. If set to <code>true</code>, the datapoint tooltip will be disabled as the information of selected datapoints will be found in the details popover. This will also set the drill-down button to invisible.",
            "methods": ["getShowDetailsButton", "setShowDetailsButton"]
          },
          {
            "name": "showDrillBreadcrumbs",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "since": "1.38",
            "description": "Controls the visibility of the Breadcrumbs control for drilling up within the visible dimensions. If set to <code>true</code>, the toolbar header will be replaced by the Breadcrumbs control. This will also set the drill-up button to invisible.",
            "methods": ["getShowDrillBreadcrumbs", "setShowDrillBreadcrumbs"]
          },
          {
            "name": "showChartTooltip",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "since": "1.38",
            "description": "Controls the visibility of the chart tooltip. If set to <code>true </code>, an instance of sap.viz.ui5.controls.VizTooltip will be created and shown when hovering over a data point.",
            "methods": ["getShowChartTooltip", "setShowChartTooltip"]
          },
          {
            "name": "showLegendButton",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "since": "1.36",
            "description": "Controls the visibility of the Navigation button",
            "methods": ["getShowLegendButton", "setShowLegendButton"]
          },
          {
            "name": "legendVisible",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "since": "1.36",
            "description": "Set chart's legend properties.",
            "methods": ["getLegendVisible", "setLegendVisible"]
          },
          {
            "name": "selectionMode",
            "type": "sap.ui.comp.smartchart.SelectionMode",
            "defaultValue": "Multi",
            "group": "Misc",
            "visibility": "public",
            "since": "1.36",
            "description": "Chart selection mode. Supported values are {@link sap.ui.comp.smartchart.SelectionMode.Single} or {@link sap.ui.comp.smartchart.SelectionMode.Multi}, case insensitive, always return in upper case. Unsupported values will be ignored.",
            "methods": ["getSelectionMode", "setSelectionMode"]
          },
          {
            "name": "showFullScreenButton",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "since": "1.36",
            "description": "Controls the visibility of the FullScreen button.",
            "methods": ["getShowFullScreenButton", "setShowFullScreenButton"]
          },
          {
            "name": "useTooltip",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "since": "1.36",
            "description": "Specifies weather an instance of {@link sap.viz.ui5.controls.VizTooltip} or {@link sap.viz.ui5.controls.Popover} is used. If set to <code>true</code>, a tooltip will be displayed, a popover otherwise.",
            "methods": ["getUseTooltip", "setUseTooltip"]
          },
          {
            "name": "useListForChartTypeSelection",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "since": "1.38",
            "description": "Controls the visualization for chart type selection. If set to <code>true</code>, the list of available chart types will be displayed. If set to <code>false</code> and there are three or fewer available chart types, the chart types will be displayed as separate buttons in the toolbar. If there are more than three chart types, a list will be shown.",
            "deprecated": {
              "since": "1.48.0",
              "text": "Setting the property to <code>false</code> will have no effect on the visualization of chart type selection. <code>SmartChart</code> will always show a list of chart types."
            },
            "methods": [
              "getUseListForChartTypeSelection",
              "setUseListForChartTypeSelection"
            ]
          },
          {
            "name": "showChartTypeSelectionButton",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "since": "1.48",
            "description": "Controls the visibility of the chart type selection button.",
            "methods": [
              "getShowChartTypeSelectionButton",
              "setShowChartTypeSelectionButton"
            ]
          },
          {
            "name": "noData",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.46",
            "description": "Defines the custom text that will be displayed in case no data is found for the current binding.",
            "methods": ["getNoData", "setNoData"]
          },
          {
            "name": "showToolbar",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "since": "1.54",
            "description": "Controls the visibility of the toolbar.",
            "methods": ["getShowToolbar", "setShowToolbar"]
          },
          {
            "name": "toolbarStyle",
            "type": "sap.m.ToolbarStyle",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "since": "1.54",
            "description": "Defines the visual style of the smart charts <code>Toolbar</code>. <b>Note:</b> The visual styles are theme-dependent.",
            "methods": ["getToolbarStyle", "setToolbarStyle"]
          },
          {
            "name": "showDimensionsTitle",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "since": "1.54",
            "description": "Controls the visibility of the title in the dimension area of the chart.",
            "methods": ["getShowDimensionsTitle", "setShowDimensionsTitle"]
          },
          {
            "name": "showMeasuresTitle",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "since": "1.54",
            "description": "Controls the visibility of the title in the measure area of the chart.",
            "methods": ["getShowMeasuresTitle", "setShowMeasuresTitle"]
          }
        ],
        "aggregations": [
          {
            "name": "toolbar",
            "singularName": "toolbar",
            "type": "sap.m.Toolbar",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "A custom toolbar that can be specified by the user to define their own buttons, icons, etc. If this is added, the SmartChart control does not create its own toolbar, but uses this one instead. However, if default actions, such as showSemanticNavigation, showFullScreenButton etc. are set, these actions are added at the left-hand side of the toolbar.",
            "methods": ["getToolbar", "destroyToolbar", "setToolbar"]
          },
          {
            "name": "semanticObjectController",
            "singularName": "semanticObjectController",
            "type": "sap.ui.comp.navpopover.SemanticObjectController",
            "cardinality": "0..1",
            "visibility": "public",
            "since": "1.36",
            "description": "The Semantic Object Controller allows the user to specify and overwrite functionality for semantic object navigation.",
            "methods": [
              "getSemanticObjectController",
              "destroySemanticObjectController",
              "setSemanticObjectController"
            ]
          },
          {
            "name": "selectionDetailsItemActions",
            "singularName": "selectionDetailsItemAction",
            "type": "sap.ui.core.Item",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Actions on item level which can be specified for the selection details popover.",
            "experimental": { "since": "1.48" },
            "methods": [
              "getSelectionDetailsItemActions",
              "destroySelectionDetailsItemActions",
              "insertSelectionDetailsItemAction",
              "addSelectionDetailsItemAction",
              "removeSelectionDetailsItemAction",
              "indexOfSelectionDetailsItemAction",
              "removeAllSelectionDetailsItemActions"
            ]
          },
          {
            "name": "selectionDetailsActions",
            "singularName": "selectionDetailsAction",
            "type": "sap.ui.core.Item",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Actions on footer level which can be specified for the selection details popover.",
            "experimental": { "since": "1.48" },
            "methods": [
              "getSelectionDetailsActions",
              "destroySelectionDetailsActions",
              "insertSelectionDetailsAction",
              "addSelectionDetailsAction",
              "removeSelectionDetailsAction",
              "indexOfSelectionDetailsAction",
              "removeAllSelectionDetailsActions"
            ]
          },
          {
            "name": "selectionDetailsActionGroups",
            "singularName": "selectionDetailsActionGroup",
            "type": "sap.ui.core.Item",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Actions on group level which can be specified for the selection details popover.",
            "experimental": { "since": "1.48" },
            "methods": [
              "getSelectionDetailsActionGroups",
              "destroySelectionDetailsActionGroups",
              "insertSelectionDetailsActionGroup",
              "addSelectionDetailsActionGroup",
              "removeSelectionDetailsActionGroup",
              "indexOfSelectionDetailsActionGroup",
              "removeAllSelectionDetailsActionGroups"
            ]
          }
        ],
        "associations": [
          {
            "name": "smartVariant",
            "singularName": "smartVariant",
            "type": "sap.ui.core.Control",
            "cardinality": "0..1",
            "visibility": "public",
            "since": "1.38",
            "description": "Identifies the SmartVariant control which should be used for the personalization. Will be ignored if the advanced mode is set.",
            "methods": ["getSmartVariant", "setSmartVariant"]
          }
        ],
        "events": [
          {
            "name": "initialise",
            "visibility": "public",
            "description": "This event is fired once the control has been initialized. <b>Note:</b> For compatibility reasons the sap.chart library is loaded synchroniously as soon as a event handler for the <code>initialise</code> event has been attached. Please use event <code>intialized</code> instead.",
            "deprecated": { "since": "1.65" },
            "methods": [
              "attachInitialise",
              "detachInitialise",
              "fireInitialise"
            ]
          },
          {
            "name": "initialized",
            "visibility": "public",
            "description": "New event, async successor of initialise",
            "methods": [
              "attachInitialized",
              "detachInitialized",
              "fireInitialized"
            ]
          },
          {
            "name": "beforeRebindChart",
            "visibility": "public",
            "description": "This event is fired right before the <code>SmartChart</code> control triggers the binding / rebinding of the inner chart.<br> <b>Note:</b> In certain cases the inner chart triggers a rebinding by itself. In these cases, the event is not fired.",
            "parameters": {
              "bindingParams": {
                "name": "bindingParams",
                "type": "JSON",
                "description": "The bindingParams object contains filters, sorters, and other binding-related information for the chart"
              },
              "bindingParams.preventChartBind": {
                "name": "bindingParams.preventChartBind",
                "type": "boolean",
                "description": "If set to <code>true</code> by the listener, binding is prevented"
              },
              "bindingParams.filters": {
                "name": "bindingParams.filters",
                "type": "sap.ui.model.Filter[]",
                "description": "The combined filter array containing a set of sap.ui.model.Filter instances of the SmartChart and SmartFilter controls; can be modified by users to influence filtering"
              },
              "bindingParams.sorter": {
                "name": "bindingParams.sorter",
                "type": "sap.ui.model.Sorter[]",
                "description": "An array containing a set of sap.ui.model.Sorter instances of the SmartChart control (personalization); can be modified by users to influence sorting"
              },
              "bindingParams.length": {
                "name": "bindingParams.length",
                "type": "Number",
                "description": "The maximal number of items that is displayed for the <code>SmartChart</code> control"
              },
              "bindingParams.parameters": {
                "name": "bindingParams.parameters",
                "type": "object",
                "description": "a map of parameters which is passed to the binding"
              },
              "bindingParams.events": {
                "name": "bindingParams.events",
                "type": "object",
                "description": "map of event listeners for the binding events (since 1.56). The events listeners can only be registered while the binding is created. So, ensure that the events parameter is filled from the beginning, so that the registration can be done while the binding is created."
              }
            },
            "methods": [
              "attachBeforeRebindChart",
              "detachBeforeRebindChart",
              "fireBeforeRebindChart"
            ]
          },
          {
            "name": "dataReceived",
            "visibility": "public",
            "description": "This event is fired when data is received after binding. This event is fired if the binding for the chart is done by the SmartChart control itself.",
            "deprecated": {
              "since": "1.56",
              "text": "Use <code>beforeRebindChart</code> event to attach/listen to the binding \"events\" directly"
            },
            "methods": [
              "attachDataReceived",
              "detachDataReceived",
              "fireDataReceived"
            ]
          },
          {
            "name": "afterVariantInitialise",
            "visibility": "public",
            "description": "This event is fired after the variant management in the SmartChart control has been initialized.",
            "methods": [
              "attachAfterVariantInitialise",
              "detachAfterVariantInitialise",
              "fireAfterVariantInitialise"
            ]
          },
          {
            "name": "afterVariantSave",
            "visibility": "public",
            "description": "This event is fired after a variant has been saved. This event can be used to retrieve the ID of the saved variant.",
            "parameters": {
              "currentVariantId": {
                "name": "currentVariantId",
                "type": "string",
                "description": "ID of the currently selected variant"
              }
            },
            "methods": [
              "attachAfterVariantSave",
              "detachAfterVariantSave",
              "fireAfterVariantSave"
            ]
          },
          {
            "name": "afterVariantApply",
            "visibility": "public",
            "description": "This event is fired after a variant has been applied.",
            "parameters": {
              "currentVariantId": {
                "name": "currentVariantId",
                "type": "string",
                "description": "ID of the currently selected variant"
              }
            },
            "methods": [
              "attachAfterVariantApply",
              "detachAfterVariantApply",
              "fireAfterVariantApply"
            ]
          },
          {
            "name": "showOverlay",
            "visibility": "public",
            "description": "This event is fired right before the overlay is shown.",
            "methods": [
              "attachShowOverlay",
              "detachShowOverlay",
              "fireShowOverlay"
            ]
          },
          {
            "name": "fullScreenToggled",
            "visibility": "public",
            "since": "1.46",
            "description": "This event is fired right after the full screen mode of the SmartChart control has been changed.",
            "parameters": {
              "fullScreen": {
                "name": "fullScreen",
                "type": "boolean",
                "description": "If <code>true</code> the control is in full screen mode"
              }
            },
            "methods": [
              "attachFullScreenToggled",
              "detachFullScreenToggled",
              "fireFullScreenToggled"
            ]
          },
          {
            "name": "selectionDetailsActionPress",
            "visibility": "public",
            "since": "1.48",
            "description": "This event is fired when any action in the selection details popover is pressed.",
            "experimental": { "since": "1.48" },
            "parameters": {
              "action": {
                "name": "action",
                "type": "sap.ui.core.Item",
                "description": "The action that has to be processed once the action has been pressed"
              },
              "itemContexts": {
                "name": "itemContexts",
                "type": "sap.ui.model.Context",
                "description": "If the action is pressed on one of the {@link sap.m.SelectionDetailsItem items}, the parameter contains the {@link sap.ui.model.Context context} of the pressed {@link sap.m.SelectionDetailsItem item}. If a custom action or action group of the SelectionDetails popover is pressed, this parameter contains all {@link sap.ui.model.Context contexts} of the {@link sap.m.SelectionDetailsItem items}."
              },
              "level": {
                "name": "level",
                "type": "sap.m.SelectionDetailsActionLevel",
                "description": "The action level of action buttons. The available levels are Item, List and Group"
              }
            },
            "methods": [
              "attachSelectionDetailsActionPress",
              "detachSelectionDetailsActionPress",
              "fireSelectionDetailsActionPress"
            ]
          },
          {
            "name": "chartDataChanged",
            "visibility": "public",
            "description": "This event is fired when <code>SmartChart</code> control data changes, due to changes in the personalization dialog or drill operations.<br> The data can be changed via sorters, filters or drill-ups/drill-downs.",
            "parameters": {
              "changeTypes": {
                "name": "changeTypes",
                "type": "object",
                "description": "Object which contains a boolean flag for dimeasure, filter, sort. If set to <code>true</code>, it has been changed."
              }
            },
            "methods": [
              "attachChartDataChanged",
              "detachChartDataChanged",
              "fireChartDataChanged"
            ]
          }
        ],
        "annotations": [
          {
            "name": "semanticObject",
            "namespace": "com.sap.vocabularies.Common.v1",
            "target": ["EntitySet", "EntityType", "Property"],
            "annotation": "SemanticObject",
            "defaultValue": "null",
            "appliesTo": ["text"],
            "since": "1.34.1",
            "description": "Defines a name of the <code>SemanticObject</code> that can be represented with an <code>EntitySet</code>, <code>EntityType</code> or identified by a <code>Property</code>. With this annotation in place, the <code>SemanticObjectController</code> will provide all the available features for the <code>SmartChart</code> control. <i>XML Example of OData V4 with SemanticObject on ProductName</i> <br> <b>Note:</b> Navigation targets are determined using {@link sap.ushell.services.CrossApplicationNavigation CrossApplicationNavigation} of the unified shell service.\n\n<pre>\n   &lt;Annotations Target=&quot;ProductName&quot;&gt;\n     &lt;Annotation Term=&quot;com.sap.vocabularies.Common.v1.SemanticObject&quot; String=&quot;SemanticObjectName&quot; /&gt;\n  &lt;/Annotations&gt;\n</pre>"
          },
          {
            "name": "fieldVisible",
            "namespace": "com.sap.vocabularies.Common.v1",
            "target": ["Property"],
            "annotation": "FieldControlType",
            "defaultValue": "false",
            "appliesTo": ["field/#/visible"],
            "since": "1.34.1",
            "description": "Defines whether a field in the SmartChart control is visible. The SmartChart interprets the <code>EnumMember</code> <code>FieldControlType/Hidden</code> of the <code>FieldControl</code> annotation for setting the visibility. <b>Note:</b> Currently only <code>FieldControlType/Hidden</code> is supported for statically hiding the fields. <i>XML Example of OData V4 with hidden Customer and CompanyCode Properties</i>\n\n<pre>\n   &lt;Property Name=&quot;Customer&quot;&gt;\n     &lt;Annotation Term=&quot;com.sap.vocabularies.Common.v1.FieldControl&quot; EnumMember=&quot;com.sap.vocabularies.Common.v1.FieldControlType/Hidden&quot;/&gt;\n   &lt;/Property&gt;\n   &lt;Property Name=&quot;CompanyCode&quot;&gt;\n     &lt;Annotation Term=&quot;com.sap.vocabularies.Common.v1.FieldControl&quot; EnumMember=&quot;com.sap.vocabularies.Common.v1.FieldControlType/Hidden&quot;/&gt;\n   &lt;/Property&gt;\n</pre>\n\nFor OData v2 the <code>sap:visible</code> annotation on the <code>Property</code> can be used to assign visibility.\n\n<pre>\n   &lt;Property Name=&quot;Customer&quot; ... sap:visible=&quot;false&quot;/&gt;\n   &lt;Property Name=&quot;CompanyCode&quot; ... sap:visible=&quot;false&quot;/&gt;\n</pre>"
          },
          {
            "name": "presentationVariant",
            "namespace": "com.sap.vocabularies.UI.v1",
            "target": ["EntitySet", "EntityType"],
            "annotation": "PresentationVariant",
            "defaultValue": "null",
            "appliesTo": ["chartFields"],
            "since": "1.34.1",
            "description": "Renders the initial chart fields for the SmartChart control. A <code>PropertyPath</code> and an <code>AnnotationPath</code> can be used for constructing PresentationVariant annotation. <i>XML Example of OData V4 with Customer and CompanyCode Properties as PresentationVariant</i>\n\n<pre>\n   &lt;Annotation Term=&quot;com.sap.vocabularies.UI.v1.PresentationVariant&quot;&gt;\n     &lt;Record&gt;\n       &lt;PropertyValue Property=&quot;Visualizations&quot;&gt;\n         &lt;Collection&gt;\n           &lt;AnnotationPath&gt;@UI.Chart&lt;/AnnotationPath&gt;\n         &lt;/Collection&gt;\n       &lt;/PropertyValue&gt;\n       &lt;PropertyValue Property=&quot;RequestAtLeast&quot;&gt;\n         &lt;Collection&gt;\n           &lt;PropertyPath&gt;Customer&lt;/PropertyPath&gt;\n           &lt;PropertyPath&gt;CompanyCode&lt;/PropertyPath&gt;\n         &lt;/Collection&gt;\n       &lt;/PropertyValue&gt;\n         &lt;PropertyValue Property=&quot;SortOrder&quot;&gt;\n           &lt;Collection&gt;\n             &lt;Record&gt;\n               &lt;PropertyValue Property=&quot;Property&quot; PropertyPath=&quot;CompanyCode&quot;/&gt;\n               &lt;PropertyValue Property=&quot;Descending&quot; Bool=&quot;true&quot;/&gt;\n             &lt;/Record&gt;\n             &lt;Record&gt;\n               &lt;PropertyValue Property=&quot;Property&quot; PropertyPath=&quot;Customer&quot;/&gt;\n             &lt;/Record&gt;\n           &lt;/Collection&gt;\n         &lt;/PropertyValue&gt;\n       &lt;/Record&gt;\n     &lt;/Annotation&gt;\n</pre>"
          },
          {
            "name": "chart",
            "namespace": "com.sap.vocabularies.UI.v1",
            "target": ["EntityType"],
            "annotation": "Chart",
            "defaultValue": "null",
            "appliesTo": ["chart"],
            "since": "1.34.1",
            "description": "Renders a chart based on the information that is provided within the <code>Chart</code> annotation. <code>Chart</code> annotation must be defined for an </code>EntityType</code>\n\n<i>XML Example of OData V4 with Chart Annotation and ChartType Column Chart</i>\n\n<pre>\n   &lt;Annotations Target=&quot;Item&quot; xmlns=&quot;http://docs.oasis-open.org/odata/ns/edm&quot;&gt;\n     &lt;Annotation Term=&quot;com.sap.vocabularies.UI.v1.Chart&quot;&gt;\n       &lt;Record&gt;\n         &lt;PropertyValue Property=&quot;Title&quot; String=&quot;Line Items&quot; /&gt;\n         &lt;PropertyValue Property=&quot;ChartType&quot;\n            EnumMember=&quot;com.sap.vocabularies.UI.v1.ChartType/Column&quot; /&gt;\n         &lt;PropertyValue Property=&quot;Dimensions&quot;&gt;\n           &lt;Collection&gt;\n             &lt;PropertyPath&gt;CompanyCode&lt;/PropertyPath&gt;\n             &lt;PropertyPath&gt;Customer&lt;/PropertyPath&gt;\n           &lt;/Collection&gt;\n         &lt;/PropertyValue&gt;\n         &lt;PropertyValue Property=&quot;Measures&quot;&gt;\n           &lt;Collection&gt;\n             &lt;PropertyPath&gt;AmountInCompanyCodeCurrency&lt;/PropertyPath&gt;\n             &lt;PropertyPath&gt;AmountInTransactionCurrency&lt;/PropertyPath&gt;\n           &lt;/Collection&gt;\n         &lt;/PropertyValue&gt;\n       &lt;/Record&gt;\n     &lt;/Annotation&gt;\n   &lt;/Annotations&gt;\n</pre>"
          },
          {
            "name": "dataPoint",
            "namespace": "com.sap.vocabularies.UI.v1",
            "target": ["PropertyValue"],
            "annotation": "DataPoint",
            "defaultValue": "null",
            "appliesTo": ["dataPoint"],
            "since": "1.48.0",
            "description": "Based on the UI.DataPoint that is provided by the measure attributes, semantic patterns and coloring can be defined for the chart. The <code>UI.DataPoint</code> annotation must be defined for an </code>EntityType</code> <i>XML Example of OData V4 with DataPoint Annotation with semantic coloring</i> For more information see {@link sap.chart.ColoringType.Criticality}\n\n<pre>\n   &lt;Annotations Target=&quot;Item&quot; xmlns=&quot;http://docs.oasis-open.org/odata/ns/edm&quot;&gt;\n     &lt;Annotation Term=&quot;com.sap.vocabularies.UI.v1.Chart&quot;&gt;\n       &lt;Record&gt;\n         &lt;PropertyValue Property=&quot;Title&quot; String=&quot;Line Items&quot; /&gt;\n         &lt;PropertyValue Property=&quot;ChartType&quot;\n            EnumMember=&quot;com.sap.vocabularies.UI.v1.ChartType/Column&quot; /&gt;\n         &lt;PropertyValue Property=&quot;Dimensions&quot;&gt;\n           &lt;Collection&gt;\n             &lt;PropertyPath&gt;CompanyCode&lt;/PropertyPath&gt;\n             &lt;PropertyPath&gt;Customer&lt;/PropertyPath&gt;\n           &lt;/Collection&gt;\n         &lt;/PropertyValue&gt;\n         &lt;PropertyValue Property=&quot;Measures&quot;&gt;\n           &lt;Collection&gt;\n             &lt;PropertyPath&gt;AmountInCompanyCodeCurrency&lt;/PropertyPath&gt;\n             &lt;PropertyPath&gt;AmountInTransactionCurrency&lt;/PropertyPath&gt;\n           &lt;/Collection&gt;\n         &lt;/PropertyValue&gt;\n         &lt;PropertyValue Property=&quot;MeasureAttributes&quot;&gt;\n           &lt;Collection&gt;\n              &lt;Record&gt;\n                 &lt;PropertyValue Property=&quot;Measure&quot; PropertyPath=&quot;AmountInCompanyCodeCurrency&quot; /&gt;\n                 &lt;PropertyValue Property=&quot;Role&quot; EnumMember=&quot;com.sap.vocabularies.UI.v1.ChartMeasureRoleType/Axis1&quot; /&gt;\n                 &lt;PropertyValue Property=&quot;DataPoint&quot; AnnotationPath=&quot;@com.sap.vocabularies.UI.v1.DataPoint#semanticColoring&quot; /&gt;\n              &lt;/Record&gt;\n           &lt;/Collection&gt;\n         &lt;/PropertyValue&gt;\n       &lt;/Record&gt;\n     &lt;/Annotation&gt;\n     &lt;Annotation Term=&quot;com.sap.vocabularies.UI.v1.DataPoint&quot; Qualifier=&quot;semanticColoring&quot; &gt;\n\t  &lt;Record Type=&quot;com.sap.vocabularies.UI.v1.DataPointType&quot;&gt;\n\t\t&lt;PropertyValue Property=&quot;Value&quot; Path=&quot;AmountInCompanyCodeCurrency&quot; /&gt;\n\t\t&lt;PropertyValue Property=&quot;Criticality&quot; EnumMember=&quot;sap.chart.ColoringType.Negative&quot; /&gt;\n\t  &lt;/Record&gt;\n    &lt;/Annotation&gt;\n   &lt;/Annotations&gt;\n</pre>\n\nUsing this UI.DataPoint annotation, the semantic coloring for a measure changes as follows:\n\n<pre>\n   var oColorings = {\n       Criticality: {\n          MeasureValues: {\n              \"AmountInCompanyCodeCurrency\": {\n                   Static: sap.chart.ColoringType.Negative\n              }\n          }\n   }\n</pre>\n\n<i>XML Example of OData V4 with DataPoint Annotation with semantic pattern</i> For more information see {@link sap.chart.data.MeasureSemantics}\n\n<pre>\n   &lt;Annotations Target=&quot;Item&quot; xmlns=&quot;http://docs.oasis-open.org/odata/ns/edm&quot;&gt;\n     &lt;Annotation Term=&quot;com.sap.vocabularies.UI.v1.Chart&quot;&gt;\n       &lt;Record&gt;\n         &lt;PropertyValue Property=&quot;Title&quot; String=&quot;Line Items&quot; /&gt;\n         &lt;PropertyValue Property=&quot;ChartType&quot;\n            EnumMember=&quot;com.sap.vocabularies.UI.v1.ChartType/Column&quot; /&gt;\n         &lt;PropertyValue Property=&quot;Dimensions&quot;&gt;\n           &lt;Collection&gt;\n             &lt;PropertyPath&gt;CompanyCode&lt;/PropertyPath&gt;\n             &lt;PropertyPath&gt;Customer&lt;/PropertyPath&gt;\n           &lt;/Collection&gt;\n         &lt;/PropertyValue&gt;\n         &lt;PropertyValue Property=&quot;Measures&quot;&gt;\n           &lt;Collection&gt;\n             &lt;PropertyPath&gt;AmountInCompanyCodeCurrency&lt;/PropertyPath&gt;\n             &lt;PropertyPath&gt;TargetAmountInCompanyCodeCurrency&lt;/PropertyPath&gt;\n           &lt;/Collection&gt;\n         &lt;/PropertyValue&gt;\n         &lt;PropertyValue Property=&quot;MeasureAttributes&quot;&gt;\n           &lt;Collection&gt;\n              &lt;Record&gt;\n                 &lt;PropertyValue Property=&quot;Measure&quot; PropertyPath=&quot;AmountInCompanyCodeCurrency&quot; /&gt;\n                 &lt;PropertyValue Property=&quot;Role&quot; EnumMember=&quot;com.sap.vocabularies.UI.v1.ChartMeasureRoleType/Axis1&quot; /&gt;\n                 &lt;PropertyValue Property=&quot;DataPoint&quot; AnnotationPath=&quot;@com.sap.vocabularies.UI.v1.DataPoint#semanticPattern&quot; /&gt;\n              &lt;/Record&gt;\n           &lt;/Collection&gt;\n         &lt;/PropertyValue&gt;\n       &lt;/Record&gt;\n     &lt;/Annotation&gt;\n     &lt;Annotation Term=&quot;com.sap.vocabularies.UI.v1.DataPoint&quot; Qualifier=&quot;semanticPattern&quot; &gt;\n\t  &lt;Record Type=&quot;com.sap.vocabularies.UI.v1.DataPointType&quot;&gt;\n\t\t&lt;PropertyValue Property=&quot;Value&quot; Path=&quot;AmountInCompanyCodeCurrency&quot; /&gt;\n\t\t&lt;PropertyValue Property=&quot;TargetValue&quot; Path=&quot;TargetAmountInCompanyCodeCurrency&quot; /&gt;\n\t  &lt;/Record&gt;\n    &lt;/Annotation&gt;\n   &lt;/Annotations&gt;\n</pre>\n\nUsing this UI.DataPoint annotation, the semantics of the chart measures are set as follows:\n\n<pre>\nvar oAmountInCompanyCodeCurrency = oChart.getMeasureByName(&quot;AmountInCompanyCodeCurrency&quot;);\noAmountInCompanyCodeCurrency.setSemantics(sap.chart.data.MeasureSemantics.Actual);\n\nvar oTargetAmountInCompanyCodeCurrency = oChart.getMeasureByName(&quot;TargetAmountInCompanyCodeCurrency&quot;);\noTargetAmountInCompanyCodeCurrency.setSemantics(sap.chart.data.MeasureSemantics.Reference);\n</pre>"
          },
          {
            "name": "text",
            "namespace": "com.sap.vocabularies.Common.v1",
            "target": ["Property"],
            "annotation": "Text",
            "defaultValue": "null",
            "appliesTo": ["text"],
            "since": "1.32.1",
            "description": "A descriptive text for values of the annotated property. If no text arrangement has been defined, the default display behavior is <code>TextFirst</code>.\n\nAn example how this is set in OData v4 is shown here:\n\n<pre>\n   &lt;Annotation Term=&quot;com.sap.vocabularies.Common.v1.Text&quot; Path=&quot;ProductName&quot;&gt;\n</pre>\n\nIn OData v2 it looks like this:\n\n<pre>\n    &lt;Property name=\"ProductId\" ... sap:text=&quot;ProductName&quot;/&gt;\n</pre>"
          },
          {
            "name": "textArrangement",
            "namespace": "com.sap.vocabularies.UI.v1",
            "target": ["EntityType", "Annotation"],
            "annotation": "TextArrangement",
            "defaultValue": "null",
            "appliesTo": ["fieldItem/#/value"],
            "since": "1.32.1",
            "description": "Describes the arrangement of an ID value and its description.\n\nThe following enumeration members are allowed:\n\n<ul> <li><code>com.sap.vocabularies.UI.v1.TextArrangementType/TextSeparate</code>: The control displays the specified ID only.</li>\n\n<li><code>com.sap.vocabularies.UI.v1.TextArrangementType/TextFirst</code>: The control displays the specified description followed by its ID.</li>\n\n<li><code>com.sap.vocabularies.UI.v1.TextArrangementType/TextLast</code>: The control displays the specified ID followed by its description.</li>\n\n<li><code>com.sap.vocabularies.UI.v1.TextArrangementType/TextOnly</code>: The control displays the specified description only.</li> </ul>\n\nThe <code>TextArrangement</code> annotation is usually used as a child of a <code>com.sap.vocabularies.Common.v1.Text</code> annotation.\n\n<i>XML Example of OData V4 with <code>TextArrangement</code> annotation on an entity's property</i>\n\n<pre>\n&lt;Annotations xmlns=&quot;http://docs.oasis-open.org/odata/ns/edm&quot; Target=&quot;namespace.Product/Category&quot;&gt;\n\t&lt;Annotation Term=&quot;com.sap.vocabularies.Common.v1.Text&quot; Path=&quot;CategoryName&quot;&gt;\n\t\t&lt;Annotation Term=&quot;com.sap.vocabularies.UI.v1.TextArrangement&quot; EnumMember=&quot;com.sap.vocabularies.UI.v1.TextArrangementType/TextLast&quot; /&gt;\n\t&lt;/Annotation&gt;\n&lt;/Annotations&gt;\n</pre>\n\n<i>XML Example of OData V4 with <code>TextArrangement</code> annotation on entity <code>Product</code></i>\n\n<pre>\n   &lt;Annotations Target=&quot;Namespace.ProductType&quot;&gt;\n     &lt;Annotation Term=&quot;com.sap.vocabularies.UI.v1.TextArrangement&quot; EnumMember=&quot;com.sap.vocabularies.UI.v1.TextArrangementType/TextFirst&quot;/&gt;\n   &lt;/Annotations&gt;\n</pre>"
          }
        ],
        "designtime": "sap/ui/comp/designtime/smartchart/SmartChart.designtime"
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control that is generated automatically if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new SmartChart instance.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.",
        "references": [
          "{@link topic:7a32157697474864b041fa739fcc51ba Smart Chart}"
        ]
      },
      "events": [
        {
          "name": "afterVariantApply",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "currentVariantId": {
                      "name": "currentVariantId",
                      "type": "string",
                      "optional": false,
                      "description": "ID of the currently selected variant"
                    }
                  }
                }
              }
            }
          ],
          "description": "This event is fired after a variant has been applied."
        },
        {
          "name": "afterVariantInitialise",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "This event is fired after the variant management in the SmartChart control has been initialized."
        },
        {
          "name": "afterVariantSave",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "currentVariantId": {
                      "name": "currentVariantId",
                      "type": "string",
                      "optional": false,
                      "description": "ID of the currently selected variant"
                    }
                  }
                }
              }
            }
          ],
          "description": "This event is fired after a variant has been saved. This event can be used to retrieve the ID of the saved variant."
        },
        {
          "name": "beforeRebindChart",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "bindingParams": {
                      "name": "bindingParams",
                      "type": "JSON",
                      "optional": false,
                      "parameterProperties": {
                        "preventChartBind": {
                          "name": "preventChartBind",
                          "type": "boolean",
                          "optional": false,
                          "description": "If set to <code>true</code> by the listener, binding is prevented"
                        },
                        "filters": {
                          "name": "filters",
                          "type": "sap.ui.model.Filter[]",
                          "optional": false,
                          "description": "The combined filter array containing a set of sap.ui.model.Filter instances of the SmartChart and SmartFilter controls; can be modified by users to influence filtering"
                        },
                        "sorter": {
                          "name": "sorter",
                          "type": "sap.ui.model.Sorter[]",
                          "optional": false,
                          "description": "An array containing a set of sap.ui.model.Sorter instances of the SmartChart control (personalization); can be modified by users to influence sorting"
                        },
                        "length": {
                          "name": "length",
                          "type": "Number",
                          "optional": false,
                          "description": "The maximal number of items that is displayed for the <code>SmartChart</code> control"
                        },
                        "parameters": {
                          "name": "parameters",
                          "type": "object",
                          "optional": false,
                          "description": "a map of parameters which is passed to the binding"
                        },
                        "events": {
                          "name": "events",
                          "type": "object",
                          "optional": false,
                          "description": "map of event listeners for the binding events (since 1.56). The events listeners can only be registered while the binding is created. So, ensure that the events parameter is filled from the beginning, so that the registration can be done while the binding is created."
                        }
                      },
                      "description": "The bindingParams object contains filters, sorters, and other binding-related information for the chart"
                    }
                  }
                }
              }
            }
          ],
          "description": "This event is fired right before the <code>SmartChart</code> control triggers the binding / rebinding of the inner chart.<br> <b>Note:</b> In certain cases the inner chart triggers a rebinding by itself. In these cases, the event is not fired."
        },
        {
          "name": "chartDataChanged",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "changeTypes": {
                      "name": "changeTypes",
                      "type": "object",
                      "optional": false,
                      "description": "Object which contains a boolean flag for dimeasure, filter, sort. If set to <code>true</code>, it has been changed."
                    }
                  }
                }
              }
            }
          ],
          "description": "This event is fired when <code>SmartChart</code> control data changes, due to changes in the personalization dialog or drill operations.<br> The data can be changed via sorters, filters or drill-ups/drill-downs."
        },
        {
          "name": "dataReceived",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "This event is fired when data is received after binding. This event is fired if the binding for the chart is done by the SmartChart control itself.",
          "deprecated": {
            "since": "1.56",
            "text": "Use <code>beforeRebindChart</code> event to attach/listen to the binding \"events\" directly"
          }
        },
        {
          "name": "fullScreenToggled",
          "visibility": "public",
          "since": "1.46",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "fullScreen": {
                      "name": "fullScreen",
                      "type": "boolean",
                      "optional": false,
                      "description": "If <code>true</code> the control is in full screen mode"
                    }
                  }
                }
              }
            }
          ],
          "description": "This event is fired right after the full screen mode of the SmartChart control has been changed."
        },
        {
          "name": "initialise",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "This event is fired once the control has been initialized. <b>Note:</b> For compatibility reasons the sap.chart library is loaded synchroniously as soon as a event handler for the <code>initialise</code> event has been attached. Please use event <code>intialized</code> instead.",
          "deprecated": { "since": "1.65" }
        },
        {
          "name": "initialized",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "New event, async successor of initialise"
        },
        {
          "name": "selectionDetailsActionPress",
          "visibility": "public",
          "since": "1.48",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "action": {
                      "name": "action",
                      "type": "sap.ui.core.Item",
                      "optional": false,
                      "description": "The action that has to be processed once the action has been pressed"
                    },
                    "itemContexts": {
                      "name": "itemContexts",
                      "type": "sap.ui.model.Context",
                      "optional": false,
                      "description": "If the action is pressed on one of the {@link sap.m.SelectionDetailsItem items}, the parameter contains the {@link sap.ui.model.Context context} of the pressed {@link sap.m.SelectionDetailsItem item}. If a custom action or action group of the SelectionDetails popover is pressed, this parameter contains all {@link sap.ui.model.Context contexts} of the {@link sap.m.SelectionDetailsItem items}."
                    },
                    "level": {
                      "name": "level",
                      "type": "sap.m.SelectionDetailsActionLevel",
                      "optional": false,
                      "description": "The action level of action buttons. The available levels are Item, List and Group"
                    }
                  }
                }
              }
            }
          ],
          "description": "This event is fired when any action in the selection details popover is pressed.",
          "experimental": { "since": "1.48" }
        },
        {
          "name": "showOverlay",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "This event is fired right before the overlay is shown."
        }
      ],
      "methods": [
        {
          "name": "addSelectionDetailsAction",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartchart.SmartChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oSelectionDetailsAction",
              "type": "sap.ui.core.Item",
              "optional": false,
              "description": "The selectionDetailsAction to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some selectionDetailsAction to the aggregation {@link #getSelectionDetailsActions selectionDetailsActions}.",
          "experimental": { "since": "1.48" }
        },
        {
          "name": "addSelectionDetailsActionGroup",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartchart.SmartChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oSelectionDetailsActionGroup",
              "type": "sap.ui.core.Item",
              "optional": false,
              "description": "The selectionDetailsActionGroup to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some selectionDetailsActionGroup to the aggregation {@link #getSelectionDetailsActionGroups selectionDetailsActionGroups}.",
          "experimental": { "since": "1.48" }
        },
        {
          "name": "addSelectionDetailsItemAction",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartchart.SmartChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oSelectionDetailsItemAction",
              "type": "sap.ui.core.Item",
              "optional": false,
              "description": "The selectionDetailsItemAction to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some selectionDetailsItemAction to the aggregation {@link #getSelectionDetailsItemActions selectionDetailsItemActions}.",
          "experimental": { "since": "1.48" }
        },
        {
          "name": "applyVariant",
          "visibility": "public",
          "parameters": [
            {
              "name": "oVariantJSON",
              "type": "Object",
              "optional": false,
              "description": "The variant JSON"
            },
            {
              "name": "sContext",
              "type": "string",
              "optional": false,
              "description": "Describes the context in which the variant has been applied"
            }
          ],
          "description": "Interface function for SmartVariantManagement control that applies the current variant."
        },
        {
          "name": "attachAfterVariantApply",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartchart.SmartChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartchart.SmartChart</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:afterVariantApply afterVariantApply} event of this <code>sap.ui.comp.smartchart.SmartChart</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartchart.SmartChart</code> itself.\n\nThis event is fired after a variant has been applied."
        },
        {
          "name": "attachAfterVariantInitialise",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartchart.SmartChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartchart.SmartChart</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:afterVariantInitialise afterVariantInitialise} event of this <code>sap.ui.comp.smartchart.SmartChart</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartchart.SmartChart</code> itself.\n\nThis event is fired after the variant management in the SmartChart control has been initialized."
        },
        {
          "name": "attachAfterVariantSave",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartchart.SmartChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartchart.SmartChart</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:afterVariantSave afterVariantSave} event of this <code>sap.ui.comp.smartchart.SmartChart</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartchart.SmartChart</code> itself.\n\nThis event is fired after a variant has been saved. This event can be used to retrieve the ID of the saved variant."
        },
        {
          "name": "attachBeforeRebindChart",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartchart.SmartChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartchart.SmartChart</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:beforeRebindChart beforeRebindChart} event of this <code>sap.ui.comp.smartchart.SmartChart</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartchart.SmartChart</code> itself.\n\nThis event is fired right before the <code>SmartChart</code> control triggers the binding / rebinding of the inner chart.<br> <b>Note:</b> In certain cases the inner chart triggers a rebinding by itself. In these cases, the event is not fired."
        },
        {
          "name": "attachChartDataChanged",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartchart.SmartChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartchart.SmartChart</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:chartDataChanged chartDataChanged} event of this <code>sap.ui.comp.smartchart.SmartChart</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartchart.SmartChart</code> itself.\n\nThis event is fired when <code>SmartChart</code> control data changes, due to changes in the personalization dialog or drill operations.<br> The data can be changed via sorters, filters or drill-ups/drill-downs."
        },
        {
          "name": "attachDataReceived",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartchart.SmartChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartchart.SmartChart</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:dataReceived dataReceived} event of this <code>sap.ui.comp.smartchart.SmartChart</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartchart.SmartChart</code> itself.\n\nThis event is fired when data is received after binding. This event is fired if the binding for the chart is done by the SmartChart control itself.",
          "deprecated": {
            "since": "1.56",
            "text": "Use <code>beforeRebindChart</code> event to attach/listen to the binding \"events\" directly"
          }
        },
        {
          "name": "attachFullScreenToggled",
          "visibility": "public",
          "since": "1.46",
          "returnValue": {
            "type": "sap.ui.comp.smartchart.SmartChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartchart.SmartChart</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:fullScreenToggled fullScreenToggled} event of this <code>sap.ui.comp.smartchart.SmartChart</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartchart.SmartChart</code> itself.\n\nThis event is fired right after the full screen mode of the SmartChart control has been changed."
        },
        {
          "name": "attachInitialise",
          "visibility": "public",
          "description": "Loads the chart lib synchronously before the event is attached. That is done for compatibility reasons."
        },
        {
          "name": "attachInitialized",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartchart.SmartChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartchart.SmartChart</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:initialized initialized} event of this <code>sap.ui.comp.smartchart.SmartChart</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartchart.SmartChart</code> itself.\n\nNew event, async successor of initialise"
        },
        {
          "name": "attachSelectionDetailsActionPress",
          "visibility": "public",
          "since": "1.48",
          "returnValue": {
            "type": "sap.ui.comp.smartchart.SmartChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartchart.SmartChart</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:selectionDetailsActionPress selectionDetailsActionPress} event of this <code>sap.ui.comp.smartchart.SmartChart</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartchart.SmartChart</code> itself.\n\nThis event is fired when any action in the selection details popover is pressed.",
          "experimental": { "since": "1.48" }
        },
        {
          "name": "attachShowOverlay",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartchart.SmartChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartchart.SmartChart</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:showOverlay showOverlay} event of this <code>sap.ui.comp.smartchart.SmartChart</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartchart.SmartChart</code> itself.\n\nThis event is fired right before the overlay is shown."
        },
        {
          "name": "destroySelectionDetailsActionGroups",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartchart.SmartChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the selectionDetailsActionGroups in the aggregation {@link #getSelectionDetailsActionGroups selectionDetailsActionGroups}.",
          "experimental": { "since": "1.48" }
        },
        {
          "name": "destroySelectionDetailsActions",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartchart.SmartChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the selectionDetailsActions in the aggregation {@link #getSelectionDetailsActions selectionDetailsActions}.",
          "experimental": { "since": "1.48" }
        },
        {
          "name": "destroySelectionDetailsItemActions",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartchart.SmartChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the selectionDetailsItemActions in the aggregation {@link #getSelectionDetailsItemActions selectionDetailsItemActions}.",
          "experimental": { "since": "1.48" }
        },
        {
          "name": "destroySemanticObjectController",
          "visibility": "public",
          "since": "1.36",
          "returnValue": {
            "type": "sap.ui.comp.smartchart.SmartChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the semanticObjectController in the aggregation {@link #getSemanticObjectController semanticObjectController}."
        },
        {
          "name": "destroyToolbar",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartchart.SmartChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the toolbar in the aggregation {@link #getToolbar toolbar}."
        },
        {
          "name": "detachAfterVariantApply",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartchart.SmartChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:afterVariantApply afterVariantApply} event of this <code>sap.ui.comp.smartchart.SmartChart</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachAfterVariantInitialise",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartchart.SmartChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:afterVariantInitialise afterVariantInitialise} event of this <code>sap.ui.comp.smartchart.SmartChart</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachAfterVariantSave",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartchart.SmartChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:afterVariantSave afterVariantSave} event of this <code>sap.ui.comp.smartchart.SmartChart</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachBeforeRebindChart",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartchart.SmartChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:beforeRebindChart beforeRebindChart} event of this <code>sap.ui.comp.smartchart.SmartChart</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachChartDataChanged",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartchart.SmartChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:chartDataChanged chartDataChanged} event of this <code>sap.ui.comp.smartchart.SmartChart</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachDataReceived",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartchart.SmartChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:dataReceived dataReceived} event of this <code>sap.ui.comp.smartchart.SmartChart</code>.\n\nThe passed function and listener object must match the ones used for event registration.",
          "deprecated": {
            "since": "1.56",
            "text": "Use <code>beforeRebindChart</code> event to attach/listen to the binding \"events\" directly"
          }
        },
        {
          "name": "detachFullScreenToggled",
          "visibility": "public",
          "since": "1.46",
          "returnValue": {
            "type": "sap.ui.comp.smartchart.SmartChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:fullScreenToggled fullScreenToggled} event of this <code>sap.ui.comp.smartchart.SmartChart</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachInitialise",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartchart.SmartChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:initialise initialise} event of this <code>sap.ui.comp.smartchart.SmartChart</code>.\n\nThe passed function and listener object must match the ones used for event registration.",
          "deprecated": { "since": "1.65" }
        },
        {
          "name": "detachInitialized",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartchart.SmartChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:initialized initialized} event of this <code>sap.ui.comp.smartchart.SmartChart</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachSelectionDetailsActionPress",
          "visibility": "public",
          "since": "1.48",
          "returnValue": {
            "type": "sap.ui.comp.smartchart.SmartChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:selectionDetailsActionPress selectionDetailsActionPress} event of this <code>sap.ui.comp.smartchart.SmartChart</code>.\n\nThe passed function and listener object must match the ones used for event registration.",
          "experimental": { "since": "1.48" }
        },
        {
          "name": "detachShowOverlay",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartchart.SmartChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:showOverlay showOverlay} event of this <code>sap.ui.comp.smartchart.SmartChart</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "exit",
          "visibility": "protected",
          "description": "Cleans up the control."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.comp.smartchart.SmartChart with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.m.VBox.extend}."
        },
        {
          "name": "fetchVariant",
          "visibility": "protected",
          "returnValue": {
            "type": "Object",
            "description": "The currently used variant in an internal format"
          },
          "description": "Function for the {@link sap.ui.comp.smartvariants.SmartVariantManagement} control that returns the currently used variant data in an internal format. <b>Note:</b> This function must not be used by applications."
        },
        {
          "name": "fireAfterVariantApply",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.comp.smartchart.SmartChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "currentVariantId": {
                  "name": "currentVariantId",
                  "type": "string",
                  "optional": true,
                  "description": "ID of the currently selected variant"
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:afterVariantApply afterVariantApply} to attached listeners."
        },
        {
          "name": "fireAfterVariantInitialise",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.comp.smartchart.SmartChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:afterVariantInitialise afterVariantInitialise} to attached listeners."
        },
        {
          "name": "fireAfterVariantSave",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.comp.smartchart.SmartChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "currentVariantId": {
                  "name": "currentVariantId",
                  "type": "string",
                  "optional": true,
                  "description": "ID of the currently selected variant"
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:afterVariantSave afterVariantSave} to attached listeners."
        },
        {
          "name": "fireBeforeRebindChart",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.comp.smartchart.SmartChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:beforeRebindChart beforeRebindChart} to attached listeners."
        },
        {
          "name": "fireChartDataChanged",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.comp.smartchart.SmartChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "changeTypes": {
                  "name": "changeTypes",
                  "type": "object",
                  "optional": true,
                  "description": "Object which contains a boolean flag for dimeasure, filter, sort. If set to <code>true</code>, it has been changed."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:chartDataChanged chartDataChanged} to attached listeners."
        },
        {
          "name": "fireDataReceived",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.comp.smartchart.SmartChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:dataReceived dataReceived} to attached listeners.",
          "deprecated": {
            "since": "1.56",
            "text": "Use <code>beforeRebindChart</code> event to attach/listen to the binding \"events\" directly"
          }
        },
        {
          "name": "fireFullScreenToggled",
          "visibility": "protected",
          "since": "1.46",
          "returnValue": {
            "type": "sap.ui.comp.smartchart.SmartChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "fullScreen": {
                  "name": "fullScreen",
                  "type": "boolean",
                  "optional": true,
                  "description": "If <code>true</code> the control is in full screen mode"
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:fullScreenToggled fullScreenToggled} to attached listeners."
        },
        {
          "name": "fireInitialise",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.comp.smartchart.SmartChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:initialise initialise} to attached listeners.",
          "deprecated": { "since": "1.65" }
        },
        {
          "name": "fireInitialized",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.comp.smartchart.SmartChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:initialized initialized} to attached listeners."
        },
        {
          "name": "fireSelectionDetailsActionPress",
          "visibility": "protected",
          "since": "1.48",
          "returnValue": {
            "type": "sap.ui.comp.smartchart.SmartChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "action": {
                  "name": "action",
                  "type": "sap.ui.core.Item",
                  "optional": true,
                  "description": "The action that has to be processed once the action has been pressed"
                },
                "itemContexts": {
                  "name": "itemContexts",
                  "type": "sap.ui.model.Context",
                  "optional": true,
                  "description": "If the action is pressed on one of the {@link sap.m.SelectionDetailsItem items}, the parameter contains the {@link sap.ui.model.Context context} of the pressed {@link sap.m.SelectionDetailsItem item}. If a custom action or action group of the SelectionDetails popover is pressed, this parameter contains all {@link sap.ui.model.Context contexts} of the {@link sap.m.SelectionDetailsItem items}."
                },
                "level": {
                  "name": "level",
                  "type": "sap.m.SelectionDetailsActionLevel",
                  "optional": true,
                  "description": "The action level of action buttons. The available levels are Item, List and Group"
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:selectionDetailsActionPress selectionDetailsActionPress} to attached listeners.",
          "experimental": { "since": "1.48" }
        },
        {
          "name": "fireShowOverlay",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.comp.smartchart.SmartChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:showOverlay showOverlay} to attached listeners."
        },
        {
          "name": "getChart",
          "visibility": "public",
          "returnValue": {
            "type": "object",
            "description": "The inner chart object"
          },
          "description": "Returns the chart object used internally.<br> <b>Note:</b> Direct changes made to the inner {@link sap.chart.Chart chart} object or its {@link sap.viz.ui5.controls.VizFrame vizFrame} might lead to inconsistencies and side effects during runtime, as the <code>SmartChart</code> control doesn't listen to all changes made to the inner {@link sap.chart.Chart chart} instance. To avoid this, please use the API provided by the <code>SmartChart</code> control itself.",
          "deprecated": {
            "since": "1.57.0",
            "text": "Please use <code>getChartAsync</code> instead."
          }
        },
        {
          "name": "getChartAsync",
          "visibility": "public",
          "since": "1.57.0",
          "returnValue": {
            "type": "object",
            "description": "Promise for inner chart object"
          },
          "description": "Returns a promise which will be resolved with the internally used chart object, once all dependencies have been loaded.<br> <b>Note:</b> Direct changes made to the inner {@link sap.chart.Chart chart} object or its {@link sap.viz.ui5.controls.VizFrame vizFrame} might lead to inconsistencies and side effects during runtime, as the <code>SmartChart</code> control doesn't listen to all changes made to the inner {@link sap.chart.Chart chart} instance. To avoid this, please use the API provided by the <code>SmartChart</code> control itself."
        },
        {
          "name": "getChartBindingPath",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>chartBindingPath</code>"
          },
          "description": "Gets current value of property {@link #getChartBindingPath chartBindingPath}.\n\nSpecifies the path that is used during the binding of the chart. If not specified, the entitySet property is used instead. (used only if binding is established internally/automatically - See enableAutoBinding)"
        },
        {
          "name": "getChartType",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>chartType</code>"
          },
          "description": "Gets current value of property {@link #getChartType chartType}.\n\nSpecifies the type of chart to be created by the SmartChart control."
        },
        {
          "name": "getCurrentVariantId",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "ID of the currently selected variant"
          },
          "description": "Returns the ID of the currently selected variant."
        },
        {
          "name": "getEnableAutoBinding",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>enableAutoBinding</code>"
          },
          "description": "Gets current value of property {@link #getEnableAutoBinding enableAutoBinding}.\n\nIf set to <code>true</code>, this enables automatic binding of the chart using the chartBindingPath (if it exists) or entitySet property. This happens right after the <code>initialise</code> event has been fired.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getEntitySet",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>entitySet</code>"
          },
          "description": "Gets current value of property {@link #getEntitySet entitySet}.\n\nThe entity set name from which to fetch data and generate the columns.<br> <b>Note</b> This is not a dynamic property."
        },
        {
          "name": "getHeader",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>header</code>"
          },
          "description": "Gets current value of property {@link #getHeader header}.\n\nSpecifies header text that is shown in the chart."
        },
        {
          "name": "getIgnoredChartTypes",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>ignoredChartTypes</code>"
          },
          "description": "Gets current value of property {@link #getIgnoredChartTypes ignoredChartTypes}.\n\nCSV of fields that is not shown in the list of available chart types.<br> <b>Note:</b> No validation is done. Please ensure that you do not add spaces or special characters."
        },
        {
          "name": "getIgnoredFields",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>ignoredFields</code>"
          },
          "description": "Gets current value of property {@link #getIgnoredFields ignoredFields}.\n\nCSV of fields that must be ignored in the OData metadata by the SmartChart control.<br> <b>Note:</b> No validation is done. Please ensure that you do not add spaces or special characters."
        },
        {
          "name": "getIgnoreFromPersonalisation",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>ignoreFromPersonalisation</code>"
          },
          "description": "Gets current value of property {@link #getIgnoreFromPersonalisation ignoreFromPersonalisation}.\n\nCSV of fields that is not shown in the personalization dialog.<br> <b>Note:</b> No validation is done. Please ensure that you do not add spaces or special characters."
        },
        {
          "name": "getLegendVisible",
          "visibility": "public",
          "since": "1.36",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>legendVisible</code>"
          },
          "description": "Gets current value of property {@link #getLegendVisible legendVisible}.\n\nSet chart's legend properties.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.comp.smartchart.SmartChart."
        },
        {
          "name": "getNoData",
          "visibility": "public",
          "since": "1.46",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>noData</code>"
          },
          "description": "Gets current value of property {@link #getNoData noData}.\n\nDefines the custom text that will be displayed in case no data is found for the current binding."
        },
        {
          "name": "getPersistencyKey",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>persistencyKey</code>"
          },
          "description": "Gets current value of property {@link #getPersistencyKey persistencyKey}.\n\nKey used to access personalization data."
        },
        {
          "name": "getRequestAtLeastFields",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>requestAtLeastFields</code>"
          },
          "description": "Gets current value of property {@link #getRequestAtLeastFields requestAtLeastFields}.\n\nCSV of fields that must be always requested by the backend system.<br> This property is mainly meant to be used if there is no PresentationVariant annotation.<br> If both this property and the PresentationVariant annotation exist, the select request sent to the backend would be a combination of both.<br> <b>Note:</b> No validation is done. Please ensure that you do not add spaces or special characters. Also, setting this property during runtime, will delete the current drill-stack and lead to a loss of the drill history."
        },
        {
          "name": "getSelectionDetailsActionGroups",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.Item[]" },
          "description": "Gets content of aggregation {@link #getSelectionDetailsActionGroups selectionDetailsActionGroups}.\n\nActions on group level which can be specified for the selection details popover.",
          "experimental": { "since": "1.48" }
        },
        {
          "name": "getSelectionDetailsActions",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.Item[]" },
          "description": "Gets content of aggregation {@link #getSelectionDetailsActions selectionDetailsActions}.\n\nActions on footer level which can be specified for the selection details popover.",
          "experimental": { "since": "1.48" }
        },
        {
          "name": "getSelectionDetailsItemActions",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.Item[]" },
          "description": "Gets content of aggregation {@link #getSelectionDetailsItemActions selectionDetailsItemActions}.\n\nActions on item level which can be specified for the selection details popover.",
          "experimental": { "since": "1.48" }
        },
        {
          "name": "getSelectionMode",
          "visibility": "public",
          "since": "1.36",
          "returnValue": {
            "type": "sap.ui.comp.smartchart.SelectionMode",
            "description": "Value of property <code>selectionMode</code>"
          },
          "description": "Gets current value of property {@link #getSelectionMode selectionMode}.\n\nChart selection mode. Supported values are {@link sap.ui.comp.smartchart.SelectionMode.Single} or {@link sap.ui.comp.smartchart.SelectionMode.Multi}, case insensitive, always return in upper case. Unsupported values will be ignored.\n\nDefault value is <code>Multi</code>."
        },
        {
          "name": "getSemanticObjectController",
          "visibility": "public",
          "since": "1.36",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.SemanticObjectController"
          },
          "description": "Gets content of aggregation {@link #getSemanticObjectController semanticObjectController}.\n\nThe Semantic Object Controller allows the user to specify and overwrite functionality for semantic object navigation."
        },
        {
          "name": "getShowChartTooltip",
          "visibility": "public",
          "since": "1.38",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showChartTooltip</code>"
          },
          "description": "Gets current value of property {@link #getShowChartTooltip showChartTooltip}.\n\nControls the visibility of the chart tooltip. If set to <code>true </code>, an instance of sap.viz.ui5.controls.VizTooltip will be created and shown when hovering over a data point.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getShowChartTypeSelectionButton",
          "visibility": "public",
          "since": "1.48",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showChartTypeSelectionButton</code>"
          },
          "description": "Gets current value of property {@link #getShowChartTypeSelectionButton showChartTypeSelectionButton}.\n\nControls the visibility of the chart type selection button.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getShowDetailsButton",
          "visibility": "public",
          "since": "1.38",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showDetailsButton</code>"
          },
          "description": "Gets current value of property {@link #getShowDetailsButton showDetailsButton}.\n\nControls the visibility of the Details button. If set to <code>true</code>, the datapoint tooltip will be disabled as the information of selected datapoints will be found in the details popover. This will also set the drill-down button to invisible.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getShowDimensionsTitle",
          "visibility": "public",
          "since": "1.54",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showDimensionsTitle</code>"
          },
          "description": "Gets current value of property {@link #getShowDimensionsTitle showDimensionsTitle}.\n\nControls the visibility of the title in the dimension area of the chart.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getShowDownloadButton",
          "visibility": "public",
          "since": "1.39",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showDownloadButton</code>"
          },
          "description": "Gets current value of property {@link #getShowDownloadButton showDownloadButton}.\n\nControls the visibility of the chart download button.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getShowDrillBreadcrumbs",
          "visibility": "public",
          "since": "1.38",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showDrillBreadcrumbs</code>"
          },
          "description": "Gets current value of property {@link #getShowDrillBreadcrumbs showDrillBreadcrumbs}.\n\nControls the visibility of the Breadcrumbs control for drilling up within the visible dimensions. If set to <code>true</code>, the toolbar header will be replaced by the Breadcrumbs control. This will also set the drill-up button to invisible.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getShowDrillButtons",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showDrillButtons</code>"
          },
          "description": "Gets current value of property {@link #getShowDrillButtons showDrillButtons}.\n\nControls the visibility of the Drill Up and Drill Down buttons.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getShowFullScreenButton",
          "visibility": "public",
          "since": "1.36",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showFullScreenButton</code>"
          },
          "description": "Gets current value of property {@link #getShowFullScreenButton showFullScreenButton}.\n\nControls the visibility of the FullScreen button.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getShowLegendButton",
          "visibility": "public",
          "since": "1.36",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showLegendButton</code>"
          },
          "description": "Gets current value of property {@link #getShowLegendButton showLegendButton}.\n\nControls the visibility of the Navigation button\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getShowMeasuresTitle",
          "visibility": "public",
          "since": "1.54",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showMeasuresTitle</code>"
          },
          "description": "Gets current value of property {@link #getShowMeasuresTitle showMeasuresTitle}.\n\nControls the visibility of the title in the measure area of the chart.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getShowSemanticNavigationButton",
          "visibility": "public",
          "since": "1.36",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showSemanticNavigationButton</code>"
          },
          "description": "Gets current value of property {@link #getShowSemanticNavigationButton showSemanticNavigationButton}.\n\nControls the visibility of the Navigation button\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getShowToolbar",
          "visibility": "public",
          "since": "1.54",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showToolbar</code>"
          },
          "description": "Gets current value of property {@link #getShowToolbar showToolbar}.\n\nControls the visibility of the toolbar.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getShowVariantManagement",
          "visibility": "public",
          "since": "1.38",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showVariantManagement</code>"
          },
          "description": "Gets current value of property {@link #getShowVariantManagement showVariantManagement}.\n\nControls the visibility of the Variant Management.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getShowZoomButtons",
          "visibility": "public",
          "since": "1.36",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showZoomButtons</code>"
          },
          "description": "Gets current value of property {@link #getShowZoomButtons showZoomButtons}.\n\nControls the visibility of the Zoom In and Zoom Out buttons.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getSmartFilterId",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>smartFilterId</code>"
          },
          "description": "Gets current value of property {@link #getSmartFilterId smartFilterId}.\n\nID of the corresponding SmartFilter control. If specified, the SmartChart control searches for the SmartFilter control (also in the closest parent view) and attaches to the relevant events of the SmartFilter control to fetch data, show overlay etc."
        },
        {
          "name": "getSmartVariant",
          "visibility": "public",
          "since": "1.38",
          "returnValue": { "type": "sap.ui.core.ID" },
          "description": "ID of the element which is the current target of the association {@link #getSmartVariant smartVariant}, or <code>null</code>."
        },
        {
          "name": "getToolbar",
          "visibility": "public",
          "returnValue": { "type": "sap.m.Toolbar" },
          "description": "Gets content of aggregation {@link #getToolbar toolbar}.\n\nA custom toolbar that can be specified by the user to define their own buttons, icons, etc. If this is added, the SmartChart control does not create its own toolbar, but uses this one instead. However, if default actions, such as showSemanticNavigation, showFullScreenButton etc. are set, these actions are added at the left-hand side of the toolbar."
        },
        {
          "name": "getToolbarStyle",
          "visibility": "public",
          "since": "1.54",
          "returnValue": {
            "type": "sap.m.ToolbarStyle",
            "description": "Value of property <code>toolbarStyle</code>"
          },
          "description": "Gets current value of property {@link #getToolbarStyle toolbarStyle}.\n\nDefines the visual style of the smart charts <code>Toolbar</code>. <b>Note:</b> The visual styles are theme-dependent."
        },
        {
          "name": "getUiState",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.state.UIState",
            "description": "Current UI state"
          },
          "description": "The method returns the current UI state of SmartChart control."
        },
        {
          "name": "getUseChartPersonalisation",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>useChartPersonalisation</code>"
          },
          "description": "Gets current value of property {@link #getUseChartPersonalisation useChartPersonalisation}.\n\nIf set to <code>true</code>, personalized chart settings are defined. If you want to persist the chart personalization, you need to specify the persistencyKey property.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getUseListForChartTypeSelection",
          "visibility": "public",
          "since": "1.38",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>useListForChartTypeSelection</code>"
          },
          "description": "Gets current value of property {@link #getUseListForChartTypeSelection useListForChartTypeSelection}.\n\nControls the visualization for chart type selection. If set to <code>true</code>, the list of available chart types will be displayed. If set to <code>false</code> and there are three or fewer available chart types, the chart types will be displayed as separate buttons in the toolbar. If there are more than three chart types, a list will be shown.\n\nDefault value is <code>true</code>.",
          "deprecated": {
            "since": "1.48.0",
            "text": "Setting the property to <code>false</code> will have no effect on the visualization of chart type selection. <code>SmartChart</code> will always show a list of chart types."
          }
        },
        {
          "name": "getUseTooltip",
          "visibility": "public",
          "since": "1.36",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>useTooltip</code>"
          },
          "description": "Gets current value of property {@link #getUseTooltip useTooltip}.\n\nSpecifies weather an instance of {@link sap.viz.ui5.controls.VizTooltip} or {@link sap.viz.ui5.controls.Popover} is used. If set to <code>true</code>, a tooltip will be displayed, a popover otherwise.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getUseVariantManagement",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>useVariantManagement</code>"
          },
          "description": "Gets current value of property {@link #getUseVariantManagement useVariantManagement}.\n\nIf set to <code>true</code>, variants are used. As a prerequisite, you need to specify the persistencyKey property.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "indexOfSelectionDetailsAction",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oSelectionDetailsAction",
              "type": "sap.ui.core.Item",
              "optional": false,
              "description": "The selectionDetailsAction whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.ui.core.Item</code> in the aggregation {@link #getSelectionDetailsActions selectionDetailsActions}. and returns its index if found or -1 otherwise.",
          "experimental": { "since": "1.48" }
        },
        {
          "name": "indexOfSelectionDetailsActionGroup",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oSelectionDetailsActionGroup",
              "type": "sap.ui.core.Item",
              "optional": false,
              "description": "The selectionDetailsActionGroup whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.ui.core.Item</code> in the aggregation {@link #getSelectionDetailsActionGroups selectionDetailsActionGroups}. and returns its index if found or -1 otherwise.",
          "experimental": { "since": "1.48" }
        },
        {
          "name": "indexOfSelectionDetailsItemAction",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oSelectionDetailsItemAction",
              "type": "sap.ui.core.Item",
              "optional": false,
              "description": "The selectionDetailsItemAction whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.ui.core.Item</code> in the aggregation {@link #getSelectionDetailsItemActions selectionDetailsItemActions}. and returns its index if found or -1 otherwise.",
          "experimental": { "since": "1.48" }
        },
        {
          "name": "insertSelectionDetailsAction",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartchart.SmartChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oSelectionDetailsAction",
              "type": "sap.ui.core.Item",
              "optional": false,
              "description": "The selectionDetailsAction to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the selectionDetailsAction should be inserted at; for a negative value of <code>iIndex</code>, the selectionDetailsAction is inserted at position 0; for a value greater than the current size of the aggregation, the selectionDetailsAction is inserted at the last position"
            }
          ],
          "description": "Inserts a selectionDetailsAction into the aggregation {@link #getSelectionDetailsActions selectionDetailsActions}.",
          "experimental": { "since": "1.48" }
        },
        {
          "name": "insertSelectionDetailsActionGroup",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartchart.SmartChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oSelectionDetailsActionGroup",
              "type": "sap.ui.core.Item",
              "optional": false,
              "description": "The selectionDetailsActionGroup to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the selectionDetailsActionGroup should be inserted at; for a negative value of <code>iIndex</code>, the selectionDetailsActionGroup is inserted at position 0; for a value greater than the current size of the aggregation, the selectionDetailsActionGroup is inserted at the last position"
            }
          ],
          "description": "Inserts a selectionDetailsActionGroup into the aggregation {@link #getSelectionDetailsActionGroups selectionDetailsActionGroups}.",
          "experimental": { "since": "1.48" }
        },
        {
          "name": "insertSelectionDetailsItemAction",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartchart.SmartChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oSelectionDetailsItemAction",
              "type": "sap.ui.core.Item",
              "optional": false,
              "description": "The selectionDetailsItemAction to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the selectionDetailsItemAction should be inserted at; for a negative value of <code>iIndex</code>, the selectionDetailsItemAction is inserted at position 0; for a value greater than the current size of the aggregation, the selectionDetailsItemAction is inserted at the last position"
            }
          ],
          "description": "Inserts a selectionDetailsItemAction into the aggregation {@link #getSelectionDetailsItemActions selectionDetailsItemActions}.",
          "experimental": { "since": "1.48" }
        },
        {
          "name": "isInitialised",
          "visibility": "protected",
          "returnValue": {
            "type": "boolean",
            "description": "returns whether the control is already initialized"
          },
          "description": "Checks whether the control is initialized."
        },
        {
          "name": "rebindChart",
          "visibility": "protected",
          "description": "This can be used to trigger binding on the chart used in the SmartChart"
        },
        {
          "name": "removeAllSelectionDetailsActionGroups",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.Item[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getSelectionDetailsActionGroups selectionDetailsActionGroups}.\n\nAdditionally, it unregisters them from the hosting UIArea.",
          "experimental": { "since": "1.48" }
        },
        {
          "name": "removeAllSelectionDetailsActions",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.Item[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getSelectionDetailsActions selectionDetailsActions}.\n\nAdditionally, it unregisters them from the hosting UIArea.",
          "experimental": { "since": "1.48" }
        },
        {
          "name": "removeAllSelectionDetailsItemActions",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.Item[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getSelectionDetailsItemActions selectionDetailsItemActions}.\n\nAdditionally, it unregisters them from the hosting UIArea.",
          "experimental": { "since": "1.48" }
        },
        {
          "name": "removeSelectionDetailsAction",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.Item",
            "description": "The removed selectionDetailsAction or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vSelectionDetailsAction",
              "type": "int|string|sap.ui.core.Item",
              "optional": false,
              "description": "The selectionDetailsAction to remove or its index or id"
            }
          ],
          "description": "Removes a selectionDetailsAction from the aggregation {@link #getSelectionDetailsActions selectionDetailsActions}.",
          "experimental": { "since": "1.48" }
        },
        {
          "name": "removeSelectionDetailsActionGroup",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.Item",
            "description": "The removed selectionDetailsActionGroup or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vSelectionDetailsActionGroup",
              "type": "int|string|sap.ui.core.Item",
              "optional": false,
              "description": "The selectionDetailsActionGroup to remove or its index or id"
            }
          ],
          "description": "Removes a selectionDetailsActionGroup from the aggregation {@link #getSelectionDetailsActionGroups selectionDetailsActionGroups}.",
          "experimental": { "since": "1.48" }
        },
        {
          "name": "removeSelectionDetailsItemAction",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.Item",
            "description": "The removed selectionDetailsItemAction or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vSelectionDetailsItemAction",
              "type": "int|string|sap.ui.core.Item",
              "optional": false,
              "description": "The selectionDetailsItemAction to remove or its index or id"
            }
          ],
          "description": "Removes a selectionDetailsItemAction from the aggregation {@link #getSelectionDetailsItemActions selectionDetailsItemActions}.",
          "experimental": { "since": "1.48" }
        },
        {
          "name": "setChartBindingPath",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartchart.SmartChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sChartBindingPath",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>chartBindingPath</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getChartBindingPath chartBindingPath}.\n\nSpecifies the path that is used during the binding of the chart. If not specified, the entitySet property is used instead. (used only if binding is established internally/automatically - See enableAutoBinding)\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setChartType",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartchart.SmartChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sChartType",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>chartType</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getChartType chartType}.\n\nSpecifies the type of chart to be created by the SmartChart control.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setCurrentVariantId",
          "visibility": "public",
          "parameters": [
            {
              "name": "sVariantId",
              "type": "string",
              "optional": false,
              "description": "ID of the currently selected variant"
            }
          ],
          "description": "Applies the current variant based on the sVariantId parameter. If an empty string or null or undefined have been passed, the standard variant will be used. The standard variant will also be used if the passed sVariantId cannot be found. If the flexibility variant, the content for the standard variant, or the personalizable control cannot be obtained, no changes will be made."
        },
        {
          "name": "setEnableAutoBinding",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartchart.SmartChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bEnableAutoBinding",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>enableAutoBinding</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getEnableAutoBinding enableAutoBinding}.\n\nIf set to <code>true</code>, this enables automatic binding of the chart using the chartBindingPath (if it exists) or entitySet property. This happens right after the <code>initialise</code> event has been fired.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setEntitySet",
          "visibility": "public",
          "parameters": [
            {
              "name": "sEntitySetName",
              "type": "string",
              "optional": false,
              "description": "The entity set"
            }
          ],
          "description": "The entity set name in the OData metadata against which the chart must be bound."
        },
        {
          "name": "setHeader",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartchart.SmartChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sHeader",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>header</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getHeader header}.\n\nSpecifies header text that is shown in the chart.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setIgnoredChartTypes",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartchart.SmartChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sIgnoredChartTypes",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>ignoredChartTypes</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getIgnoredChartTypes ignoredChartTypes}.\n\nCSV of fields that is not shown in the list of available chart types.<br> <b>Note:</b> No validation is done. Please ensure that you do not add spaces or special characters.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setIgnoredFields",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartchart.SmartChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sIgnoredFields",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>ignoredFields</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getIgnoredFields ignoredFields}.\n\nCSV of fields that must be ignored in the OData metadata by the SmartChart control.<br> <b>Note:</b> No validation is done. Please ensure that you do not add spaces or special characters.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setIgnoreFromPersonalisation",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartchart.SmartChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sIgnoreFromPersonalisation",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>ignoreFromPersonalisation</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getIgnoreFromPersonalisation ignoreFromPersonalisation}.\n\nCSV of fields that is not shown in the personalization dialog.<br> <b>Note:</b> No validation is done. Please ensure that you do not add spaces or special characters.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setNoData",
          "visibility": "public",
          "since": "1.46",
          "returnValue": {
            "type": "sap.ui.comp.smartchart.SmartChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sNoData",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>noData</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getNoData noData}.\n\nDefines the custom text that will be displayed in case no data is found for the current binding.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setPersistencyKey",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartchart.SmartChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sPersistencyKey",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>persistencyKey</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getPersistencyKey persistencyKey}.\n\nKey used to access personalization data.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setRequestAtLeastFields",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartchart.SmartChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sRequestAtLeastFields",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>requestAtLeastFields</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getRequestAtLeastFields requestAtLeastFields}.\n\nCSV of fields that must be always requested by the backend system.<br> This property is mainly meant to be used if there is no PresentationVariant annotation.<br> If both this property and the PresentationVariant annotation exist, the select request sent to the backend would be a combination of both.<br> <b>Note:</b> No validation is done. Please ensure that you do not add spaces or special characters. Also, setting this property during runtime, will delete the current drill-stack and lead to a loss of the drill history.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setSemanticObjectController",
          "visibility": "public",
          "since": "1.36",
          "returnValue": {
            "type": "sap.ui.comp.smartchart.SmartChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oSemanticObjectController",
              "type": "sap.ui.comp.navpopover.SemanticObjectController",
              "optional": false,
              "description": "The semanticObjectController to set"
            }
          ],
          "description": "Sets the aggregated {@link #getSemanticObjectController semanticObjectController}."
        },
        {
          "name": "setShowChartTooltip",
          "visibility": "public",
          "since": "1.38",
          "returnValue": {
            "type": "sap.ui.comp.smartchart.SmartChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowChartTooltip",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showChartTooltip</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowChartTooltip showChartTooltip}.\n\nControls the visibility of the chart tooltip. If set to <code>true </code>, an instance of sap.viz.ui5.controls.VizTooltip will be created and shown when hovering over a data point.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setShowChartTypeSelectionButton",
          "visibility": "public",
          "since": "1.48",
          "returnValue": {
            "type": "sap.ui.comp.smartchart.SmartChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowChartTypeSelectionButton",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showChartTypeSelectionButton</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowChartTypeSelectionButton showChartTypeSelectionButton}.\n\nControls the visibility of the chart type selection button.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setShowDetailsButton",
          "visibility": "public",
          "since": "1.38",
          "returnValue": {
            "type": "sap.ui.comp.smartchart.SmartChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowDetailsButton",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showDetailsButton</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowDetailsButton showDetailsButton}.\n\nControls the visibility of the Details button. If set to <code>true</code>, the datapoint tooltip will be disabled as the information of selected datapoints will be found in the details popover. This will also set the drill-down button to invisible.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setShowDownloadButton",
          "visibility": "public",
          "since": "1.39",
          "returnValue": {
            "type": "sap.ui.comp.smartchart.SmartChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowDownloadButton",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showDownloadButton</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowDownloadButton showDownloadButton}.\n\nControls the visibility of the chart download button.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setShowDrillBreadcrumbs",
          "visibility": "public",
          "since": "1.38",
          "returnValue": {
            "type": "sap.ui.comp.smartchart.SmartChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowDrillBreadcrumbs",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showDrillBreadcrumbs</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowDrillBreadcrumbs showDrillBreadcrumbs}.\n\nControls the visibility of the Breadcrumbs control for drilling up within the visible dimensions. If set to <code>true</code>, the toolbar header will be replaced by the Breadcrumbs control. This will also set the drill-up button to invisible.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setShowToolbar",
          "visibility": "public",
          "since": "1.54",
          "parameters": [
            {
              "name": "bShowToolbar",
              "type": "boolean",
              "optional": false,
              "description": "If set to <code>true</code> the toolbar is shown, if set to <code>false</code> it is not visible"
            }
          ],
          "description": "Change the visibility of the toolbar"
        },
        {
          "name": "setShowVariantManagement",
          "visibility": "public",
          "since": "1.38",
          "returnValue": {
            "type": "sap.ui.comp.smartchart.SmartChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowVariantManagement",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showVariantManagement</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowVariantManagement showVariantManagement}.\n\nControls the visibility of the Variant Management.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setSmartFilterId",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartchart.SmartChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sSmartFilterId",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>smartFilterId</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSmartFilterId smartFilterId}.\n\nID of the corresponding SmartFilter control. If specified, the SmartChart control searches for the SmartFilter control (also in the closest parent view) and attaches to the relevant events of the SmartFilter control to fetch data, show overlay etc.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setSmartVariant",
          "visibility": "public",
          "since": "1.38",
          "returnValue": {
            "type": "sap.ui.comp.smartchart.SmartChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oSmartVariant",
              "type": "sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "ID of an element which becomes the new target of this smartVariant association; alternatively, an element instance may be given"
            }
          ],
          "description": "Sets the associated {@link #getSmartVariant smartVariant}."
        },
        {
          "name": "setToolbar",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartchart.SmartChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oToolbar",
              "type": "sap.m.Toolbar",
              "optional": false,
              "description": "The toolbar to set"
            }
          ],
          "description": "Sets the aggregated {@link #getToolbar toolbar}."
        },
        {
          "name": "setToolbarStyle",
          "visibility": "public",
          "since": "1.54",
          "parameters": [
            {
              "name": "sStyle",
              "type": "sap.m.ToolbarStyle",
              "optional": false,
              "description": "The style of the toolbar."
            }
          ],
          "description": "Change the style of the toolbar"
        },
        {
          "name": "setUiState",
          "visibility": "public",
          "parameters": [
            {
              "name": "oUiState",
              "type": "sap.ui.comp.state.UIState",
              "optional": false,
              "description": "the new representation of UI state"
            }
          ],
          "description": "The method replaces the current UI state of SmartChart control with the data represented in <code>uiState</code>."
        },
        {
          "name": "setUseChartPersonalisation",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartchart.SmartChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bUseChartPersonalisation",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>useChartPersonalisation</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getUseChartPersonalisation useChartPersonalisation}.\n\nIf set to <code>true</code>, personalized chart settings are defined. If you want to persist the chart personalization, you need to specify the persistencyKey property.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setUseListForChartTypeSelection",
          "visibility": "public",
          "since": "1.38",
          "returnValue": {
            "type": "sap.ui.comp.smartchart.SmartChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bUseListForChartTypeSelection",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>useListForChartTypeSelection</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getUseListForChartTypeSelection useListForChartTypeSelection}.\n\nControls the visualization for chart type selection. If set to <code>true</code>, the list of available chart types will be displayed. If set to <code>false</code> and there are three or fewer available chart types, the chart types will be displayed as separate buttons in the toolbar. If there are more than three chart types, a list will be shown.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>.",
          "deprecated": {
            "since": "1.48.0",
            "text": "Setting the property to <code>false</code> will have no effect on the visualization of chart type selection. <code>SmartChart</code> will always show a list of chart types."
          }
        },
        {
          "name": "setUseTooltip",
          "visibility": "public",
          "since": "1.36",
          "returnValue": {
            "type": "sap.ui.comp.smartchart.SmartChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bUseTooltip",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>useTooltip</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getUseTooltip useTooltip}.\n\nSpecifies weather an instance of {@link sap.viz.ui5.controls.VizTooltip} or {@link sap.viz.ui5.controls.Popover} is used. If set to <code>true</code>, a tooltip will be displayed, a popover otherwise.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setUseVariantManagement",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartchart.SmartChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bUseVariantManagement",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>useVariantManagement</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getUseVariantManagement useVariantManagement}.\n\nIf set to <code>true</code>, variants are used. As a prerequisite, you need to specify the persistencyKey property.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.comp.smartfield.Configuration",
      "basename": "Configuration",
      "resource": "sap/ui/comp/smartfield/Configuration.js",
      "module": "sap/ui/comp/smartfield/Configuration",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.core.Element",
      "description": "The configuration allows to further define the behavior of a <code>SmartField</code>.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "element",
        "properties": [
          {
            "name": "controlType",
            "type": "sap.ui.comp.smartfield.ControlType",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "By default the SmartField chooses the controls it hosts by interpreting OData metadata. This property allows to overwrite the default behavior to some extent. For example makes it possible to define that an OData property of type Edm.Boolean is displayed as a combo box.",
            "methods": ["getControlType", "setControlType"]
          },
          {
            "name": "displayBehaviour",
            "type": "sap.ui.comp.smartfield.DisplayBehaviour",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The property specifies how value help, that is available for input fields, is presented. For example, it specifies whether the descriptions of the values shown in the result after a query are displayed.",
            "methods": ["getDisplayBehaviour", "setDisplayBehaviour"]
          },
          {
            "name": "preventInitialDataFetchInValueHelpDialog",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "description": "If there are value help annotations for a smart field, it is possible to specify whether the table in the value help dialog for this field will be filled initially. The default value is <code>true</code>, which means the table will not be filled as the data fetch is prevented.",
            "methods": [
              "getPreventInitialDataFetchInValueHelpDialog",
              "setPreventInitialDataFetchInValueHelpDialog"
            ]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new <code>Smartfield</code>/<code>Configuration</code>.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.comp.smartfield.Configuration with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
        },
        {
          "name": "getControlType",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.ControlType",
            "description": "Value of property <code>controlType</code>"
          },
          "description": "Gets current value of property {@link #getControlType controlType}.\n\nBy default the SmartField chooses the controls it hosts by interpreting OData metadata. This property allows to overwrite the default behavior to some extent. For example makes it possible to define that an OData property of type Edm.Boolean is displayed as a combo box."
        },
        {
          "name": "getDisplayBehaviour",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.DisplayBehaviour",
            "description": "Value of property <code>displayBehaviour</code>"
          },
          "description": "Gets current value of property {@link #getDisplayBehaviour displayBehaviour}.\n\nThe property specifies how value help, that is available for input fields, is presented. For example, it specifies whether the descriptions of the values shown in the result after a query are displayed."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.comp.smartfield.Configuration."
        },
        {
          "name": "getPreventInitialDataFetchInValueHelpDialog",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>preventInitialDataFetchInValueHelpDialog</code>"
          },
          "description": "Gets current value of property {@link #getPreventInitialDataFetchInValueHelpDialog preventInitialDataFetchInValueHelpDialog}.\n\nIf there are value help annotations for a smart field, it is possible to specify whether the table in the value help dialog for this field will be filled initially. The default value is <code>true</code>, which means the table will not be filled as the data fetch is prevented.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setControlType",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.Configuration",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sControlType",
              "type": "sap.ui.comp.smartfield.ControlType",
              "optional": false,
              "description": "New value for property <code>controlType</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getControlType controlType}.\n\nBy default the SmartField chooses the controls it hosts by interpreting OData metadata. This property allows to overwrite the default behavior to some extent. For example makes it possible to define that an OData property of type Edm.Boolean is displayed as a combo box.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setDisplayBehaviour",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.Configuration",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sDisplayBehaviour",
              "type": "sap.ui.comp.smartfield.DisplayBehaviour",
              "optional": false,
              "description": "New value for property <code>displayBehaviour</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getDisplayBehaviour displayBehaviour}.\n\nThe property specifies how value help, that is available for input fields, is presented. For example, it specifies whether the descriptions of the values shown in the result after a query are displayed.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setPreventInitialDataFetchInValueHelpDialog",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.Configuration",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bPreventInitialDataFetchInValueHelpDialog",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>preventInitialDataFetchInValueHelpDialog</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getPreventInitialDataFetchInValueHelpDialog preventInitialDataFetchInValueHelpDialog}.\n\nIf there are value help annotations for a smart field, it is possible to specify whether the table in the value help dialog for this field will be filled initially. The default value is <code>true</code>, which means the table will not be filled as the data fetch is prevented.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.ui.comp.smartfield.ControlContextType",
      "basename": "ControlContextType",
      "resource": "sap/ui/comp/library.js",
      "module": "sap/ui/comp/library",
      "export": "smartfield.ControlContextType",
      "static": true,
      "visibility": "public",
      "description": "Enumeration of the different contexts supported by the SmartField, if it is using an OData model.",
      "ui5-metamodel": true,
      "properties": [
        {
          "name": "Form",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Behaves currently exactly like <code>sap.ui.comp.smartfield.ControlContextType.None</code>."
        },
        {
          "name": "None",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "No special context is selected. The Smart Field applies its internal defaults."
        },
        {
          "name": "ResponsiveTable",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Also the UoM layout is influenced."
        },
        {
          "name": "SmartFormGrid",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "If this is selected the UoM layout is influenced."
        },
        {
          "name": "Table",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "If this is selected the UoM layout is influenced."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.comp.smartfield.ControlProposal",
      "basename": "ControlProposal",
      "resource": "sap/ui/comp/smartfield/ControlProposal.js",
      "module": "sap/ui/comp/smartfield/ControlProposal",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.core.Element",
      "description": "Proposes a control to be rendered. The smart field may ignore the proposal.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "element",
        "properties": [
          {
            "name": "controlType",
            "type": "sap.ui.comp.smartfield.ControlProposalType",
            "defaultValue": "None",
            "group": "Misc",
            "visibility": "public",
            "description": "By default the SmartField chooses the controls it hosts by interpreting OData meta data. This property allows to overwrite the default behavior to some extent; for example this property allows to define that an OData property of type Edm.Boolean is displayed as combo box.",
            "methods": ["getControlType", "setControlType"]
          }
        ],
        "aggregations": [
          {
            "name": "objectStatus",
            "singularName": "objectStatu",
            "type": "sap.ui.comp.smartfield.ObjectStatus",
            "cardinality": "0..1",
            "visibility": "public",
            "since": "1.34.0",
            "description": "Optional definition to further qualify how an object status control should be rendered.",
            "methods": [
              "getObjectStatus",
              "destroyObjectStatus",
              "setObjectStatus"
            ]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new <code>smartfield/ControlProposal</code>.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "destroyObjectStatus",
          "visibility": "public",
          "since": "1.34.0",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.ControlProposal",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the objectStatus in the aggregation {@link #getObjectStatus objectStatus}."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.comp.smartfield.ControlProposal with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
        },
        {
          "name": "getControlType",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.ControlProposalType",
            "description": "Value of property <code>controlType</code>"
          },
          "description": "Gets current value of property {@link #getControlType controlType}.\n\nBy default the SmartField chooses the controls it hosts by interpreting OData meta data. This property allows to overwrite the default behavior to some extent; for example this property allows to define that an OData property of type Edm.Boolean is displayed as combo box.\n\nDefault value is <code>None</code>."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.comp.smartfield.ControlProposal."
        },
        {
          "name": "getObjectStatus",
          "visibility": "public",
          "since": "1.34.0",
          "returnValue": { "type": "sap.ui.comp.smartfield.ObjectStatus" },
          "description": "Gets content of aggregation {@link #getObjectStatus objectStatus}.\n\nOptional definition to further qualify how an object status control should be rendered."
        },
        {
          "name": "setControlType",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.ControlProposal",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sControlType",
              "type": "sap.ui.comp.smartfield.ControlProposalType",
              "optional": false,
              "description": "New value for property <code>controlType</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getControlType controlType}.\n\nBy default the SmartField chooses the controls it hosts by interpreting OData meta data. This property allows to overwrite the default behavior to some extent; for example this property allows to define that an OData property of type Edm.Boolean is displayed as combo box.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>None</code>."
        },
        {
          "name": "setObjectStatus",
          "visibility": "public",
          "since": "1.34.0",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.ControlProposal",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oObjectStatus",
              "type": "sap.ui.comp.smartfield.ObjectStatus",
              "optional": false,
              "description": "The objectStatus to set"
            }
          ],
          "description": "Sets the aggregated {@link #getObjectStatus objectStatus}."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.ui.comp.smartfield.ControlProposalType",
      "basename": "ControlProposalType",
      "resource": "sap/ui/comp/library.js",
      "module": "sap/ui/comp/library",
      "export": "smartfield.ControlProposalType",
      "static": true,
      "visibility": "public",
      "description": "Enumeration of the different control proposals supported by the Smart Field, if it is using an OData model.",
      "ui5-metamodel": true,
      "properties": [
        {
          "name": "None",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "No special context is selected. The Smart Field applies its internal defaults."
        },
        {
          "name": "ObjectIdentifier",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "If this is selected, the sap.m.ObjectIdentifier control is used to display IDs, if they are not editable. The current OData property is assumed to have a text annotation. Otherwise the configuration is ignored."
        },
        {
          "name": "ObjectNumber",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "If this is selected, the sap.m.ObjectNumber control is used to display units of measure. If the value property of the Smart Field is not bound to a unit of measure, the property is ignored."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.ui.comp.smartfield.ControlType",
      "basename": "ControlType",
      "resource": "sap/ui/comp/library.js",
      "module": "sap/ui/comp/library",
      "export": "smartfield.ControlType",
      "static": true,
      "visibility": "public",
      "description": "The available control types to configure the internal control selection of a SmartField control.",
      "ui5-metamodel": true,
      "properties": [
        {
          "name": "auto",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The <code>SmartField</code> control chooses the control to be displayed."
        },
        {
          "name": "checkBox",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The <code>SmartField</code> control displays a check box control."
        },
        {
          "name": "datePicker",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The <code>SmartField</code> control displays a date picker control."
        },
        {
          "name": "dropDownList",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The <code>SmartField</code> control displays a combo box control."
        },
        {
          "name": "input",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The <code>SmartField</code> control displays a text input field control."
        },
        {
          "name": "selection",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The <code>SmartField</code> control displays a select control."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.ui.comp.smartfield.CriticalityRepresentationType",
      "basename": "CriticalityRepresentationType",
      "resource": "sap/ui/comp/library.js",
      "module": "sap/ui/comp/library",
      "export": "smartfield.CriticalityRepresentationType",
      "static": true,
      "visibility": "public",
      "description": "The different options to visualize the ObjectStatus control.",
      "ui5-metamodel": true,
      "properties": [
        {
          "name": "WithIcon",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "If this is selected, the sap.m.ObjectStatus control visualizes the criticality using an icon."
        },
        {
          "name": "WithoutIcon",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "If this is selected, the sap.m.ObjectStatus control does not visualize the criticality using an icon."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.ui.comp.smartfield.DisplayBehaviour",
      "basename": "DisplayBehaviour",
      "resource": "sap/ui/comp/library.js",
      "module": "sap/ui/comp/library",
      "export": "smartfield.DisplayBehaviour",
      "static": true,
      "visibility": "public",
      "description": "The different options to define display behavior for the value help of a SmartField control.",
      "ui5-metamodel": true,
      "properties": [
        {
          "name": "auto",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The SmartField chooses the display behavior."
        },
        {
          "name": "descriptionAndId",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Description and ID are displayed for available values."
        },
        {
          "name": "descriptionOnly",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Only the description of the available values is displayed."
        },
        {
          "name": "idAndDescription",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "ID and description are displayed for available values."
        },
        {
          "name": "idOnly",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Shows the ID only."
        },
        {
          "name": "OnOff",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Shows Boolean value as On/Off"
        },
        {
          "name": "TrueFalse",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Shows Boolean value as True/False"
        },
        {
          "name": "YesNo",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Shows Boolean value as Yes/No"
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.ui.comp.smartfield.JSONType",
      "basename": "JSONType",
      "resource": "sap/ui/comp/library.js",
      "module": "sap/ui/comp/library",
      "export": "smartfield.JSONType",
      "static": true,
      "visibility": "public",
      "description": "Enumeration of the different data types supported by the SmartField control, if it is using a JSON model.",
      "ui5-metamodel": true,
      "properties": [
        {
          "name": "Boolean",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Boolean Type"
        },
        {
          "name": "Date",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The JavaScript Date Object"
        },
        {
          "name": "DateTime",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Date Time Type"
        },
        {
          "name": "Float",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Float type"
        },
        {
          "name": "Integer",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Integer type"
        },
        {
          "name": "String",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The JavaScript primary type String"
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.comp.smartfield.ObjectStatus",
      "basename": "ObjectStatus",
      "resource": "sap/ui/comp/smartfield/ObjectStatus.js",
      "module": "sap/ui/comp/smartfield/ObjectStatus",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.core.Element",
      "description": "Defines a possible object status control to be rendered. The smart field may ignore the proposal.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "element",
        "properties": [
          {
            "name": "criticality",
            "type": "any",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Optional attribute to determine the rendered state. Possible values are the numeric representations of the enum members of annotation <code>com.sap.vocabularies.UI.v1.CriticalityType</code>: 0: None 1: Error 2: Warning 3: Success",
            "methods": ["getCriticality", "setCriticality"]
          },
          {
            "name": "criticalityRepresentationType",
            "type": "sap.ui.comp.smartfield.CriticalityRepresentationType",
            "defaultValue": "WithIcon",
            "group": "Misc",
            "visibility": "public",
            "description": "Optional attribute, which can be set to control how the criticality is visualized.",
            "methods": [
              "getCriticalityRepresentationType",
              "setCriticalityRepresentationType"
            ]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new <code>SmartField/ObjectStatus</code>.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.comp.smartfield.ObjectStatus with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
        },
        {
          "name": "getCriticality",
          "visibility": "public",
          "returnValue": {
            "type": "any",
            "description": "Value of property <code>criticality</code>"
          },
          "description": "Gets current value of property {@link #getCriticality criticality}.\n\nOptional attribute to determine the rendered state. Possible values are the numeric representations of the enum members of annotation <code>com.sap.vocabularies.UI.v1.CriticalityType</code>: 0: None 1: Error 2: Warning 3: Success"
        },
        {
          "name": "getCriticalityRepresentationType",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.CriticalityRepresentationType",
            "description": "Value of property <code>criticalityRepresentationType</code>"
          },
          "description": "Gets current value of property {@link #getCriticalityRepresentationType criticalityRepresentationType}.\n\nOptional attribute, which can be set to control how the criticality is visualized.\n\nDefault value is <code>WithIcon</code>."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.comp.smartfield.ObjectStatus."
        },
        {
          "name": "setCriticality",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.ObjectStatus",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oCriticality",
              "type": "any",
              "optional": false,
              "description": "New value for property <code>criticality</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getCriticality criticality}.\n\nOptional attribute to determine the rendered state. Possible values are the numeric representations of the enum members of annotation <code>com.sap.vocabularies.UI.v1.CriticalityType</code>: 0: None 1: Error 2: Warning 3: Success\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setCriticalityRepresentationType",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.ObjectStatus",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sCriticalityRepresentationType",
              "type": "sap.ui.comp.smartfield.CriticalityRepresentationType",
              "optional": false,
              "description": "New value for property <code>criticalityRepresentationType</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getCriticalityRepresentationType criticalityRepresentationType}.\n\nOptional attribute, which can be set to control how the criticality is visualized.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>WithIcon</code>."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.comp.smartfield.SmartField",
      "basename": "SmartField",
      "resource": "sap/ui/comp/smartfield/SmartField.js",
      "module": "sap/ui/comp/smartfield/SmartField",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.core.Control",
      "implements": ["sap.ui.core.IFormContent"],
      "description": "The <code>SmartField</code> control interprets metadata that represents entity relationship models, data types, service capabilities, and annotations in OData services to automatically generate the underlying inner controls and reduce the amount of code needed for developing applications. In some cases, the OData entity is derived from the control's binding context. The OData entity's property that is changed or displayed with the control is derived from the control's <code>value</code> property.\n\n<b>Note:</b> For interoperability and accessibility reasons, the <code>SmartField</code> control must be labeled by the <code>sap.ui.comp.smartfield.SmartLabel</code> control instead of the <code>sap.m.Label</code> control, as the <code>sap.m.Label</code> control does not know of the inner structure of a <code>SmartField</code> control. If the <code>SmartField</code> control is rendered inside a smart container control, for example, the <code>SmartForm</code> control, the <code>SmartLabel</code> control is automatically generated to reduce the amount of code needed on the application side. However, in other scenarios when <code>SmartField</code> is used stand-alone or outside a smart container control, for example, a <code>SimpleForm</code> control, the <code>SmartLabel</code> control is not automatically generated in these cases. Although the <code>sap.ui.comp.smartfield.SmartLabel</code> is a private/internal control, the following basic use is allowed by applications for labeling the <code>SmartField</code> control.\n\n<i>XML Example of a <code>SmartField</code> control labeled by a <code>SmartLabel</code> control</i>\n\n<pre>\n&lt;sap.ui.comp.smartfield.SmartLabel labelFor=&quot;IDProduct&quot;/&gt;\n&lt;sap.ui.comp.smartfield.SmartField id=&quot;IDProduct&quot; value=&quot;{ProductId}&quot;/&gt;\n</pre>\n\n<b>Note</b>: By default, the <code>com.sap.vocabularies.UI.v1.TextArrangement</code> annotation and the value of the <code>displayBehaviour</code> property of the aggregation named <code>configuration</code> are not evaluated in edit mode. To enable these features, set the <code>textInEditModeSource</code> control property to a non-default value.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "value",
            "type": "any",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The value property keeps the current value of the control. If a binding expression is configured, this is used to determine the property of an OData entity.",
            "methods": ["getValue", "setValue"]
          },
          {
            "name": "enabled",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "description": "Indicates whether the user can interact with the control or not. <b>Note:</b> Disabled controls cannot be focused and they are out of the tab order.",
            "methods": ["getEnabled", "setEnabled"]
          },
          {
            "name": "entitySet",
            "type": "string",
            "defaultValue": "",
            "group": "Misc",
            "visibility": "public",
            "description": "The name of an entity set for which the control manages values. This is an optional property.",
            "methods": ["getEntitySet", "setEntitySet"]
          },
          {
            "name": "editable",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "description": "Sets the control into an editable mode or a display mode.",
            "methods": ["getEditable", "setEditable"]
          },
          {
            "name": "contextEditable",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "since": "1.32.0",
            "description": "Notifies the control whether controls using the <code>SmartField</code> control are editable.",
            "methods": ["getContextEditable", "setContextEditable"]
          },
          {
            "name": "width",
            "type": "sap.ui.core.CSSSize",
            "defaultValue": "",
            "group": "Misc",
            "visibility": "public",
            "description": "Defines the width of the control.",
            "methods": ["getWidth", "setWidth"]
          },
          {
            "name": "textAlign",
            "type": "sap.ui.core.TextAlign",
            "defaultValue": "Initial",
            "group": "Misc",
            "visibility": "public",
            "description": "Horizontal alignment of the text.",
            "methods": ["getTextAlign", "setTextAlign"]
          },
          {
            "name": "placeholder",
            "type": "string",
            "defaultValue": "",
            "group": "Misc",
            "visibility": "public",
            "description": "Text shown when no value available.",
            "methods": ["getPlaceholder", "setPlaceholder"]
          },
          {
            "name": "name",
            "type": "string",
            "defaultValue": "",
            "group": "Misc",
            "visibility": "public",
            "description": "To be used in the HTML code (for example, for HTML forms that send data to the server via 'submit').",
            "methods": ["getName", "setName"]
          },
          {
            "name": "valueState",
            "type": "sap.ui.core.ValueState",
            "defaultValue": "None",
            "group": "Appearance",
            "visibility": "public",
            "description": "Visualizes the validation state of the control, e.g. <code>Error</code>, <code>Warning</code>, <code>Success</code>.",
            "methods": ["getValueState", "setValueState"]
          },
          {
            "name": "valueStateText",
            "type": "string",
            "defaultValue": "",
            "group": "Appearance",
            "visibility": "public",
            "description": "The text which is shown in the value state message popup.",
            "methods": ["getValueStateText", "setValueStateText"]
          },
          {
            "name": "showValueStateMessage",
            "type": "boolean",
            "defaultValue": true,
            "group": "Appearance",
            "visibility": "public",
            "description": "Defines whether the value state message is shown or not.",
            "methods": ["getShowValueStateMessage", "setShowValueStateMessage"]
          },
          {
            "name": "jsontype",
            "type": "sap.ui.comp.smartfield.JSONType",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Data types to be used, if the <code>SmartField</code> control is interacting with a JSON model. If the value property of the control is bound to a property of an OData entity set, this property is not taken into consideration.",
            "deprecated": { "since": "1.31.0" },
            "methods": ["getJsontype", "setJsontype"]
          },
          {
            "name": "mandatory",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "description": "If set to <code>true</code>, a user input is required.",
            "methods": ["getMandatory", "setMandatory"]
          },
          {
            "name": "maxLength",
            "type": "int",
            "defaultValue": 0,
            "group": "Misc",
            "visibility": "public",
            "description": "Defines the highest possible number of permitted input characters that the user can enter into the text input field.\n\n<h3>Computed <code>maxLength</code></h3> If the specified <code>maxLength</code> value is greater than the <code>maxLength</code> value specified for the underlying bound Entity Data Model (EDM) property in the service metadata document, the <code>maxLength</code> value of the EDM property takes precedence. Likewise, if the application code provides a binding data type for the <code>value</code> property of the <code>SmartField</code> control and the binding data type has <code>maxLength</code> constraints defined, this <code>maxLength</code> is also taken into consideration to compute the final <code>maxLength</code> value.\n\n<h3>Validation Behavior</h3> By design, the <code>SmartField</code> control does not restrict/validate the highest number of permitted input characters for every keystroke, but only when the text input field has changed, and the browser focus leaves the text input field or the ENTER key is pressed. The <code>SmartField</code> control is used more generically in broader contexts, and adding a <code>maxLength</code> attribute to the HTML text input control may break data type formatting in two-way data-binding scenarios. Let's say the <code>maxLength</code> property is set to 3, but the text input control has a formatter function attached to it to format the entered value \"DE\" to \"Germany (DE)\". In this case, the formatted value will be truncated by the <code>maxLength</code> setting.",
            "methods": ["getMaxLength", "setMaxLength"]
          },
          {
            "name": "showSuggestion",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "description": "If set to <code>true</code>, the suggestion feature for a hosted control is enabled, if the hosted control supports it.",
            "methods": ["getShowSuggestion", "setShowSuggestion"]
          },
          {
            "name": "showValueHelp",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "description": "If set to <code>true</code>, a value help indicator will be displayed inside the hosted control, if the hosted control supports this.",
            "methods": ["getShowValueHelp", "setShowValueHelp"]
          },
          {
            "name": "showLabel",
            "type": "boolean",
            "defaultValue": true,
            "group": "Appearance",
            "visibility": "public",
            "description": "If set to <code>false</code> the label is not displayed.",
            "methods": ["getShowLabel", "setShowLabel"]
          },
          {
            "name": "textLabel",
            "type": "string",
            "defaultValue": "",
            "group": "Misc",
            "visibility": "public",
            "description": "This property contains the text of an associated <code>SmartLabel</code>.",
            "methods": ["getTextLabel", "setTextLabel"]
          },
          {
            "name": "tooltipLabel",
            "type": "string",
            "defaultValue": "",
            "group": "Misc",
            "visibility": "public",
            "description": "This property contains the tool tip of the associated <code>SmartLabel</code> control.",
            "methods": ["getTooltipLabel", "setTooltipLabel"]
          },
          {
            "name": "uomVisible",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "description": "Visible state of the unit, if the <code>SmartField</code> control addresses unit of measure use cases, for example, an amount and its associated currency.",
            "methods": ["getUomVisible", "setUomVisible"]
          },
          {
            "name": "uomEditable",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "description": "Editable state of the unit, if the <code>SmartField</code> control addresses unit of measure use cases, for example, an amount and its associated currency.",
            "methods": ["getUomEditable", "setUomEditable"]
          },
          {
            "name": "uomEnabled",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "description": "Enabled state of the unit, if the <code>SmartField</code> control addresses unit of measure use cases, for example, an amount and its associated currency.",
            "methods": ["getUomEnabled", "setUomEnabled"]
          },
          {
            "name": "url",
            "type": "string",
            "defaultValue": "",
            "group": "Misc",
            "visibility": "public",
            "description": "Contains a URL which is used to render a link. The link is rendered, if the OData property, to which the value property of the control is bound, is of type <code>Edm.String</code> and the <code>SmartField</code> is in display mode.",
            "methods": ["getUrl", "setUrl"]
          },
          {
            "name": "uomEditState",
            "type": "int",
            "defaultValue": -1,
            "group": "Misc",
            "visibility": "public",
            "since": "1.32.0",
            "description": "This property is for internal use only.",
            "methods": ["getUomEditState", "setUomEditState"]
          },
          {
            "name": "controlContext",
            "type": "sap.ui.comp.smartfield.ControlContextType",
            "defaultValue": "None",
            "group": "Misc",
            "visibility": "public",
            "since": "1.32.0",
            "description": "Defines the context in which the layout of the <code>SmartField</code> control has to be interpreted.",
            "methods": ["getControlContext", "setControlContext"]
          },
          {
            "name": "proposedControl",
            "type": "sap.ui.comp.smartfield.ControlProposalType",
            "defaultValue": "None",
            "group": "Misc",
            "visibility": "public",
            "since": "1.32.0",
            "description": "Proposes a control to be rendered. The <code>SmartField</code> control can ignore the proposal.",
            "deprecated": { "since": "1.32.0" },
            "methods": ["getProposedControl", "setProposedControl"]
          },
          {
            "name": "wrapping",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "since": "1.36.6",
            "description": "Indicates whether the control break lines (in display mode) to prevent overflow.",
            "methods": ["getWrapping", "setWrapping"]
          },
          {
            "name": "clientSideMandatoryCheck",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "since": "1.38.3",
            "description": "Determines if the mandatory check happens on the client side <code>true</code> or on the server side <code>false</code>.\n\n<b>Note:</b> If the {@link sap.ui.comp.smartfield.SmartField#value} property of the <code>SmartField</code> control is bound to an Entity Data Model (EDM) property annotated as <code>Nullable=\"false\"</code>, the mandatory validation is performed on the client side regardless of the <code>clientSideMandatoryCheck</code> setting.\n\n<i>Example:</i>\n\n<pre>\n    &lt;Property Name=&quot;CategoryID&quot; Type=&quot;Edm.String&quot; Nullable=&quot;false&quot;/&gt;\n</pre>",
            "methods": [
              "getClientSideMandatoryCheck",
              "setClientSideMandatoryCheck"
            ]
          },
          {
            "name": "fetchValueListReadOnly",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "since": "1.42.0",
            "description": "Indicates whether the value list collection is fetched in display mode from the resource path specified in the <code>com.sap.vocabularies.Common.v1.ValueList</code> annotation.\n\nThis collection data is used to infer a descriptive text for the value of the <code>SmartField</code> control. However, fetching the value list collection for every <code>SmartField</code> instance individually may not be ideal in some performance-critical scenarios. To optimize this default behavior, you can set this property to <code>false</code> and provide the <code>com.sap.vocabularies.Common.v1.Text</code> annotation, which is used to specify the URL path name to the Entity Data Model (EDM) property from which the descriptive text for the value of the <code>SmartField</code> control is fetched, for example, LT (Laptop).\n\n<b>Note:</b> Setting this property to <code>false</code> only has an effect if the <code>value</code> property of the <code>SmartField</code> control is bound to an Entity Data Model (EDM) property typed as <code>Edm.String</code>. In addition, applications or frameworks have to make sure the descriptive text is fetched, for example, by expanding a navigation property.",
            "methods": [
              "getFetchValueListReadOnly",
              "setFetchValueListReadOnly"
            ]
          },
          {
            "name": "expandNavigationProperties",
            "type": "boolean",
            "defaultValue": false,
            "group": "Behavior",
            "visibility": "public",
            "since": "1.48",
            "description": "Indicates if entities related to navigation properties inside the metadata are requested. If set to <code>true</code>, then these related entities are loaded with an <code>$expand</code> request.\n\nAnnotations that can have navigation properties are the following: <ul> <li> <code>com.sap.vocabularies.Common.v1.Text</code> for text arrangements <li> <code>Org.OData.Measures.V1.Unit</code> and <code>Org.OData.Measures.V1.ISOCurrency</code> for units <li> <code>com.sap.vocabularies.Common.v1.FieldControl</code> for field control </ul>\n\n<b>Note:</b> Independent of the <code>fetchValueListReadOnly</code> value, setting this flag to <code>true</code> requests data from the backend.\n\n<b>Note:</b> The back-end request to expand the navigation properties is sent only if the entity to which <code>SmartField</code> is bound is persisted. For transient entities, there is no back-end request since no such data is available.",
            "experimental": { "since": "1.48" },
            "methods": [
              "getExpandNavigationProperties",
              "setExpandNavigationProperties"
            ]
          },
          {
            "name": "textInEditModeSource",
            "type": "sap.ui.comp.smartfield.TextInEditModeSource",
            "defaultValue": "None",
            "group": "Behavior",
            "visibility": "public",
            "since": "1.54",
            "description": "Sets the source from which text descriptions for <code>IDs</code> are fetched in edit mode, for example, for LT (Laptop).\n\n<b>Note</b>: The <code>sap.ui.comp.smartfield.TextInEditModeSource.NavigationProperty</code> and <code>sap.ui.comp.smartfield.TextInEditModeSource.ValueList</code> enumeration members are only supported if the following applies:\n\n<ul> <li>The <code>value</code> property of the <code>SmartField</code> control instance is bound to an Entity Data Model (EDM) property typed as <code>Edm.String</code> or <code>Edm.Guid</code>.</li> <li>The <code>com.sap.vocabularies.UI.v1.TextArrangement</code> annotation for the bound EDM property or entity type is specified in the (service metadata document/annotation file).</li> <li>The binding mode for the <code>value</code> property of the <code>SmartField</code> control is the two-way binding mode.</li> <li>The field from which the description is fetch is filterable.</li> </ul>\n\n<b>Note</b>: In addition, the <code>sap.ui.comp.smartfield.TextInEditModeSource.NavigationProperty</code> enumeration member is only supported if the following applies:\n\n<ul> <li>The navigation EDM property association is defined in the service metadata document.</li> <li>The <code>com.sap.vocabularies.Common.v1.Text</code> annotation for the bound EDM property is specified in the service metadata document or annotation file whose <code>Path</code> attribute points to a navigation EDM property of a lookup entity set/type whose single key property is the <code>ID</code>, which contains (among other properties) the descriptive value.</li> <li>The navigation EDM property association defines a referential constraint that ties values of the dependent editable entity type/set to the lookup entity type/set in the service metadata document.</li> <li>The navigation EDM property association end multiplicity of the lookup entity type/set is defined as <code>1</code> in the service metadata document. There must be a single-valued navigation from the editable entity set/type to the lookup entity set/type.</li> <li>The lookup entity type/set from which the descriptive value is fetched contains a single key property.</li> </ul>",
            "experimental": { "since": "1.54" },
            "methods": ["getTextInEditModeSource", "setTextInEditModeSource"]
          }
        ],
        "aggregations": [
          {
            "name": "_content",
            "singularName": "_content",
            "type": "sap.ui.core.Control",
            "cardinality": "0..1",
            "visibility": "hidden",
            "description": "The content aggregation is used to hold the control that is hosted by the <code>SmartField</code> control.",
            "methods": ["get_content", "destroy_content", "set_content"]
          },
          {
            "name": "configuration",
            "singularName": "configuration",
            "type": "sap.ui.comp.smartfield.Configuration",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "Optional configuration for <code>SmartField</code>.",
            "methods": [
              "getConfiguration",
              "destroyConfiguration",
              "setConfiguration"
            ]
          },
          {
            "name": "controlProposal",
            "singularName": "controlProposal",
            "type": "sap.ui.comp.smartfield.ControlProposal",
            "cardinality": "0..1",
            "visibility": "public",
            "since": "1.32.0",
            "description": "Proposes a control to be rendered. The <code>SmartField</code> control can ignore the proposal.",
            "deprecated": { "since": "1.34.0" },
            "methods": [
              "getControlProposal",
              "destroyControlProposal",
              "setControlProposal"
            ]
          },
          {
            "name": "_ariaLabelInvisibleText",
            "singularName": "_ariaLabelInvisibleText",
            "type": "sap.ui.core.InvisibleText",
            "cardinality": "0..n",
            "visibility": "hidden",
            "since": "1.34.2",
            "description": "Collects the texts to be used for the ARIA labels.<br> The InvisibleText controls will be added to the DOM by the <code>SmartField</code> control.",
            "methods": [
              "get_ariaLabelInvisibleText",
              "destroy_ariaLabelInvisibleText",
              "insert_ariaLabelInvisibleText",
              "add_ariaLabelInvisibleText",
              "remove_ariaLabelInvisibleText",
              "indexOf_ariaLabelInvisibleText",
              "removeAll_ariaLabelInvisibleText"
            ]
          },
          {
            "name": "semanticObjectController",
            "singularName": "semanticObjectController",
            "type": "sap.ui.comp.navpopover.SemanticObjectController",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "The Semantic Object Controller allows the user to specify and overwrite functionality for semantic object navigation.",
            "methods": [
              "getSemanticObjectController",
              "destroySemanticObjectController",
              "setSemanticObjectController"
            ]
          }
        ],
        "associations": [
          {
            "name": "ariaLabelledBy",
            "singularName": "ariaLabelledBy",
            "type": "sap.ui.core.Control",
            "cardinality": "0..n",
            "visibility": "public",
            "since": "1.34.2",
            "description": "Association to controls / IDs which label this control (see WAI-ARIA attribute <code>aria-labelledby</code>).",
            "methods": [
              "getAriaLabelledBy",
              "addAriaLabelledBy",
              "removeAriaLabelledBy",
              "removeAllAriaLabelledBy"
            ]
          }
        ],
        "events": [
          {
            "name": "entitySetFound",
            "visibility": "public",
            "description": "The OData entity set is either derived from the control's binding context or from control's entity set property, if a value for it is specified. In both cases this event is fired.",
            "parameters": {
              "entitySet": {
                "name": "entitySet",
                "type": "string",
                "description": "The path to the found entity set"
              }
            },
            "methods": [
              "attachEntitySetFound",
              "detachEntitySetFound",
              "fireEntitySetFound"
            ]
          },
          {
            "name": "change",
            "visibility": "public",
            "description": "The event is fired after the text in the field has been changed and the focus leaves the field, or after the Enter key has been pressed.",
            "parameters": {
              "value": {
                "name": "value",
                "type": "string",
                "description": "The current value inside the text field"
              },
              "newValue": {
                "name": "newValue",
                "type": "string",
                "description": "The new value inside the text field"
              }
            },
            "methods": ["attachChange", "detachChange", "fireChange"]
          },
          {
            "name": "initialise",
            "visibility": "public",
            "description": "The event is fired after the smart field has calculated its metadata.",
            "methods": [
              "attachInitialise",
              "detachInitialise",
              "fireInitialise"
            ]
          },
          {
            "name": "visibleChanged",
            "visibility": "public",
            "description": "The event is fired after the visibility of the control has changed.",
            "parameters": {
              "visible": {
                "name": "visible",
                "type": "boolean",
                "description": "If <code>true</code>, the control is visible"
              }
            },
            "methods": [
              "attachVisibleChanged",
              "detachVisibleChanged",
              "fireVisibleChanged"
            ]
          },
          {
            "name": "editableChanged",
            "visibility": "public",
            "since": "1.30.0",
            "description": "The event is fired after the value of editable property of the control has changed.",
            "parameters": {
              "editable": {
                "name": "editable",
                "type": "boolean",
                "description": "If <code>true</code>, the control is in edit mode"
              }
            },
            "methods": [
              "attachEditableChanged",
              "detachEditableChanged",
              "fireEditableChanged"
            ]
          },
          {
            "name": "contextEditableChanged",
            "visibility": "public",
            "since": "1.32.0",
            "description": "The event is fired after the context editable property of the control has changed.",
            "parameters": {
              "editable": {
                "name": "editable",
                "type": "boolean",
                "description": "The value of the context editable property of the control"
              }
            },
            "methods": [
              "attachContextEditableChanged",
              "detachContextEditableChanged",
              "fireContextEditableChanged"
            ]
          },
          {
            "name": "innerControlsCreated",
            "visibility": "public",
            "description": "The event is fired after the inner controls have been created. The created controls can be obtained via oControl.getInnerControls().",
            "methods": [
              "attachInnerControlsCreated",
              "detachInnerControlsCreated",
              "fireInnerControlsCreated"
            ]
          },
          {
            "name": "valueListChanged",
            "visibility": "public",
            "since": "1.31.0",
            "description": "The event is fired when after selection of values with value help or auto-suggest, the model is updated with the selected data.",
            "parameters": {
              "changes": {
                "name": "changes",
                "type": "sap.ui.core.Control[]",
                "description": "An array of selected values"
              }
            },
            "methods": [
              "attachValueListChanged",
              "detachValueListChanged",
              "fireValueListChanged"
            ]
          },
          {
            "name": "press",
            "visibility": "public",
            "since": "1.36.0",
            "description": "Fires when the user triggers the link control or taps/clicks on an active title of the object identifier control.",
            "methods": ["attachPress", "detachPress", "firePress"]
          }
        ],
        "annotations": [
          {
            "name": "dataType",
            "namespace": "Edm",
            "annotation": "undefined",
            "defaultValue": "undefined",
            "description": "Based on the data type the <code>SmartField</code> determines the rendering of the inner control. Additionally the <code>FieldControl</code> is used. <code>FieldControl</code> is an annotation that contains a collection of <code>EnumMembers</code> that can dynamically set the state of the control. Controls used for the <code>SmartField</code> control during runtime are: <ul> <li>sap.m.Input of type Edm.String without value help. <br> Used if control is editable and the EntityType is updatable. </li> <li>sap.m.Input of type Edm.String with value help and suggestion list. <br> Used if control is editable, the <code>EntityType</code> is updatable, and a ValueHelp annotations exists. </li> </ul>"
          },
          {
            "name": "fieldControl",
            "namespace": "com.sap.vocabularies.Common.v1",
            "target": ["Property", "Record"],
            "annotation": "FieldControl",
            "defaultValue": "false",
            "appliesTo": ["fieldItem/#"],
            "since": "1.28.1",
            "description": "Defines the rendering of the field from a dynamic value that can be provided as a path by referencing another <code>Property</code> within the same <code>EntityType</code>. Whenever the value of the referenced property changes the control adapts. If value is\n\n<ul> <li> 0, then the control is hidden <li> 1, then the control is read-only <li> 3, then the control is optional (default) <li> 7, then the control is mandatory </ul>\n\n<i>XML Example of OData V4 with dynamic field control Customer and CompanyCode Properties</i>\n\n<pre>\n   &lt;Property Name=&quot;Customer&quot;&gt;\n     &lt;Annotation Term=&quot;com.sap.vocabularies.Common.v1.FieldControl&quot; Path=&quot;FieldControlValue&quot;/&gt;\n   &lt;/Property&gt;\n   &lt;Property Name=&quot;CompanyCode&quot;&gt;\n     &lt;Annotation Term=&quot;com.sap.vocabularies.Common.v1.FieldControl&quot; Path=&quot;FieldControlValue&quot;/&gt;\n   &lt;/Property&gt;\n</pre>\n\nFor OData v2 the <code>sap:field-control</code> annotation on the <code>Property</code> can be used to assign the field control.\n\n<pre>\n   &lt;Property Name=&quot;Customer&quot; ... sap:field-control=&quot;FieldControlValue&quot;/&gt;\n   &lt;Property Name=&quot;CompanyCode&quot; ... sap:field-control=&quot;FieldControlValue&quot;/&gt;\n</pre>"
          },
          {
            "name": "fieldVisible",
            "namespace": "com.sap.vocabularies.Common.v1",
            "target": ["Property", "Record"],
            "annotation": "FieldControlType",
            "defaultValue": "false",
            "appliesTo": ["fieldItem/#/visible"],
            "since": "1.28.1",
            "description": "Defines whether the control is visible. A fixed value can be provided as <code>EnumMember</code> <code>FieldControlType/Hidden</code> of the <code>FieldControl</code> annotation. The property <code>visible</code> of the SmartField control can be used to handle the visibility of the control.\n\n<i>XML Example of OData V4 with static Hidden Customer and CompanyCode Properties</i>\n\n<pre>\n   &lt;Property Name=&quot;Customer&quot;&gt;\n     &lt;Annotation Term=&quot;com.sap.vocabularies.Common.v1.FieldControl&quot; EnumMember=&quot;com.sap.vocabularies.Common.v1.FieldControlType/Hidden&quot;/&gt;\n   &lt;/Property&gt;\n   &lt;Property Name=&quot;CompanyCode&quot;&gt;\n     &lt;Annotation Term=&quot;com.sap.vocabularies.Common.v1.FieldControl&quot; EnumMember=&quot;com.sap.vocabularies.Common.v1.FieldControlType/Hidden&quot;/&gt;\n   &lt;/Property&gt;\n</pre>\n\nFor OData v2 the <code>sap:visible</code> annotation on the <code>Property</code> can be used to assign visibility.\n\n<pre>\n   &lt;Property Name=&quot;Customer&quot; ... sap:visible=&quot;false&quot;/&gt;\n   &lt;Property Name=&quot;CompanyCode&quot; ... sap:visible=&quot;false&quot;/&gt;\n</pre>"
          },
          {
            "name": "fieldReadOnly",
            "namespace": "com.sap.vocabularies.Common.v1",
            "target": ["Property", "Record"],
            "annotation": "FieldControlType",
            "defaultValue": "false",
            "appliesTo": ["fieldItem/#/editable"],
            "since": "1.28.1",
            "description": "Defines whether the control is read-only. A fixed value can be provided as <code>EnumMember</code> <code>FieldControlType/ReadOnly</code> of the <code>FieldControl</code> annotation. The <code>editable</code> property of the SmartField control renders the field as editable input. A SmartField is only editable if the corresponding <code>EntityType</code> is at least annotated as <code>com.sap.vocabularies.Common.v1.Updatable</code>.\n\n<i>XML Example of OData V4 with static Read-only Customer and CompanyCode Properties</i>\n\n<pre>\n   &lt;Property Name=&quot;Customer&quot;&gt;\n     &lt;Annotation Term=&quot;com.sap.vocabularies.Common.v1.FieldControl&quot; EnumMember=&quot;com.sap.vocabularies.Common.v1.FieldControlType/ReadOnly&quot;/&gt;\n   &lt;/Property&gt;\n   &lt;Property Name=&quot;CompanyCode&quot;&gt;\n     &lt;Annotation Term=&quot;com.sap.vocabularies.Common.v1.FieldControl&quot; EnumMember=&quot;com.sap.vocabularies.Common.v1.FieldControlType/ReadOnly&quot;/&gt;\n   &lt;/Property&gt;\n</pre>\n\nFor OData v2 the <code>sap:updatable</code> annotation on the <code>Property</code> can be used to render fields in read-only mode.\n\n<pre>\n   &lt;Property Name=&quot;Customer&quot; ... sap:updatable=&quot;false&quot;/&gt;\n   &lt;Property Name=&quot;CompanyCode&quot; ... sap:updatable=&quot;false&quot;/&gt;\n</pre>"
          },
          {
            "name": "fieldMandatory",
            "namespace": "com.sap.vocabularies.Common.v1",
            "target": ["Property", "Record"],
            "annotation": "FieldControlType",
            "defaultValue": "false",
            "appliesTo": ["fieldItem/#/editable"],
            "since": "1.28.1",
            "description": "Defines whether the control is mandatory. A fixed value can be provided as <code>EnumMember</code> <code>FieldControlType/Mandatory</code> of the <code>FieldControl</code> annotation. The <code>mandatory</code> property of the SmartField control renders the field as mandatory input. A SmartField can only be mandatory if the corresponding <code>EntityType</code> is at least annotated as <code>com.sap.vocabularies.Common.v1.Updatable</code>.\n\n<i>XML Example of OData V4 with static Mandatory Customer and CompanyCode Properties</i>\n\n<pre>\n   &lt;Property Name=&quot;Customer&quot;&gt;\n     &lt;Annotation Term=&quot;com.sap.vocabularies.Common.v1.FieldControl&quot; EnumMember=&quot;com.sap.vocabularies.Common.v1.FieldControlType/Mandatory&quot;/&gt;\n   &lt;/Property&gt;\n   &lt;Property Name=&quot;CompanyCode&quot;&gt;\n     &lt;Annotation Term=&quot;com.sap.vocabularies.Common.v1.FieldControl&quot; EnumMember=&quot;com.sap.vocabularies.Common.v1.FieldControlType/Mandatory&quot;/&gt;\n   &lt;/Property&gt;\n</pre>\n\nFor OData v2 the <code>Nullable</code> property on the <code>Property</code> can be used to specify whether the field is mandatory.\n\n<pre>\n   &lt;Property Name=&quot;Customer&quot; ...Nullable=&quot;false&quot;/&gt;\n   &lt;Property Name=&quot;CompanyCode&quot; ... Nullable=&quot;false&quot;/&gt;\n</pre>"
          },
          {
            "name": "fieldMasked",
            "namespace": "com.sap.vocabularies.Common.v1",
            "target": ["Property"],
            "annotation": "Masked",
            "defaultValue": "false",
            "appliesTo": ["fieldItem/#/value"],
            "since": "1.28.1",
            "description": "Determines that a control must not display the actual value in a field with sensitive data, but replace it with a placeholder, for example, *. Use this annotation for sensitive data.\n\n<i>XML Example of OData V4 with Masked Password property</i>\n\n<pre>\n  &lt;Property Name=&quot;Password&quot; /&gt;\n  &lt;Annotations Target=&quot;Password&quot; xmlns=&quot;http://docs.oasis-open.org/odata/ns/edm&quot;&gt;\n    &lt;Annotation Term=&quot;com.sap.vocabularies.Common.v1.Masked&quot; /&gt;\n  &lt;/Annotations&gt;\n</pre>"
          },
          {
            "name": "fieldLabel",
            "namespace": "com.sap.vocabularies.Common.v1",
            "target": ["Property", "PropertyPath"],
            "annotation": "Label",
            "defaultValue": "null",
            "appliesTo": ["fieldItem/#/label"],
            "since": "1.28.1",
            "description": "A short, human-readable text suitable for labels on user interfaces. Renders the value associated with the label annotation of a <code>Property</code>, which can be <code>null</code>.\n\n<i>XML Example of OData V4 with CustomerName as Label for Customer</i>\n\n<pre>\n  &lt;Property Name=&quot;Customer&quot;&gt;\n    &lt;Annotation Term=&quot;com.sap.vocabularies.Common.v1.Label&quot; Path=&quot;CustomerName&quot; /&gt;\n  &lt;/Property&gt;\n  &lt;Property Name=&quot;CustomerName&quot; type=&quot;Edm.String&quot; /&gt;\n</pre>\n\nFor OData v2 the <code>sap:label</code> annotation on the <code>Property</code> can be used to assign a label.\n\n<pre>\n   &lt;Property Name=&quot;Customer&quot; ... sap:label=&quot;Customer Name&quot;/&gt;\n   &lt;Property Name=&quot;CompanyCode&quot; ... sap:label=&quot;Company Code&quot;/&gt;\n</pre>"
          },
          {
            "name": "fieldText",
            "namespace": "com.sap.vocabularies.Common.v1",
            "target": ["Property"],
            "annotation": "Text",
            "defaultValue": "null",
            "appliesTo": ["fieldItem/#/value"],
            "since": "1.28.1",
            "description": "A descriptive text for values of the annotated property. <b>Note:</b> The value must be a dynamic expression when used as metadata annotation.\n\n<i>XML Example of OData V4 Text on CustomerName Property</i>\n\n<pre>\n&lt;Annotation Term=&quot;com.sap.vocabularies.Common.v1.Text&quot; Path=&quot;CustomerName&quot; /&gt;\n</pre>\n\nFor OData v2 the <code>sap:text</code> annotation on the <code>Property</code> can be used to assign a text/description.\n\n<pre>\n   &lt;Property Name=&quot;Customer&quot; type=&quot;Edm.String&quot; sap:text=&quot;CustomerName&quot;/&gt;\n   &lt;Property Name=&quot;CustomerName&quot; type=&quot;Edm.String&quot;/&gt;\n</pre>"
          },
          {
            "name": "fieldTextArrangement",
            "namespace": "com.sap.vocabularies.UI.v1",
            "target": ["EntityType", "Annotation"],
            "annotation": "TextArrangement",
            "defaultValue": "null",
            "appliesTo": ["fieldItem/#/value"],
            "since": "1.32.1",
            "description": "Describes the arrangement of an ID value and its description.\n\nThe following enumeration members are allowed:\n\n<ul> <li><code>com.sap.vocabularies.UI.v1.TextArrangementType/TextSeparate</code>: The control displays the specified ID only.</li>\n\n<li><code>com.sap.vocabularies.UI.v1.TextArrangementType/TextFirst</code>: The control displays the specified description followed by its ID.</li>\n\n<li><code>com.sap.vocabularies.UI.v1.TextArrangementType/TextLast</code>: The control displays the specified ID followed by its description.</li>\n\n<li><code>com.sap.vocabularies.UI.v1.TextArrangementType/TextOnly</code>: The control displays the specified description only.</li> </ul>\n\nThe <code>TextArrangement</code> annotation is usually used as a child of a <code>com.sap.vocabularies.Common.v1.Text</code> annotation.\n\n<i>XML Example of OData V4 with <code>TextArrangement</code> annotation on an entity's property</i>\n\n<pre>\n&lt;Annotations xmlns=&quot;http://docs.oasis-open.org/odata/ns/edm&quot; Target=&quot;namespace.Product/Category&quot;&gt;\n\t&lt;Annotation Term=&quot;com.sap.vocabularies.Common.v1.Text&quot; Path=&quot;CategoryName&quot;&gt;\n\t\t&lt;Annotation Term=&quot;com.sap.vocabularies.UI.v1.TextArrangement&quot; EnumMember=&quot;com.sap.vocabularies.UI.v1.TextArrangementType/TextLast&quot; /&gt;\n\t&lt;/Annotation&gt;\n&lt;/Annotations&gt;\n</pre>\n\n<i>XML Example of OData V4 with <code>TextArrangement</code> annotation on entity <code>Product</code></i>\n\n<pre>\n   &lt;Annotations Target=&quot;Namespace.ProductType&quot;&gt;\n     &lt;Annotation Term=&quot;com.sap.vocabularies.UI.v1.TextArrangement&quot; EnumMember=&quot;com.sap.vocabularies.UI.v1.TextArrangementType/TextFirst&quot;/&gt;\n   &lt;/Annotations&gt;\n</pre>"
          },
          {
            "name": "fieldCurrencyCode",
            "namespace": "Org.OData.Measures.V1",
            "target": ["Property"],
            "annotation": "ISOCurrency",
            "defaultValue": "null",
            "appliesTo": ["fieldItem/#/value"],
            "since": "1.28.1",
            "description": "Defines a currency code for an amount according to the ISO 4217 standard. <code>ISOCurrency</code> annotation can point to a <code>Property</code>, which can also be <code>null</code>.\n\n<i>XML Example of OData V4 with Price and CurrencyCode as ISOCurrency</i>\n\n<pre>\n   &lt;Property Name=&quot;Price&quot;&gt;\n      &lt;Annotation Term=&quot;Org.OData.Measures.V1.ISOCurrency&quot; Path=&quot;CurrencyCode&quot; /&gt;\n   &lt;/Property&gt;\n   &lt;Property Name=&quot;CurrencyCode&quot; type=&quot;Edm.String&quot; /&gt;\n</pre>\n\nFor OData v2 the <code>sap:semantics=\"currency-code\"</code> along with <code>sap:unit</code> annotations on the <code>Property</code> can be used to assign a currency code to the field.\n\n<pre>\n   &lt;Property Name=&quot;Price&quot; ... sap:unit=&quot;CurrencyCode&quot;/&gt;\n   &lt;Property Name=&quot;CurrencyCode&quot; ... sap:semantics=&quot;currency-code&quot;/&gt;\n</pre>"
          },
          {
            "name": "fieldUnitOfMeasure",
            "namespace": "Org.OData.Measures.V1",
            "target": ["Property"],
            "annotation": "Unit",
            "defaultValue": "null",
            "appliesTo": ["fieldItem/#/value"],
            "since": "1.28.1",
            "description": "The unit of measure for this measured quantity, for example, cm for centimeters. Renders the value associated with the unit annotation of a <code>Property</code>, which can be <code>null</code>.\n\n<i>XML Example of OData V4 with OrderedQuantity and OrderedUnit as Unit</i>\n\n<pre>\n   &lt;Property Name=&quot;OrderedQuantity&quot;&gt;\n      &lt;Annotation Term=&quot;Org.OData.Measures.V1.Unit&quot; Path=&quot;OrderedUnit&quot; /&gt;\n   &lt;/Property&gt;\n   &lt;Property Name=&quot;OrderedUnit&quot; type=&quot;Edm.String&quot; /&gt;\n</pre>\n\nFor OData v2 the <code>sap:semantics=\"unit-of-measure\"</code> along with <code>sap:unit</code> annotations on the <code>Property</code> can be used to assign a unit of measure to the field.\n\n<pre>\n   &lt;Property Name=&quot;OrderedQuantity&quot; ... sap:unit=&quot;OrderedUnit&quot;/&gt;\n   &lt;Property Name=&quot;OrderedUnit&quot; ... sap:semantics=&quot;unit-of-measure&quot;/&gt;\n</pre>"
          },
          {
            "name": "fieldScale",
            "namespace": "Org.OData.Measures.V1",
            "target": ["Property"],
            "annotation": "Scale",
            "defaultValue": "null",
            "appliesTo": ["fieldItem/#/value"],
            "since": "1.28.1",
            "description": "Defines the number of digits that are to be displayed after the decimal point. This annotation can be applied to a <code>Property</code>.\n\n<i>XML Example of OData V4 with Scaled Price and Weight Properties</i>\n\n<pre>\n   &lt;Property Name=&quot;Price&quot;&gt;\n      &lt;Annotation Term=&quot;Org.OData.Measures.V1.Scale&quot; Path=&quot;PriceScale&quot; /&gt;\n   &lt;/Property&gt;\n   &lt;Property Name=&quot;Weight&quot;&gt;\n      &lt;Annotation Term=&quot;Org.OData.Measures.V1.Scale&quot; Path=&quot;WeightScale&quot; /&gt;\n   &lt;/Property&gt;\n   &lt;Property Name=&quot;PriceScale&quot; type=&quot;Edm.Byte&quot; /&gt;\n   &lt;Property Name=&quot;WeightScale&quot; type=&quot;Edm.Byte&quot; /&gt;\n</pre>\n\nFor OData v2 the <code>sap:precision</code> annotation on the <code>Property</code> can be used to scale the number of digits to be displayed after the decimal point.\n\n<pre>\n   &lt;Property Name=&quot;Price&quot; ... sap:precision=&quot;2&quot;/&gt;\n   &lt;Property Name=&quot;Weight&quot; ... sap:precision=&quot;3&quot;/&gt;\n</pre>"
          },
          {
            "name": "fieldQuickInfo",
            "namespace": "com.sap.vocabularies.Common.v1",
            "target": ["Property"],
            "annotation": "QuickInfo",
            "defaultValue": "null",
            "appliesTo": ["fieldItem/#/tooltip"],
            "since": "1.28.1",
            "description": "A short, human-readable text suitable for tool tips in user interfaces.\n\n<i>XML Example of OData V4 with Tooltip on CompanyCode Property</i>\n\n<pre>\n   &lt;Property Name=&quot;CompanyCode&quot;&gt;\n     &lt;Annotation Term=&quot;com.sap.vocabularies.Common.v1.QuickInfo&quot; Path=&quot;CompanyCodeQuickInfo&quot; /&gt;\n   &lt;/Property&gt;\n   &lt;Property Name=&quot;CompanyQuickInfo&quot; type=&quot;Edm.String&quot; /&gt;\n</pre>\n\nFor OData v2 the <code>sap:quickinfo</code> annotation on the <code>Property</code> can be used to assign information relevant for tool tips of the field.\n\n<pre>\n   &lt;Property Name=&quot;CompanyCode&quot; ... sap:quickinfo=&quot;Company Code quickinfo&quot;/&gt;\n</pre>"
          },
          {
            "name": "fieldMultiLineText",
            "namespace": "com.sap.vocabularies.UI.v1",
            "target": ["Property", "PropertyPath"],
            "annotation": "MultiLineText",
            "defaultValue": "true",
            "appliesTo": ["fieldItem/#/control"],
            "since": "1.28.1",
            "description": "Properties annotated with this annotation are rendered as multi-line text (for example, text area).\n\n<i>XML Example of OData V4 with Multi-line Text Description Property</i>\n\n<pre>\n   &lt;Property Name=&quot;Description&quot; /&gt;\n   &lt;Annotations Target=&quot;Description&quot;&gt;\n      &lt;Annotation Term=&quot;com.sap.vocabularies.UI.v1.MultiLineText&quot; /&gt;\n   &lt;/Annotations&gt;\n</pre>"
          },
          {
            "name": "fieldUpperCase",
            "namespace": "com.sap.vocabularies.Common.v1",
            "target": ["Property", "Parameter"],
            "annotation": "IsUpperCase",
            "defaultValue": "true",
            "appliesTo": ["fieldItem/#/value"],
            "since": "1.28.1",
            "description": "Defines whether a string value is capitalized.\n\n<i>XML Example of OData V4 with Capitalized Customer and CompanyCode Properties</i>\n\n<pre>\n   &lt;Annotation Term=&quot;com.sap.vocabularies.Common.v1.IsUpperCase&quot;&gt;\n       &lt;Collection&gt;\n          &lt;PropertyPath&gt;Customer&lt;/PropertyPath&gt;\n          &lt;PropertyPath&gt;CompanyCode&lt;/PropertyPath&gt;\n       &lt;/Collection&gt;\n   &lt;/Annotation&gt;\n</pre>\n\nFor OData v2 the <code>sap:display-format=\"UpperCase\"</code> annotation on the <code>Property</code> can be used to render the text in upper case format.\n\n<pre>\n   &lt;Property Name=&quot;Customer&quot; ... sap:display-format=&quot;UpperCase&quot;/&gt;\n   &lt;Property Name=&quot;CompanyCode&quot; ... sap:display-format=&quot;UpperCase&quot;/&gt;\n</pre>"
          },
          {
            "name": "fieldDigitSequence",
            "namespace": "com.sap.vocabularies.Common.v1",
            "target": ["Property"],
            "annotation": "IsDigitSequence",
            "defaultValue": "true",
            "appliesTo": ["fieldItem/#/value"],
            "since": "1.46",
            "description": "Indicates whether the annotated <code>Property</code> contains only digit sequences (non-negative numeric values).\n\nOther input leads to validation errors and the value state message popup is shown. In addition, whenever the control's value property is changed on the user interface side, and the change has to be propagated back into the data model, then the value is either filled with leading zeroes (if the <code>maxLength</code> attribute is given) or the leading zeroes are removed (if no <code>maxLength</code> attribute is given).\n\nIntended for <code>Edm.String</code> properties that are stored as ABAP <code>NUMC</code> (numeric text) data type.\n\n<i>XML Example of the OData V4 Annotation</i>\n\n<pre>\n   &lt;Property Name=&quot;Price&quot; MaxLength=&quot;20&quot; Type=&quot;Edm.String&quot;/&gt;\n   &lt;Annotations Target=&quot;Price&quot;&gt;\n       &lt;Annotation Term=&quot;com.sap.vocabularies.Common.v1.IsDigitSequence&quot; Bool=&quot;true&quot;/&gt;\n   &lt;/Annotations&gt;\n</pre>"
          },
          {
            "name": "fieldRecommendationState",
            "namespace": "com.sap.vocabularies.UI.v1",
            "target": ["Property"],
            "annotation": "RecommendationState",
            "defaultValue": "0",
            "since": "1.61",
            "description": "Indicates whether a field has a recommended value. Intelligent systems can help users by recommending input the user may prefer.\n\nThis annotation is intended for editable fields for which a recommended input has been pre-filled by a system and is used to highlight a field.\n\n<b>Note:</b> The <code>RecommendationState</code> annotation is currently experimental and might be renamed or redefined.\n\n<i>XML Example of the OData V4 Annotation</i>\n\n<pre>\n&lt;Property Name=&quot;Name&quot; Type=&quot;Edm.String&quot; /&gt;\n&lt;Property Name=&quot;Name_sr&quot; Type=&quot;Edm.Byte&quot;/&gt;\n...\n&lt;Annotations xmlns=&quot;http://docs.oasis-open.org/odata/ns/edm&quot; Target=&quot;namespace.Product/Name&quot;&gt;\n    &lt;Annotation Term=&quot;com.sap.vocabularies.UI.v1.RecommendationState&quot; Path=&quot;Name_sr&quot; /&gt;\n&lt;/Annotations&gt;\n</pre>\n\nThe following values are allowed for the <code>edm:property</code> typed as <code>Edm.Byte</code>:\n\n<ul> <li><b>0 regular</b>: With human or default input, no recommendation</li> <li><b>1 highlighted</b>: Without human input and with recommendation</li> <li><b>2 warning</b>: With human or default input and with recommendation</li> </ul>"
          },
          {
            "name": "fieldCalendarDate",
            "namespace": "com.sap.vocabularies.Common.v1",
            "target": ["Property"],
            "annotation": "IsCalendarDate",
            "defaultValue": "true",
            "appliesTo": ["fieldItem/#/value"],
            "since": "1.54",
            "description": "Indicates whether the annotated <code>Property</code> is a string that is based on a calendar date following the pattern 'yyyyMMdd'.\n\nIntended for <code>Edm.String</code> properties that are stored as ABAP and follow the pattern 'YYYYMMDD'.\n\n<i>XML Example of the OData V4 Annotation</i>\n\n<pre>\n   &lt;Property Name=&quot;Price&quot; MaxLength=&quot;20&quot; Type=&quot;Edm.String&quot;/&gt;\n   &lt;Annotations Target=&quot;Price&quot;&gt;\n       &lt;Annotation Term=&quot;com.sap.vocabularies.Common.v1.IsCalendarDate&quot; Bool=&quot;true&quot;/&gt;\n   &lt;/Annotations&gt;\n</pre>"
          },
          {
            "name": "fieldEmailAddress",
            "namespace": "com.sap.vocabularies.Communication.v1",
            "target": ["Property"],
            "annotation": "IsEmailAddress",
            "defaultValue": "true",
            "appliesTo": ["fieldItem/#/value"],
            "since": "1.46",
            "description": "Indicates whether a <code>Property</code> contains an e-mail address.\n\n<i>XML Example of the OData V4 E-mail Address Annotation</i>\n\n<pre>\n   &lt;Property Name=&quot;Email&quot; Type=&quot;Edm.String&quot;/&gt;\n   &lt;Annotations Target=&quot;Email&quot;&gt;\n       &lt;Annotation Term=&quot;com.sap.vocabularies.Communication.v1.IsEmailAddress&quot; Bool=&quot;true&quot;/&gt;\n   &lt;/Annotations&gt;\n</pre>"
          },
          {
            "name": "fieldPhoneNumber",
            "namespace": "com.sap.vocabularies.Communication.v1",
            "target": ["Property"],
            "annotation": "IsPhoneNumber",
            "defaultValue": "true",
            "appliesTo": ["fieldItem/#/value"],
            "since": "1.46",
            "description": "Indicates whether a <code>Property</code> contains a phone number.\n\n<i>XML Example of the OData V4 Phone Number Annotation</i>\n\n<pre>\n   &lt;Property Name=&quot;Phone&quot; Type=&quot;Edm.String&quot;/&gt;\n   &lt;Annotations Target=&quot;Phone&quot;&gt;\n       &lt;Annotation Term=&quot;com.sap.vocabularies.Communication.v1.IsPhoneNumber&quot; Bool=&quot;true&quot;/&gt;\n   &lt;/Annotations&gt;\n</pre>"
          },
          {
            "name": "fieldUrl",
            "namespace": "Org.OData.Core.V1",
            "target": ["Property"],
            "annotation": "IsURL",
            "defaultValue": "true",
            "appliesTo": ["fieldItem/#/value"],
            "since": "1.46",
            "description": "Indicates whether a <code>Property</code> contains a URL.\n\n<i>XML Example of the OData V4 URL Annotation</i>\n\n<pre>\n   &lt;Property Name=&quot;URL&quot; Type=&quot;Edm.String&quot;/&gt;\n   &lt;Annotations Target=&quot;URL&quot;&gt;\n       &lt;Annotation Term=&quot;Org.OData.Core.V1.IsURL&quot; Bool=&quot;true&quot;/&gt;\n   &lt;/Annotations&gt;\n</pre>"
          },
          {
            "name": "fieldCreatable",
            "namespace": "Org.OData.Capabilities.V1",
            "target": ["EntitySet"],
            "annotation": "InsertRestrictions/Insertable",
            "defaultValue": "false",
            "appliesTo": ["fieldItem/#/editable"],
            "since": "1.28.1",
            "description": "Defines whether an <code>EntitySet</code> can be created.\n\n<i>XML Example of OData V4 with Insertable ProductCollection EntitySet</i>\n\n<pre>\n  &lt;EntitySet Name=&quot;ProductCollection&quot;&gt;\n    &lt;Annotation Term=&quot;Org.OData.Capabilities.V1.InsertRestrictions&quot;&gt;\n      &lt;Record&gt;\n        &lt;PropertyValue Property=&quot;Insertable&quot; Bool=&quot;true&quot; /&gt;\n      &lt;/Record&gt;\n    &lt;/Annotation&gt;\n  &lt;/EntitySet&gt;\n</pre>\n\nFor OData v2 the <code>sap:creatable</code> annotation on the <code>Property</code> can be used to specify that the field is creatable.\n\n<pre>\n   &lt;Property Name=&quot;Customer&quot; ... sap:creatable=&quot;true&quot;/&gt;\n   &lt;Property Name=&quot;CompanyCode&quot; ... sap:creatable=&quot;true&quot;/&gt;\n</pre>"
          },
          {
            "name": "fieldComputed",
            "namespace": "Org.OData.Core.V1",
            "target": ["Property"],
            "annotation": "Computed",
            "defaultValue": "true",
            "appliesTo": ["fieldItem/#/editable"],
            "since": "1.28.1",
            "description": "Defines whether a <code>Property</code> can be created. A value for this <code>Property</code> is generated on both insert and update actions.\n\n<i>XML Example of OData V4 with Computed Customer and CompanyCode Properties</i>\n\n<pre>\n   &lt;Annotation Term=&quot;Org.OData.Core.V1.Computed&quot;&gt;\n       &lt;Collection&gt;\n          &lt;PropertyPath&gt;Customer&lt;/PropertyPath&gt;\n          &lt;PropertyPath&gt;CompanyCode&lt;/PropertyPath&gt;\n       &lt;/Collection&gt;\n   &lt;/Annotation&gt;\n</pre>\n\nFor OData v2 the <code>sap:creatable</code> and <code>sap:updatable</code> annotation on the <code>Property</code> can be used to specify whether a value has to be created on insert and update actions.\n\n<pre>\n   &lt;Property Name=&quot;Customer&quot; ... sap:creatable=&quot;true&quot;/&gt;\n   &lt;Property Name=&quot;CompanyCode&quot; ... sap:creatable=&quot;true&quot;/&gt;\n</pre>"
          },
          {
            "name": "fieldUpdatableEntitySet",
            "namespace": "Org.OData.Capabilities.V1",
            "target": ["EntitySet"],
            "annotation": "UpdateRestrictions/Updatable",
            "defaultValue": "false",
            "appliesTo": ["fieldItem/#editable"],
            "since": "1.28.1",
            "description": "Defines whether an <code>EntitySet</code> can be updated.\n\n<i>XML Example of OData V4 with Updatable ProductCollection EntitySet</i>\n\n<pre>\n  &lt;Annotations Target=&quot;namespace/ProductCollection&quot;&gt;\n    &lt;Annotation Term=&quot;Org.OData.Capabilities.V1.UpdateRestrictions&quot;&gt;\n      &lt;Record&gt;\n        &lt;PropertyValue Property=&quot;Org.OData.Capabilities.V1.UpdateRestrictionsType/Updatable&quot; Bool=&quot;false&quot; /&gt;\n      &lt;/Record&gt;\n    &lt;/Annotation&gt;\n  &lt;/Annotations&gt;\n</pre>\n\nFor OData v2 the <code>sap:updatable</code> annotation on the <code>Property</code> can be used to specify whether a field is updatable.\n\n<pre>\n   &lt;Property Name=&quot;Customer&quot; ... sap:updatable=&quot;true&quot;/&gt;\n   &lt;Property Name=&quot;CompanyCode&quot; ... sap:updatable=&quot;true&quot;/&gt;\n</pre>"
          },
          {
            "name": "fieldImmutable",
            "namespace": "Org.OData.Core.V1",
            "target": ["Property"],
            "annotation": "Immutable",
            "defaultValue": "true",
            "appliesTo": ["fieldItem/#/editable"],
            "since": "1.28.1",
            "description": "A value for this non-key property can be provided on <code>insert</code> and cannot even be changed on update actions.\n\n<i>XML Example of OData V4 with Immutable Customer and CompanyCode properties</i>\n\n<pre>\n   &lt;Annotation Term=&quot;Org.OData.Core.V1.Immutable&quot;&gt;\n       &lt;Collection&gt;\n          &lt;PropertyPath&gt;Customer&lt;/PropertyPath&gt;\n          &lt;PropertyPath&gt;CompanyCode&lt;/PropertyPath&gt;\n       &lt;/Collection&gt;\n   &lt;/Annotation&gt;\n</pre>\n\nFor OData v2 the <code>sap:updatable</code> and <code>sap:creatable</code> annotation on the <code>Property</code> can be used to avoid changes that can be done on update actions.\n\n<pre>\n   &lt;Property Name=&quot;Customer&quot; ... sap:creatable=&quot;false&quot;/&gt;\n   &lt;Property Name=&quot;CompanyCode&quot; ... sap:creatable=&quot;false&quot;/&gt;\n</pre>"
          },
          {
            "name": "fieldSideEffects",
            "namespace": "com.sap.vocabularies.Common.v1",
            "target": ["EntitySet", "EntityType", "ComplexType"],
            "annotation": "SideEffects",
            "defaultValue": "null",
            "appliesTo": ["fieldItem/#/value"],
            "since": "1.32.1",
            "description": "Changes to the source properties may have side-effects on the target properties or entities. If neither TargetProperties nor TargetEntities are specified, a change to the source property values may have unforeseeable side-effects. An empty NavigationPropertyPath may be used in TargetEntities to specify that any property of the annotated entity type may be affected. Actions are a special case: here the change trigger is the action invocation, so SourceProperties and SourceEntities have no meaning, only TargetProperties and TargetEntities are relevant. They are addressed via the binding parameter of the action. <code>SideEffects</code> can be associated with the given entity, which can be a complex type, entity type or entity set. In addition to this, <code>SideEffects</code> can also be applied to a <code>PropertyPath</code> or a <code>NavigationPropertyPath</code> of the given entity.\n\n<i>XML Example of OData V4 with Side Effect on CurrencyCode Property</i>\n\n<pre>\n  &lt;Annotation Term=&quot;com.sap.vocabularies.Common.v1.SideEffects&quot; Qualifier=&quot;ExampleQualifierName&quot;&gt;\n    &lt;Record&gt;\n      &lt;PropertyValue Property=&quot;SourceProperties&quot;&gt;\n        &lt;Collection&gt;\n          &lt;PropertyPath&gt;CurrencyCode&lt;/PropertyPath&gt;\n        &lt;/Collection&gt;\n      &lt;/PropertyValue&gt;\n      &lt;PropertyValue Property=&quot;TargetProperties&quot;&gt;\n        &lt;Collection&gt;\n          &lt;PropertyPath&gt;CurrencyCode&lt;/PropertyPath&gt;\n        &lt;/Collection&gt;\n      &lt;/PropertyValue&gt;\n      &lt;PropertyValue Property=&quot;EffectTypes&quot; EnumMember=&quot;ValidationMessage&quot; /&gt;\n    &lt;/Record&gt;\n  &lt;/Annotation&gt;\n</pre>"
          },
          {
            "name": "valueList",
            "namespace": "com.sap.vocabularies.Common.v1",
            "target": ["Property", "Parameter"],
            "annotation": "ValueList",
            "defaultValue": "null",
            "appliesTo": ["field/#/fieldHelp"],
            "since": "1.28.1",
            "description": "Specifies how to get a list of acceptable values for a property or parameter. Provides the value help dialog and type-ahead function.\n\n<b>Note</b>: This annotation is only supported for Entity Data Model (EDM) properties typed as:\n\n<ul> <li><code>Edm.String</code></li> </ul>\n\n<b>Note</b>: The <code>CollectionPath</code> property does not support paths with navigation properties.\n\n<b>Note</b>: The <code>CollectionRoot</code> property is not supported.\n\n<i>Example in OData V4 notation with property \"Category\" with a ValueList</i>\n\n<i>XML Example of OData V4 Value List on Category Property</i>\n\n<pre>\n   &lt;Annotation Term=&quot;com.sap.vocabularies.Common.v1.ValueList&quot;&gt;\n     &lt;Record&gt;\n       &lt;PropertyValue Property=&quot;Label&quot; String=&quot;Category&quot; /&gt;\n       &lt;PropertyValue Property=&quot;CollectionPath&quot; String=&quot;Category&quot; /&gt;\n       &lt;PropertyValue Property=&quot;SearchSupported&quot; Bool=&quot;true&quot; /&gt;\n       &lt;PropertyValue Property=&quot;Parameters&quot;&gt;\n         &lt;Collection&gt;\n           &lt;Record Type=&quot;com.sap.vocabularies.Common.v1.ValueListParameterOut&quot;&gt;\n             &lt;PropertyValue Property=&quot;LocalDataProperty&quot; PropertyPath=&quot;Category&quot; /&gt;\n             &lt;PropertyValue Property=&quot;ValueListProperty&quot; String=&quot;Description&quot; /&gt;\n           &lt;/Record&gt;\n           &lt;Record Type=&quot;com.sap.vocabularies.Common.v1.ValueListParameterDisplayOnly&quot;&gt;\n             &lt;PropertyValue Property=&quot;ValueListProperty&quot; String=&quot;CategoryName&quot; /&gt;\n           &lt;/Record&gt;\n         &lt;/Collection&gt;\n       &lt;/PropertyValue&gt;\n     &lt;/Record&gt;\n   &lt;/Annotation&gt;\n</pre>"
          },
          {
            "name": "valueListWithFixedValues",
            "namespace": "com.sap.vocabularies.Common.v1",
            "target": ["Property", "Parameter"],
            "annotation": "ValueListWithFixedValues",
            "defaultValue": "null",
            "appliesTo": ["field/#/fieldHelp"],
            "since": "1.48.1",
            "description": "If set to <code>true</code>, there's only one value list mapping, and its value list consists of a small number of fixed values. The value list is rendered as a dropdown list containing all possible values.\n\n<b>Note</b>: This annotation is only supported for Entity Data Model (EDM) properties typed as:\n\n<ul> <li><code>Edm.String</code></li> <li><code>Edm.Guid</code></li> <li><code>Edm.Boolean</code></li> <li><code>Edm.Byte</code></li> <li><code>Edm.Decimal</code></li> <li><code>Edm.Double</code></li> <li><code>Edm.Float</code></li> <li><code>Edm.Single</code></li> <li><code>Edm.Int16</code></li> <li><code>Edm.Int32</code></li> <li><code>Edm.Int64</code></li> </ul>\n\n<i>XML Example of OData V4 Value List on Category Property</i>\n\n<pre>\n   &lt;Annotation Term=&quot;com.sap.vocabularies.Common.v1.ValueListWithFixedValues&quot; Bool=&quot;true&quot;/&gt;\n</pre>"
          }
        ],
        "designtime": "sap/ui/comp/designtime/smartfield/SmartField.designtime"
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new <code>sap.ui.comp.smartfield.SmartField</code>.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.",
        "references": [
          "{@link topic:4864403f08c64ca08a2b0ee1fa9cb5e2 Smart Field}"
        ]
      },
      "events": [
        {
          "name": "change",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "value": {
                      "name": "value",
                      "type": "string",
                      "optional": false,
                      "description": "The current value inside the text field"
                    },
                    "newValue": {
                      "name": "newValue",
                      "type": "string",
                      "optional": false,
                      "description": "The new value inside the text field"
                    }
                  }
                }
              }
            }
          ],
          "description": "The event is fired after the text in the field has been changed and the focus leaves the field, or after the Enter key has been pressed."
        },
        {
          "name": "contextEditableChanged",
          "visibility": "public",
          "since": "1.32.0",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "editable": {
                      "name": "editable",
                      "type": "boolean",
                      "optional": false,
                      "description": "The value of the context editable property of the control"
                    }
                  }
                }
              }
            }
          ],
          "description": "The event is fired after the context editable property of the control has changed."
        },
        {
          "name": "editableChanged",
          "visibility": "public",
          "since": "1.30.0",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "editable": {
                      "name": "editable",
                      "type": "boolean",
                      "optional": false,
                      "description": "If <code>true</code>, the control is in edit mode"
                    }
                  }
                }
              }
            }
          ],
          "description": "The event is fired after the value of editable property of the control has changed."
        },
        {
          "name": "entitySetFound",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "entitySet": {
                      "name": "entitySet",
                      "type": "string",
                      "optional": false,
                      "description": "The path to the found entity set"
                    }
                  }
                }
              }
            }
          ],
          "description": "The OData entity set is either derived from the control's binding context or from control's entity set property, if a value for it is specified. In both cases this event is fired."
        },
        {
          "name": "initialise",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "The event is fired after the smart field has calculated its metadata."
        },
        {
          "name": "innerControlsCreated",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "The event is fired after the inner controls have been created. The created controls can be obtained via oControl.getInnerControls()."
        },
        {
          "name": "press",
          "visibility": "public",
          "since": "1.36.0",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "Fires when the user triggers the link control or taps/clicks on an active title of the object identifier control."
        },
        {
          "name": "valueListChanged",
          "visibility": "public",
          "since": "1.31.0",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "changes": {
                      "name": "changes",
                      "type": "sap.ui.core.Control[]",
                      "optional": false,
                      "description": "An array of selected values"
                    }
                  }
                }
              }
            }
          ],
          "description": "The event is fired when after selection of values with value help or auto-suggest, the model is updated with the selected data."
        },
        {
          "name": "visibleChanged",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "visible": {
                      "name": "visible",
                      "type": "boolean",
                      "optional": false,
                      "description": "If <code>true</code>, the control is visible"
                    }
                  }
                }
              }
            }
          ],
          "description": "The event is fired after the visibility of the control has changed."
        }
      ],
      "methods": [
        {
          "name": "addAriaLabelledBy",
          "visibility": "public",
          "since": "1.34.2",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.SmartField",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "vAriaLabelledBy",
              "type": "sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaLabelledBy to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "attachChange",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.SmartField",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartfield.SmartField</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:change change} event of this <code>sap.ui.comp.smartfield.SmartField</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartfield.SmartField</code> itself.\n\nThe event is fired after the text in the field has been changed and the focus leaves the field, or after the Enter key has been pressed."
        },
        {
          "name": "attachContextEditableChanged",
          "visibility": "public",
          "since": "1.32.0",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.SmartField",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartfield.SmartField</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:contextEditableChanged contextEditableChanged} event of this <code>sap.ui.comp.smartfield.SmartField</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartfield.SmartField</code> itself.\n\nThe event is fired after the context editable property of the control has changed."
        },
        {
          "name": "attachEditableChanged",
          "visibility": "public",
          "since": "1.30.0",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.SmartField",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartfield.SmartField</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:editableChanged editableChanged} event of this <code>sap.ui.comp.smartfield.SmartField</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartfield.SmartField</code> itself.\n\nThe event is fired after the value of editable property of the control has changed."
        },
        {
          "name": "attachEntitySetFound",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.SmartField",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartfield.SmartField</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:entitySetFound entitySetFound} event of this <code>sap.ui.comp.smartfield.SmartField</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartfield.SmartField</code> itself.\n\nThe OData entity set is either derived from the control's binding context or from control's entity set property, if a value for it is specified. In both cases this event is fired."
        },
        {
          "name": "attachInitialise",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.SmartField",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartfield.SmartField</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:initialise initialise} event of this <code>sap.ui.comp.smartfield.SmartField</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartfield.SmartField</code> itself.\n\nThe event is fired after the smart field has calculated its metadata."
        },
        {
          "name": "attachInnerControlsCreated",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.SmartField",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartfield.SmartField</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:innerControlsCreated innerControlsCreated} event of this <code>sap.ui.comp.smartfield.SmartField</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartfield.SmartField</code> itself.\n\nThe event is fired after the inner controls have been created. The created controls can be obtained via oControl.getInnerControls()."
        },
        {
          "name": "attachPress",
          "visibility": "public",
          "since": "1.36.0",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.SmartField",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartfield.SmartField</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:press press} event of this <code>sap.ui.comp.smartfield.SmartField</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartfield.SmartField</code> itself.\n\nFires when the user triggers the link control or taps/clicks on an active title of the object identifier control."
        },
        {
          "name": "attachValueListChanged",
          "visibility": "public",
          "since": "1.31.0",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.SmartField",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartfield.SmartField</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:valueListChanged valueListChanged} event of this <code>sap.ui.comp.smartfield.SmartField</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartfield.SmartField</code> itself.\n\nThe event is fired when after selection of values with value help or auto-suggest, the model is updated with the selected data."
        },
        {
          "name": "attachVisibleChanged",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.SmartField",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartfield.SmartField</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:visibleChanged visibleChanged} event of this <code>sap.ui.comp.smartfield.SmartField</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartfield.SmartField</code> itself.\n\nThe event is fired after the visibility of the control has changed."
        },
        {
          "name": "checkClientError",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "<code>true</code>, if a client error has been detected, <code>false</code> otherwise"
          },
          "description": "Checks whether a client error has been detected. Additionally the error message is shown, if this is not the case already.",
          "deprecated": {
            "since": "1.64",
            "text": "replaced by {@link sap.ui.comp.smartfield.SmartField#checkValuesValidity}"
          }
        },
        {
          "name": "checkValuesValidity",
          "visibility": "public",
          "since": "1.64",
          "returnValue": {
            "type": "Promise",
            "description": "A fulfilled <code>Promise</code> object or a <code>Promise</code> object to be fulfilled if the value of every text input field is valid, otherwise a rejected <code>Promise</code> object or a <code>Promise</code> object to be rejected"
          },
          "description": "Checks whether the value of every inner text input field in edit mode is valid.\n\nThis method is typically used to check whether the value of every inner text input field in edit mode is subject to data type constraints and whether the constraints are fulfilled.\n\n<b>Note:</b> In some scenarios, invoking this method may also trigger a back-end request to check whether the value is valid.\n\nA data type constraint for a bound Entity Data Model (EDM) property can be violated in many ways, for example:\n\n<ul> <li>The <code>Nullable</code> constraint for an EDM property typed as <code>Edm.String</code> is violated.</li> <li>A user input is invalid for the bound EDM property typed as <code>Edm.DateTime</code>.</li> </ul>\n\nIf this happens, the following applies:\n\n<ul> <li>A validation error state is set on the text input field.</li> <li>A validation error message is set on the text input field.</li> <li>The validation error message (possibly generated by a user input) is added to a <code>sap.ui.core.message.MessageManager</code> object instance if, for example, a view object instance is registered to it.</li> <li>The inner private text input field fires a {@link sap.ui.base.EventProvider#event:validationError}, or {@link sap.ui.base.EventProvider#event:parseError} event. Note that the events are fired synchronously if the value is validated on client side or asynchronously if, for example, the value is validated on back-end side.</li> </ul>\n\nThe inner private text input field fires a {@link sap.ui.base.EventProvider#event:validationSuccess} if its validation passes.\n\n<b>Note:</b> In display mode, this method always returns a fulfilled <code>Promise</code> object.\n\n<b>Note:</b> In two-way data binding scenarios, it is usually not necessary to invoke this method explicitly to validate user input, as the data type validation is done automatically when the value in the input field has changed and the focus leaves the text input field or the enter key is pressed. However, in two-way data binding scenarios, this method may be used to check whether a value is valid before submitting it to the back-end system.",
          "examples": [
            {
              "caption": "Example usage of <code>sap.ui.comp.smartfield.SmartField#checkValuesValidity</code> method",
              "text": "\tvar oPromise = oSmartField.checkValuesValidity();\n\n\toPromise.then(function() {\n\t\t// the value is valid and pending model changes can be submitted to the back-end system\n\t}).catch(function() {\n\t\t// the value is invalid\n\t});"
            }
          ]
        },
        {
          "name": "destroyConfiguration",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.SmartField",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the configuration in the aggregation {@link #getConfiguration configuration}."
        },
        {
          "name": "destroyControlProposal",
          "visibility": "public",
          "since": "1.32.0",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.SmartField",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the controlProposal in the aggregation {@link #getControlProposal controlProposal}.",
          "deprecated": { "since": "1.34.0" }
        },
        {
          "name": "destroySemanticObjectController",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.SmartField",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the semanticObjectController in the aggregation {@link #getSemanticObjectController semanticObjectController}."
        },
        {
          "name": "detachChange",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.SmartField",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:change change} event of this <code>sap.ui.comp.smartfield.SmartField</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachContextEditableChanged",
          "visibility": "public",
          "since": "1.32.0",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.SmartField",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:contextEditableChanged contextEditableChanged} event of this <code>sap.ui.comp.smartfield.SmartField</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachEditableChanged",
          "visibility": "public",
          "since": "1.30.0",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.SmartField",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:editableChanged editableChanged} event of this <code>sap.ui.comp.smartfield.SmartField</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachEntitySetFound",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.SmartField",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:entitySetFound entitySetFound} event of this <code>sap.ui.comp.smartfield.SmartField</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachInitialise",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.SmartField",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:initialise initialise} event of this <code>sap.ui.comp.smartfield.SmartField</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachInnerControlsCreated",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.SmartField",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:innerControlsCreated innerControlsCreated} event of this <code>sap.ui.comp.smartfield.SmartField</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachPress",
          "visibility": "public",
          "since": "1.36.0",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.SmartField",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:press press} event of this <code>sap.ui.comp.smartfield.SmartField</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachValueListChanged",
          "visibility": "public",
          "since": "1.31.0",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.SmartField",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:valueListChanged valueListChanged} event of this <code>sap.ui.comp.smartfield.SmartField</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachVisibleChanged",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.SmartField",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:visibleChanged visibleChanged} event of this <code>sap.ui.comp.smartfield.SmartField</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.comp.smartfield.SmartField with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "fireChange",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.SmartField",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "value": {
                  "name": "value",
                  "type": "string",
                  "optional": true,
                  "description": "The current value inside the text field"
                },
                "newValue": {
                  "name": "newValue",
                  "type": "string",
                  "optional": true,
                  "description": "The new value inside the text field"
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:change change} to attached listeners."
        },
        {
          "name": "fireContextEditableChanged",
          "visibility": "protected",
          "since": "1.32.0",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.SmartField",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "editable": {
                  "name": "editable",
                  "type": "boolean",
                  "optional": true,
                  "description": "The value of the context editable property of the control"
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:contextEditableChanged contextEditableChanged} to attached listeners."
        },
        {
          "name": "fireEditableChanged",
          "visibility": "protected",
          "since": "1.30.0",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.SmartField",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "editable": {
                  "name": "editable",
                  "type": "boolean",
                  "optional": true,
                  "description": "If <code>true</code>, the control is in edit mode"
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:editableChanged editableChanged} to attached listeners."
        },
        {
          "name": "fireEntitySetFound",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.SmartField",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "entitySet": {
                  "name": "entitySet",
                  "type": "string",
                  "optional": true,
                  "description": "The path to the found entity set"
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:entitySetFound entitySetFound} to attached listeners."
        },
        {
          "name": "fireInitialise",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.SmartField",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:initialise initialise} to attached listeners."
        },
        {
          "name": "fireInnerControlsCreated",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.SmartField",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:innerControlsCreated innerControlsCreated} to attached listeners."
        },
        {
          "name": "firePress",
          "visibility": "protected",
          "since": "1.36.0",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.SmartField",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:press press} to attached listeners."
        },
        {
          "name": "fireValueListChanged",
          "visibility": "protected",
          "since": "1.31.0",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.SmartField",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "changes": {
                  "name": "changes",
                  "type": "sap.ui.core.Control[]",
                  "optional": true,
                  "description": "An array of selected values"
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:valueListChanged valueListChanged} to attached listeners."
        },
        {
          "name": "fireVisibleChanged",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.SmartField",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "visible": {
                  "name": "visible",
                  "type": "boolean",
                  "optional": true,
                  "description": "If <code>true</code>, the control is visible"
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:visibleChanged visibleChanged} to attached listeners."
        },
        {
          "name": "getAriaLabelledBy",
          "visibility": "public",
          "since": "1.34.2",
          "returnValue": { "type": "sap.ui.core.ID[]" },
          "description": "Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "getClientSideMandatoryCheck",
          "visibility": "public",
          "since": "1.38.3",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>clientSideMandatoryCheck</code>"
          },
          "description": "Gets current value of property {@link #getClientSideMandatoryCheck clientSideMandatoryCheck}.\n\nDetermines if the mandatory check happens on the client side <code>true</code> or on the server side <code>false</code>.\n\n<b>Note:</b> If the {@link sap.ui.comp.smartfield.SmartField#value} property of the <code>SmartField</code> control is bound to an Entity Data Model (EDM) property annotated as <code>Nullable=\"false\"</code>, the mandatory validation is performed on the client side regardless of the <code>clientSideMandatoryCheck</code> setting.\n\n<i>Example:</i>\n\n<pre>\n    &lt;Property Name=&quot;CategoryID&quot; Type=&quot;Edm.String&quot; Nullable=&quot;false&quot;/&gt;\n</pre>\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getConfiguration",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.comp.smartfield.Configuration" },
          "description": "Gets content of aggregation {@link #getConfiguration configuration}.\n\nOptional configuration for <code>SmartField</code>."
        },
        {
          "name": "getContextEditable",
          "visibility": "public",
          "since": "1.32.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>contextEditable</code>"
          },
          "description": "Gets current value of property {@link #getContextEditable contextEditable}.\n\nNotifies the control whether controls using the <code>SmartField</code> control are editable.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getControlContext",
          "visibility": "public",
          "since": "1.32.0",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.ControlContextType",
            "description": "Value of property <code>controlContext</code>"
          },
          "description": "Gets current value of property {@link #getControlContext controlContext}.\n\nDefines the context in which the layout of the <code>SmartField</code> control has to be interpreted.\n\nDefault value is <code>None</code>."
        },
        {
          "name": "getControlProposal",
          "visibility": "public",
          "since": "1.32.0",
          "returnValue": { "type": "sap.ui.comp.smartfield.ControlProposal" },
          "description": "Gets content of aggregation {@link #getControlProposal controlProposal}.\n\nProposes a control to be rendered. The <code>SmartField</code> control can ignore the proposal.",
          "deprecated": { "since": "1.34.0" }
        },
        {
          "name": "getDataProperty",
          "visibility": "public",
          "returnValue": {
            "type": "object",
            "description": "The OData property."
          },
          "description": "Returns the OData property to which the <code>value</code> property of the control is bound."
        },
        {
          "name": "getDataType",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "The data type to which the value property is bound."
          },
          "description": "Returns the EDM data type of the OData property to which the value property of the control is bound. If no model or no OData property is available <code>null</code> is returned."
        },
        {
          "name": "getEditable",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>editable</code>"
          },
          "description": "Gets current value of property {@link #getEditable editable}.\n\nSets the control into an editable mode or a display mode.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getEnabled",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>enabled</code>"
          },
          "description": "Gets current value of property {@link #getEnabled enabled}.\n\nIndicates whether the user can interact with the control or not. <b>Note:</b> Disabled controls cannot be focused and they are out of the tab order.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getEntitySet",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>entitySet</code>"
          },
          "description": "Gets current value of property {@link #getEntitySet entitySet}.\n\nThe name of an entity set for which the control manages values. This is an optional property.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "getExpandNavigationProperties",
          "visibility": "public",
          "since": "1.48",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>expandNavigationProperties</code>"
          },
          "description": "Gets current value of property {@link #getExpandNavigationProperties expandNavigationProperties}.\n\nIndicates if entities related to navigation properties inside the metadata are requested. If set to <code>true</code>, then these related entities are loaded with an <code>$expand</code> request.\n\nAnnotations that can have navigation properties are the following: <ul> <li> <code>com.sap.vocabularies.Common.v1.Text</code> for text arrangements <li> <code>Org.OData.Measures.V1.Unit</code> and <code>Org.OData.Measures.V1.ISOCurrency</code> for units <li> <code>com.sap.vocabularies.Common.v1.FieldControl</code> for field control </ul>\n\n<b>Note:</b> Independent of the <code>fetchValueListReadOnly</code> value, setting this flag to <code>true</code> requests data from the backend.\n\n<b>Note:</b> The back-end request to expand the navigation properties is sent only if the entity to which <code>SmartField</code> is bound is persisted. For transient entities, there is no back-end request since no such data is available.\n\nDefault value is <code>false</code>.",
          "experimental": { "since": "1.48" }
        },
        {
          "name": "getFetchValueListReadOnly",
          "visibility": "public",
          "since": "1.42.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>fetchValueListReadOnly</code>"
          },
          "description": "Gets current value of property {@link #getFetchValueListReadOnly fetchValueListReadOnly}.\n\nIndicates whether the value list collection is fetched in display mode from the resource path specified in the <code>com.sap.vocabularies.Common.v1.ValueList</code> annotation.\n\nThis collection data is used to infer a descriptive text for the value of the <code>SmartField</code> control. However, fetching the value list collection for every <code>SmartField</code> instance individually may not be ideal in some performance-critical scenarios. To optimize this default behavior, you can set this property to <code>false</code> and provide the <code>com.sap.vocabularies.Common.v1.Text</code> annotation, which is used to specify the URL path name to the Entity Data Model (EDM) property from which the descriptive text for the value of the <code>SmartField</code> control is fetched, for example, LT (Laptop).\n\n<b>Note:</b> Setting this property to <code>false</code> only has an effect if the <code>value</code> property of the <code>SmartField</code> control is bound to an Entity Data Model (EDM) property typed as <code>Edm.String</code>. In addition, applications or frameworks have to make sure the descriptive text is fetched, for example, by expanding a navigation property.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getFocusDomRef",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.Element",
            "description": "The DOM element that should get the focus, can be <code>null</code>"
          },
          "description": "Returns the DOM element that gets the focus."
        },
        {
          "name": "getIdForLabel",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "The ID of the inner control if it exists, otherwise the ID of the <code>SmartField</code> control"
          },
          "description": "Gets the ID of the control to which the label should point."
        },
        {
          "name": "getInnerControls",
          "visibility": "protected",
          "returnValue": {
            "type": "array",
            "description": "The controls hosted currently by this <code>SmartField</code>"
          },
          "description": "Resolves the controls hosted currently by this <code>SmartField</code> control."
        },
        {
          "name": "getJsontype",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.JSONType",
            "description": "Value of property <code>jsontype</code>"
          },
          "description": "Gets current value of property {@link #getJsontype jsontype}.\n\nData types to be used, if the <code>SmartField</code> control is interacting with a JSON model. If the value property of the control is bound to a property of an OData entity set, this property is not taken into consideration.",
          "deprecated": { "since": "1.31.0" }
        },
        {
          "name": "getMandatory",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>mandatory</code>"
          },
          "description": "Gets current value of property {@link #getMandatory mandatory}.\n\nIf set to <code>true</code>, a user input is required.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getMaxLength",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>maxLength</code>"
          },
          "description": "Gets current value of property {@link #getMaxLength maxLength}.\n\nDefines the highest possible number of permitted input characters that the user can enter into the text input field.\n\n<h3>Computed <code>maxLength</code></h3> If the specified <code>maxLength</code> value is greater than the <code>maxLength</code> value specified for the underlying bound Entity Data Model (EDM) property in the service metadata document, the <code>maxLength</code> value of the EDM property takes precedence. Likewise, if the application code provides a binding data type for the <code>value</code> property of the <code>SmartField</code> control and the binding data type has <code>maxLength</code> constraints defined, this <code>maxLength</code> is also taken into consideration to compute the final <code>maxLength</code> value.\n\n<h3>Validation Behavior</h3> By design, the <code>SmartField</code> control does not restrict/validate the highest number of permitted input characters for every keystroke, but only when the text input field has changed, and the browser focus leaves the text input field or the ENTER key is pressed. The <code>SmartField</code> control is used more generically in broader contexts, and adding a <code>maxLength</code> attribute to the HTML text input control may break data type formatting in two-way data-binding scenarios. Let's say the <code>maxLength</code> property is set to 3, but the text input control has a formatter function attached to it to format the entered value \"DE\" to \"Germany (DE)\". In this case, the formatted value will be truncated by the <code>maxLength</code> setting.\n\nDefault value is <code>0</code>."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.comp.smartfield.SmartField."
        },
        {
          "name": "getMode",
          "visibility": "protected",
          "returnValue": {
            "type": "string",
            "description": "Returns \"edit\" or \"display\" or \"display_uom\""
          },
          "description": "Returns the current SmartField's edit mode"
        },
        {
          "name": "getName",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>name</code>"
          },
          "description": "Gets current value of property {@link #getName name}.\n\nTo be used in the HTML code (for example, for HTML forms that send data to the server via 'submit').\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "getPlaceholder",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>placeholder</code>"
          },
          "description": "Gets current value of property {@link #getPlaceholder placeholder}.\n\nText shown when no value available.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "getProposedControl",
          "visibility": "public",
          "since": "1.32.0",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.ControlProposalType",
            "description": "Value of property <code>proposedControl</code>"
          },
          "description": "Gets current value of property {@link #getProposedControl proposedControl}.\n\nProposes a control to be rendered. The <code>SmartField</code> control can ignore the proposal.\n\nDefault value is <code>None</code>.",
          "deprecated": { "since": "1.32.0" }
        },
        {
          "name": "getRequired",
          "visibility": "protected",
          "since": "1.48.0",
          "returnValue": {
            "type": "boolean",
            "description": "the true if the <code>SmartField</code> should be marked as required"
          },
          "description": "Gets the value of the <code>mandatory</code> property.\n\nThis function is needed as the \"mandatory\" feature is named \"required\" in a lot of other controls (like <code>Label</code> or <code>Form</code>)."
        },
        {
          "name": "getSemanticObjectController",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.SemanticObjectController"
          },
          "description": "Gets content of aggregation {@link #getSemanticObjectController semanticObjectController}.\n\nThe Semantic Object Controller allows the user to specify and overwrite functionality for semantic object navigation."
        },
        {
          "name": "getShowLabel",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showLabel</code>"
          },
          "description": "Gets current value of property {@link #getShowLabel showLabel}.\n\nIf set to <code>false</code> the label is not displayed.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getShowSuggestion",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showSuggestion</code>"
          },
          "description": "Gets current value of property {@link #getShowSuggestion showSuggestion}.\n\nIf set to <code>true</code>, the suggestion feature for a hosted control is enabled, if the hosted control supports it.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getShowValueHelp",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showValueHelp</code>"
          },
          "description": "Gets current value of property {@link #getShowValueHelp showValueHelp}.\n\nIf set to <code>true</code>, a value help indicator will be displayed inside the hosted control, if the hosted control supports this.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getShowValueStateMessage",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showValueStateMessage</code>"
          },
          "description": "Gets current value of property {@link #getShowValueStateMessage showValueStateMessage}.\n\nDefines whether the value state message is shown or not.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getSupportedAnnotationPaths",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "array",
            "description": "The resulting paths are returned"
          },
          "parameters": [
            {
              "name": "oMetaModel",
              "type": "sap.ui.model.odata.ODataMetaModel",
              "optional": false,
              "description": "The given OData meta model"
            },
            {
              "name": "oEntitySet",
              "type": "object",
              "optional": false,
              "description": "The given entity set"
            },
            {
              "name": "sValueBinding",
              "type": "string",
              "optional": false,
              "description": "The path identifying the OData property to which the value property of the <code>SmartField</code> control is bound"
            },
            {
              "name": "bNavigationPathsOnly",
              "type": "boolean",
              "optional": false,
              "description": "If set to <code>true</code>, no properties are returned"
            }
          ],
          "description": "Calculates the paths to the annotations used by the <code>SmartField</code> control."
        },
        {
          "name": "getTextAlign",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.TextAlign",
            "description": "Value of property <code>textAlign</code>"
          },
          "description": "Gets current value of property {@link #getTextAlign textAlign}.\n\nHorizontal alignment of the text.\n\nDefault value is <code>Initial</code>."
        },
        {
          "name": "getTextInEditModeSource",
          "visibility": "public",
          "since": "1.54",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.TextInEditModeSource",
            "description": "Value of property <code>textInEditModeSource</code>"
          },
          "description": "Gets current value of property {@link #getTextInEditModeSource textInEditModeSource}.\n\nSets the source from which text descriptions for <code>IDs</code> are fetched in edit mode, for example, for LT (Laptop).\n\n<b>Note</b>: The <code>sap.ui.comp.smartfield.TextInEditModeSource.NavigationProperty</code> and <code>sap.ui.comp.smartfield.TextInEditModeSource.ValueList</code> enumeration members are only supported if the following applies:\n\n<ul> <li>The <code>value</code> property of the <code>SmartField</code> control instance is bound to an Entity Data Model (EDM) property typed as <code>Edm.String</code> or <code>Edm.Guid</code>.</li> <li>The <code>com.sap.vocabularies.UI.v1.TextArrangement</code> annotation for the bound EDM property or entity type is specified in the (service metadata document/annotation file).</li> <li>The binding mode for the <code>value</code> property of the <code>SmartField</code> control is the two-way binding mode.</li> <li>The field from which the description is fetch is filterable.</li> </ul>\n\n<b>Note</b>: In addition, the <code>sap.ui.comp.smartfield.TextInEditModeSource.NavigationProperty</code> enumeration member is only supported if the following applies:\n\n<ul> <li>The navigation EDM property association is defined in the service metadata document.</li> <li>The <code>com.sap.vocabularies.Common.v1.Text</code> annotation for the bound EDM property is specified in the service metadata document or annotation file whose <code>Path</code> attribute points to a navigation EDM property of a lookup entity set/type whose single key property is the <code>ID</code>, which contains (among other properties) the descriptive value.</li> <li>The navigation EDM property association defines a referential constraint that ties values of the dependent editable entity type/set to the lookup entity type/set in the service metadata document.</li> <li>The navigation EDM property association end multiplicity of the lookup entity type/set is defined as <code>1</code> in the service metadata document. There must be a single-valued navigation from the editable entity set/type to the lookup entity set/type.</li> <li>The lookup entity type/set from which the descriptive value is fetched contains a single key property.</li> </ul>\n\nDefault value is <code>None</code>.",
          "experimental": { "since": "1.54" }
        },
        {
          "name": "getTextLabel",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>textLabel</code>"
          },
          "description": "Gets current value of property {@link #getTextLabel textLabel}.\n\nThis property contains the text of an associated <code>SmartLabel</code>.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "getTooltipLabel",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>tooltipLabel</code>"
          },
          "description": "Gets current value of property {@link #getTooltipLabel tooltipLabel}.\n\nThis property contains the tool tip of the associated <code>SmartLabel</code> control.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "getUnitOfMeasure",
          "visibility": "public",
          "returnValue": {
            "type": "any",
            "description": "The current unit of measure is returned, which can be <code>null</code"
          },
          "description": "If the OData property to which the control's value property is bound semantically represents a unit of measure, the value of the current unit of measure is returned. Otherwise <code>null</code> is returned."
        },
        {
          "name": "getUomEditable",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>uomEditable</code>"
          },
          "description": "Gets current value of property {@link #getUomEditable uomEditable}.\n\nEditable state of the unit, if the <code>SmartField</code> control addresses unit of measure use cases, for example, an amount and its associated currency.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getUomEditState",
          "visibility": "public",
          "since": "1.32.0",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>uomEditState</code>"
          },
          "description": "Gets current value of property {@link #getUomEditState uomEditState}.\n\nThis property is for internal use only.\n\nDefault value is <code>-1</code>."
        },
        {
          "name": "getUomEnabled",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>uomEnabled</code>"
          },
          "description": "Gets current value of property {@link #getUomEnabled uomEnabled}.\n\nEnabled state of the unit, if the <code>SmartField</code> control addresses unit of measure use cases, for example, an amount and its associated currency.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getUomVisible",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>uomVisible</code>"
          },
          "description": "Gets current value of property {@link #getUomVisible uomVisible}.\n\nVisible state of the unit, if the <code>SmartField</code> control addresses unit of measure use cases, for example, an amount and its associated currency.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getUrl",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>url</code>"
          },
          "description": "Gets current value of property {@link #getUrl url}.\n\nContains a URL which is used to render a link. The link is rendered, if the OData property, to which the value property of the control is bound, is of type <code>Edm.String</code> and the <code>SmartField</code> is in display mode.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "getValue",
          "visibility": "public",
          "returnValue": {
            "type": "any",
            "description": "Value of property <code>value</code>"
          },
          "description": "Gets current value of property {@link #getValue value}.\n\nThe value property keeps the current value of the control. If a binding expression is configured, this is used to determine the property of an OData entity."
        },
        {
          "name": "getValueState",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.ValueState",
            "description": "Value of property <code>valueState</code>"
          },
          "description": "Gets current value of property {@link #getValueState valueState}.\n\nVisualizes the validation state of the control, e.g. <code>Error</code>, <code>Warning</code>, <code>Success</code>.\n\nDefault value is <code>None</code>."
        },
        {
          "name": "getValueStateText",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>valueStateText</code>"
          },
          "description": "Gets current value of property {@link #getValueStateText valueStateText}.\n\nThe text which is shown in the value state message popup.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "getWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.CSSSize",
            "description": "Value of property <code>width</code>"
          },
          "description": "Gets current value of property {@link #getWidth width}.\n\nDefines the width of the control.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "getWrapping",
          "visibility": "public",
          "since": "1.36.6",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>wrapping</code>"
          },
          "description": "Gets current value of property {@link #getWrapping wrapping}.\n\nIndicates whether the control break lines (in display mode) to prevent overflow.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "removeAllAriaLabelledBy",
          "visibility": "public",
          "since": "1.34.2",
          "returnValue": {
            "type": "sap.ui.core.ID[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "removeAriaLabelledBy",
          "visibility": "public",
          "since": "1.34.2",
          "returnValue": {
            "type": "sap.ui.core.ID",
            "description": "The removed ariaLabelledBy or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vAriaLabelledBy",
              "type": "int|sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaLabelledBy to be removed or its index or ID"
            }
          ],
          "description": "Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "setClientSideMandatoryCheck",
          "visibility": "public",
          "since": "1.38.3",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.SmartField",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bClientSideMandatoryCheck",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>clientSideMandatoryCheck</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getClientSideMandatoryCheck clientSideMandatoryCheck}.\n\nDetermines if the mandatory check happens on the client side <code>true</code> or on the server side <code>false</code>.\n\n<b>Note:</b> If the {@link sap.ui.comp.smartfield.SmartField#value} property of the <code>SmartField</code> control is bound to an Entity Data Model (EDM) property annotated as <code>Nullable=\"false\"</code>, the mandatory validation is performed on the client side regardless of the <code>clientSideMandatoryCheck</code> setting.\n\n<i>Example:</i>\n\n<pre>\n    &lt;Property Name=&quot;CategoryID&quot; Type=&quot;Edm.String&quot; Nullable=&quot;false&quot;/&gt;\n</pre>\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setConfiguration",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.SmartField",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oConfiguration",
              "type": "sap.ui.comp.smartfield.Configuration",
              "optional": false,
              "description": "The configuration to set"
            }
          ],
          "description": "Sets the aggregated {@link #getConfiguration configuration}."
        },
        {
          "name": "setContextEditable",
          "visibility": "public",
          "since": "1.32.0",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.SmartField",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bContextEditable",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>contextEditable</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getContextEditable contextEditable}.\n\nNotifies the control whether controls using the <code>SmartField</code> control are editable.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setControlContext",
          "visibility": "public",
          "since": "1.32.0",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.SmartField",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sControlContext",
              "type": "sap.ui.comp.smartfield.ControlContextType",
              "optional": false,
              "description": "New value for property <code>controlContext</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getControlContext controlContext}.\n\nDefines the context in which the layout of the <code>SmartField</code> control has to be interpreted.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>None</code>."
        },
        {
          "name": "setControlProposal",
          "visibility": "public",
          "since": "1.32.0",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.SmartField",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oControlProposal",
              "type": "sap.ui.comp.smartfield.ControlProposal",
              "optional": false,
              "description": "The controlProposal to set"
            }
          ],
          "description": "Sets the aggregated {@link #getControlProposal controlProposal}.",
          "deprecated": { "since": "1.34.0" }
        },
        {
          "name": "setEditable",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.SmartField",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bEditable",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>editable</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getEditable editable}.\n\nSets the control into an editable mode or a display mode.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setEnabled",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.SmartField",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bEnabled",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>enabled</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getEnabled enabled}.\n\nIndicates whether the user can interact with the control or not. <b>Note:</b> Disabled controls cannot be focused and they are out of the tab order.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setEntitySet",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.SmartField",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sEntitySet",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>entitySet</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getEntitySet entitySet}.\n\nThe name of an entity set for which the control manages values. This is an optional property.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "setExpandNavigationProperties",
          "visibility": "public",
          "since": "1.48",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.SmartField",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bExpandNavigationProperties",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>expandNavigationProperties</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getExpandNavigationProperties expandNavigationProperties}.\n\nIndicates if entities related to navigation properties inside the metadata are requested. If set to <code>true</code>, then these related entities are loaded with an <code>$expand</code> request.\n\nAnnotations that can have navigation properties are the following: <ul> <li> <code>com.sap.vocabularies.Common.v1.Text</code> for text arrangements <li> <code>Org.OData.Measures.V1.Unit</code> and <code>Org.OData.Measures.V1.ISOCurrency</code> for units <li> <code>com.sap.vocabularies.Common.v1.FieldControl</code> for field control </ul>\n\n<b>Note:</b> Independent of the <code>fetchValueListReadOnly</code> value, setting this flag to <code>true</code> requests data from the backend.\n\n<b>Note:</b> The back-end request to expand the navigation properties is sent only if the entity to which <code>SmartField</code> is bound is persisted. For transient entities, there is no back-end request since no such data is available.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>.",
          "experimental": { "since": "1.48" }
        },
        {
          "name": "setFetchValueListReadOnly",
          "visibility": "public",
          "since": "1.42.0",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.SmartField",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bFetchValueListReadOnly",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>fetchValueListReadOnly</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getFetchValueListReadOnly fetchValueListReadOnly}.\n\nIndicates whether the value list collection is fetched in display mode from the resource path specified in the <code>com.sap.vocabularies.Common.v1.ValueList</code> annotation.\n\nThis collection data is used to infer a descriptive text for the value of the <code>SmartField</code> control. However, fetching the value list collection for every <code>SmartField</code> instance individually may not be ideal in some performance-critical scenarios. To optimize this default behavior, you can set this property to <code>false</code> and provide the <code>com.sap.vocabularies.Common.v1.Text</code> annotation, which is used to specify the URL path name to the Entity Data Model (EDM) property from which the descriptive text for the value of the <code>SmartField</code> control is fetched, for example, LT (Laptop).\n\n<b>Note:</b> Setting this property to <code>false</code> only has an effect if the <code>value</code> property of the <code>SmartField</code> control is bound to an Entity Data Model (EDM) property typed as <code>Edm.String</code>. In addition, applications or frameworks have to make sure the descriptive text is fetched, for example, by expanding a navigation property.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setJsontype",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.SmartField",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sJsontype",
              "type": "sap.ui.comp.smartfield.JSONType",
              "optional": false,
              "description": "New value for property <code>jsontype</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getJsontype jsontype}.\n\nData types to be used, if the <code>SmartField</code> control is interacting with a JSON model. If the value property of the control is bound to a property of an OData entity set, this property is not taken into consideration.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.",
          "deprecated": { "since": "1.31.0" }
        },
        {
          "name": "setMandatory",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.SmartField",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bMandatory",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>mandatory</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getMandatory mandatory}.\n\nIf set to <code>true</code>, a user input is required.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setMaxLength",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.SmartField",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iMaxLength",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>maxLength</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getMaxLength maxLength}.\n\nDefines the highest possible number of permitted input characters that the user can enter into the text input field.\n\n<h3>Computed <code>maxLength</code></h3> If the specified <code>maxLength</code> value is greater than the <code>maxLength</code> value specified for the underlying bound Entity Data Model (EDM) property in the service metadata document, the <code>maxLength</code> value of the EDM property takes precedence. Likewise, if the application code provides a binding data type for the <code>value</code> property of the <code>SmartField</code> control and the binding data type has <code>maxLength</code> constraints defined, this <code>maxLength</code> is also taken into consideration to compute the final <code>maxLength</code> value.\n\n<h3>Validation Behavior</h3> By design, the <code>SmartField</code> control does not restrict/validate the highest number of permitted input characters for every keystroke, but only when the text input field has changed, and the browser focus leaves the text input field or the ENTER key is pressed. The <code>SmartField</code> control is used more generically in broader contexts, and adding a <code>maxLength</code> attribute to the HTML text input control may break data type formatting in two-way data-binding scenarios. Let's say the <code>maxLength</code> property is set to 3, but the text input control has a formatter function attached to it to format the entered value \"DE\" to \"Germany (DE)\". In this case, the formatted value will be truncated by the <code>maxLength</code> setting.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>0</code>."
        },
        {
          "name": "setName",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.SmartField",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sName",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>name</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getName name}.\n\nTo be used in the HTML code (for example, for HTML forms that send data to the server via 'submit').\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "setPlaceholder",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.SmartField",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sPlaceholder",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>placeholder</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getPlaceholder placeholder}.\n\nText shown when no value available.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "setProposedControl",
          "visibility": "public",
          "since": "1.32.0",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.SmartField",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sProposedControl",
              "type": "sap.ui.comp.smartfield.ControlProposalType",
              "optional": false,
              "description": "New value for property <code>proposedControl</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getProposedControl proposedControl}.\n\nProposes a control to be rendered. The <code>SmartField</code> control can ignore the proposal.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>None</code>.",
          "deprecated": { "since": "1.32.0" }
        },
        {
          "name": "setSemanticObjectController",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.SmartField",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oSemanticObjectController",
              "type": "sap.ui.comp.navpopover.SemanticObjectController",
              "optional": false,
              "description": "The semanticObjectController to set"
            }
          ],
          "description": "Sets the aggregated {@link #getSemanticObjectController semanticObjectController}."
        },
        {
          "name": "setShowLabel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.SmartField",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowLabel",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showLabel</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowLabel showLabel}.\n\nIf set to <code>false</code> the label is not displayed.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setShowSuggestion",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.SmartField",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowSuggestion",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showSuggestion</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowSuggestion showSuggestion}.\n\nIf set to <code>true</code>, the suggestion feature for a hosted control is enabled, if the hosted control supports it.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setShowValueHelp",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.SmartField",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowValueHelp",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showValueHelp</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowValueHelp showValueHelp}.\n\nIf set to <code>true</code>, a value help indicator will be displayed inside the hosted control, if the hosted control supports this.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setShowValueStateMessage",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.SmartField",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowValueStateMessage",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showValueStateMessage</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowValueStateMessage showValueStateMessage}.\n\nDefines whether the value state message is shown or not.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setTextAlign",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.SmartField",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sTextAlign",
              "type": "sap.ui.core.TextAlign",
              "optional": false,
              "description": "New value for property <code>textAlign</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getTextAlign textAlign}.\n\nHorizontal alignment of the text.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Initial</code>."
        },
        {
          "name": "setTextInEditModeSource",
          "visibility": "public",
          "since": "1.54",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.SmartField",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sTextInEditModeSource",
              "type": "sap.ui.comp.smartfield.TextInEditModeSource",
              "optional": false,
              "description": "New value for property <code>textInEditModeSource</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getTextInEditModeSource textInEditModeSource}.\n\nSets the source from which text descriptions for <code>IDs</code> are fetched in edit mode, for example, for LT (Laptop).\n\n<b>Note</b>: The <code>sap.ui.comp.smartfield.TextInEditModeSource.NavigationProperty</code> and <code>sap.ui.comp.smartfield.TextInEditModeSource.ValueList</code> enumeration members are only supported if the following applies:\n\n<ul> <li>The <code>value</code> property of the <code>SmartField</code> control instance is bound to an Entity Data Model (EDM) property typed as <code>Edm.String</code> or <code>Edm.Guid</code>.</li> <li>The <code>com.sap.vocabularies.UI.v1.TextArrangement</code> annotation for the bound EDM property or entity type is specified in the (service metadata document/annotation file).</li> <li>The binding mode for the <code>value</code> property of the <code>SmartField</code> control is the two-way binding mode.</li> <li>The field from which the description is fetch is filterable.</li> </ul>\n\n<b>Note</b>: In addition, the <code>sap.ui.comp.smartfield.TextInEditModeSource.NavigationProperty</code> enumeration member is only supported if the following applies:\n\n<ul> <li>The navigation EDM property association is defined in the service metadata document.</li> <li>The <code>com.sap.vocabularies.Common.v1.Text</code> annotation for the bound EDM property is specified in the service metadata document or annotation file whose <code>Path</code> attribute points to a navigation EDM property of a lookup entity set/type whose single key property is the <code>ID</code>, which contains (among other properties) the descriptive value.</li> <li>The navigation EDM property association defines a referential constraint that ties values of the dependent editable entity type/set to the lookup entity type/set in the service metadata document.</li> <li>The navigation EDM property association end multiplicity of the lookup entity type/set is defined as <code>1</code> in the service metadata document. There must be a single-valued navigation from the editable entity set/type to the lookup entity set/type.</li> <li>The lookup entity type/set from which the descriptive value is fetched contains a single key property.</li> </ul>\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>None</code>.",
          "experimental": { "since": "1.54" }
        },
        {
          "name": "setTextLabel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.SmartField",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sTextLabel",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>textLabel</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getTextLabel textLabel}.\n\nThis property contains the text of an associated <code>SmartLabel</code>.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "setTooltipLabel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.SmartField",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sTooltipLabel",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>tooltipLabel</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getTooltipLabel tooltipLabel}.\n\nThis property contains the tool tip of the associated <code>SmartLabel</code> control.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "setUnitOfMeasure",
          "visibility": "public",
          "parameters": [
            {
              "name": "sUnit",
              "type": "string",
              "optional": false,
              "description": "The new unit of measure to be set."
            }
          ],
          "description": "If the OData property the control's value property is bound to semantically represents a unit of measure, the value of the current unit of measure can be changed."
        },
        {
          "name": "setUomEditable",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.SmartField",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bUomEditable",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>uomEditable</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getUomEditable uomEditable}.\n\nEditable state of the unit, if the <code>SmartField</code> control addresses unit of measure use cases, for example, an amount and its associated currency.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setUomEnabled",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.SmartField",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bUomEnabled",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>uomEnabled</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getUomEnabled uomEnabled}.\n\nEnabled state of the unit, if the <code>SmartField</code> control addresses unit of measure use cases, for example, an amount and its associated currency.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setUomVisible",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.SmartField",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bUomVisible",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>uomVisible</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getUomVisible uomVisible}.\n\nVisible state of the unit, if the <code>SmartField</code> control addresses unit of measure use cases, for example, an amount and its associated currency.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setUrl",
          "visibility": "public",
          "since": "1.29",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.SmartField",
            "description": "<code>this</code> to allow method chaining"
          },
          "parameters": [
            {
              "name": "sValue",
              "type": "string",
              "optional": false,
              "description": "The new value for property <code>url</code>"
            }
          ],
          "description": "Setter for property <code>url</code>. Default value is <code>null</code>."
        },
        {
          "name": "setValue",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.SmartField",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oValue",
              "type": "any",
              "optional": false,
              "description": "New value for property <code>value</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getValue value}.\n\nThe value property keeps the current value of the control. If a binding expression is configured, this is used to determine the property of an OData entity.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setValueState",
          "visibility": "public",
          "since": "1.30.0",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.SmartField",
            "description": "<code>this</code> to allow method chaining"
          },
          "parameters": [
            {
              "name": "sValueState",
              "type": "sap.ui.core.ValueState",
              "optional": false,
              "description": "The new value for property <code>valueState</code>"
            }
          ],
          "description": "Setter for property <code>valueState</code>. Default value is <code>None</code>."
        },
        {
          "name": "setValueStateText",
          "visibility": "public",
          "since": "1.29",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.SmartField",
            "description": "<code>this</code> to allow method chaining"
          },
          "parameters": [
            {
              "name": "sText",
              "type": "string",
              "optional": false,
              "description": "The new value for property <code>valueStateText</code>"
            }
          ],
          "description": "Setter for property <code>valueStateText</code>. Default value is empty/<code>undefined</code>."
        },
        {
          "name": "setWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.SmartField",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sWidth",
              "type": "sap.ui.core.CSSSize",
              "optional": false,
              "description": "New value for property <code>width</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getWidth width}.\n\nDefines the width of the control.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "setWrapping",
          "visibility": "public",
          "since": "1.36.6",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.SmartField",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bWrapping",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>wrapping</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getWrapping wrapping}.\n\nIndicates whether the control break lines (in display mode) to prevent overflow.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.ui.comp.smartfield.TextInEditModeSource",
      "basename": "TextInEditModeSource",
      "resource": "sap/ui/comp/library.js",
      "module": "sap/ui/comp/library",
      "export": "smartfield.TextInEditModeSource",
      "static": true,
      "visibility": "public",
      "since": "1.54",
      "description": "Enumeration of sources from which text values for <code>Codes</code>/<code>IDs</code> are fetched in edit mode. The text is usually visualized as description/text value for IDs, for example, for LT (Laptop).",
      "ui5-metamodel": true,
      "properties": [
        {
          "name": "NavigationProperty",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The text is fetched from the OData model property specified in the <code>Path</code> attribute of the <code>com.sap.vocabularies.Common.v1.Text</code> annotation."
        },
        {
          "name": "None",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The <code>com.sap.vocabularies.UI.v1.TextArrangement</code> annotation and the value of the <code>displayBehaviour</code> property of the <code>configuration</code> aggregation are not evaluated."
        },
        {
          "name": "ValueList",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The text is fetched from the OData model property specified in the <code>Path</code> attribute of the <code>com.sap.vocabularies.Common.v1.Text</code> annotation of the associated value list entity."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.comp.smartfilterbar.ControlConfiguration",
      "basename": "ControlConfiguration",
      "resource": "sap/ui/comp/smartfilterbar/ControlConfiguration.js",
      "module": "sap/ui/comp/smartfilterbar/ControlConfiguration",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.core.Element",
      "description": "ControlConfiguration can be used to add additional configuration for filter fields in the SmartFilterBar control, in order to overwrite the default settings from the OData metadata. For instance, it is possible to change the label, index or control type of a filter field.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "element",
        "properties": [
          {
            "name": "key",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The key property corresponds to the field name from the OData service $metadata document.",
            "methods": ["getKey", "setKey"]
          },
          {
            "name": "groupId",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The groupId can be used to move a field from one group to another. The groupId corresponds to the EntityName from the OData metadata. It is also possible to move a field from the advanced area to the basic area by specifying the groupId _BASIC.",
            "methods": ["getGroupId", "setGroupId"]
          },
          {
            "name": "label",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Using this property it is possible to overwrite the label of a filter field in the SmartFilterBar.",
            "methods": ["getLabel", "setLabel"]
          },
          {
            "name": "visible",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "description": "Using this flag it is possible to hide fields from the OData metadata.",
            "methods": ["getVisible", "setVisible"]
          },
          {
            "name": "hasValueHelpDialog",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "description": "Specifies whether a value help dialog is available or not.",
            "methods": ["getHasValueHelpDialog", "setHasValueHelpDialog"]
          },
          {
            "name": "controlType",
            "type": "sap.ui.comp.smartfilterbar.ControlType",
            "defaultValue": "auto",
            "group": "Misc",
            "visibility": "public",
            "description": "The SmartFilterBar calculates which kind of control will be used for a filter fields based on multiple OData Attributes and annotations. Using this property it is possible to overwrite the OData metadata.",
            "methods": ["getControlType", "setControlType"]
          },
          {
            "name": "filterType",
            "type": "sap.ui.comp.smartfilterbar.FilterType",
            "defaultValue": "auto",
            "group": "Misc",
            "visibility": "public",
            "description": "The filter type specifies whether the filter field is of type single value, multi-value, or interval. The filter type is calculated by the {@link sap.ui.comp.smartfilterbar.SmartFilterBar} control based on the OData metadata. Using this property the filter type can be configured manually.",
            "methods": ["getFilterType", "setFilterType"]
          },
          {
            "name": "index",
            "type": "int",
            "defaultValue": -1,
            "group": "Misc",
            "visibility": "public",
            "description": "The zero based index can be used to specify the initial order of fields (without any variants).",
            "methods": ["getIndex", "setIndex"]
          },
          {
            "name": "hasTypeAhead",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "description": "Property can be used to enable the TypeAhead service. TypeAhead does not work with all controls, e.g it does not work for DrodDownListbox",
            "methods": ["getHasTypeAhead", "setHasTypeAhead"]
          },
          {
            "name": "mandatory",
            "type": "sap.ui.comp.smartfilterbar.MandatoryType",
            "defaultValue": "auto",
            "group": "Misc",
            "visibility": "public",
            "description": "Property can be used to overwrite the mandatory state of a filter field. Property can only be set during initialization. Changes at runtime will be ignored.",
            "methods": ["getMandatory", "setMandatory"]
          },
          {
            "name": "width",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The width of the filter field in a CSS compatible format. The width can be set only once during initialization. Changes at runtime will not be reflected. The width will not be applied to custom controls.",
            "methods": ["getWidth", "setWidth"]
          },
          {
            "name": "visibleInAdvancedArea",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "description": "If set to true this field will be added to the advanced area (aka. Dynamic Selection) by default.",
            "methods": ["getVisibleInAdvancedArea", "setVisibleInAdvancedArea"]
          },
          {
            "name": "preventInitialDataFetchInValueHelpDialog",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "description": "In case there are value help annotations for this filter field, it is possible to specify whether the table in the value help dialog for this field will be filled initially. The default value is true, which means the table will not be filled as the data fetch is prevented.",
            "methods": [
              "getPreventInitialDataFetchInValueHelpDialog",
              "setPreventInitialDataFetchInValueHelpDialog"
            ]
          },
          {
            "name": "displayBehaviour",
            "type": "sap.ui.comp.smartfilterbar.DisplayBehaviour",
            "defaultValue": "auto",
            "group": "Misc",
            "visibility": "public",
            "description": "The displayBehaviour specifies how the content should be displayed on certain controls. Ex: DescriptionOnly for Combobox (DropDown text) , Description and ID for MultiInput (token text)",
            "methods": ["getDisplayBehaviour", "setDisplayBehaviour"]
          },
          {
            "name": "conditionType",
            "type": "any",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The condition Type class name to use for this filter item. Implementation should derive from sap.ui.comp.config.condition.Type",
            "methods": ["getConditionType", "setConditionType"]
          }
        ],
        "aggregations": [
          {
            "name": "defaultFilterValues",
            "singularName": "defaultFilterValue",
            "type": "sap.ui.comp.smartfilterbar.SelectOption",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Default value for a filter field. The aggreagtion expects {@link sap.ui.comp.smartfilterbar.SelectOption|SelectOption} instances, where the values' format (properties <code>low</code> and <code>high</code>) match the type of the referneced property and consider also the given constraints of the property.\n\nSamples for valid formats: <code>Edm.DateTime</code> with constraint <code>sap:display-format='Date'</code>: \"2018-12-24\" (you optionally can provide a time-part and timezone, too, (2018-12-24T00:00:00Z) but this is ignored)\n\n<code>Edm.DateTimeOffset</code>: \"2018-12-24T13:55:59Z\"\n\n<code>Edm.Time</code>: \"PT12H34M56S\"\n\n<code>Edm.Boolean</code>: \"false\"\n\n<code>Edm.Decimal</code>: \"2983.12\"",
            "methods": [
              "getDefaultFilterValues",
              "destroyDefaultFilterValues",
              "insertDefaultFilterValue",
              "addDefaultFilterValue",
              "removeDefaultFilterValue",
              "indexOfDefaultFilterValue",
              "removeAllDefaultFilterValues"
            ]
          },
          {
            "name": "customControl",
            "singularName": "customControl",
            "type": "sap.ui.core.Control",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "If a custom control is specified, the SmartFilterBar will not create a control but use the custom control. Additional services like TypeAhead have to implemented manually.",
            "methods": [
              "getCustomControl",
              "destroyCustomControl",
              "setCustomControl"
            ]
          }
        ],
        "events": [
          {
            "name": "change",
            "visibility": "public",
            "description": "Fired when the value of a property, for example isVisible, has changed.",
            "parameters": {
              "propertyName": {
                "name": "propertyName",
                "type": "string",
                "description": "Name of the changed property"
              }
            },
            "methods": ["attachChange", "detachChange", "fireChange"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sID",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new smartfilterbar/ControlConfiguration.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "change",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "propertyName": {
                      "name": "propertyName",
                      "type": "string",
                      "optional": false,
                      "description": "Name of the changed property"
                    }
                  }
                }
              }
            }
          ],
          "description": "Fired when the value of a property, for example isVisible, has changed."
        }
      ],
      "methods": [
        {
          "name": "addDefaultFilterValue",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfilterbar.ControlConfiguration",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oDefaultFilterValue",
              "type": "sap.ui.comp.smartfilterbar.SelectOption",
              "optional": false,
              "description": "The defaultFilterValue to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some defaultFilterValue to the aggregation {@link #getDefaultFilterValues defaultFilterValues}."
        },
        {
          "name": "attachChange",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfilterbar.ControlConfiguration",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartfilterbar.ControlConfiguration</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:change change} event of this <code>sap.ui.comp.smartfilterbar.ControlConfiguration</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartfilterbar.ControlConfiguration</code> itself.\n\nFired when the value of a property, for example isVisible, has changed."
        },
        {
          "name": "destroyCustomControl",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfilterbar.ControlConfiguration",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the customControl in the aggregation {@link #getCustomControl customControl}."
        },
        {
          "name": "destroyDefaultFilterValues",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfilterbar.ControlConfiguration",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the defaultFilterValues in the aggregation {@link #getDefaultFilterValues defaultFilterValues}."
        },
        {
          "name": "detachChange",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfilterbar.ControlConfiguration",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:change change} event of this <code>sap.ui.comp.smartfilterbar.ControlConfiguration</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.comp.smartfilterbar.ControlConfiguration with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
        },
        {
          "name": "fireChange",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.comp.smartfilterbar.ControlConfiguration",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "propertyName": {
                  "name": "propertyName",
                  "type": "string",
                  "optional": true,
                  "description": "Name of the changed property"
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:change change} to attached listeners."
        },
        {
          "name": "getConditionType",
          "visibility": "public",
          "returnValue": {
            "type": "any",
            "description": "Value of property <code>conditionType</code>"
          },
          "description": "Gets current value of property {@link #getConditionType conditionType}.\n\nThe condition Type class name to use for this filter item. Implementation should derive from sap.ui.comp.config.condition.Type"
        },
        {
          "name": "getControlType",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfilterbar.ControlType",
            "description": "Value of property <code>controlType</code>"
          },
          "description": "Gets current value of property {@link #getControlType controlType}.\n\nThe SmartFilterBar calculates which kind of control will be used for a filter fields based on multiple OData Attributes and annotations. Using this property it is possible to overwrite the OData metadata.\n\nDefault value is <code>auto</code>."
        },
        {
          "name": "getCustomControl",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.Control" },
          "description": "Gets content of aggregation {@link #getCustomControl customControl}.\n\nIf a custom control is specified, the SmartFilterBar will not create a control but use the custom control. Additional services like TypeAhead have to implemented manually."
        },
        {
          "name": "getDefaultFilterValues",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfilterbar.SelectOption[]"
          },
          "description": "Gets content of aggregation {@link #getDefaultFilterValues defaultFilterValues}.\n\nDefault value for a filter field. The aggreagtion expects {@link sap.ui.comp.smartfilterbar.SelectOption|SelectOption} instances, where the values' format (properties <code>low</code> and <code>high</code>) match the type of the referneced property and consider also the given constraints of the property.\n\nSamples for valid formats: <code>Edm.DateTime</code> with constraint <code>sap:display-format='Date'</code>: \"2018-12-24\" (you optionally can provide a time-part and timezone, too, (2018-12-24T00:00:00Z) but this is ignored)\n\n<code>Edm.DateTimeOffset</code>: \"2018-12-24T13:55:59Z\"\n\n<code>Edm.Time</code>: \"PT12H34M56S\"\n\n<code>Edm.Boolean</code>: \"false\"\n\n<code>Edm.Decimal</code>: \"2983.12\""
        },
        {
          "name": "getDisplayBehaviour",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfilterbar.DisplayBehaviour",
            "description": "Value of property <code>displayBehaviour</code>"
          },
          "description": "Gets current value of property {@link #getDisplayBehaviour displayBehaviour}.\n\nThe displayBehaviour specifies how the content should be displayed on certain controls. Ex: DescriptionOnly for Combobox (DropDown text) , Description and ID for MultiInput (token text)\n\nDefault value is <code>auto</code>."
        },
        {
          "name": "getFilterType",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfilterbar.FilterType",
            "description": "Value of property <code>filterType</code>"
          },
          "description": "Gets current value of property {@link #getFilterType filterType}.\n\nThe filter type specifies whether the filter field is of type single value, multi-value, or interval. The filter type is calculated by the {@link sap.ui.comp.smartfilterbar.SmartFilterBar} control based on the OData metadata. Using this property the filter type can be configured manually.\n\nDefault value is <code>auto</code>."
        },
        {
          "name": "getGroupId",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>groupId</code>"
          },
          "description": "Gets current value of property {@link #getGroupId groupId}.\n\nThe groupId can be used to move a field from one group to another. The groupId corresponds to the EntityName from the OData metadata. It is also possible to move a field from the advanced area to the basic area by specifying the groupId _BASIC."
        },
        {
          "name": "getHasTypeAhead",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>hasTypeAhead</code>"
          },
          "description": "Gets current value of property {@link #getHasTypeAhead hasTypeAhead}.\n\nProperty can be used to enable the TypeAhead service. TypeAhead does not work with all controls, e.g it does not work for DrodDownListbox\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getHasValueHelpDialog",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>hasValueHelpDialog</code>"
          },
          "description": "Gets current value of property {@link #getHasValueHelpDialog hasValueHelpDialog}.\n\nSpecifies whether a value help dialog is available or not.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getIndex",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>index</code>"
          },
          "description": "Gets current value of property {@link #getIndex index}.\n\nThe zero based index can be used to specify the initial order of fields (without any variants).\n\nDefault value is <code>-1</code>."
        },
        {
          "name": "getKey",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>key</code>"
          },
          "description": "Gets current value of property {@link #getKey key}.\n\nThe key property corresponds to the field name from the OData service $metadata document."
        },
        {
          "name": "getLabel",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>label</code>"
          },
          "description": "Gets current value of property {@link #getLabel label}.\n\nUsing this property it is possible to overwrite the label of a filter field in the SmartFilterBar."
        },
        {
          "name": "getMandatory",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfilterbar.MandatoryType",
            "description": "Value of property <code>mandatory</code>"
          },
          "description": "Gets current value of property {@link #getMandatory mandatory}.\n\nProperty can be used to overwrite the mandatory state of a filter field. Property can only be set during initialization. Changes at runtime will be ignored.\n\nDefault value is <code>auto</code>."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.comp.smartfilterbar.ControlConfiguration."
        },
        {
          "name": "getPreventInitialDataFetchInValueHelpDialog",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>preventInitialDataFetchInValueHelpDialog</code>"
          },
          "description": "Gets current value of property {@link #getPreventInitialDataFetchInValueHelpDialog preventInitialDataFetchInValueHelpDialog}.\n\nIn case there are value help annotations for this filter field, it is possible to specify whether the table in the value help dialog for this field will be filled initially. The default value is true, which means the table will not be filled as the data fetch is prevented.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getVisible",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>visible</code>"
          },
          "description": "Gets current value of property {@link #getVisible visible}.\n\nUsing this flag it is possible to hide fields from the OData metadata.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getVisibleInAdvancedArea",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>visibleInAdvancedArea</code>"
          },
          "description": "Gets current value of property {@link #getVisibleInAdvancedArea visibleInAdvancedArea}.\n\nIf set to true this field will be added to the advanced area (aka. Dynamic Selection) by default.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getWidth",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>width</code>"
          },
          "description": "Gets current value of property {@link #getWidth width}.\n\nThe width of the filter field in a CSS compatible format. The width can be set only once during initialization. Changes at runtime will not be reflected. The width will not be applied to custom controls."
        },
        {
          "name": "indexOfDefaultFilterValue",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oDefaultFilterValue",
              "type": "sap.ui.comp.smartfilterbar.SelectOption",
              "optional": false,
              "description": "The defaultFilterValue whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.ui.comp.smartfilterbar.SelectOption</code> in the aggregation {@link #getDefaultFilterValues defaultFilterValues}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "insertDefaultFilterValue",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfilterbar.ControlConfiguration",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oDefaultFilterValue",
              "type": "sap.ui.comp.smartfilterbar.SelectOption",
              "optional": false,
              "description": "The defaultFilterValue to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the defaultFilterValue should be inserted at; for a negative value of <code>iIndex</code>, the defaultFilterValue is inserted at position 0; for a value greater than the current size of the aggregation, the defaultFilterValue is inserted at the last position"
            }
          ],
          "description": "Inserts a defaultFilterValue into the aggregation {@link #getDefaultFilterValues defaultFilterValues}."
        },
        {
          "name": "removeAllDefaultFilterValues",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfilterbar.SelectOption[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getDefaultFilterValues defaultFilterValues}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeDefaultFilterValue",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfilterbar.SelectOption",
            "description": "The removed defaultFilterValue or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vDefaultFilterValue",
              "type": "int|string|sap.ui.comp.smartfilterbar.SelectOption",
              "optional": false,
              "description": "The defaultFilterValue to remove or its index or id"
            }
          ],
          "description": "Removes a defaultFilterValue from the aggregation {@link #getDefaultFilterValues defaultFilterValues}."
        },
        {
          "name": "setConditionType",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfilterbar.ControlConfiguration",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oConditionType",
              "type": "any",
              "optional": false,
              "description": "New value for property <code>conditionType</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getConditionType conditionType}.\n\nThe condition Type class name to use for this filter item. Implementation should derive from sap.ui.comp.config.condition.Type\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setControlType",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfilterbar.ControlConfiguration",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sControlType",
              "type": "sap.ui.comp.smartfilterbar.ControlType",
              "optional": false,
              "description": "New value for property <code>controlType</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getControlType controlType}.\n\nThe SmartFilterBar calculates which kind of control will be used for a filter fields based on multiple OData Attributes and annotations. Using this property it is possible to overwrite the OData metadata.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>auto</code>."
        },
        {
          "name": "setCustomControl",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfilterbar.ControlConfiguration",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oCustomControl",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The customControl to set"
            }
          ],
          "description": "Sets the aggregated {@link #getCustomControl customControl}."
        },
        {
          "name": "setDisplayBehaviour",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfilterbar.ControlConfiguration",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sDisplayBehaviour",
              "type": "sap.ui.comp.smartfilterbar.DisplayBehaviour",
              "optional": false,
              "description": "New value for property <code>displayBehaviour</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getDisplayBehaviour displayBehaviour}.\n\nThe displayBehaviour specifies how the content should be displayed on certain controls. Ex: DescriptionOnly for Combobox (DropDown text) , Description and ID for MultiInput (token text)\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>auto</code>."
        },
        {
          "name": "setFilterType",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfilterbar.ControlConfiguration",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sFilterType",
              "type": "sap.ui.comp.smartfilterbar.FilterType",
              "optional": false,
              "description": "New value for property <code>filterType</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getFilterType filterType}.\n\nThe filter type specifies whether the filter field is of type single value, multi-value, or interval. The filter type is calculated by the {@link sap.ui.comp.smartfilterbar.SmartFilterBar} control based on the OData metadata. Using this property the filter type can be configured manually.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>auto</code>."
        },
        {
          "name": "setGroupId",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfilterbar.ControlConfiguration",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sGroupId",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>groupId</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getGroupId groupId}.\n\nThe groupId can be used to move a field from one group to another. The groupId corresponds to the EntityName from the OData metadata. It is also possible to move a field from the advanced area to the basic area by specifying the groupId _BASIC.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setHasTypeAhead",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfilterbar.ControlConfiguration",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bHasTypeAhead",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>hasTypeAhead</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getHasTypeAhead hasTypeAhead}.\n\nProperty can be used to enable the TypeAhead service. TypeAhead does not work with all controls, e.g it does not work for DrodDownListbox\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setHasValueHelpDialog",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfilterbar.ControlConfiguration",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bHasValueHelpDialog",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>hasValueHelpDialog</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getHasValueHelpDialog hasValueHelpDialog}.\n\nSpecifies whether a value help dialog is available or not.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setIndex",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfilterbar.ControlConfiguration",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>index</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getIndex index}.\n\nThe zero based index can be used to specify the initial order of fields (without any variants).\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>-1</code>."
        },
        {
          "name": "setKey",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfilterbar.ControlConfiguration",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sKey",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>key</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getKey key}.\n\nThe key property corresponds to the field name from the OData service $metadata document.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setLabel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfilterbar.ControlConfiguration",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sLabel",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>label</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getLabel label}.\n\nUsing this property it is possible to overwrite the label of a filter field in the SmartFilterBar.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setMandatory",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfilterbar.ControlConfiguration",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sMandatory",
              "type": "sap.ui.comp.smartfilterbar.MandatoryType",
              "optional": false,
              "description": "New value for property <code>mandatory</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getMandatory mandatory}.\n\nProperty can be used to overwrite the mandatory state of a filter field. Property can only be set during initialization. Changes at runtime will be ignored.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>auto</code>."
        },
        {
          "name": "setPreventInitialDataFetchInValueHelpDialog",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfilterbar.ControlConfiguration",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bPreventInitialDataFetchInValueHelpDialog",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>preventInitialDataFetchInValueHelpDialog</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getPreventInitialDataFetchInValueHelpDialog preventInitialDataFetchInValueHelpDialog}.\n\nIn case there are value help annotations for this filter field, it is possible to specify whether the table in the value help dialog for this field will be filled initially. The default value is true, which means the table will not be filled as the data fetch is prevented.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setVisible",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfilterbar.ControlConfiguration",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bVisible",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>visible</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getVisible visible}.\n\nUsing this flag it is possible to hide fields from the OData metadata.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setVisibleInAdvancedArea",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfilterbar.ControlConfiguration",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bVisibleInAdvancedArea",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>visibleInAdvancedArea</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getVisibleInAdvancedArea visibleInAdvancedArea}.\n\nIf set to true this field will be added to the advanced area (aka. Dynamic Selection) by default.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfilterbar.ControlConfiguration",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sWidth",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>width</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getWidth width}.\n\nThe width of the filter field in a CSS compatible format. The width can be set only once during initialization. Changes at runtime will not be reflected. The width will not be applied to custom controls.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.ui.comp.smartfilterbar.ControlType",
      "basename": "ControlType",
      "resource": "sap/ui/comp/library.js",
      "module": "sap/ui/comp/library",
      "export": "smartfilterbar.ControlType",
      "static": true,
      "visibility": "public",
      "description": "The available control types to configure the internal control selection of a SmartFilterBar control.",
      "ui5-metamodel": true,
      "properties": [
        {
          "name": "auto",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Shows field based on metadata."
        },
        {
          "name": "date",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Shows a date picker field."
        },
        {
          "name": "dateTimePicker",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Shows a date time picker field."
        },
        {
          "name": "dropDownList",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Shows a drop down list field."
        },
        {
          "name": "input",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Shows an input field."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.ui.comp.smartfilterbar.DisplayBehaviour",
      "basename": "DisplayBehaviour",
      "resource": "sap/ui/comp/library.js",
      "module": "sap/ui/comp/library",
      "export": "smartfilterbar.DisplayBehaviour",
      "static": true,
      "visibility": "public",
      "description": "The different options to define display behavior for fields in the SmartFilter control.",
      "ui5-metamodel": true,
      "properties": [
        {
          "name": "auto",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Shows values based on metadata."
        },
        {
          "name": "descriptionAndId",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Shows description and then an id in values."
        },
        {
          "name": "descriptionOnly",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Shows only the description for values."
        },
        {
          "name": "idAndDescription",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Shows id and then a description in values."
        },
        {
          "name": "idOnly",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Shows only the id for values."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.ui.comp.smartfilterbar.FilterType",
      "basename": "FilterType",
      "resource": "sap/ui/comp/library.js",
      "module": "sap/ui/comp/library",
      "export": "smartfilterbar.FilterType",
      "static": true,
      "visibility": "public",
      "description": "The available filter types to configure the internal control of a SmartFilterBar control.",
      "ui5-metamodel": true,
      "properties": [
        {
          "name": "auto",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Restrict filter based on metadata."
        },
        {
          "name": "interval",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Restrict filter to an interval."
        },
        {
          "name": "multiple",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Restrict filter to multiple entries."
        },
        {
          "name": "single",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Restrict filter to a single entry."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.comp.smartfilterbar.GroupConfiguration",
      "basename": "GroupConfiguration",
      "resource": "sap/ui/comp/smartfilterbar/GroupConfiguration.js",
      "module": "sap/ui/comp/smartfilterbar/GroupConfiguration",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.core.Element",
      "description": "A GroupConfiguration can be used to add additional configurations for groups in the SmartFilterBar. A group in the SmartFilterBar is a group of filter fields in the advanced search.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "element",
        "properties": [
          {
            "name": "key",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The key property shall correspond to the name EntityTypeName from the OData service $metadata document.",
            "methods": ["getKey", "setKey"]
          },
          {
            "name": "index",
            "type": "any",
            "group": "Misc",
            "visibility": "public",
            "description": "Zero based integer index. The index can be used to specify the order of groups. If no index is specified, the order like in the OData metadata will be used.",
            "methods": ["getIndex", "setIndex"]
          },
          {
            "name": "label",
            "type": "any",
            "group": "Misc",
            "visibility": "public",
            "description": "Using this property it is possible to overwrite the label of a group in the advanced area of the SmartFilterBar.",
            "methods": ["getLabel", "setLabel"]
          }
        ],
        "events": [
          {
            "name": "change",
            "visibility": "public",
            "description": "Fired when the value of a property, for example label, has changed",
            "parameters": {
              "propertyName": {
                "name": "propertyName",
                "type": "string",
                "description": "Name of the changed property"
              }
            },
            "methods": ["attachChange", "detachChange", "fireChange"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sID",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new smartfilterbar/GroupConfiguration.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "change",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "propertyName": {
                      "name": "propertyName",
                      "type": "string",
                      "optional": false,
                      "description": "Name of the changed property"
                    }
                  }
                }
              }
            }
          ],
          "description": "Fired when the value of a property, for example label, has changed"
        }
      ],
      "methods": [
        {
          "name": "attachChange",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfilterbar.GroupConfiguration",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartfilterbar.GroupConfiguration</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:change change} event of this <code>sap.ui.comp.smartfilterbar.GroupConfiguration</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartfilterbar.GroupConfiguration</code> itself.\n\nFired when the value of a property, for example label, has changed"
        },
        {
          "name": "detachChange",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfilterbar.GroupConfiguration",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:change change} event of this <code>sap.ui.comp.smartfilterbar.GroupConfiguration</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.comp.smartfilterbar.GroupConfiguration with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
        },
        {
          "name": "fireChange",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.comp.smartfilterbar.GroupConfiguration",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "propertyName": {
                  "name": "propertyName",
                  "type": "string",
                  "optional": true,
                  "description": "Name of the changed property"
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:change change} to attached listeners."
        },
        {
          "name": "getIndex",
          "visibility": "public",
          "returnValue": {
            "type": "any",
            "description": "Value of property <code>index</code>"
          },
          "description": "Gets current value of property {@link #getIndex index}.\n\nZero based integer index. The index can be used to specify the order of groups. If no index is specified, the order like in the OData metadata will be used.\n\nDefault value is <code>undefined</code>."
        },
        {
          "name": "getKey",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>key</code>"
          },
          "description": "Gets current value of property {@link #getKey key}.\n\nThe key property shall correspond to the name EntityTypeName from the OData service $metadata document."
        },
        {
          "name": "getLabel",
          "visibility": "public",
          "returnValue": {
            "type": "any",
            "description": "Value of property <code>label</code>"
          },
          "description": "Gets current value of property {@link #getLabel label}.\n\nUsing this property it is possible to overwrite the label of a group in the advanced area of the SmartFilterBar.\n\nDefault value is <code>undefined</code>."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.comp.smartfilterbar.GroupConfiguration."
        },
        {
          "name": "setIndex",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfilterbar.GroupConfiguration",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oIndex",
              "type": "any",
              "optional": false,
              "description": "New value for property <code>index</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getIndex index}.\n\nZero based integer index. The index can be used to specify the order of groups. If no index is specified, the order like in the OData metadata will be used.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>undefined</code>."
        },
        {
          "name": "setKey",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfilterbar.GroupConfiguration",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sKey",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>key</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getKey key}.\n\nThe key property shall correspond to the name EntityTypeName from the OData service $metadata document.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setLabel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfilterbar.GroupConfiguration",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oLabel",
              "type": "any",
              "optional": false,
              "description": "New value for property <code>label</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getLabel label}.\n\nUsing this property it is possible to overwrite the label of a group in the advanced area of the SmartFilterBar.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>undefined</code>."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.ui.comp.smartfilterbar.MandatoryType",
      "basename": "MandatoryType",
      "resource": "sap/ui/comp/library.js",
      "module": "sap/ui/comp/library",
      "export": "smartfilterbar.MandatoryType",
      "static": true,
      "visibility": "public",
      "description": "The different options to define mandatory state for fields in the SmartFilter control.",
      "ui5-metamodel": true,
      "properties": [
        {
          "name": "auto",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Shows values based on metadata."
        },
        {
          "name": "mandatory",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Shows field as mandatory."
        },
        {
          "name": "notMandatory",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Shows field as not mandatory."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.comp.smartfilterbar.SelectOption",
      "basename": "SelectOption",
      "resource": "sap/ui/comp/smartfilterbar/SelectOption.js",
      "module": "sap/ui/comp/smartfilterbar/SelectOption",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.core.Element",
      "description": "A Select Option can be used to specify default filter values for a control configuration of the SmartFilterBar.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "element",
        "properties": [
          {
            "name": "sign",
            "type": "sap.ui.comp.smartfilterbar.SelectOptionSign",
            "defaultValue": "I",
            "group": "Misc",
            "visibility": "public",
            "description": "The sign for a Select Option. Possible values are I for include or E for exclude.",
            "methods": ["getSign", "setSign"]
          },
          {
            "name": "operator",
            "type": "sap.ui.model.FilterOperator",
            "defaultValue": "EQ",
            "group": "Misc",
            "visibility": "public",
            "description": "The operator for a select option. The default value is EQ \"for equals\".",
            "methods": ["getOperator", "setOperator"]
          },
          {
            "name": "low",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The low value for a select option.",
            "methods": ["getLow", "setLow"]
          },
          {
            "name": "high",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The high value for a select option. The high value is only required for a few operators, e.g. BT (between).",
            "methods": ["getHigh", "setHigh"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sID",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new smartfilterbar/SelectOption.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.comp.smartfilterbar.SelectOption with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
        },
        {
          "name": "getHigh",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>high</code>"
          },
          "description": "Gets current value of property {@link #getHigh high}.\n\nThe high value for a select option. The high value is only required for a few operators, e.g. BT (between)."
        },
        {
          "name": "getLow",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>low</code>"
          },
          "description": "Gets current value of property {@link #getLow low}.\n\nThe low value for a select option."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.comp.smartfilterbar.SelectOption."
        },
        {
          "name": "getOperator",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.model.FilterOperator",
            "description": "Value of property <code>operator</code>"
          },
          "description": "Gets current value of property {@link #getOperator operator}.\n\nThe operator for a select option. The default value is EQ \"for equals\".\n\nDefault value is <code>EQ</code>."
        },
        {
          "name": "getSign",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfilterbar.SelectOptionSign",
            "description": "Value of property <code>sign</code>"
          },
          "description": "Gets current value of property {@link #getSign sign}.\n\nThe sign for a Select Option. Possible values are I for include or E for exclude.\n\nDefault value is <code>I</code>."
        },
        {
          "name": "setHigh",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfilterbar.SelectOption",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sHigh",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>high</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getHigh high}.\n\nThe high value for a select option. The high value is only required for a few operators, e.g. BT (between).\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setLow",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfilterbar.SelectOption",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sLow",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>low</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getLow low}.\n\nThe low value for a select option.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setOperator",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfilterbar.SelectOption",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sOperator",
              "type": "sap.ui.model.FilterOperator",
              "optional": false,
              "description": "New value for property <code>operator</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getOperator operator}.\n\nThe operator for a select option. The default value is EQ \"for equals\".\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>EQ</code>."
        },
        {
          "name": "setSign",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfilterbar.SelectOption",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sSign",
              "type": "sap.ui.comp.smartfilterbar.SelectOptionSign",
              "optional": false,
              "description": "New value for property <code>sign</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSign sign}.\n\nThe sign for a Select Option. Possible values are I for include or E for exclude.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>I</code>."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.ui.comp.smartfilterbar.SelectOptionSign",
      "basename": "SelectOptionSign",
      "resource": "sap/ui/comp/library.js",
      "module": "sap/ui/comp/library",
      "export": "smartfilterbar.SelectOptionSign",
      "static": true,
      "visibility": "public",
      "description": "The different options to define Sign for Select Options used in SmartFilter control.",
      "ui5-metamodel": true,
      "properties": [
        {
          "name": "E",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Sign Exclude"
        },
        {
          "name": "exclude",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Sign Exclude"
        },
        {
          "name": "I",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Sign Include"
        },
        {
          "name": "include",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Sign Include"
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.comp.smartfilterbar.SmartFilterBar",
      "basename": "SmartFilterBar",
      "resource": "sap/ui/comp/smartfilterbar/SmartFilterBar.js",
      "module": "sap/ui/comp/smartfilterbar/SmartFilterBar",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.comp.filterbar.FilterBar",
      "description": "The SmartFilterBar control uses the OData metadata of an entity in order to create a FilterBar.<br> Whether a field is visible on the FilterBar, supports type-ahead and value help, for example, is automatically determined. When you use control configurations and group configurations it is possible to configure the FilterBar and adapt it according to your needs.<br> <b><i>Note:</i></b><br> Most of the attributes/properties are not dynamic and cannot be changed once the control has been initialized.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "entityType",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The OData entity type whose metadata is used to create the SmartFilterBar. <b>Note:</b> Changing this value after the SmartFilterBar is initialized (<code>initialise</code> event was fired) has no effect.",
            "deprecated": {
              "since": "1.40",
              "text": "Use <code>entitySet</code> property instead of this one, to enable V4 annotation support"
            },
            "methods": ["getEntityType", "setEntityType"]
          },
          {
            "name": "entitySet",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The OData entity set whose metadata is used to create the SmartFilterBar. <b>Note:</b> Changing this value after the SmartFilterBar is initialized (<code>initialise</code> event was fired) has no effect.",
            "methods": ["getEntitySet", "setEntitySet"]
          },
          {
            "name": "resourceUri",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Optional. The OData service URL. If it is not specified, the service URL from the OData model (this.getModel()) will be used. <b>Note:</b> Changing this value after the SmartFilterBar is initialized (initialise event was fired) has no effect.",
            "deprecated": {
              "since": "1.29",
              "text": "Set an ODataModel as the main model on your control/view instead"
            },
            "methods": ["getResourceUri", "setResourceUri"]
          },
          {
            "name": "basicSearchFieldName",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Name of the field that is the focus of the basic search.",
            "methods": ["getBasicSearchFieldName", "setBasicSearchFieldName"]
          },
          {
            "name": "enableBasicSearch",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "description": "Enables the basic search field. The entered value can be accessed with {@link sap.ui.comp.smartfilterbar.SmartFilterBar#getParameters}. <b>Note:</b> When the SmartFilterBar control is used with a {@link sap.ui.comp.smarttable.SmartTable} control the parameters are handled automatically. Therefore, this must only be enabled for OData service entities that support basic search.",
            "methods": ["getEnableBasicSearch", "setEnableBasicSearch"]
          },
          {
            "name": "liveMode",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "since": "1.40",
            "description": "If set the search will be automatically triggered, when a filter value was set via the <B>change</B> event.<br> <b>Note:</b> The liveMode only operates on non-mobile scenarios.<br> Additionally, if liveMode is set, the following applies: <ul> <li>The error messagebox is not displayed, and the <code>showMessages</code> property is ignored.</li> <li>The search is triggered after a variant has been selected.</li> <li>Execute on Select for <code>VariantManagement</code> is not shown and not taken into account</li> </ul>",
            "methods": ["getLiveMode", "setLiveMode"]
          },
          {
            "name": "showMessages",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "since": "1.40",
            "description": "If set to <code>false</code> eventual errors during the search, will not be displayed in a messagebox.",
            "methods": ["getShowMessages", "setShowMessages"]
          },
          {
            "name": "considerAnalyticalParameters",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "since": "1.42.0",
            "description": "Indicates if the analytical parameters (SelectionVariant) must be taken into consideration.",
            "experimental": {
              "since": "1.42.0",
              "text": "This property is NOT stable yet. Use at your own risk."
            },
            "methods": [
              "getConsiderAnalyticalParameters",
              "setConsiderAnalyticalParameters"
            ]
          },
          {
            "name": "useDateRangeType",
            "type": "boolean",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.46.0",
            "description": "If set to <code>true</code> all date fields with filter restriction <code>interval</code> will be treated as <code>DateTimeRange</code> filters. The <code>useDateRangeType</code> can be set only once during initialization. <b>Note:</b> If this property is set to <code>true</code> and any date filters with filter restriction <code>interval</code> were stored as part of a variant, the values of these filters cannot be applied. If this property is set to <code>false</code>, any previously stored filters which were treated as type <code>DateTimeRange</code> based on the former setting, cannot be converted back to the standard date interval.",
            "methods": ["getUseDateRangeType", "setUseDateRangeType"]
          },
          {
            "name": "suppressSelection",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "since": "1.44.0",
            "description": "If set to <code>true</code> all search requests will be ignored. This functionality is only intended to be used internally to enable an optimal solution when the filter bar is controlled by the smart templates. NOTE: As long as this property is set to <code>true</code>, all search requests will be neglected.",
            "experimental": {
              "since": "1.44.0",
              "text": "This property is NOT stable yet. Use at your own risk."
            },
            "methods": ["getSuppressSelection", "setSuppressSelection"]
          },
          {
            "name": "considerSelectionVariants",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "since": "1.48.0",
            "description": "Indicates if the annotation <code>com.sap.vocabularies.UI.v1.SelectionVariant</code> is taken into account.",
            "methods": [
              "getConsiderSelectionVariants",
              "setConsiderSelectionVariants"
            ]
          },
          {
            "name": "defaultSelectionVariantName",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.48.0",
            "description": "Determines one specific variant that is based on the <code>com.sap.vocabularies.UI.v1.SelectionVariant</code> annotation, which is then used as the default variant.<br> This property is only relevant in case <code>considerSelectionVariants</code> is set to <code>true</code> and will only be applied if there is no user-defined default variant specified.",
            "methods": [
              "getDefaultSelectionVariantName",
              "setDefaultSelectionVariantName"
            ]
          },
          {
            "name": "useProvidedNavigationProperties",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "since": "1.48",
            "description": "If set to <code>true</code>, only the navigation properties mentioned in property {@link sap.ui.comp.smartfilterbar.SmartFilterBarl#getNavigationProperties} are checked for further filters.",
            "methods": [
              "getUseProvidedNavigationProperties",
              "setUseProvidedNavigationProperties"
            ]
          },
          {
            "name": "navigationProperties",
            "type": "string",
            "defaultValue": "",
            "group": "Misc",
            "visibility": "public",
            "since": "1.48",
            "description": "This property is only evaluated if the property {@link sap.ui.comp.smartfilterbar.SmartFilterBar#getUseProvidedNavigationProperties} is set to <code>true</code>. It contains a comma-separated list of navigation property names which are checked for filters.<br>",
            "methods": ["getNavigationProperties", "setNavigationProperties"]
          }
        ],
        "aggregations": [
          {
            "name": "controlConfiguration",
            "singularName": "controlConfiguration",
            "type": "sap.ui.comp.smartfilterbar.ControlConfiguration",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Using control configurations you can add additional configuration to filter fields, for example set custom labels, change the order of fields, or change the filter field control type. <b>Note:</b> Changing the values here after the SmartFilter is initialized (<code>initialise</code> event was fired) has no effect.",
            "methods": [
              "getControlConfiguration",
              "destroyControlConfiguration",
              "insertControlConfiguration",
              "addControlConfiguration",
              "removeControlConfiguration",
              "indexOfControlConfiguration",
              "removeAllControlConfiguration"
            ]
          },
          {
            "name": "groupConfiguration",
            "singularName": "groupConfiguration",
            "type": "sap.ui.comp.smartfilterbar.GroupConfiguration",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Provides the possibility to add additional configuration to groups. Groups are used to show fields in the advanced area of the SmartFilterBar. With additional configuration, you can for example set custom labels or change the order of groups. <b>Note:</b> Changing the values here after the SmartFilter is initialized (<code>initialise</code> event was fired) has no effect.",
            "methods": [
              "getGroupConfiguration",
              "destroyGroupConfiguration",
              "insertGroupConfiguration",
              "addGroupConfiguration",
              "removeGroupConfiguration",
              "indexOfGroupConfiguration",
              "removeAllGroupConfiguration"
            ]
          }
        ],
        "associations": [
          {
            "name": "smartVariant",
            "singularName": "smartVariant",
            "type": "sap.ui.comp.smartvariants.SmartVariantManagement",
            "cardinality": "0..1",
            "visibility": "public",
            "since": "1.38",
            "description": "Identifies the SmartVariant control which should be used for the personalization.",
            "methods": ["getSmartVariant", "setSmartVariant"]
          }
        ],
        "events": [
          {
            "name": "pendingChange",
            "visibility": "public",
            "since": "1.36",
            "description": "This event is fired after the pending state of the <code>FilterBar</code> control changes.",
            "methods": [
              "attachPendingChange",
              "detachPendingChange",
              "firePendingChange"
            ]
          }
        ],
        "annotations": [
          {
            "name": "filterRestrictions",
            "namespace": "Org.OData.Capabilities.V1",
            "target": ["EntitySet"],
            "annotation": "FilterRestrictions",
            "defaultValue": "true",
            "appliesTo": ["filterItem/#/value"],
            "since": "1.28.1",
            "description": "NonFilterableProperties defines whether a <code>Property</code> can be used for filtering data. All properties are filterable by default. In order to disable filtering capability, these properties must be excluded.\n\n<i>Example using OData V4 annotations on the entity set to excluded Customer and CompanyCode Properties</i>\n\n<pre>\n   &lt;Annotation Term=&quot;Org.OData.Capabilities.V1.FilterRestrictions&quot;&gt;\n     &lt;PropertyValue Property=&quot;NonFilterableProperties&quot;&gt;\n       &lt;Collection&gt;\n         &lt;PropertyPath&gt;Customer&lt;/PropertyPath&gt;\n         &lt;PropertyPath&gt;CompanyCode&lt;/PropertyPath&gt;\n       &lt;/Collection&gt;\n     &lt;/PropertyValue&gt;\n   &lt;/Annotation&gt;\n</pre>\n\nFor OData v2 the <code>sap:filterable</code> annotation on the <code>Property</code> can be used to exclude properties from filtering.\n\n<pre>\n   &lt;Property Name=&quot;Customer&quot; ... sap:filterable=&quot;false&quot;/&gt;\n   &lt;Property Name=&quot;CompanyCode&quot; ... sap:filterable=&quot;false&quot;/&gt;\n</pre>\n\nRequiredProperties defines mandatory filter fields. Filter fields with this annotation must be a part of the <code>$filter</code> request sent to the back-end. <b>Note:</b> Support for V4 annotation is added since SAPUI5 version 1.40. <i>XML Example of OData V4 with mandatory filters CompanyCode and Customer</i>\n\n<pre>\n   &lt;Annotation Term=&quot;Org.OData.Capabilities.V1.FilterRestrictions&quot;&gt;\n     &lt;Record&gt;\n         &lt;PropertyValue Property=&quot;RequiresFilter&quot; Bool=&quot;true&quot;/&gt;\n         &lt;PropertyValue Property=&quot;RequiredProperties&quot;&gt;\n          &lt;Collection&gt;\n          \t&lt;PropertyPath&gt;Customer&lt;/PropertyPath&gt;\n             &lt;PropertyPath&gt;CompanyCode&lt;/PropertyPath&gt;\n          &lt;/Collection&gt;\n       &lt;/PropertyValue&gt;\n     &lt;/Record&gt;\n   &lt;/Annotation&gt;\n</pre>\n\nFor OData v2 the <code>sap:required-in-filter</code> annotation on the <code>Property</code> can be used for setting the filter as a mandatory filter field.\n\n<pre>\n   &lt;Property Name=&quot;Customer&quot; ... sap:required-in-filter=&quot;true&quot;/&gt;\n   &lt;Property Name=&quot;CompanyCode&quot; ... sap:required-in-filter=&quot;true&quot;/&gt;\n</pre>"
          },
          {
            "name": "fieldGroup",
            "namespace": "com.sap.vocabularies.UI.v1",
            "target": ["EntityType"],
            "annotation": "FieldGroup",
            "defaultValue": "null",
            "appliesTo": ["filterGroupItem"],
            "since": "1.28.1",
            "description": "Defines a group with filter fields. The filter fields are listed as {@link sap.ui.comp.smartfilterbar.SmartFilterBar#DataField DataField} records that reference other properties within the same EntityType.\n\n<i>Example in OData V4 notation with properties <code>CompanyName</code> and <code>CompanyIndustry</code></i>\n\n<pre>\n   &lt;Annotation Term=&quot;com.sap.vocabularies.UI.v1.FieldGroup&quot; Qualifier=&quot;FieldGroup1&quot;&gt;\n     &lt;Record&gt;\n       &lt;PropertyValue Property=&quot;Label&quot; String=&quot;Custom Field Group 1&quot; /&gt;\n       &lt;PropertyValue Property=&quot;Data&quot;&gt;\n         &lt;Collection&gt;\n\t\t\t\t&lt;Record Type=&quot;com.sap.vocabularies.UI.v1.DataField&quot;&gt;\n\t\t\t\t\t&lt;PropertyValue Property=&quot;Value&quot; Path=&quot;CompanyName&quot; /&gt;\n\t\t\t\t\t&lt;PropertyValue Property=&quot;Label&quot; String=&quot;Customer Name&quot; /&gt;\n\t\t\t\t&lt;/Record&gt;\n\t\t\t\t&lt;Record Type=&quot;com.sap.vocabularies.UI.v1.DataField&quot; &gt;\n\t\t\t\t\t&lt;PropertyValue Property=&quot;Value&quot; Path=&quot;CompanyIndustry&quot; /&gt;\n\t\t\t\t\t&lt;PropertyValue Property=&quot;Label&quot; String=&quot;Industry&quot; /&gt;\n\t\t\t\t&lt;/Record&gt;\n           &lt;PropertyPath&gt;CompanyName&lt;/PropertyPath&gt;\n           &lt;PropertyPath&gt;CompanyCode&lt;/PropertyPath&gt;\n         &lt;/Collection&gt;\n       &lt;/PropertyValue&gt;\n     &lt;/Record&gt;\n   &lt;/Annotation&gt;\n</pre>"
          },
          {
            "name": "filterFacet",
            "namespace": "com.sap.vocabularies.UI.v1",
            "target": ["EntityType"],
            "annotation": "FilterFacets",
            "defaultValue": "null",
            "appliesTo": ["filterGroupItem"],
            "since": "1.48",
            "description": "Defines the relevant field groups by referencing them as <code>ReferenceFacet</code>. If a filter facet has been defined, only the referenced field groups are displayed in the <i>Adapt Filters</i> dialog, the other filters are omitted. <br> If you don't define any filter facets all field groups are displayed.\n\n<i>Example in OData V4 notation with two relevant field groups with qualifiers <code>FieldGroup1</code> and <code>FieldGroup2</code> (see also annotation {@link sap.ui.comp.smartfilterbar.SmartFilterBar#FieldGroup FieldGroup} for reference)</i>\n\n<pre>\n   &lt;Annotation Term=&quot;com.sap.vocabularies.UI.v1.FilterFacets&quot; &gt;\n     &lt;Collection&gt;\n       &lt;Record Type=&quot;com.sap.vocabularies.UI.v1.ReferenceFacet&quot; &gt;\n         &lt;PropertyValue Property=&quot;Target&quot; AnnotationPath=&quot;com.sap.vocabularies.UI.v1.FieldGroup#FieldGroup1&quot; /&gt;\n         &lt;PropertyValue Property=&quot;Label&quot; String=&quot;Field Group 1&quot; /&gt;\n     &lt;/Record&gt;\n       &lt;Record Type=&quot;com.sap.vocabularies.UI.v1.ReferenceFacet&quot; &gt;\n         &lt;PropertyValue Property=&quot;Target&quot; AnnotationPath=&quot;com.sap.vocabularies.UI.v1.FieldGroup#FieldGroup2&quot; /&gt;\n         &lt;PropertyValue Property=&quot;Label&quot; String=&quot;Field Group 2&quot; /&gt;\n     &lt;/Record&gt;\n     &lt;/Collection&gt;\n   &lt;/Annotation&gt;\n</pre>"
          },
          {
            "name": "text",
            "namespace": "com.sap.vocabularies.Common.v1",
            "target": ["Property"],
            "annotation": "Text",
            "defaultValue": "null",
            "appliesTo": ["text"],
            "since": "1.32.1",
            "description": "A descriptive text for values of the annotated property.\n\n<b>Note:</b> The value must be a dynamic expression when used as metadata annotation.\n\n<i>XML Example of OData V4 Text on CustomerName Property</i>\n\n<pre>\n&lt;Annotation Term=&quot;com.sap.vocabularies.Common.v1.Text&quot; Path=&quot;CustomerName&quot; /&gt;\n</pre>\n\nFor OData v2 the <code>sap:text</code> annotation on the <code>Property</code> can be used to assign a text/description.\n\n<pre>\n   &lt;Property Name=&quot;Customer&quot; type=&quot;Edm.String&quot; sap:text=&quot;CustomerName&quot;/&gt;\n   &lt;Property Name=&quot;CustomerName&quot; type=&quot;Edm.String&quot;/&gt;\n</pre>"
          },
          {
            "name": "textArrangement",
            "namespace": "com.sap.vocabularies.UI.v1",
            "target": ["EntityType", "com.sap.vocabularies.Common.v1.Text"],
            "annotation": "TextArrangement",
            "defaultValue": "null",
            "appliesTo": ["text"],
            "since": "1.32.1",
            "description": "Describes the arrangement of an ID value and its description.\n\nThe following enumeration members are allowed:\n\n<ul> <li><code>com.sap.vocabularies.UI.v1.TextArrangementType/TextSeparate</code>: The control displays the specified ID only.</li>\n\n<li><code>com.sap.vocabularies.UI.v1.TextArrangementType/TextFirst</code>: The control displays the specified description followed by its ID.</li>\n\n<li><code>com.sap.vocabularies.UI.v1.TextArrangementType/TextLast</code>: The control displays the specified ID followed by its description.</li>\n\n<li><code>com.sap.vocabularies.UI.v1.TextArrangementType/TextOnly</code>: The control displays the specified description only.</li> </ul>\n\nThe <code>TextArrangement</code> annotation is usually used as a child of a <code>com.sap.vocabularies.Common.v1.Text</code> annotation.\n\n<i>XML Example of OData V4 with <code>TextArrangement</code> annotation on an entity's property</i>\n\n<pre>\n&lt;Annotations xmlns=&quot;http://docs.oasis-open.org/odata/ns/edm&quot; Target=&quot;namespace.Product/Category&quot;&gt;\n\t&lt;Annotation Term=&quot;com.sap.vocabularies.Common.v1.Text&quot; Path=&quot;CategoryName&quot;&gt;\n\t\t&lt;Annotation Term=&quot;com.sap.vocabularies.UI.v1.TextArrangement&quot; EnumMember=&quot;com.sap.vocabularies.UI.v1.TextArrangementType/TextLast&quot; /&gt;\n\t&lt;/Annotation&gt;\n&lt;/Annotations&gt;\n</pre>\n\n<i>XML Example of OData V4 with <code>TextArrangement</code> annotation on entity <code>Product</code></i>\n\n<pre>\n   &lt;Annotations Target=&quot;Namespace.ProductType&quot;&gt;\n     &lt;Annotation Term=&quot;com.sap.vocabularies.UI.v1.TextArrangement&quot; EnumMember=&quot;com.sap.vocabularies.UI.v1.TextArrangementType/TextFirst&quot;/&gt;\n   &lt;/Annotations&gt;\n</pre>"
          },
          {
            "name": "valueList",
            "namespace": "com.sap.vocabularies.Common.v1",
            "target": ["Property", "Parameter"],
            "annotation": "ValueList",
            "defaultValue": "null",
            "appliesTo": ["field/#/fieldHelp"],
            "since": "1.28.1",
            "description": "Specifies the structure for the list of possible values. This annotation is rendered as the value help dialog and suggestion list, displayed upon typing. For the suggestion list feature, the annotation without qualifier is used.\n\n<b>Note</b>: This annotation is only supported for Entity Data Model (EDM) properties typed as:\n\n<ul> <li><code>Edm.String</code></li> </ul>\n\nEach parameter on the <code>ValueList</code> annotation has a maximum of two properties: <ul> <li>LocalDataProperty - Path to the property of the local entity that triggered the <code>ValueList</code>.</li> <li>ValueListProperty - Path to the property of the <code>ValueList</code> entity.</li> </ul>\n\n<b>Note</b>: The <code>CollectionPath</code> property does not support paths with navigation properties.\n\n<b>Note</b>: The <code>CollectionRoot</code> property is not supported.\n\n<i>Example in OData V4 notation with property \"Category\" with a <code>ValueList</code></i>\n\n<pre>\n   &lt;Annotation Term=&quot;com.sap.vocabularies.Common.v1.ValueList&quot;&gt;\n     &lt;Record&gt;\n       &lt;PropertyValue Property=&quot;Label&quot; String=&quot;Category&quot; /&gt;\n       &lt;PropertyValue Property=&quot;CollectionPath&quot; String=&quot;Category&quot; /&gt;\n       &lt;PropertyValue Property=&quot;SearchSupported&quot; Bool=&quot;true&quot; /&gt;\n       &lt;PropertyValue Property=&quot;Parameters&quot;&gt;\n       &lt;Collection&gt;\n         &lt;Record Type=&quot;com.sap.vocabularies.Common.v1.ValueListParameterOut&quot;&gt;\n           &lt;PropertyValue Property=&quot;LocalDataProperty&quot; PropertyPath=&quot;Category&quot; /&gt;\n           &lt;PropertyValue Property=&quot;ValueListProperty&quot; String=&quot;Description&quot; /&gt;\n         &lt;/Record&gt;\n         &lt;Record Type=&quot;com.sap.vocabularies.Common.v1.ValueListParameterDisplayOnly&quot;&gt;\n           &lt;PropertyValue Property=&quot;ValueListProperty&quot; String=&quot;CategoryName&quot; /&gt;\n         &lt;/Record&gt;\n       &lt;/Collection&gt;\n     &lt;/Record&gt;\n   &lt;/Annotation&gt;\n</pre>"
          },
          {
            "name": "valueListWithFixedValues",
            "namespace": "com.sap.vocabularies.Common.v1",
            "target": ["Property", "Parameter"],
            "annotation": "ValueListWithFixedValues",
            "defaultValue": "null",
            "appliesTo": ["field/#/fieldHelp"],
            "since": "1.48.1",
            "description": "If specified as <code>true</code>, there's only one value list mapping and its value list consists of a small number of fixed values. The value list will be rendered as pick list containing all possible values.\n\n<i>Example in OData V4 notation Value List on Category Property</i>\n\n<pre>\n    &lt;Annotation Term=&quot;com.sap.vocabularies.Common.v1.ValueListWithFixedValues&quot; Bool=&quot;true&quot;/&gt;\n</pre>"
          },
          {
            "name": "filterLabelOnProperty",
            "namespace": "com.sap.vocabularies.Common.v1",
            "target": ["Property", "PropertyPath"],
            "annotation": "Label",
            "defaultValue": "null",
            "appliesTo": ["filterItem/label"],
            "since": "1.28.1",
            "description": "A short, human-readable text suitable for the filter's name. The <code>com.sap.vocabularies.Common.v1.Label</code> annotation is defined on the <code>Property</code>. If the <code>com.sap.vocabularies.Common.v1.Label</code> annotation is given, it has precedence. If none of the annotations are given, then the label will be the Property name.\n\n<i>Example in OData V4 notation where property \"CustomerName\" contains the label assigned to property \"CustomerId\"</i>\n\n<pre>\n    &lt;Annotations Target=&quot;CustomerId&quot;&gt;\n        &lt;Annotation Term=&quot;com.sap.vocabularies.Common.v1.Label&quot; Path=&quot;Customer&quot; String=&quot;Customer Name&quot;/&gt;\n    &lt;/Annotations&gt;\n</pre>\n\nFor OData v2 the <code>sap:label</code> annotation on the <code>Property</code> can be used to define the label of the column.\n\n<pre>\n   &lt;Property Name=&quot;Customer&quot; ... sap:label=&quot;Customer Name&quot;/&gt;\n</pre>"
          },
          {
            "name": "filterLabelOnLineItem",
            "namespace": "com.sap.vocabularies.UI.v1",
            "target": ["Property", "Parameter"],
            "annotation": "DataField",
            "defaultValue": "undefined",
            "appliesTo": ["filterItem/label"],
            "since": "1.28.1",
            "description": "A short, human-readable text suitable for the filter's name. The <code>Label</code> annotation of <code>com.sap.vocabularies.UI.v1.DataField</code> is defined within <code>com.sap.vocabularies.UI.v1.LineItem</code> annotation. If the <code>com.sap.vocabularies.Common.v1.Label</code> annotation is given, it has precedence. If none of the annotations are given, then the label will be the Property name of the column.\n\n<i>Example in OData V4 notation where property \"CustomerName\" contains the label assigned to \"Customer\"</i> <pre>\n    &lt;Record Type=&quot;com.sap.vocabularies.UI.v1.DataField&quot;&gt;\n        &lt;PropertyValue Property=&quot;Value&quot; Path=&quot;Customer&quot; /&gt;\n        &lt;PropertyValue Property=&quot;Label&quot; Path=&quot;CustomerName&quot; /&gt;\n    &lt;/Record&gt;\n</pre>"
          },
          {
            "name": "filterExpression",
            "namespace": "com.sap.vocabularies.Common.v1",
            "target": ["EntitySet"],
            "annotation": "FilterExpressionType",
            "defaultValue": "null",
            "appliesTo": ["filterItem/#/input"],
            "since": "1.28.1",
            "description": "<b>Note:</b> The annotation com.sap.vocabularies.Common.v1.FilterExpressionRestrictions has been deprecated and replaced by Org.OData.Capabilities.V1.FilterRestrictions - FilterExpressionRestrictions.\n\nEnum member MultiValue defines whether multiple values can be used in a single filter. With multi-value filtering, more that one \"equals\" condition can be defined for filtering the data. <i>Example in OData V4 notation with multi-value properties \"Customer\" and \"CompanyCode\"</i>\n\n<pre>\n   &lt;Annotation Term=&quot;com.sap.vocabularies.Common.v1.FilterExpressionRestrictions&quot; &gt;\n      &lt;Collection&gt;\n         &lt;Record&gt;\n            &lt;PropertyValue Property=&quot;Property&quot; PropertyPath=&quot;Customer&quot; /&gt;\n            &lt;PropertyValue Property=&quot;AllowedExpressions&quot; EnumMember=&quot;com.sap.vocabularies.Common.v1.FilterExpressionType/MultiValue&quot; /&gt;\n         &lt;/Record&gt;\n         &lt;Record&gt;\n            &lt;PropertyValue Property=&quot;Property&quot; PropertyPath=&quot;CompanyCode&quot; /&gt;\n            &lt;PropertyValue Property=&quot;AllowedExpressions&quot;\n            EnumMember=&quot;com.sap.vocabularies.Common.v1.FilterExpressionType/MultiValue&quot; /&gt;\n         &lt;/Record&gt;\n      &lt;/Collection&gt;\n   &lt;/Annotation&gt;\n</pre>\n\nFor OData v2 the <code>sap:filter-restriction=\"multi-value\"</code> annotation on the <code>Property</code> can be used for rendering multi-value filter field.\n\n<pre>\n   &lt;Property Name=&quot;Customer&quot; ... sap:filter-restriction=&quot;multi-value&quot;/&gt;\n   &lt;Property Name=&quot;CompanyCode&quot; ... sap:filter-restriction=&quot;multi-value&quot;/&gt;\n</pre>\n\nEnum member SingleValue restricts the filter to only <b>one</b> single value entry. With single-value filtering, you cannot define more than one \"equals\" condition for filtering the data. <b>Note:</b> Support for V4 annotation is added since SAPUI5 version 1.40. <i>Example in OData V4 notation with single-value properties \"Customer\" and \"CompanyCode\"</i>\n\n<pre>\n   &lt;Annotation Term=&quot;com.sap.vocabularies.Common.v1.FilterExpressionRestrictions&quot; &gt;\n      &lt;Collection&gt;\n         &lt;Record&gt;\n            &lt;PropertyValue Property=&quot;Property&quot; PropertyPath=&quot;Customer&quot; /&gt;\n            &lt;PropertyValue Property=&quot;AllowedExpressions&quot; EnumMember=&quot;com.sap.vocabularies.Common.v1.FilterExpressionType/SingleValue&quot; /&gt;\n         &lt;/Record&gt;\n         &lt;Record&gt;\n            &lt;PropertyValue Property=&quot;Property&quot; PropertyPath=&quot;CompanyCode&quot; /&gt;\n            &lt;PropertyValue Property=&quot;AllowedExpressions&quot; EnumMember=&quot;com.sap.vocabularies.Common.v1.FilterExpressionType/SingleValue&quot; /&gt;\n         &lt;/Record&gt;\n      &lt;/Collection&gt;\n   &lt;/Annotation&gt;\n</pre>\n\nFor OData v2 the <code>sap:filter-restriction=\"single-value\"</code> annotation on the <code>Property</code> can be used for rendering a single-value filter field.\n\n<pre>\n   &lt;Property Name=&quot;Customer&quot; ... sap:filter-restriction=&quot;single-value&quot;/&gt;\n   &lt;Property Name=&quot;CompanyCode&quot; ... sap:filter-restriction=&quot;single-value&quot;/&gt;\n</pre>\n\nEnum member SingleInterval restricts the filter to specify an interval, for example, a date interval for filtering the data present between the given dates. <i>Example in OData V4 notation with Interval Restriction on \"DocumentDate\" property</i>\n\n<pre>\n   &lt;Annotation Term=&quot;com.sap.vocabularies.Common.v1.FilterExpressionRestrictions&quot; &gt;\n     &lt;Collection&gt;\n        &lt;Record&gt;\n           &lt;PropertyValue Property=&quot;Property&quot; PropertyPath=&quot;DocumentDate&quot; /&gt;\n           &lt;PropertyValue Property=&quot;AllowedExpressions&quot; EnumMember=&quot;com.sap.vocabularies.Common.v1.FilterExpressionType/SingleInterval&quot; /&gt;\n        &lt;/Record&gt;\n     &lt;/Collection&gt;\n   &lt;/Annotation&gt;\n</pre>\n\nFor OData v2 the <code>sap:filter-restriction=\"interval\"</code> annotation on the <code>Property</code> can be used for rendering an interval filter field.\n\n<pre>\n   &lt;Property Name=&quot;DocumentDate&quot; ... sap:filter-restriction=&quot;interval&quot;/&gt;\n</pre>"
          },
          {
            "name": "FilterRestrictions",
            "namespace": "Org.OData.Capabilities.V1",
            "target": ["EntitySet"],
            "annotation": "FilterRestrictions",
            "defaultValue": "null",
            "appliesTo": ["filterItem/#/input"],
            "since": "1.64",
            "description": "The filter expression restriction \"MultiValue\" defines whether multiple filter clauses can be defined in a filter statement. When the expression \"MultiValue\" is present, multiple filter clauses that use the \"equals\" operator can be defined by a user.\n\n<i>XML Example of OData V4 with expression \"MutliValue\" for properties \"Customer\" and \"CompanyCode\"</i> <pre>\n   &lt;Annotation Term=&quot;Org.OData.Capabilities.V1.FilterRestrictions&quot; &gt;\n   \t&lt;Record&gt;\n   \t\t&lt;PropertyValue Property=&quot;FilterExpressionRestrictions&quot; &gt;\n      \t\t&lt;Collection&gt;\n         \t\t&lt;Record&gt;\n           \t\t\t&lt;PropertyValue Property=&quot;Property&quot; PropertyPath=&quot;Customer&quot; /&gt;\n           \t\t\t&lt;PropertyValue Property=&quot;AllowedExpressions&quot; String=&quot;MultiValue&quot; /&gt;\n        \t\t \t&lt;/Record&gt;\n         \t\t&lt;Record&gt;\n            \t\t\t&lt;PropertyValue Property=&quot;Property&quot; PropertyPath=&quot;CompanyCode&quot; /&gt;\n           \t\t\t&lt;PropertyValue Property=&quot;AllowedExpressions&quot; String=&quot;MultiValue&quot; /&gt;\n         \t\t&lt;/Record&gt;\n      \t\t&lt;/Collection&gt;\n      \t&lt;/PropertyValue&gt;\n      &lt;/Record&gt;\n   &lt;/Annotation&gt;\n</pre>\n\nFor OData v2 the <code>sap:filter-restriction=\"multi-value\"</code> annotation on the <code>property</code> can be used for rendering a multi-value filter field.\n\n<pre>\n   &lt;Property Name=&quot;Customer&quot; ... sap:filter-restriction=&quot;multi-value&quot;/&gt;\n   &lt;Property Name=&quot;CompanyCode&quot; ... sap:filter-restriction=&quot;multi-value&quot;/&gt;\n</pre>\n\nThe filter expression restriction \"SingleValue\" restricts the number of filter clauses for the given property to only one in the filter statement. When the expression \"SingleValue\" is present, a user cannot define more than one \"equals\" condition for filtering the data.\n\n<i>XML Example of OData V4 with expression \"SingleValue\" for properties \"Customer\" and \"CompanyCode\"</i> <pre>\n   &lt;Annotation Term=&quot;Org.OData.Capabilities.V1.FilterRestrictions&quot; &gt;\n   \t&lt;Record&gt;\n   \t\t&lt;PropertyValue Property=&quot;FilterExpressionRestrictions&quot; &gt;\n      \t\t&lt;Collection&gt;\n         \t\t&lt;Record&gt;\n           \t\t\t&lt;PropertyValue Property=&quot;Property&quot; PropertyPath=&quot;Customer&quot; /&gt;\n           \t\t\t&lt;PropertyValue Property=&quot;AllowedExpressions&quot; String=&quot;SingleValue&quot; /&gt;\n        \t\t \t&lt;/Record&gt;\n         \t\t&lt;Record&gt;\n            \t\t\t&lt;PropertyValue Property=&quot;Property&quot; PropertyPath=&quot;CompanyCode&quot; /&gt;\n           \t\t\t&lt;PropertyValue Property=&quot;AllowedExpressions&quot; String=&quot;SingleValue&quot; /&gt;\n         \t\t&lt;/Record&gt;\n      \t\t&lt;/Collection&gt;\n      \t&lt;/PropertyValue&gt;\n      &lt;/Record&gt;\n   &lt;/Annotation&gt;\n</pre>\n\nFor OData v2 the <code>sap:filter-restriction=\"single-value\"</code> annotation on the <code>Property</code> can be used for rendering a single-value filter field.\n\n<pre>\n   &lt;Property Name=&quot;Customer&quot; ... sap:filter-restriction=&quot;single-value&quot;/&gt;\n   &lt;Property Name=&quot;CompanyCode&quot; ... sap:filter-restriction=&quot;single-value&quot;/&gt;\n</pre>\n\n<b>Note:</b> When the restriction \"SingleVale\" / \"single-value\" is used, the \"Is Empty\" operator cannot be used.\n\nThe filter expression restriction\" SingleRange\" restricts the filter to specify an interval, for example, a date interval for filtering the data present between the given dates. <i>XML Example of OData V4 with expression \"SingleRange\" for property \"DocumentDate\"</i>\n\n<pre>\n   &lt;Annotation Term=&quot;Org.OData.Capabilities.V1.FilterRestrictions&quot; &gt;\n   \t&lt;Record&gt;\n   \t\t&lt;PropertyValue Property=&quot;FilterExpressionRestrictions&quot; &gt;\n      \t\t&lt;Collection&gt;\n         \t\t&lt;Record&gt;\n           \t\t\t&lt;PropertyValue Property=&quot;Property&quot; PropertyPath=&quot;DocumentDate&quot; /&gt;\n           \t\t\t&lt;PropertyValue Property=&quot;AllowedExpressions&quot; String=&quot;SingleRange&quot; /&gt;\n        \t\t \t&lt;/Record&gt;\n      \t\t&lt;/Collection&gt;\n      \t&lt;/PropertyValue&gt;\n      &lt;/Record&gt;\n   &lt;/Annotation&gt;\n</pre>\n\nFor OData v2 the <code>sap:filter-restriction=\"interval\"</code> annotation on the <code>Property</code> can be used for rendering an interval/range filter field.\n\n<pre>\n   &lt;Property Name=&quot;DocumentDate&quot; ... sap:filter-restriction=&quot;interval&quot;/&gt;\n</pre>"
          },
          {
            "name": "selectionFields",
            "namespace": "com.sap.vocabularies.UI.v1",
            "target": ["EntityType"],
            "annotation": "SelectionFields",
            "defaultValue": "null",
            "appliesTo": ["filterItem/#/value"],
            "since": "1.40.1",
            "description": "Defines whether certain fields should be initially visible in the <code>SmartFilterBar</code> control. The fields will be rendered in the order that is specified in this annotation. <b>Note:</b> This annotation is supported since SAPUI5 version 1.40.\n\n<i>Example in OData V4 notation with SelectionFields annotation.</i>\n\n<pre>\n  &lt;Annotations Target=&quot;Product&quot;&gt;\n    &lt;Annotation Term=&quot;com.sap.vocabularies.UI.v1.SelectionFields&quot;&gt;\n      &lt;Collection&gt;\n        &lt;PropertyPath&gt;ProductCategory&lt;/PropertyPath&gt;\n        &lt;PropertyPath&gt;Supplier&lt;/PropertyPath&gt;\n        &lt;PropertyPath&gt;Product&lt;/PropertyPath&gt;\n      &lt;/Collection&gt;\n    &lt;/Annotation&gt;\n  &lt;/Annotations&gt;\n</pre>"
          },
          {
            "name": "filterVisible",
            "namespace": "com.sap.vocabularies.Common.v1",
            "target": ["Property"],
            "annotation": "FieldControlType",
            "defaultValue": "false",
            "appliesTo": ["property/#/visible"],
            "since": "1.32.1",
            "description": "Defines whether a filter is visible. The <code>SmartFilterBar</code> control interprets the <code>EnumMembers</code> <code>FieldControlType/Inapplicable</code> and <code>FieldControlType/Hidden</code> (deprecated) of the <code>FieldControl</code> annotation to set the visibility. <b>Note:</b>The <code>FieldControlType/Inapplicable</code> annotation is only supported if you want to statically hide the filter fields.\n\n<i>Example in OData V4 notation with hidden properties \"Customer\" and \"CompanyCode\"</i>\n\n<pre>\n    &lt;Annotations Target=&quot;.../Customer&quot;&gt;\n        &lt;Annotation Term=&quot;com.sap.vocabularies.Common.v1.FieldControl&quot; EnumMember=&quot;com.sap.vocabularies.Common.v1.FieldControlType/Hidden&quot;/&gt;\n    &lt;/Annotations&gt;\n    &lt;Annotations Target=&quot;.../CompanyCode&quot;&gt;\n        &lt;Annotation Term=&quot;com.sap.vocabularies.Common.v1.FieldControl&quot; EnumMember=&quot;com.sap.vocabularies.Common.v1.FieldControlType/Inapplicable&quot;/&gt;\n    &lt;/Annotations&gt;\n</pre>\n\nFor OData v2 the <code>sap:visible</code> annotation on the <code>Property</code> can be used to assign visibility.\n\n<pre>\n   &lt;Property Name=&quot;Customer&quot; ... sap:visible=&quot;false&quot;/&gt;\n   &lt;Property Name=&quot;CompanyCode&quot; ... sap:visible=&quot;false&quot;/&gt;\n</pre>"
          },
          {
            "name": "hiddenFilter",
            "namespace": "com.sap.vocabularies.UI.v1",
            "target": ["Property"],
            "annotation": "HiddenFilter",
            "defaultValue": "undefined",
            "appliesTo": ["filterItem/hiddenFilter"],
            "since": "1.44.0",
            "description": "Defines that certain fields are not rendered in the <code>SmartFilterBar</code> control, but still used as filters that can be set by the application code. <b>Note:</b>While properties annotated with <code>HiddenFilter</code> are considered during filtering, properties annotated with <code>Hidden</code> are ignored completely. If both annotations exist, <code>Hidden</code> is taken into consideration.\n\n<i>Example in OData V4 notation with invisible, filterable property \"LocationName\"</i> <pre>\n    &lt;Annotations Target=&quot;LocationName&quot; &gt;\n        &lt;Annotation Term=&quot;com.sap.vocabularies.UI.v1.HiddenFilter&quot;/&gt;\n    &lt;/Annotations&gt;\n</pre>"
          },
          {
            "name": "hidden",
            "namespace": "com.sap.vocabularies.UI.v1",
            "target": ["Property"],
            "annotation": "Hidden",
            "defaultValue": "undefined",
            "appliesTo": ["filterItem/hidden", "property/visible"],
            "since": "1.54",
            "description": "Defines that certain properties are not rendered in an application and also not used in the <code>SmartFilterBar</code> control. In contrast to <code>HiddenFilter</code>, a property annotated with <code>Hidden</code> is not used as a filter. <b>Note:</b>The annotations <code>com.sap.vocabularies.Common.v1.FieldControlType/Inapplicable</code> and <code>Hidden</code> are interchangeable.\n\n<i>Example in OData V4 notation with hidden ProductPictureURL</i>\n\n<pre>\n    &lt;Annotations Target=&quot;ProductPictureURL&quot; &gt;\n        &lt;Annotation Term=&quot;com.sap.vocabularies.UI.v1.Hidden&quot;/&gt;\n    &lt;/Annotations&gt;\n</pre>"
          },
          {
            "name": "selectionBVariant",
            "namespace": "com.sap.vocabularies.UI.v1",
            "target": ["EntityType"],
            "annotation": "SelectionVariant",
            "defaultValue": "undefined",
            "appliesTo": ["SmartVariantManagement"],
            "since": "1.48.0",
            "description": "Defines variant items, based on SelectionVariant annotation. SelectionVariants with a qualifier will be added as variants to the <code>VariantManagement</code> control. A SelectionVariant annotation <bold>without</bold> a qualifier will define the Standard variant, in case no vendor Standard variant exists. All mentioned filters will be treated as at least <code>partOfCurrentVariant</code>.\n\n<pre>\n    &lt;Annotations Target=&quot;Namespace.Product&quot;&gt;\n        &lt;Annotation Qualifier=&quot;Group&quot; Term=&quot;com.sap.vocabularies.UI.v1.SelectionVariant&quot;&gt;\n            &lt;Record&gt;\n                &lt;PropertyValue Text=&quot;SelectionVariant from Annotations&quot;/&gt;\n                &lt;PropertyValue Property=&quot;SelectOptions&quot;&gt;\n                    &lt;Collection&gt;\n        \t\t\t       &lt;Record Type=&quot;UI.SelectOptionType&quot;&gt;\n           \t\t\t       &lt;PropertyValue Property=&quot;PropertyName&quot; PropertyPath=&quot;Bukrs&quot;/&gt;\n                            &lt;PropertyValue Property=&quot;Ranges&quot; &gt;\n                     \t       &lt;Collection&gt;\n                         \t       &lt;Record Type=&quot;UI.SelectionRangeType&quot;&gt;\n           \t\t\t\t\t\t       &lt;PropertyValue Property=&quot;Sign&quot; EnumMember=&quot;UI.SelectionRangeSignType/I&quot;/&gt;\n           \t\t\t\t\t\t       &lt;PropertyValue Property=&quot;Option&quot; EnumMember=&quot;UI.SelectionRangeOptionType/EQ&quot;/&gt;\n           \t\t\t\t\t\t       &lt;PropertyValue Property=&quot;Low&quot; String=&quot;0001&quot;/&gt;\n                         \t       &lt;/Record&gt;\n                                &lt;/Collection&gt;\n                            &lt;/PropertyValue&gt;\n                        &lt;/Record&gt;\n                    &lt;/Collection&gt;\n                &lt;/PropertyValue&gt;\n            &lt;/Record&gt;\n        &lt;Annotation&gt;\n    &lt;/Annotations&gt;\n</pre>"
          },
          {
            "name": "FilterDefaultValue",
            "namespace": "com.sap.vocabularies.Common.v1",
            "target": ["Property"],
            "annotation": "FilterDefaultValue",
            "defaultValue": "undefined",
            "appliesTo": ["filterItem"],
            "since": "1.48.0",
            "description": "Defines a default value for the property to be used in filter expressions. A <code>FilterDefaultValue</code> is ignored when another source for filter initialization is available, like a <code>com.sap.vocabularies.UI.v1.SelectionVariant</code> or a variant saved with the {@link sap.ui.comp.smartvariants.SmartVariantManagement SmartVariantManagement} control.\n\n<b>Note</b>: Analytical parameters (see {@link sap.ui.comp.smartfilterbar.SmartFilterBar#setConsiderAnalyticalParameters considerAnalyticalParameters}) are technically no filters. To initialize these fields use the <code>DefaultValue</code> attribute of the repsective property in the service's OData metadata.\n\n<i>Example in OData V4 notation for a string-typed property \"ContactID\"</i>\n\n<pre>\n    &lt;Annotations Target=&quot;ContactID&quot; &gt;\n        &lt;Annotation Term=&quot;com.sap.vocabularies.Common.v1.FilterDefaultValue&quot; String=&quot;A0328&quot; /&gt;\n    &lt;/Annotations&gt;\n</pre>"
          }
        ],
        "designtime": "sap/ui/comp/designtime/smartfilterbar/SmartFilterBar.designtime"
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sID",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new smartfilterbar/SmartFilterBar.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.",
        "references": [
          "{@link topic:7bcdffc056a94731b4341db73251e32b Smart Filter Bar}"
        ]
      },
      "events": [
        {
          "name": "pendingChange",
          "visibility": "public",
          "since": "1.36",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "This event is fired after the pending state of the <code>FilterBar</code> control changes."
        }
      ],
      "methods": [
        {
          "name": "addControlConfiguration",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfilterbar.SmartFilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oControlConfiguration",
              "type": "sap.ui.comp.smartfilterbar.ControlConfiguration",
              "optional": false,
              "description": "The controlConfiguration to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some controlConfiguration to the aggregation {@link #getControlConfiguration controlConfiguration}."
        },
        {
          "name": "addFieldToAdvancedArea",
          "visibility": "public",
          "parameters": [
            {
              "name": "sKey",
              "type": "string",
              "optional": false,
              "description": "The key like specified in the OData metadata"
            }
          ],
          "description": "Searches for the filter field having the specified OData key and adds this filter field to the advanced area. If there is no corresponding field in the OData metadata, this method has no effect."
        },
        {
          "name": "addGroupConfiguration",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfilterbar.SmartFilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oGroupConfiguration",
              "type": "sap.ui.comp.smartfilterbar.GroupConfiguration",
              "optional": false,
              "description": "The groupConfiguration to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some groupConfiguration to the aggregation {@link #getGroupConfiguration groupConfiguration}."
        },
        {
          "name": "applyVariant",
          "visibility": "public",
          "ui5-metamodel": true,
          "parameters": [
            {
              "name": "oVariant",
              "type": "object",
              "optional": false,
              "description": "The variant that must be applied. oVariant must contain a valid JSON object."
            }
          ],
          "description": "Applies the current variant as opposed to <code>fetchVariant</code>. The variant is retrieved via the flex layer."
        },
        {
          "name": "attachPendingChange",
          "visibility": "public",
          "since": "1.36",
          "returnValue": {
            "type": "sap.ui.comp.smartfilterbar.SmartFilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartfilterbar.SmartFilterBar</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:pendingChange pendingChange} event of this <code>sap.ui.comp.smartfilterbar.SmartFilterBar</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartfilterbar.SmartFilterBar</code> itself.\n\nThis event is fired after the pending state of the <code>FilterBar</code> control changes."
        },
        {
          "name": "destroyControlConfiguration",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfilterbar.SmartFilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the controlConfiguration in the aggregation {@link #getControlConfiguration controlConfiguration}."
        },
        {
          "name": "destroyGroupConfiguration",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfilterbar.SmartFilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the groupConfiguration in the aggregation {@link #getGroupConfiguration groupConfiguration}."
        },
        {
          "name": "detachPendingChange",
          "visibility": "public",
          "since": "1.36",
          "returnValue": {
            "type": "sap.ui.comp.smartfilterbar.SmartFilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:pendingChange pendingChange} event of this <code>sap.ui.comp.smartfilterbar.SmartFilterBar</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "ensureLoadedValueHelp",
          "visibility": "public",
          "parameters": [
            {
              "name": "sFieldName",
              "type": "string",
              "optional": false,
              "description": "is the name of the property from the entity type which is associated with a Value Help."
            }
          ],
          "description": "Ensures the associated ValueHelpProvider is loaded."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.comp.smartfilterbar.SmartFilterBar with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.comp.filterbar.FilterBar.extend}."
        },
        {
          "name": "fetchVariant",
          "visibility": "public",
          "ui5-metamodel": true,
          "returnValue": { "type": "object" },
          "description": "Retrieves the currently visible filters and the values for storing them as variants. The result will be passed on as a JSON object to the callee smart variant control."
        },
        {
          "name": "firePendingChange",
          "visibility": "protected",
          "since": "1.36",
          "returnValue": {
            "type": "sap.ui.comp.smartfilterbar.SmartFilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:pendingChange pendingChange} to attached listeners."
        },
        {
          "name": "getAnalyticBindingPath",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Binding path of the parameters"
          },
          "description": "Returns the binding paths for the parameters.",
          "experimental": {
            "since": "1.42.0",
            "text": "The API is NOT stable yet. Use at your own risk."
          }
        },
        {
          "name": "getBasicSearchControl",
          "visibility": "public",
          "returnValue": {
            "type": "object",
            "description": "Basic search control"
          },
          "description": "Returns an instance of the control for the basic search."
        },
        {
          "name": "getBasicSearchFieldName",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>basicSearchFieldName</code>"
          },
          "description": "Gets current value of property {@link #getBasicSearchFieldName basicSearchFieldName}.\n\nName of the field that is the focus of the basic search."
        },
        {
          "name": "getConsiderAnalyticalParameters",
          "visibility": "public",
          "since": "1.42.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>considerAnalyticalParameters</code>"
          },
          "description": "Gets current value of property {@link #getConsiderAnalyticalParameters considerAnalyticalParameters}.\n\nIndicates if the analytical parameters (SelectionVariant) must be taken into consideration.\n\nDefault value is <code>false</code>.",
          "experimental": {
            "since": "1.42.0",
            "text": "This property is NOT stable yet. Use at your own risk."
          }
        },
        {
          "name": "getConsiderSelectionVariants",
          "visibility": "public",
          "since": "1.48.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>considerSelectionVariants</code>"
          },
          "description": "Gets current value of property {@link #getConsiderSelectionVariants considerSelectionVariants}.\n\nIndicates if the annotation <code>com.sap.vocabularies.UI.v1.SelectionVariant</code> is taken into account.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getControlByKey",
          "visibility": "public",
          "returnValue": {
            "type": "object|sap.ui.core.Control",
            "description": "The control in the filter bar, if any"
          },
          "parameters": [
            {
              "name": "sKey",
              "type": "string",
              "optional": false,
              "description": "The key as present in the OData property name/control configuration"
            }
          ],
          "description": "Returns the control (if any) with the specified key (Property name in OData entity). Use just the property name as the key when getting a control from the basic area. Example: \"CompanyCode\" & Use \"EntityName/GroupName.FieldName\" format to get controls from groups. Example:\"Account.CompanyCode\""
        },
        {
          "name": "getControlConfiguration",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfilterbar.ControlConfiguration[]"
          },
          "description": "Gets content of aggregation {@link #getControlConfiguration controlConfiguration}.\n\nUsing control configurations you can add additional configuration to filter fields, for example set custom labels, change the order of fields, or change the filter field control type. <b>Note:</b> Changing the values here after the SmartFilter is initialized (<code>initialise</code> event was fired) has no effect."
        },
        {
          "name": "getDefaultSelectionVariantName",
          "visibility": "public",
          "since": "1.48.0",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>defaultSelectionVariantName</code>"
          },
          "description": "Gets current value of property {@link #getDefaultSelectionVariantName defaultSelectionVariantName}.\n\nDetermines one specific variant that is based on the <code>com.sap.vocabularies.UI.v1.SelectionVariant</code> annotation, which is then used as the default variant.<br> This property is only relevant in case <code>considerSelectionVariants</code> is set to <code>true</code> and will only be applied if there is no user-defined default variant specified."
        },
        {
          "name": "getEnableBasicSearch",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>enableBasicSearch</code>"
          },
          "description": "Gets current value of property {@link #getEnableBasicSearch enableBasicSearch}.\n\nEnables the basic search field. The entered value can be accessed with {@link sap.ui.comp.smartfilterbar.SmartFilterBar#getParameters}. <b>Note:</b> When the SmartFilterBar control is used with a {@link sap.ui.comp.smarttable.SmartTable} control the parameters are handled automatically. Therefore, this must only be enabled for OData service entities that support basic search.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getEntitySet",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>entitySet</code>"
          },
          "description": "Gets current value of property {@link #getEntitySet entitySet}.\n\nThe OData entity set whose metadata is used to create the SmartFilterBar. <b>Note:</b> Changing this value after the SmartFilterBar is initialized (<code>initialise</code> event was fired) has no effect."
        },
        {
          "name": "getEntityType",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>entityType</code>"
          },
          "description": "Gets current value of property {@link #getEntityType entityType}.\n\nThe OData entity type whose metadata is used to create the SmartFilterBar. <b>Note:</b> Changing this value after the SmartFilterBar is initialized (<code>initialise</code> event was fired) has no effect.",
          "deprecated": {
            "since": "1.40",
            "text": "Use <code>entitySet</code> property instead of this one, to enable V4 annotation support"
          }
        },
        {
          "name": "getFilterContextUrl",
          "visibility": "protected",
          "returnValue": {
            "type": "string",
            "description": "Filter context url."
          },
          "description": "Get the filter context url."
        },
        {
          "name": "getFilterData",
          "visibility": "public",
          "returnValue": {
            "type": "object",
            "description": "The JSON data in the filter bar"
          },
          "parameters": [
            {
              "name": "bAllFilterData",
              "type": "boolean",
              "optional": false,
              "description": "Also include empty/invisible fields filter data"
            }
          ],
          "description": "Returns the data currently set in the filter data model."
        },
        {
          "name": "getFilterDataAsString",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "The JSON data string"
          },
          "parameters": [
            {
              "name": "bAllFilterData",
              "type": "boolean",
              "optional": false,
              "description": "Also include empty/invisible fields filter data"
            }
          ],
          "description": "Returns the data currently set in the filter data model as string."
        },
        {
          "name": "getFilters",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.model.Filter[]",
            "description": "array of sap.ui.model.Filter or multi-filters"
          },
          "parameters": [
            {
              "name": "aFieldNames",
              "type": "string[]",
              "optional": true,
              "description": "optional array of field names that filters should be returned, if not given all visible filters are returned"
            }
          ],
          "description": "Returns an array of filters (sap.ui.model.Filter instances), for visible fields, that can be used to restrict the query result from OData.<br> The result of this method can directly be used during aggregation binding or OData read."
        },
        {
          "name": "getFiltersWithValues",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.filterbar.FilterGroupItem[]",
            "description": "Filter items containing a value"
          },
          "description": "Returns all filter items <ul> <li>Containing a value</li> <li>With the <code>visible</code> property set to <code>true</code></li> <li>That are either flagged as <code>partOfCurrentVariant</code> or <code>visibleInFilterBar</code></li> <li>That are not custom filters</li> </ul> Even hidden filters will be considered as long as the mentioned criteria is fullfilled."
        },
        {
          "name": "getGroupConfiguration",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfilterbar.GroupConfiguration[]"
          },
          "description": "Gets content of aggregation {@link #getGroupConfiguration groupConfiguration}.\n\nProvides the possibility to add additional configuration to groups. Groups are used to show fields in the advanced area of the SmartFilterBar. With additional configuration, you can for example set custom labels or change the order of groups. <b>Note:</b> Changing the values here after the SmartFilter is initialized (<code>initialise</code> event was fired) has no effect."
        },
        {
          "name": "getLiveMode",
          "visibility": "public",
          "since": "1.40",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>liveMode</code>"
          },
          "description": "Gets current value of property {@link #getLiveMode liveMode}.\n\nIf set the search will be automatically triggered, when a filter value was set via the <B>change</B> event.<br> <b>Note:</b> The liveMode only operates on non-mobile scenarios.<br> Additionally, if liveMode is set, the following applies: <ul> <li>The error messagebox is not displayed, and the <code>showMessages</code> property is ignored.</li> <li>The search is triggered after a variant has been selected.</li> <li>Execute on Select for <code>VariantManagement</code> is not shown and not taken into account</li> </ul>\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.comp.smartfilterbar.SmartFilterBar."
        },
        {
          "name": "getModelData",
          "visibility": "protected",
          "returnValue": { "type": "map", "description": "of the model data." },
          "description": "Get the model data."
        },
        {
          "name": "getNavigationProperties",
          "visibility": "public",
          "since": "1.48",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>navigationProperties</code>"
          },
          "description": "Gets current value of property {@link #getNavigationProperties navigationProperties}.\n\nThis property is only evaluated if the property {@link sap.ui.comp.smartfilterbar.SmartFilterBar#getUseProvidedNavigationProperties} is set to <code>true</code>. It contains a comma-separated list of navigation property names which are checked for filters.<br>\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "getParameterBindingPath",
          "visibility": "public",
          "since": "1.53.0",
          "returnValue": {
            "type": "string",
            "description": "Binding path of the parameters"
          },
          "description": "Returns the binding paths for the parameters. This API can be used for both analytical and non-analytical services. <b>Note</b>For analytical services, the API is NOT stable yet. Use at your own risk."
        },
        {
          "name": "getParameterContextUrl",
          "visibility": "protected",
          "returnValue": {
            "type": "string",
            "description": "Parameter context url."
          },
          "description": "Get the parameter context url."
        },
        {
          "name": "getParameters",
          "visibility": "public",
          "returnValue": {
            "type": "object",
            "description": "A parameter object containing OData query parameters"
          },
          "description": "Returns a parameter object that can be used to restrict the result of an OData service request if a basic search is performed. <caption>Example of a returned object:</caption>\n\n<pre>\n{\n\t&quot;custom&quot;: {\n\t\t&quot;search-focus&quot;: &quot;MySearchFocusFieldName&quot;,\n\t\t&quot;search&quot;: &quot;MySearchString&quot;\n\t}\n}\n</pre>\n\nThese parameters can be handed over as custom parameters, for example, to the {@link sap.ui.model.odata.v2.ODataListBinding}."
        },
        {
          "name": "getResourceUri",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>resourceUri</code>"
          },
          "description": "Gets current value of property {@link #getResourceUri resourceUri}.\n\nOptional. The OData service URL. If it is not specified, the service URL from the OData model (this.getModel()) will be used. <b>Note:</b> Changing this value after the SmartFilterBar is initialized (initialise event was fired) has no effect.",
          "deprecated": {
            "since": "1.29",
            "text": "Set an ODataModel as the main model on your control/view instead"
          }
        },
        {
          "name": "getShowMessages",
          "visibility": "public",
          "since": "1.40",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showMessages</code>"
          },
          "description": "Gets current value of property {@link #getShowMessages showMessages}.\n\nIf set to <code>false</code> eventual errors during the search, will not be displayed in a messagebox.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getSmartVariant",
          "visibility": "public",
          "since": "1.38",
          "returnValue": { "type": "sap.ui.core.ID" },
          "description": "ID of the element which is the current target of the association {@link #getSmartVariant smartVariant}, or <code>null</code>."
        },
        {
          "name": "getSuppressSelection",
          "visibility": "public",
          "since": "1.44.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>suppressSelection</code>"
          },
          "description": "Gets current value of property {@link #getSuppressSelection suppressSelection}.\n\nIf set to <code>true</code> all search requests will be ignored. This functionality is only intended to be used internally to enable an optimal solution when the filter bar is controlled by the smart templates. NOTE: As long as this property is set to <code>true</code>, all search requests will be neglected.\n\nDefault value is <code>false</code>.",
          "experimental": {
            "since": "1.44.0",
            "text": "This property is NOT stable yet. Use at your own risk."
          }
        },
        {
          "name": "getUseDateRangeType",
          "visibility": "public",
          "since": "1.46.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>useDateRangeType</code>"
          },
          "description": "Gets current value of property {@link #getUseDateRangeType useDateRangeType}.\n\nIf set to <code>true</code> all date fields with filter restriction <code>interval</code> will be treated as <code>DateTimeRange</code> filters. The <code>useDateRangeType</code> can be set only once during initialization. <b>Note:</b> If this property is set to <code>true</code> and any date filters with filter restriction <code>interval</code> were stored as part of a variant, the values of these filters cannot be applied. If this property is set to <code>false</code>, any previously stored filters which were treated as type <code>DateTimeRange</code> based on the former setting, cannot be converted back to the standard date interval."
        },
        {
          "name": "getUseProvidedNavigationProperties",
          "visibility": "public",
          "since": "1.48",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>useProvidedNavigationProperties</code>"
          },
          "description": "Gets current value of property {@link #getUseProvidedNavigationProperties useProvidedNavigationProperties}.\n\nIf set to <code>true</code>, only the navigation properties mentioned in property {@link sap.ui.comp.smartfilterbar.SmartFilterBarl#getNavigationProperties} are checked for further filters.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "indexOfControlConfiguration",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oControlConfiguration",
              "type": "sap.ui.comp.smartfilterbar.ControlConfiguration",
              "optional": false,
              "description": "The controlConfiguration whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.ui.comp.smartfilterbar.ControlConfiguration</code> in the aggregation {@link #getControlConfiguration controlConfiguration}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "indexOfGroupConfiguration",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oGroupConfiguration",
              "type": "sap.ui.comp.smartfilterbar.GroupConfiguration",
              "optional": false,
              "description": "The groupConfiguration whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.ui.comp.smartfilterbar.GroupConfiguration</code> in the aggregation {@link #getGroupConfiguration groupConfiguration}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "insertControlConfiguration",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfilterbar.SmartFilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oControlConfiguration",
              "type": "sap.ui.comp.smartfilterbar.ControlConfiguration",
              "optional": false,
              "description": "The controlConfiguration to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the controlConfiguration should be inserted at; for a negative value of <code>iIndex</code>, the controlConfiguration is inserted at position 0; for a value greater than the current size of the aggregation, the controlConfiguration is inserted at the last position"
            }
          ],
          "description": "Inserts a controlConfiguration into the aggregation {@link #getControlConfiguration controlConfiguration}."
        },
        {
          "name": "insertGroupConfiguration",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfilterbar.SmartFilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oGroupConfiguration",
              "type": "sap.ui.comp.smartfilterbar.GroupConfiguration",
              "optional": false,
              "description": "The groupConfiguration to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the groupConfiguration should be inserted at; for a negative value of <code>iIndex</code>, the groupConfiguration is inserted at position 0; for a value greater than the current size of the aggregation, the groupConfiguration is inserted at the last position"
            }
          ],
          "description": "Inserts a groupConfiguration into the aggregation {@link #getGroupConfiguration groupConfiguration}."
        },
        {
          "name": "isInitialised",
          "visibility": "protected",
          "returnValue": {
            "type": "boolean",
            "description": "returns whether control is already initialised"
          },
          "description": "Checks whether the control is initialised"
        },
        {
          "name": "isInUTCMode",
          "visibility": "protected",
          "returnValue": {
            "type": "boolean",
            "description": "returns whether the filter bar is running in UTC mode"
          },
          "description": "Determines if the custom data 'dateFormatSettings' is set with UTC mode <code>true</code>"
        },
        {
          "name": "isPending",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "true if at least one FilterItem element of the FilterBar control is pending"
          },
          "description": "Checks the pending state of the FilterBar control"
        },
        {
          "name": "removeAllControlConfiguration",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfilterbar.ControlConfiguration[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getControlConfiguration controlConfiguration}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeAllGroupConfiguration",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfilterbar.GroupConfiguration[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getGroupConfiguration groupConfiguration}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeControlConfiguration",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfilterbar.ControlConfiguration",
            "description": "The removed controlConfiguration or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vControlConfiguration",
              "type": "int|string|sap.ui.comp.smartfilterbar.ControlConfiguration",
              "optional": false,
              "description": "The controlConfiguration to remove or its index or id"
            }
          ],
          "description": "Removes a controlConfiguration from the aggregation {@link #getControlConfiguration controlConfiguration}."
        },
        {
          "name": "removeGroupConfiguration",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfilterbar.GroupConfiguration",
            "description": "The removed groupConfiguration or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vGroupConfiguration",
              "type": "int|string|sap.ui.comp.smartfilterbar.GroupConfiguration",
              "optional": false,
              "description": "The groupConfiguration to remove or its index or id"
            }
          ],
          "description": "Removes a groupConfiguration from the aggregation {@link #getGroupConfiguration groupConfiguration}."
        },
        {
          "name": "search",
          "visibility": "public",
          "returnValue": {
            "type": "boolean|undefined",
            "description": "Indicates if there are validation errors"
          },
          "parameters": [
            {
              "name": "bSync",
              "type": "boolean",
              "optional": false,
              "description": "Indicates if the search should be triggered synchronously"
            }
          ],
          "description": "Overwrites method from base class. Called when user clicks the search button of the FilterBar. The search is executed asynchronously per default, but can be forced to synchronously execution by providing the <code>bSync</code> set to <code>true</code>. Synchronous mode is only supported for non live mode scenarios. In the synchroneous mode a mandatory check prior to the search execution is made."
        },
        {
          "name": "setBasicSearchFieldName",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfilterbar.SmartFilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sBasicSearchFieldName",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>basicSearchFieldName</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getBasicSearchFieldName basicSearchFieldName}.\n\nName of the field that is the focus of the basic search.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setConsiderAnalyticalParameters",
          "visibility": "public",
          "since": "1.42.0",
          "returnValue": {
            "type": "sap.ui.comp.smartfilterbar.SmartFilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bConsiderAnalyticalParameters",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>considerAnalyticalParameters</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getConsiderAnalyticalParameters considerAnalyticalParameters}.\n\nIndicates if the analytical parameters (SelectionVariant) must be taken into consideration.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>.",
          "experimental": {
            "since": "1.42.0",
            "text": "This property is NOT stable yet. Use at your own risk."
          }
        },
        {
          "name": "setConsiderSelectionVariants",
          "visibility": "public",
          "since": "1.48.0",
          "returnValue": {
            "type": "sap.ui.comp.smartfilterbar.SmartFilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bConsiderSelectionVariants",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>considerSelectionVariants</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getConsiderSelectionVariants considerSelectionVariants}.\n\nIndicates if the annotation <code>com.sap.vocabularies.UI.v1.SelectionVariant</code> is taken into account.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setDefaultSelectionVariantName",
          "visibility": "public",
          "since": "1.48.0",
          "returnValue": {
            "type": "sap.ui.comp.smartfilterbar.SmartFilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sDefaultSelectionVariantName",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>defaultSelectionVariantName</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getDefaultSelectionVariantName defaultSelectionVariantName}.\n\nDetermines one specific variant that is based on the <code>com.sap.vocabularies.UI.v1.SelectionVariant</code> annotation, which is then used as the default variant.<br> This property is only relevant in case <code>considerSelectionVariants</code> is set to <code>true</code> and will only be applied if there is no user-defined default variant specified.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setEnableBasicSearch",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfilterbar.SmartFilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bEnableBasicSearch",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>enableBasicSearch</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getEnableBasicSearch enableBasicSearch}.\n\nEnables the basic search field. The entered value can be accessed with {@link sap.ui.comp.smartfilterbar.SmartFilterBar#getParameters}. <b>Note:</b> When the SmartFilterBar control is used with a {@link sap.ui.comp.smarttable.SmartTable} control the parameters are handled automatically. Therefore, this must only be enabled for OData service entities that support basic search.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setEntityType",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfilterbar.SmartFilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sEntityType",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>entityType</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getEntityType entityType}.\n\nThe OData entity type whose metadata is used to create the SmartFilterBar. <b>Note:</b> Changing this value after the SmartFilterBar is initialized (<code>initialise</code> event was fired) has no effect.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.",
          "deprecated": {
            "since": "1.40",
            "text": "Use <code>entitySet</code> property instead of this one, to enable V4 annotation support"
          }
        },
        {
          "name": "setFilterData",
          "visibility": "public",
          "parameters": [
            {
              "name": "oJson",
              "type": "object",
              "optional": false,
              "description": "The JSON data in the filter bar"
            },
            {
              "name": "bReplace",
              "type": "boolean",
              "optional": false,
              "description": "Replace existing filter data"
            }
          ],
          "description": "Sets the data in the filter data model. The follow-on filterChange event is only triggered when none _CUSTOM data is set."
        },
        {
          "name": "setFilterDataAsString",
          "visibility": "public",
          "parameters": [
            {
              "name": "sJson",
              "type": "string",
              "optional": false,
              "description": "The JSON data in the filter bar"
            },
            {
              "name": "bReplace",
              "type": "boolean",
              "optional": false,
              "description": "Replace existing filter data"
            }
          ],
          "description": "Sets the data in the filter data model as string."
        },
        {
          "name": "setLiveMode",
          "visibility": "public",
          "since": "1.40",
          "returnValue": {
            "type": "sap.ui.comp.smartfilterbar.SmartFilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bLiveMode",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>liveMode</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getLiveMode liveMode}.\n\nIf set the search will be automatically triggered, when a filter value was set via the <B>change</B> event.<br> <b>Note:</b> The liveMode only operates on non-mobile scenarios.<br> Additionally, if liveMode is set, the following applies: <ul> <li>The error messagebox is not displayed, and the <code>showMessages</code> property is ignored.</li> <li>The search is triggered after a variant has been selected.</li> <li>Execute on Select for <code>VariantManagement</code> is not shown and not taken into account</li> </ul>\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setNavigationProperties",
          "visibility": "public",
          "since": "1.48",
          "returnValue": {
            "type": "sap.ui.comp.smartfilterbar.SmartFilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sNavigationProperties",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>navigationProperties</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getNavigationProperties navigationProperties}.\n\nThis property is only evaluated if the property {@link sap.ui.comp.smartfilterbar.SmartFilterBar#getUseProvidedNavigationProperties} is set to <code>true</code>. It contains a comma-separated list of navigation property names which are checked for filters.<br>\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "setResourceUri",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfilterbar.SmartFilterBar",
            "description": "<code>this</code> to allow method chaining"
          },
          "parameters": [
            {
              "name": "sResourceUri",
              "type": "string",
              "optional": false,
              "description": "The URI of the oData service from which the metadata would be read"
            }
          ],
          "description": "Uses the provided resource URI to fetch the OData metadata instead of using the default ODataModel (getModel()). You should only set this if you intend to get the metadata for the filter bar from elsewhere!",
          "deprecated": {
            "since": "1.29",
            "text": "Set an ODataModel as the main model on your control/view instead"
          }
        },
        {
          "name": "setShowMessages",
          "visibility": "public",
          "since": "1.40",
          "returnValue": {
            "type": "sap.ui.comp.smartfilterbar.SmartFilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowMessages",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showMessages</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowMessages showMessages}.\n\nIf set to <code>false</code> eventual errors during the search, will not be displayed in a messagebox.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setSmartVariant",
          "visibility": "public",
          "since": "1.38",
          "returnValue": {
            "type": "sap.ui.comp.smartfilterbar.SmartFilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oSmartVariant",
              "type": "sap.ui.core.ID|sap.ui.comp.smartvariants.SmartVariantManagement",
              "optional": false,
              "description": "ID of an element which becomes the new target of this smartVariant association; alternatively, an element instance may be given"
            }
          ],
          "description": "Sets the associated {@link #getSmartVariant smartVariant}."
        },
        {
          "name": "setSuppressSelection",
          "visibility": "public",
          "since": "1.44.0",
          "returnValue": {
            "type": "sap.ui.comp.smartfilterbar.SmartFilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bSuppressSelection",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>suppressSelection</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSuppressSelection suppressSelection}.\n\nIf set to <code>true</code> all search requests will be ignored. This functionality is only intended to be used internally to enable an optimal solution when the filter bar is controlled by the smart templates. NOTE: As long as this property is set to <code>true</code>, all search requests will be neglected.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>.",
          "experimental": {
            "since": "1.44.0",
            "text": "This property is NOT stable yet. Use at your own risk."
          }
        },
        {
          "name": "setUseDateRangeType",
          "visibility": "public",
          "since": "1.46.0",
          "returnValue": {
            "type": "sap.ui.comp.smartfilterbar.SmartFilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bUseDateRangeType",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>useDateRangeType</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getUseDateRangeType useDateRangeType}.\n\nIf set to <code>true</code> all date fields with filter restriction <code>interval</code> will be treated as <code>DateTimeRange</code> filters. The <code>useDateRangeType</code> can be set only once during initialization. <b>Note:</b> If this property is set to <code>true</code> and any date filters with filter restriction <code>interval</code> were stored as part of a variant, the values of these filters cannot be applied. If this property is set to <code>false</code>, any previously stored filters which were treated as type <code>DateTimeRange</code> based on the former setting, cannot be converted back to the standard date interval.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setUseProvidedNavigationProperties",
          "visibility": "public",
          "since": "1.48",
          "returnValue": {
            "type": "sap.ui.comp.smartfilterbar.SmartFilterBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bUseProvidedNavigationProperties",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>useProvidedNavigationProperties</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getUseProvidedNavigationProperties useProvidedNavigationProperties}.\n\nIf set to <code>true</code>, only the navigation properties mentioned in property {@link sap.ui.comp.smartfilterbar.SmartFilterBarl#getNavigationProperties} are checked for further filters.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "validateMandatoryFields",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "true indicates that all mandatory filters and parameters have values."
          },
          "description": "Verify if all mandatory filters or parameters have values."
        },
        {
          "name": "verifySearchAllowed",
          "visibility": "public",
          "returnValue": {
            "type": "object",
            "description": "an empty object indicates that all is fine and the search can be triggered. an object with the property mandatory indicates that some mandatory filters or parameters are empty an object with the property pending indicates that a token validation is going on. an object with the property error indicates that some filters or parameters are in error state."
          },
          "description": "Verifies if search is possible."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.comp.smartform.Group",
      "basename": "Group",
      "resource": "sap/ui/comp/smartform/Group.js",
      "module": "sap/ui/comp/smartform/Group",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.layout.form.FormContainer",
      "description": "Groups are used to group group elements.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "element",
        "properties": [
          {
            "name": "useHorizontalLayout",
            "type": "boolean",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Specifies whether the groups are rendered in a <code>ResponsiveLayout</code> with label on top of the group element. Each group will be rendered in a new line.\n\n<b>Note:</b> If <code>Group</code> is assigned to a <code>SmartForm</code> control, this property is inherited from the <code>SmartForm</code> control.\n\nSo don't set it to a different value from the one in the <code>SmartForm</code> control. For performance reasons it might make sense to set it manually to the same value as the one in the <code>SmartForm</code> control when creating the <code>Group</code> element.",
            "methods": ["getUseHorizontalLayout", "setUseHorizontalLayout"]
          },
          {
            "name": "horizontalLayoutGroupElementMinWidth",
            "type": "int",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Specifies the minimal size in pixels of all group elements of the form if horizontal Layout is used.\n\n<b>Note:</b> If <code>Group</code> is assigned to a <code>SmartForm</code> control, this property is inherited from the <code>SmartForm</code> control. So don't set it manually.",
            "deprecated": {
              "since": "1.48.0",
              "text": "please do not use this property as it does not have any effect on the current layout of the <code>SmartForm</code> control."
            },
            "methods": [
              "getHorizontalLayoutGroupElementMinWidth",
              "setHorizontalLayoutGroupElementMinWidth"
            ]
          },
          {
            "name": "label",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Label for the group.",
            "methods": ["getLabel", "setLabel"]
          }
        ],
        "aggregations": [
          {
            "name": "groupElements",
            "singularName": "groupElement",
            "type": "sap.ui.comp.smartform.GroupElement",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "A <code>GroupElement</code> is a combination of one label and different controls associated to this label.",
            "methods": [
              "getGroupElements",
              "destroyGroupElements",
              "insertGroupElement",
              "addGroupElement",
              "removeGroupElement",
              "indexOfGroupElement",
              "removeAllGroupElements"
            ]
          },
          {
            "name": "layout",
            "singularName": "layout",
            "type": "sap.ui.layout.GridData",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "Layout to specify how the group shall be rendered (e.g. span and line-break)\n\n<b>Note:</b> Do not use <code>layout</code> and <code>layoutData</code> aggregations combined.",
            "deprecated": {
              "since": "1.48.0",
              "text": "please use <code>layoutData</code> aggregation instead."
            },
            "methods": ["getLayout", "destroyLayout", "setLayout"]
          }
        ],
        "defaultAggregation": "groupElements",
        "designtime": "sap/ui/comp/designtime/smartform/Group.designtime"
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new smartform/Group.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "addCustomData",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartform.GroupElement",
            "description": "Reference to <code>this</code> to allow method chaining."
          },
          "parameters": [
            {
              "name": "oCustomData",
              "type": "sap.ui.core.CustomData",
              "optional": false,
              "description": "the customData to add; if empty, nothing is added"
            }
          ],
          "description": "Adds some CustomData into the aggregation <code>customData</code>.\n\n<b>Note:</b> <code>customData</code> that is used by the <code>SmartField</code> control itself is also added to the <code>GroupElement</code> elements and the <code>SmartField</code> controls in the children hierarchy. Additional <code>customData</code> that is not used by the <code>SmartField</code> control internally might not be added."
        },
        {
          "name": "addGroupElement",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartform.Group",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oGroupElement",
              "type": "sap.ui.comp.smartform.GroupElement",
              "optional": false,
              "description": "The groupElement to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some groupElement to the aggregation {@link #getGroupElements groupElements}."
        },
        {
          "name": "destroyGroupElements",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartform.Group",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the groupElements in the aggregation {@link #getGroupElements groupElements}."
        },
        {
          "name": "destroyLayout",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartform.Group",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the layout in the aggregation {@link #getLayout layout}.",
          "deprecated": {
            "since": "1.48.0",
            "text": "please use <code>layoutData</code> aggregation instead."
          }
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.comp.smartform.Group with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.layout.form.FormContainer.extend}."
        },
        {
          "name": "getGroupElements",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.comp.smartform.GroupElement[]" },
          "description": "Gets content of aggregation {@link #getGroupElements groupElements}.\n\nA <code>GroupElement</code> is a combination of one label and different controls associated to this label."
        },
        {
          "name": "getHorizontalLayoutGroupElementMinWidth",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>horizontalLayoutGroupElementMinWidth</code>"
          },
          "description": "Gets current value of property {@link #getHorizontalLayoutGroupElementMinWidth horizontalLayoutGroupElementMinWidth}.\n\nSpecifies the minimal size in pixels of all group elements of the form if horizontal Layout is used.\n\n<b>Note:</b> If <code>Group</code> is assigned to a <code>SmartForm</code> control, this property is inherited from the <code>SmartForm</code> control. So don't set it manually.",
          "deprecated": {
            "since": "1.48.0",
            "text": "please do not use this property as it does not have any effect on the current layout of the <code>SmartForm</code> control."
          }
        },
        {
          "name": "getLabel",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>label</code>"
          },
          "description": "Gets current value of property {@link #getLabel label}.\n\nLabel for the group."
        },
        {
          "name": "getLayout",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.layout.GridData" },
          "description": "Gets content of aggregation {@link #getLayout layout}.\n\nLayout to specify how the group shall be rendered (e.g. span and line-break)\n\n<b>Note:</b> Do not use <code>layout</code> and <code>layoutData</code> aggregations combined.",
          "deprecated": {
            "since": "1.48.0",
            "text": "please use <code>layoutData</code> aggregation instead."
          }
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.comp.smartform.Group."
        },
        {
          "name": "getUseHorizontalLayout",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>useHorizontalLayout</code>"
          },
          "description": "Gets current value of property {@link #getUseHorizontalLayout useHorizontalLayout}.\n\nSpecifies whether the groups are rendered in a <code>ResponsiveLayout</code> with label on top of the group element. Each group will be rendered in a new line.\n\n<b>Note:</b> If <code>Group</code> is assigned to a <code>SmartForm</code> control, this property is inherited from the <code>SmartForm</code> control.\n\nSo don't set it to a different value from the one in the <code>SmartForm</code> control. For performance reasons it might make sense to set it manually to the same value as the one in the <code>SmartForm</code> control when creating the <code>Group</code> element."
        },
        {
          "name": "indexOfGroupElement",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oGroupElement",
              "type": "sap.ui.comp.smartform.GroupElement",
              "optional": false,
              "description": "The groupElement whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.ui.comp.smartform.GroupElement</code> in the aggregation {@link #getGroupElements groupElements}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "insertCustomData",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartform.GroupElement",
            "description": "Reference to <code>this</code> to allow method chaining."
          },
          "parameters": [
            {
              "name": "oCustomData",
              "type": "sap.ui.core.CustomData",
              "optional": false,
              "description": "the customData to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "the 0-based index the customData should be inserted at; for a negative value of iIndex, the customData is inserted at position 0; for a value greater than the current size of the aggregation, the customData is inserted at the last position"
            }
          ],
          "description": "Inserts some customData into the aggregation <code>customData</code>.\n\n<b>Note:</b> <code>customData</code> that is used by the <code>SmartField</code> control itself is also added to the <code>GroupElement</code> elements and the <code>SmartField</code> controls in the children hierarchy. Additional <code>customData</code> that is not used by the <code>SmartField</code> control internally might not be added."
        },
        {
          "name": "insertGroupElement",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartform.Group",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oGroupElement",
              "type": "sap.ui.comp.smartform.GroupElement",
              "optional": false,
              "description": "The groupElement to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the groupElement should be inserted at; for a negative value of <code>iIndex</code>, the groupElement is inserted at position 0; for a value greater than the current size of the aggregation, the groupElement is inserted at the last position"
            }
          ],
          "description": "Inserts a groupElement into the aggregation {@link #getGroupElements groupElements}."
        },
        {
          "name": "removeAllGroupElements",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartform.GroupElement[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getGroupElements groupElements}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeGroupElement",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartform.GroupElement",
            "description": "The removed groupElement or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vGroupElement",
              "type": "int|string|sap.ui.comp.smartform.GroupElement",
              "optional": false,
              "description": "The groupElement to remove or its index or id"
            }
          ],
          "description": "Removes a groupElement from the aggregation {@link #getGroupElements groupElements}."
        },
        {
          "name": "setEditMode",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartform.Group",
            "description": "<code>this</code> to allow method chaining."
          },
          "parameters": [
            {
              "name": "bEditMode",
              "type": "boolean",
              "optional": false,
              "description": "new value for editable property of smart fields."
            }
          ],
          "description": "Setter for property <code>editable</code> of all smart fields in children hierarchy."
        },
        {
          "name": "setHorizontalLayoutGroupElementMinWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartform.Group",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iHorizontalLayoutGroupElementMinWidth",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>horizontalLayoutGroupElementMinWidth</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getHorizontalLayoutGroupElementMinWidth horizontalLayoutGroupElementMinWidth}.\n\nSpecifies the minimal size in pixels of all group elements of the form if horizontal Layout is used.\n\n<b>Note:</b> If <code>Group</code> is assigned to a <code>SmartForm</code> control, this property is inherited from the <code>SmartForm</code> control. So don't set it manually.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.",
          "deprecated": {
            "since": "1.48.0",
            "text": "please do not use this property as it does not have any effect on the current layout of the <code>SmartForm</code> control."
          }
        },
        {
          "name": "setLabel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartform.Group",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sLabel",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>label</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getLabel label}.\n\nLabel for the group.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setLayout",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartform.Group",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oLayout",
              "type": "sap.ui.layout.GridData",
              "optional": false,
              "description": "The layout to set"
            }
          ],
          "description": "Sets the aggregated {@link #getLayout layout}.",
          "deprecated": {
            "since": "1.48.0",
            "text": "please use <code>layoutData</code> aggregation instead."
          }
        },
        {
          "name": "setUseHorizontalLayout",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartform.Group",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bUseHorizontalLayout",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>useHorizontalLayout</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getUseHorizontalLayout useHorizontalLayout}.\n\nSpecifies whether the groups are rendered in a <code>ResponsiveLayout</code> with label on top of the group element. Each group will be rendered in a new line.\n\n<b>Note:</b> If <code>Group</code> is assigned to a <code>SmartForm</code> control, this property is inherited from the <code>SmartForm</code> control.\n\nSo don't set it to a different value from the one in the <code>SmartForm</code> control. For performance reasons it might make sense to set it manually to the same value as the one in the <code>SmartForm</code> control when creating the <code>Group</code> element.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setVisible",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartform.Group",
            "description": "<code>this</code> to allow method chaining."
          },
          "parameters": [
            {
              "name": "bVisible",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>visible</code>"
            }
          ],
          "description": "Sets a new value for property <code>visible</code>. If set to <code>false</code>, the <code>Group</code> is not rendered. Default value is true."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.comp.smartform.GroupElement",
      "basename": "GroupElement",
      "resource": "sap/ui/comp/smartform/GroupElement.js",
      "module": "sap/ui/comp/smartform/GroupElement",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.layout.form.FormElement",
      "description": "A GroupElement is a combination of one label and different controls associated to this label.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "element",
        "properties": [
          {
            "name": "useHorizontalLayout",
            "type": "boolean",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Specifies whether the groups shall be rendered in a <code>ResponsiveLayout</code> with label on top of the group element. Each group will be rendered in a new line.\n\n<b>Note:</b> If <code>Group</code> is assigned to a <code>SmartForm</code> control, this property is inherited from the <code>SmartForm</code> control.\n\nSo don't set it to a different value from the one in the <code>SmartForm</code> control. For performance reasons it might make sense to set it manually to the same value as the one in the <code>SmartForm</code> control when creating the <code>GroupElement</code> element.",
            "methods": ["getUseHorizontalLayout", "setUseHorizontalLayout"]
          },
          {
            "name": "horizontalLayoutGroupElementMinWidth",
            "type": "int",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Specifies the minimal size in pixels of all group elements of the form if horizontal Layout is used.\n\n<b>Note:</b> If <code>Group</code> is assigned to a <code>SmartForm</code> control, this property is inherited from the <code>SmartForm</code> control. So don't set it manually.",
            "deprecated": {
              "since": "1.48.0",
              "text": "please do not use this property as it does not have any effect on the current layout of the <code>SmartForm</code> control."
            },
            "methods": [
              "getHorizontalLayoutGroupElementMinWidth",
              "setHorizontalLayoutGroupElementMinWidth"
            ]
          },
          {
            "name": "elementForLabel",
            "type": "int",
            "defaultValue": 0,
            "group": "Misc",
            "visibility": "public",
            "description": "Index of element to be used for label determination",
            "methods": ["getElementForLabel", "setElementForLabel"]
          }
        ],
        "aggregations": [
          {
            "name": "elements",
            "singularName": "element",
            "type": "sap.ui.core.Control",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Aggregation of controls to be displayed together with a label.\n\n<b>Warning:</b> Do not put any layout or other container controls in here. This could damage the visual layout, keyboard support and screen-reader support. Only form controls are allowed. Views are also not supported. Allowed controls implement the interface <code>sap.ui.core.IFormContent</code>.",
            "methods": [
              "getElements",
              "destroyElements",
              "insertElement",
              "addElement",
              "removeElement",
              "indexOfElement",
              "removeAllElements"
            ]
          }
        ],
        "defaultAggregation": "elements",
        "events": [
          {
            "name": "visibleChanged",
            "visibility": "public",
            "description": "The event is fired after the visibility of the control has changed.",
            "methods": [
              "attachVisibleChanged",
              "detachVisibleChanged",
              "fireVisibleChanged"
            ]
          }
        ],
        "designtime": "sap/ui/comp/designtime/smartform/GroupElement.designtime"
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new smartform/GroupElement.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "visibleChanged",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "The event is fired after the visibility of the control has changed."
        }
      ],
      "methods": [
        {
          "name": "addCustomData",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartform.GroupElement",
            "description": "Reference to <code>this</code> to allow method chaining."
          },
          "parameters": [
            {
              "name": "oCustomData",
              "type": "sap.ui.core.CustomData",
              "optional": false,
              "description": "the customData to add; if empty, nothing is added"
            }
          ],
          "description": "Adds some customData into the aggregation <code>customData</code>.\n\n<b>Note:</b> <code>customData</code> that is used by the <code>SmartField</code> control itself is also added to the <code>SmartField</code> controls in the children hierarchy. Additional <code>customData</code> that is not used by the <code>SmartField</code> control internally might not be added."
        },
        {
          "name": "addElement",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartform.GroupElement",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oElement",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The element to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some element to the aggregation {@link #getElements elements}."
        },
        {
          "name": "attachVisibleChanged",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartform.GroupElement",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartform.GroupElement</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:visibleChanged visibleChanged} event of this <code>sap.ui.comp.smartform.GroupElement</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartform.GroupElement</code> itself.\n\nThe event is fired after the visibility of the control has changed."
        },
        {
          "name": "destroyElements",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartform.GroupElement",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the elements in the aggregation {@link #getElements elements}."
        },
        {
          "name": "detachVisibleChanged",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartform.GroupElement",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:visibleChanged visibleChanged} event of this <code>sap.ui.comp.smartform.GroupElement</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.comp.smartform.GroupElement with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.layout.form.FormElement.extend}."
        },
        {
          "name": "fireVisibleChanged",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.comp.smartform.GroupElement",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:visibleChanged visibleChanged} to attached listeners."
        },
        {
          "name": "getElementForLabel",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>elementForLabel</code>"
          },
          "description": "Gets current value of property {@link #getElementForLabel elementForLabel}.\n\nIndex of element to be used for label determination\n\nDefault value is <code>0</code>."
        },
        {
          "name": "getElements",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.Control[]" },
          "description": "Gets content of aggregation {@link #getElements elements}.\n\nAggregation of controls to be displayed together with a label.\n\n<b>Warning:</b> Do not put any layout or other container controls in here. This could damage the visual layout, keyboard support and screen-reader support. Only form controls are allowed. Views are also not supported. Allowed controls implement the interface <code>sap.ui.core.IFormContent</code>."
        },
        {
          "name": "getFormElement",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.layout.form.FormElement",
            "description": "the form element."
          },
          "description": "Returns the from element."
        },
        {
          "name": "getHorizontalLayoutGroupElementMinWidth",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>horizontalLayoutGroupElementMinWidth</code>"
          },
          "description": "Gets current value of property {@link #getHorizontalLayoutGroupElementMinWidth horizontalLayoutGroupElementMinWidth}.\n\nSpecifies the minimal size in pixels of all group elements of the form if horizontal Layout is used.\n\n<b>Note:</b> If <code>Group</code> is assigned to a <code>SmartForm</code> control, this property is inherited from the <code>SmartForm</code> control. So don't set it manually.",
          "deprecated": {
            "since": "1.48.0",
            "text": "please do not use this property as it does not have any effect on the current layout of the <code>SmartForm</code> control."
          }
        },
        {
          "name": "getLabelText",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "text of the label."
          },
          "description": "Returns the text of the label."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.comp.smartform.GroupElement."
        },
        {
          "name": "getUseHorizontalLayout",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>useHorizontalLayout</code>"
          },
          "description": "Gets current value of property {@link #getUseHorizontalLayout useHorizontalLayout}.\n\nSpecifies whether the groups shall be rendered in a <code>ResponsiveLayout</code> with label on top of the group element. Each group will be rendered in a new line.\n\n<b>Note:</b> If <code>Group</code> is assigned to a <code>SmartForm</code> control, this property is inherited from the <code>SmartForm</code> control.\n\nSo don't set it to a different value from the one in the <code>SmartForm</code> control. For performance reasons it might make sense to set it manually to the same value as the one in the <code>SmartForm</code> control when creating the <code>GroupElement</code> element."
        },
        {
          "name": "getVisibleBasedOnElements",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Returns true, in case one element of the group element is visible"
          },
          "description": "Determines the visibility of a <code>GroupElement</code> based on elements"
        },
        {
          "name": "indexOfElement",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oElement",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The element whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.ui.core.Control</code> in the aggregation {@link #getElements elements}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "insertCustomData",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartform.GroupElement",
            "description": "Reference to <code>this</code> to allow method chaining."
          },
          "parameters": [
            {
              "name": "oCustomData",
              "type": "sap.ui.core.CustomData",
              "optional": false,
              "description": "the customData to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "the 0-based index the customData should be inserted at; for a negative value of iIndex, the customData is inserted at position 0; for a value greater than the current size of the aggregation, the customData is inserted at the last position"
            }
          ],
          "description": "Inserts some customData into the aggregation <code>customData</code>.\n\n<b>Note:</b> <code>customData</code> that is used by the <code>SmartField</code> control itself is also added to the <code>SmartField</code> controls in the children hierarchy. Additional <code>customData</code> that is not used by the <code>SmartField</code> control internally might not be added."
        },
        {
          "name": "insertElement",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartform.GroupElement",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oElement",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The element to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the element should be inserted at; for a negative value of <code>iIndex</code>, the element is inserted at position 0; for a value greater than the current size of the aggregation, the element is inserted at the last position"
            }
          ],
          "description": "Inserts a element into the aggregation {@link #getElements elements}."
        },
        {
          "name": "removeAllElements",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.Control[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getElements elements}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeElement",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.Control",
            "description": "The removed element or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vElement",
              "type": "int|string|sap.ui.core.Control",
              "optional": false,
              "description": "The element to remove or its index or id"
            }
          ],
          "description": "Removes a element from the aggregation {@link #getElements elements}."
        },
        {
          "name": "setEditMode",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartform.GroupElement",
            "description": "<code>this</code> to allow method chaining."
          },
          "parameters": [
            {
              "name": "bEditMode",
              "type": "boolean",
              "optional": false,
              "description": "new value for editable property of smart fields."
            }
          ],
          "description": "Setter for property editable of all smart fields in children hierarchy."
        },
        {
          "name": "setElementForLabel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartform.GroupElement",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iElementForLabel",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>elementForLabel</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getElementForLabel elementForLabel}.\n\nIndex of element to be used for label determination\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>0</code>."
        },
        {
          "name": "setHorizontalLayoutGroupElementMinWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartform.GroupElement",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iHorizontalLayoutGroupElementMinWidth",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>horizontalLayoutGroupElementMinWidth</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getHorizontalLayoutGroupElementMinWidth horizontalLayoutGroupElementMinWidth}.\n\nSpecifies the minimal size in pixels of all group elements of the form if horizontal Layout is used.\n\n<b>Note:</b> If <code>Group</code> is assigned to a <code>SmartForm</code> control, this property is inherited from the <code>SmartForm</code> control. So don't set it manually.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.",
          "deprecated": {
            "since": "1.48.0",
            "text": "please do not use this property as it does not have any effect on the current layout of the <code>SmartForm</code> control."
          }
        },
        {
          "name": "setUseHorizontalLayout",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartform.GroupElement",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bUseHorizontalLayout",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>useHorizontalLayout</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getUseHorizontalLayout useHorizontalLayout}.\n\nSpecifies whether the groups shall be rendered in a <code>ResponsiveLayout</code> with label on top of the group element. Each group will be rendered in a new line.\n\n<b>Note:</b> If <code>Group</code> is assigned to a <code>SmartForm</code> control, this property is inherited from the <code>SmartForm</code> control.\n\nSo don't set it to a different value from the one in the <code>SmartForm</code> control. For performance reasons it might make sense to set it manually to the same value as the one in the <code>SmartForm</code> control when creating the <code>GroupElement</code> element.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.comp.smartform.Layout",
      "basename": "Layout",
      "resource": "sap/ui/comp/smartform/Layout.js",
      "module": "sap/ui/comp/smartform/Layout",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.core.Element",
      "implements": ["sap.ui.comp.smartform.SmartFormLayout"],
      "description": "Layout settings to adjust the <code>ResponsiveGridLayout</code> used inside the <code>Form</code>.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "element",
        "properties": [
          {
            "name": "labelSpanXL",
            "type": "int",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.38.0",
            "description": "Default span for labels in extra large size.",
            "methods": ["getLabelSpanXL", "setLabelSpanXL"]
          },
          {
            "name": "labelSpanL",
            "type": "int",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Default span for labels in large size. This span is only used if more than 1 container is in one line, if only 1 container is in the line the <code>labelSpanM</code> value is used.",
            "methods": ["getLabelSpanL", "setLabelSpanL"]
          },
          {
            "name": "labelSpanM",
            "type": "int",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Default span for labels in medium size. This property is used for full size containers. If more than one Container is in one line, <code>labelSpanL</code> is used.",
            "methods": ["getLabelSpanM", "setLabelSpanM"]
          },
          {
            "name": "labelSpanS",
            "type": "int",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Default span for labels in small size.",
            "methods": ["getLabelSpanS", "setLabelSpanS"]
          },
          {
            "name": "emptySpanXL",
            "type": "int",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.38.0",
            "description": "Number of grid cells that are empty at the end of each line on extra large size.",
            "methods": ["getEmptySpanXL", "setEmptySpanXL"]
          },
          {
            "name": "emptySpanL",
            "type": "int",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Number of grid cells that are empty at the end of each line on large size.",
            "methods": ["getEmptySpanL", "setEmptySpanL"]
          },
          {
            "name": "emptySpanM",
            "type": "int",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Number of grid cells that are empty at the end of each line on medium size.",
            "methods": ["getEmptySpanM", "setEmptySpanM"]
          },
          {
            "name": "emptySpanS",
            "type": "int",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Number of grid cells that are empty at the end of each line on small size.",
            "methods": ["getEmptySpanS", "setEmptySpanS"]
          },
          {
            "name": "columnsXL",
            "type": "int",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.38.0",
            "description": "Number of columns for extra large size.<br> The number of columns for extra large size must not be smaller than the number of columns for large size.",
            "methods": ["getColumnsXL", "setColumnsXL"]
          },
          {
            "name": "columnsL",
            "type": "int",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Number of columns for large size.<br> The number of columns for large size must not be smaller than the number of columns for medium size.",
            "methods": ["getColumnsL", "setColumnsL"]
          },
          {
            "name": "columnsM",
            "type": "int",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Number of columns for medium size.",
            "methods": ["getColumnsM", "setColumnsM"]
          },
          {
            "name": "singleGroupFullSize",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "since": "1.34.1",
            "description": "If the <code>SmartForm</code> contains only one single Group and this property is set, the Group is displayed using the full size of the <code>SmartForm</code>. In this case the properties <code>columnsL</code> and <code>columnsM</code> are ignored.<br> In all other cases the Group is displayed in the size of one column.",
            "methods": ["getSingleGroupFullSize", "setSingleGroupFullSize"]
          },
          {
            "name": "breakpointXL",
            "type": "int",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.38.0",
            "description": "Breakpoint (in pixel) between large size and extra large (XL) size.",
            "methods": ["getBreakpointXL", "setBreakpointXL"]
          },
          {
            "name": "breakpointL",
            "type": "int",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Breakpoint (in pixel) between Medium size and Large size.",
            "methods": ["getBreakpointL", "setBreakpointL"]
          },
          {
            "name": "breakpointM",
            "type": "int",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "reakpoint (in pixel) between Small size and Medium size.",
            "methods": ["getBreakpointM", "setBreakpointM"]
          },
          {
            "name": "gridDataSpan",
            "type": "sap.ui.layout.GridSpan",
            "defaultValue": "",
            "group": "Misc",
            "visibility": "public",
            "description": "A string type that represents Grid's span values for large, medium and small screens. Allowed values are separated by space Letters L, M or S followed by number of columns from 1 to 12 that the container has to take, for example: \"L2 M4 S6\", \"M12\", \"s10\" or \"l4 m4\". Note that the parameters has to be provided in the order large medium small.<br> The value set here will be set to all group elements when used with horizontal layout (<code>SmartForm</code> property <code>useHorizontalLayout</code>)",
            "methods": ["getGridDataSpan", "setGridDataSpan"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new smartform/Layout.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.comp.smartform.Layout with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
        },
        {
          "name": "getBreakpointL",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>breakpointL</code>"
          },
          "description": "Gets current value of property {@link #getBreakpointL breakpointL}.\n\nBreakpoint (in pixel) between Medium size and Large size."
        },
        {
          "name": "getBreakpointM",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>breakpointM</code>"
          },
          "description": "Gets current value of property {@link #getBreakpointM breakpointM}.\n\nreakpoint (in pixel) between Small size and Medium size."
        },
        {
          "name": "getBreakpointXL",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>breakpointXL</code>"
          },
          "description": "Gets current value of property {@link #getBreakpointXL breakpointXL}.\n\nBreakpoint (in pixel) between large size and extra large (XL) size."
        },
        {
          "name": "getColumnsL",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>columnsL</code>"
          },
          "description": "Gets current value of property {@link #getColumnsL columnsL}.\n\nNumber of columns for large size.<br> The number of columns for large size must not be smaller than the number of columns for medium size."
        },
        {
          "name": "getColumnsM",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>columnsM</code>"
          },
          "description": "Gets current value of property {@link #getColumnsM columnsM}.\n\nNumber of columns for medium size."
        },
        {
          "name": "getColumnsXL",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>columnsXL</code>"
          },
          "description": "Gets current value of property {@link #getColumnsXL columnsXL}.\n\nNumber of columns for extra large size.<br> The number of columns for extra large size must not be smaller than the number of columns for large size."
        },
        {
          "name": "getEmptySpanL",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>emptySpanL</code>"
          },
          "description": "Gets current value of property {@link #getEmptySpanL emptySpanL}.\n\nNumber of grid cells that are empty at the end of each line on large size."
        },
        {
          "name": "getEmptySpanM",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>emptySpanM</code>"
          },
          "description": "Gets current value of property {@link #getEmptySpanM emptySpanM}.\n\nNumber of grid cells that are empty at the end of each line on medium size."
        },
        {
          "name": "getEmptySpanS",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>emptySpanS</code>"
          },
          "description": "Gets current value of property {@link #getEmptySpanS emptySpanS}.\n\nNumber of grid cells that are empty at the end of each line on small size."
        },
        {
          "name": "getEmptySpanXL",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>emptySpanXL</code>"
          },
          "description": "Gets current value of property {@link #getEmptySpanXL emptySpanXL}.\n\nNumber of grid cells that are empty at the end of each line on extra large size."
        },
        {
          "name": "getGridDataSpan",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.layout.GridSpan",
            "description": "Value of property <code>gridDataSpan</code>"
          },
          "description": "Gets current value of property {@link #getGridDataSpan gridDataSpan}.\n\nA string type that represents Grid's span values for large, medium and small screens. Allowed values are separated by space Letters L, M or S followed by number of columns from 1 to 12 that the container has to take, for example: \"L2 M4 S6\", \"M12\", \"s10\" or \"l4 m4\". Note that the parameters has to be provided in the order large medium small.<br> The value set here will be set to all group elements when used with horizontal layout (<code>SmartForm</code> property <code>useHorizontalLayout</code>)\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "getLabelSpanL",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>labelSpanL</code>"
          },
          "description": "Gets current value of property {@link #getLabelSpanL labelSpanL}.\n\nDefault span for labels in large size. This span is only used if more than 1 container is in one line, if only 1 container is in the line the <code>labelSpanM</code> value is used."
        },
        {
          "name": "getLabelSpanM",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>labelSpanM</code>"
          },
          "description": "Gets current value of property {@link #getLabelSpanM labelSpanM}.\n\nDefault span for labels in medium size. This property is used for full size containers. If more than one Container is in one line, <code>labelSpanL</code> is used."
        },
        {
          "name": "getLabelSpanS",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>labelSpanS</code>"
          },
          "description": "Gets current value of property {@link #getLabelSpanS labelSpanS}.\n\nDefault span for labels in small size."
        },
        {
          "name": "getLabelSpanXL",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>labelSpanXL</code>"
          },
          "description": "Gets current value of property {@link #getLabelSpanXL labelSpanXL}.\n\nDefault span for labels in extra large size."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.comp.smartform.Layout."
        },
        {
          "name": "getSingleGroupFullSize",
          "visibility": "public",
          "since": "1.34.1",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>singleGroupFullSize</code>"
          },
          "description": "Gets current value of property {@link #getSingleGroupFullSize singleGroupFullSize}.\n\nIf the <code>SmartForm</code> contains only one single Group and this property is set, the Group is displayed using the full size of the <code>SmartForm</code>. In this case the properties <code>columnsL</code> and <code>columnsM</code> are ignored.<br> In all other cases the Group is displayed in the size of one column.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setBreakpointL",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartform.Layout",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iBreakpointL",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>breakpointL</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getBreakpointL breakpointL}.\n\nBreakpoint (in pixel) between Medium size and Large size.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setBreakpointM",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartform.Layout",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iBreakpointM",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>breakpointM</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getBreakpointM breakpointM}.\n\nreakpoint (in pixel) between Small size and Medium size.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setBreakpointXL",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": {
            "type": "sap.ui.comp.smartform.Layout",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iBreakpointXL",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>breakpointXL</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getBreakpointXL breakpointXL}.\n\nBreakpoint (in pixel) between large size and extra large (XL) size.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setColumnsL",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartform.Layout",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iColumnsL",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>columnsL</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getColumnsL columnsL}.\n\nNumber of columns for large size.<br> The number of columns for large size must not be smaller than the number of columns for medium size.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setColumnsM",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartform.Layout",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iColumnsM",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>columnsM</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getColumnsM columnsM}.\n\nNumber of columns for medium size.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setColumnsXL",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": {
            "type": "sap.ui.comp.smartform.Layout",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iColumnsXL",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>columnsXL</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getColumnsXL columnsXL}.\n\nNumber of columns for extra large size.<br> The number of columns for extra large size must not be smaller than the number of columns for large size.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setEmptySpanL",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartform.Layout",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iEmptySpanL",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>emptySpanL</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getEmptySpanL emptySpanL}.\n\nNumber of grid cells that are empty at the end of each line on large size.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setEmptySpanM",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartform.Layout",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iEmptySpanM",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>emptySpanM</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getEmptySpanM emptySpanM}.\n\nNumber of grid cells that are empty at the end of each line on medium size.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setEmptySpanS",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartform.Layout",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iEmptySpanS",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>emptySpanS</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getEmptySpanS emptySpanS}.\n\nNumber of grid cells that are empty at the end of each line on small size.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setEmptySpanXL",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": {
            "type": "sap.ui.comp.smartform.Layout",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iEmptySpanXL",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>emptySpanXL</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getEmptySpanXL emptySpanXL}.\n\nNumber of grid cells that are empty at the end of each line on extra large size.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setGridDataSpan",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartform.Layout",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sGridDataSpan",
              "type": "sap.ui.layout.GridSpan",
              "optional": false,
              "description": "New value for property <code>gridDataSpan</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getGridDataSpan gridDataSpan}.\n\nA string type that represents Grid's span values for large, medium and small screens. Allowed values are separated by space Letters L, M or S followed by number of columns from 1 to 12 that the container has to take, for example: \"L2 M4 S6\", \"M12\", \"s10\" or \"l4 m4\". Note that the parameters has to be provided in the order large medium small.<br> The value set here will be set to all group elements when used with horizontal layout (<code>SmartForm</code> property <code>useHorizontalLayout</code>)\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "setLabelSpanL",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartform.Layout",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iLabelSpanL",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>labelSpanL</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getLabelSpanL labelSpanL}.\n\nDefault span for labels in large size. This span is only used if more than 1 container is in one line, if only 1 container is in the line the <code>labelSpanM</code> value is used.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setLabelSpanM",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartform.Layout",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iLabelSpanM",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>labelSpanM</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getLabelSpanM labelSpanM}.\n\nDefault span for labels in medium size. This property is used for full size containers. If more than one Container is in one line, <code>labelSpanL</code> is used.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setLabelSpanS",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartform.Layout",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iLabelSpanS",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>labelSpanS</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getLabelSpanS labelSpanS}.\n\nDefault span for labels in small size.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setLabelSpanXL",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": {
            "type": "sap.ui.comp.smartform.Layout",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iLabelSpanXL",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>labelSpanXL</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getLabelSpanXL labelSpanXL}.\n\nDefault span for labels in extra large size.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setSingleGroupFullSize",
          "visibility": "public",
          "since": "1.34.1",
          "returnValue": {
            "type": "sap.ui.comp.smartform.Layout",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bSingleGroupFullSize",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>singleGroupFullSize</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSingleGroupFullSize singleGroupFullSize}.\n\nIf the <code>SmartForm</code> contains only one single Group and this property is set, the Group is displayed using the full size of the <code>SmartForm</code>. In this case the properties <code>columnsL</code> and <code>columnsM</code> are ignored.<br> In all other cases the Group is displayed in the size of one column.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.comp.smartform.SmartForm",
      "basename": "SmartForm",
      "resource": "sap/ui/comp/smartform/SmartForm.js",
      "module": "sap/ui/comp/smartform/SmartForm",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.core.Control",
      "description": "The <code>SmartForm</code> control renders a form (<code>sap.ui.layout.form.Form</code>). When used with the <code>SmartField</code> control the label is taken from the metadata annotation <code>sap:label</code> if not specified directly.\n\n<b>Warning:</b> Do not put any layout or other container controls into the <code>GroupElement</code>. Views are also not supported. This could damage the visual layout, keyboard support and screen-reader support.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "title",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Title of the form.",
            "methods": ["getTitle", "setTitle"]
          },
          {
            "name": "useHorizontalLayout",
            "type": "boolean",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Specifies whether the groups are rendered in a {@link sap.ui.layout.form.ResponsiveLayout ResponsiveLayout} with the label above the field. Each group is rendered in a new line.\n\n<b>Note:</b> This property should no longer be used. To arrange the fields in columns, <code>ColumnLayout</code> should be used in the <code>layout</code> property.\n\n<b>Note:</b> The value of this property will be passed on to the <code>useHorizontalLayout</code> property of all <code>Group</code> and <code>GroupElement</code> elements.",
            "methods": ["getUseHorizontalLayout", "setUseHorizontalLayout"]
          },
          {
            "name": "horizontalLayoutGroupElementMinWidth",
            "type": "int",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Specifies the minimal size in pixels of all group elements of the form if the horizontal layout is used.",
            "deprecated": {
              "since": "1.48.0",
              "text": "please do not use this property as it does not have any effect on the current layout of the <code>SmartForm</code> control."
            },
            "methods": [
              "getHorizontalLayoutGroupElementMinWidth",
              "setHorizontalLayoutGroupElementMinWidth"
            ]
          },
          {
            "name": "checkButton",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "description": "Specifies whether a check button is added to the toolbar.",
            "methods": ["getCheckButton", "setCheckButton"]
          },
          {
            "name": "entityType",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "CSV of entity types for which the flexibility features are available.<br> For more information about SAPUI5 flexibility, refer to the Developer Guide.<br> <b>Note:</b> No validation is done. Please ensure that you do not add spaces or special characters.",
            "methods": ["getEntityType", "setEntityType"]
          },
          {
            "name": "expandable",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "description": "Specifies whether the control is expandable. Per default the control is not rendered as expanded.",
            "methods": ["getExpandable", "setExpandable"]
          },
          {
            "name": "expanded",
            "type": "boolean",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "If expandable, this property indicates whether the state is expanded or not. If expanded, then the toolbar (if available) and the content is rendered; if expanded is false, then only the headerText/headerToolbar is rendered.",
            "methods": ["getExpanded", "setExpanded"]
          },
          {
            "name": "editTogglable",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "description": "If set to <code>true</code>, a button to toggle the <code>editable</code> property is shown in the toolbar.",
            "methods": ["getEditTogglable", "setEditTogglable"]
          },
          {
            "name": "editable",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "description": "Applies a device-specific and theme-specific line height and label alignment to the form rows if the form has editable content. If set, all (not only the editable) rows of the form will get the line height of editable fields.\n\nThe labels inside the form will be rendered by default in the according mode.\n\n<b>Note:</b> The setting of this property will be passed to all <code>SmartField</code> controls inside the form, so they will be editable if the form is editable.\n\n<b>Warning:</b> The setting of this property will not be passed to controls other than <code>SmartField</code>. For example, <code>Input</code> controls in a form with <code>editable</code> set to <code>false</code> are still editable.\n\nIf controls other than <code>SmartField</code> controls are used, and the edit mode of their control is not set correctly, this might lead to visual issues. The labels and fields might be misaligned, the labels might be rendered in the wrong mode, and the spacing between the single controls might be wrong. Also, controls that do not fit the mode might be rendered incorrectly.",
            "methods": ["getEditable", "setEditable"]
          },
          {
            "name": "ignoredFields",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "CSV of fields that must be ignored in the OData metadata by the SmartForm control.<br> <b>Note:</b><br> No validation is done. Please ensure that you do not add spaces or special characters.",
            "methods": ["getIgnoredFields", "setIgnoredFields"]
          },
          {
            "name": "flexEnabled",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "description": "Specifies whether the form enables flexibility features, such as adding new fields.<br> For more information about SAPUI5 flexibility, refer to the Developer Guide.",
            "methods": ["getFlexEnabled", "setFlexEnabled"]
          }
        ],
        "aggregations": [
          {
            "name": "groups",
            "singularName": "group",
            "type": "sap.ui.comp.smartform.Group",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Groups are used to group form elements.",
            "methods": [
              "getGroups",
              "destroyGroups",
              "insertGroup",
              "addGroup",
              "removeGroup",
              "indexOfGroup",
              "removeAllGroups"
            ]
          },
          {
            "name": "content",
            "singularName": "content",
            "type": "sap.ui.core.Control",
            "cardinality": "0..1",
            "visibility": "hidden",
            "description": "Content to be rendered.",
            "methods": ["getContent", "destroyContent", "setContent"]
          },
          {
            "name": "layout",
            "singularName": "layout",
            "type": "sap.ui.comp.smartform.SmartFormLayout",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "Layout settings to adjust the used layout.",
            "methods": ["getLayout", "destroyLayout", "setLayout"]
          },
          {
            "name": "semanticObjectController",
            "singularName": "semanticObjectController",
            "type": "sap.ui.comp.navpopover.SemanticObjectController",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "The Semantic Object Controller allows the user to specify and overwrite functionality for semantic object navigation.",
            "methods": [
              "getSemanticObjectController",
              "destroySemanticObjectController",
              "setSemanticObjectController"
            ]
          },
          {
            "name": "customToolbar",
            "singularName": "customToolbar",
            "type": "sap.m.Toolbar",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "An additional toolbar that can be added by the users, which can contain further custom buttons, controls, etc.",
            "methods": [
              "getCustomToolbar",
              "destroyCustomToolbar",
              "setCustomToolbar"
            ]
          },
          {
            "name": "toolbar",
            "singularName": "toolbar",
            "type": "sap.m.Toolbar",
            "cardinality": "0..1",
            "visibility": "hidden",
            "description": "Toolbar",
            "methods": ["getToolbar", "destroyToolbar", "setToolbar"]
          }
        ],
        "defaultAggregation": "groups",
        "associations": [
          {
            "name": "ariaLabelledBy",
            "singularName": "ariaLabelledBy",
            "type": "sap.ui.core.Control",
            "cardinality": "0..n",
            "visibility": "public",
            "since": "1.56.0",
            "description": "Association to controls / IDs that label this control (see WAI-ARIA attribute <code>aria-labelledby</code>).",
            "methods": [
              "getAriaLabelledBy",
              "addAriaLabelledBy",
              "removeAriaLabelledBy",
              "removeAllAriaLabelledBy"
            ]
          }
        ],
        "events": [
          {
            "name": "editToggled",
            "visibility": "public",
            "description": "This event is fired when the editable property is toggled.",
            "parameters": {
              "editable": {
                "name": "editable",
                "type": "boolean",
                "description": "If <code>true</code>, the control is in edit mode"
              }
            },
            "methods": [
              "attachEditToggled",
              "detachEditToggled",
              "fireEditToggled"
            ]
          },
          {
            "name": "checked",
            "visibility": "public",
            "description": "This event is fired after check was performed.",
            "parameters": {
              "erroneousFields": {
                "name": "erroneousFields",
                "type": "sap.ui.comp.smartfield.SmartField[]",
                "description": "An array containing all smart fields with errors"
              }
            },
            "methods": ["attachChecked", "detachChecked", "fireChecked"]
          }
        ],
        "designtime": "sap/ui/comp/designtime/smartform/SmartForm.designtime"
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new smartform/SmartForm.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.",
        "references": [
          "{@link topic:99e33bdfde074bb48d2e603fa5ecd2d0 Smart Form}"
        ]
      },
      "events": [
        {
          "name": "checked",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "erroneousFields": {
                      "name": "erroneousFields",
                      "type": "sap.ui.comp.smartfield.SmartField[]",
                      "optional": false,
                      "description": "An array containing all smart fields with errors"
                    }
                  }
                }
              }
            }
          ],
          "description": "This event is fired after check was performed."
        },
        {
          "name": "editToggled",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "editable": {
                      "name": "editable",
                      "type": "boolean",
                      "optional": false,
                      "description": "If <code>true</code>, the control is in edit mode"
                    }
                  }
                }
              }
            }
          ],
          "description": "This event is fired when the editable property is toggled."
        }
      ],
      "methods": [
        {
          "name": "addAriaLabelledBy",
          "visibility": "public",
          "since": "1.56.0",
          "returnValue": {
            "type": "sap.ui.comp.smartform.SmartForm",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "vAriaLabelledBy",
              "type": "sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaLabelledBy to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "addCustomData",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartform.GroupElement",
            "description": "Reference to <code>this</code> to allow method chaining."
          },
          "parameters": [
            {
              "name": "oCustomData",
              "type": "sap.ui.core.CustomData",
              "optional": false,
              "description": "the customData to add; if empty, nothing is added"
            }
          ],
          "description": "Adds some customData into the aggregation <code>customData</code>.\n\n<b>Note:</b> <code>customData</code> that is used by the <code>SmartField</code> control itself is also added to the <code>Group</code> elements, <code>GroupElement</code> elements and the <code>SmartField</code> controls in the children hierarchy. Additional <code>customData</code> that is not used by the <code>SmartField</code> control internally might not be added."
        },
        {
          "name": "addGroup",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartform.SmartForm",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oGroup",
              "type": "sap.ui.comp.smartform.Group",
              "optional": false,
              "description": "The group to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some group to the aggregation {@link #getGroups groups}."
        },
        {
          "name": "attachChecked",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartform.SmartForm",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartform.SmartForm</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:checked checked} event of this <code>sap.ui.comp.smartform.SmartForm</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartform.SmartForm</code> itself.\n\nThis event is fired after check was performed."
        },
        {
          "name": "attachEditToggled",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartform.SmartForm",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartform.SmartForm</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:editToggled editToggled} event of this <code>sap.ui.comp.smartform.SmartForm</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartform.SmartForm</code> itself.\n\nThis event is fired when the editable property is toggled."
        },
        {
          "name": "check",
          "visibility": "public",
          "returnValue": {
            "type": "string[]",
            "description": "An array of fields with errors"
          },
          "parameters": [
            {
              "name": "bConsiderOnlyVisible",
              "type": "boolean",
              "optional": false,
              "description": "Determines is only visible fields in visible groups should be considered. default: <code>true</code>"
            }
          ],
          "description": "Checks smart fields for client errors."
        },
        {
          "name": "destroyCustomToolbar",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartform.SmartForm",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the customToolbar in the aggregation {@link #getCustomToolbar customToolbar}."
        },
        {
          "name": "destroyGroups",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartform.SmartForm",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the groups in the aggregation {@link #getGroups groups}."
        },
        {
          "name": "destroyLayout",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartform.SmartForm",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the layout in the aggregation {@link #getLayout layout}."
        },
        {
          "name": "destroySemanticObjectController",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartform.SmartForm",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the semanticObjectController in the aggregation {@link #getSemanticObjectController semanticObjectController}."
        },
        {
          "name": "detachChecked",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartform.SmartForm",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:checked checked} event of this <code>sap.ui.comp.smartform.SmartForm</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachEditToggled",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartform.SmartForm",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:editToggled editToggled} event of this <code>sap.ui.comp.smartform.SmartForm</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.comp.smartform.SmartForm with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "fireChecked",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.comp.smartform.SmartForm",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "erroneousFields": {
                  "name": "erroneousFields",
                  "type": "sap.ui.comp.smartfield.SmartField[]",
                  "optional": true,
                  "description": "An array containing all smart fields with errors"
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:checked checked} to attached listeners."
        },
        {
          "name": "fireEditToggled",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.comp.smartform.SmartForm",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "editable": {
                  "name": "editable",
                  "type": "boolean",
                  "optional": true,
                  "description": "If <code>true</code>, the control is in edit mode"
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:editToggled editToggled} to attached listeners."
        },
        {
          "name": "getAriaLabelledBy",
          "visibility": "public",
          "since": "1.56.0",
          "returnValue": { "type": "sap.ui.core.ID[]" },
          "description": "Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "getCheckButton",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>checkButton</code>"
          },
          "description": "Gets current value of property {@link #getCheckButton checkButton}.\n\nSpecifies whether a check button is added to the toolbar.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getCustomToolbar",
          "visibility": "public",
          "returnValue": { "type": "sap.m.Toolbar" },
          "description": "Gets content of aggregation {@link #getCustomToolbar customToolbar}.\n\nAn additional toolbar that can be added by the users, which can contain further custom buttons, controls, etc."
        },
        {
          "name": "getEditable",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>editable</code>"
          },
          "description": "Gets current value of property {@link #getEditable editable}.\n\nApplies a device-specific and theme-specific line height and label alignment to the form rows if the form has editable content. If set, all (not only the editable) rows of the form will get the line height of editable fields.\n\nThe labels inside the form will be rendered by default in the according mode.\n\n<b>Note:</b> The setting of this property will be passed to all <code>SmartField</code> controls inside the form, so they will be editable if the form is editable.\n\n<b>Warning:</b> The setting of this property will not be passed to controls other than <code>SmartField</code>. For example, <code>Input</code> controls in a form with <code>editable</code> set to <code>false</code> are still editable.\n\nIf controls other than <code>SmartField</code> controls are used, and the edit mode of their control is not set correctly, this might lead to visual issues. The labels and fields might be misaligned, the labels might be rendered in the wrong mode, and the spacing between the single controls might be wrong. Also, controls that do not fit the mode might be rendered incorrectly.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getEditTogglable",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>editTogglable</code>"
          },
          "description": "Gets current value of property {@link #getEditTogglable editTogglable}.\n\nIf set to <code>true</code>, a button to toggle the <code>editable</code> property is shown in the toolbar.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getEntityType",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>entityType</code>"
          },
          "description": "Gets current value of property {@link #getEntityType entityType}.\n\nCSV of entity types for which the flexibility features are available.<br> For more information about SAPUI5 flexibility, refer to the Developer Guide.<br> <b>Note:</b> No validation is done. Please ensure that you do not add spaces or special characters."
        },
        {
          "name": "getExpandable",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>expandable</code>"
          },
          "description": "Gets current value of property {@link #getExpandable expandable}.\n\nSpecifies whether the control is expandable. Per default the control is not rendered as expanded.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getExpanded",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>expanded</code>"
          },
          "description": "Gets current value of property {@link #getExpanded expanded}.\n\nIf expandable, this property indicates whether the state is expanded or not. If expanded, then the toolbar (if available) and the content is rendered; if expanded is false, then only the headerText/headerToolbar is rendered."
        },
        {
          "name": "getFlexEnabled",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>flexEnabled</code>"
          },
          "description": "Gets current value of property {@link #getFlexEnabled flexEnabled}.\n\nSpecifies whether the form enables flexibility features, such as adding new fields.<br> For more information about SAPUI5 flexibility, refer to the Developer Guide.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getGroups",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.comp.smartform.Group[]" },
          "description": "Gets content of aggregation {@link #getGroups groups}.\n\nGroups are used to group form elements."
        },
        {
          "name": "getHorizontalLayoutGroupElementMinWidth",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>horizontalLayoutGroupElementMinWidth</code>"
          },
          "description": "Gets current value of property {@link #getHorizontalLayoutGroupElementMinWidth horizontalLayoutGroupElementMinWidth}.\n\nSpecifies the minimal size in pixels of all group elements of the form if the horizontal layout is used.",
          "deprecated": {
            "since": "1.48.0",
            "text": "please do not use this property as it does not have any effect on the current layout of the <code>SmartForm</code> control."
          }
        },
        {
          "name": "getIgnoredFields",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>ignoredFields</code>"
          },
          "description": "Gets current value of property {@link #getIgnoredFields ignoredFields}.\n\nCSV of fields that must be ignored in the OData metadata by the SmartForm control.<br> <b>Note:</b><br> No validation is done. Please ensure that you do not add spaces or special characters."
        },
        {
          "name": "getLayout",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.comp.smartform.SmartFormLayout" },
          "description": "Gets content of aggregation {@link #getLayout layout}.\n\nLayout settings to adjust the used layout."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.comp.smartform.SmartForm."
        },
        {
          "name": "getSemanticObjectController",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.SemanticObjectController"
          },
          "description": "Gets content of aggregation {@link #getSemanticObjectController semanticObjectController}.\n\nThe Semantic Object Controller allows the user to specify and overwrite functionality for semantic object navigation."
        },
        {
          "name": "getSmartFields",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.SmartField[]",
            "description": "An array of smart fields (might be empty)."
          },
          "parameters": [
            {
              "name": "bConsiderOnlyVisibleGroups",
              "type": "boolean",
              "optional": false,
              "description": "Determines if only visible <code>groups</code> are taken into account; default is true"
            },
            {
              "name": "bConsiderOnlyVisibleGroupElements",
              "type": "boolean",
              "optional": false,
              "description": "Determines if only visible <code>groupElement</code> elements are taken into account; default is false (to be compatible)"
            }
          ],
          "description": "Retrieves all the smart fields of the form.\n\n<b>Note:</b> Even invisible <code>SmartField</code> controls are returned if the <code>group</code> or <code>groupElement</code> is visible."
        },
        {
          "name": "getTitle",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>title</code>"
          },
          "description": "Gets current value of property {@link #getTitle title}.\n\nTitle of the form."
        },
        {
          "name": "getUseHorizontalLayout",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>useHorizontalLayout</code>"
          },
          "description": "Gets current value of property {@link #getUseHorizontalLayout useHorizontalLayout}.\n\nSpecifies whether the groups are rendered in a {@link sap.ui.layout.form.ResponsiveLayout ResponsiveLayout} with the label above the field. Each group is rendered in a new line.\n\n<b>Note:</b> This property should no longer be used. To arrange the fields in columns, <code>ColumnLayout</code> should be used in the <code>layout</code> property.\n\n<b>Note:</b> The value of this property will be passed on to the <code>useHorizontalLayout</code> property of all <code>Group</code> and <code>GroupElement</code> elements."
        },
        {
          "name": "getVisibleProperties",
          "visibility": "public",
          "returnValue": {
            "type": "string[]",
            "description": "The properties currently visible"
          },
          "description": "Returns the array of properties currently visible on the UI."
        },
        {
          "name": "indexOfGroup",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oGroup",
              "type": "sap.ui.comp.smartform.Group",
              "optional": false,
              "description": "The group whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.ui.comp.smartform.Group</code> in the aggregation {@link #getGroups groups}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "insertCustomData",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartform.GroupElement",
            "description": "Reference to <code>this</code> to allow method chaining."
          },
          "parameters": [
            {
              "name": "oCustomData",
              "type": "sap.ui.core.CustomData",
              "optional": false,
              "description": "the customData to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "the 0-based index the customData should be inserted at; for a negative value of iIndex, the customData is inserted at position 0; for a value greater than the current size of the aggregation, the customData is inserted at the last position"
            }
          ],
          "description": "Inserts some customData into the aggregation <code>customData</code>.\n\n<b>Note:</b> <code>customData</code> that is used by the <code>SmartField</code> control itself is also added to the <code>Group</code> elements, <code>GroupElement</code> elements and the <code>SmartField</code> controls in the children hierarchy. Additional <code>customData</code> that is not used by the <code>SmartField</code> control internally might not be added."
        },
        {
          "name": "insertGroup",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartform.SmartForm",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oGroup",
              "type": "sap.ui.comp.smartform.Group",
              "optional": false,
              "description": "The group to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the group should be inserted at; for a negative value of <code>iIndex</code>, the group is inserted at position 0; for a value greater than the current size of the aggregation, the group is inserted at the last position"
            }
          ],
          "description": "Inserts a group into the aggregation {@link #getGroups groups}."
        },
        {
          "name": "propagateGridDataSpan",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartform.SmartForm",
            "description": "<code>this</code> to allow method chaining."
          },
          "description": "Sets default span for <code>GridData</code> layout of group elements when used with horizontal layout.\n\n<b>Note:</b> There is no need to call this function as the update of all <code>GroupElement</code> elements inside the <code>SmartForm</code> control is triggered automatically if the <code>GridDataSpan</code> property of the <code>Layout</code> aggregation changes or the <code>Layout</code> aggregation is added."
        },
        {
          "name": "removeAllAriaLabelledBy",
          "visibility": "public",
          "since": "1.56.0",
          "returnValue": {
            "type": "sap.ui.core.ID[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "removeAllGroups",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartform.Group[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getGroups groups}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeAriaLabelledBy",
          "visibility": "public",
          "since": "1.56.0",
          "returnValue": {
            "type": "sap.ui.core.ID",
            "description": "The removed ariaLabelledBy or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vAriaLabelledBy",
              "type": "int|sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaLabelledBy to be removed or its index or ID"
            }
          ],
          "description": "Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "removeGroup",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartform.Group",
            "description": "The removed group or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vGroup",
              "type": "int|string|sap.ui.comp.smartform.Group",
              "optional": false,
              "description": "The group to remove or its index or id"
            }
          ],
          "description": "Removes a group from the aggregation {@link #getGroups groups}."
        },
        {
          "name": "setCheckButton",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartform.SmartForm",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bCheckButton",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>checkButton</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getCheckButton checkButton}.\n\nSpecifies whether a check button is added to the toolbar.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setCustomToolbar",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartform.SmartForm",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oCustomToolbar",
              "type": "sap.m.Toolbar",
              "optional": false,
              "description": "The customToolbar to set"
            }
          ],
          "description": "Sets the aggregated {@link #getCustomToolbar customToolbar}."
        },
        {
          "name": "setEditable",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartform.SmartForm",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bEditable",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>editable</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getEditable editable}.\n\nApplies a device-specific and theme-specific line height and label alignment to the form rows if the form has editable content. If set, all (not only the editable) rows of the form will get the line height of editable fields.\n\nThe labels inside the form will be rendered by default in the according mode.\n\n<b>Note:</b> The setting of this property will be passed to all <code>SmartField</code> controls inside the form, so they will be editable if the form is editable.\n\n<b>Warning:</b> The setting of this property will not be passed to controls other than <code>SmartField</code>. For example, <code>Input</code> controls in a form with <code>editable</code> set to <code>false</code> are still editable.\n\nIf controls other than <code>SmartField</code> controls are used, and the edit mode of their control is not set correctly, this might lead to visual issues. The labels and fields might be misaligned, the labels might be rendered in the wrong mode, and the spacing between the single controls might be wrong. Also, controls that do not fit the mode might be rendered incorrectly.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setEditTogglable",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartform.SmartForm",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bEditTogglable",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>editTogglable</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getEditTogglable editTogglable}.\n\nIf set to <code>true</code>, a button to toggle the <code>editable</code> property is shown in the toolbar.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setEntityType",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartform.SmartForm",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sEntityType",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>entityType</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getEntityType entityType}.\n\nCSV of entity types for which the flexibility features are available.<br> For more information about SAPUI5 flexibility, refer to the Developer Guide.<br> <b>Note:</b> No validation is done. Please ensure that you do not add spaces or special characters.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setExpandable",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartform.SmartForm",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bExpandable",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>expandable</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getExpandable expandable}.\n\nSpecifies whether the control is expandable. Per default the control is not rendered as expanded.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setExpanded",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartform.SmartForm",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bExpanded",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>expanded</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getExpanded expanded}.\n\nIf expandable, this property indicates whether the state is expanded or not. If expanded, then the toolbar (if available) and the content is rendered; if expanded is false, then only the headerText/headerToolbar is rendered.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setFlexEnabled",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartform.SmartForm",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bFlexEnabled",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>flexEnabled</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getFlexEnabled flexEnabled}.\n\nSpecifies whether the form enables flexibility features, such as adding new fields.<br> For more information about SAPUI5 flexibility, refer to the Developer Guide.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setFocusOnEditableControl",
          "visibility": "public",
          "since": "1.36.0",
          "description": "Sets the focus on the first editable control."
        },
        {
          "name": "setHorizontalLayoutGroupElementMinWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartform.SmartForm",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iHorizontalLayoutGroupElementMinWidth",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>horizontalLayoutGroupElementMinWidth</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getHorizontalLayoutGroupElementMinWidth horizontalLayoutGroupElementMinWidth}.\n\nSpecifies the minimal size in pixels of all group elements of the form if the horizontal layout is used.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.",
          "deprecated": {
            "since": "1.48.0",
            "text": "please do not use this property as it does not have any effect on the current layout of the <code>SmartForm</code> control."
          }
        },
        {
          "name": "setIgnoredFields",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartform.SmartForm",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sIgnoredFields",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>ignoredFields</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getIgnoredFields ignoredFields}.\n\nCSV of fields that must be ignored in the OData metadata by the SmartForm control.<br> <b>Note:</b><br> No validation is done. Please ensure that you do not add spaces or special characters.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setLayout",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartform.SmartForm",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oLayout",
              "type": "sap.ui.comp.smartform.SmartFormLayout",
              "optional": false,
              "description": "The layout to set"
            }
          ],
          "description": "Sets the aggregated {@link #getLayout layout}."
        },
        {
          "name": "setSemanticObjectController",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartform.SmartForm",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oSemanticObjectController",
              "type": "sap.ui.comp.navpopover.SemanticObjectController",
              "optional": false,
              "description": "The semanticObjectController to set"
            }
          ],
          "description": "Sets the aggregated {@link #getSemanticObjectController semanticObjectController}."
        },
        {
          "name": "setTitle",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartform.SmartForm",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sTitle",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>title</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getTitle title}.\n\nTitle of the form.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setUseHorizontalLayout",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartform.SmartForm",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bUseHorizontalLayout",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>useHorizontalLayout</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getUseHorizontalLayout useHorizontalLayout}.\n\nSpecifies whether the groups are rendered in a {@link sap.ui.layout.form.ResponsiveLayout ResponsiveLayout} with the label above the field. Each group is rendered in a new line.\n\n<b>Note:</b> This property should no longer be used. To arrange the fields in columns, <code>ColumnLayout</code> should be used in the <code>layout</code> property.\n\n<b>Note:</b> The value of this property will be passed on to the <code>useHorizontalLayout</code> property of all <code>Group</code> and <code>GroupElement</code> elements.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        }
      ]
    },
    {
      "kind": "interface",
      "name": "sap.ui.comp.smartform.SmartFormLayout",
      "basename": "SmartFormLayout",
      "resource": "sap/ui/comp/library.js",
      "module": "sap/ui/comp/library",
      "export": "smartform.SmartFormLayout",
      "static": true,
      "visibility": "public",
      "since": "1.56.0",
      "description": "Marker interface for SmartForm layouts.",
      "ui5-metamodel": true
    },
    {
      "kind": "enum",
      "name": "sap.ui.comp.smartlist.ListType",
      "basename": "ListType",
      "resource": "sap/ui/comp/library.js",
      "module": "sap/ui/comp/library",
      "export": "smartlist.ListType",
      "static": true,
      "visibility": "public",
      "since": "1.48",
      "description": "Provides enumeration sap.ui.comp.smartlist.ListType. A subset of list types that fit to a simple API returning one string.",
      "ui5-metamodel": true,
      "properties": [
        {
          "name": "List",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "A list (sap.m.List) control shall be created as the content of the SmartList, if no list already exists (default)"
        },
        {
          "name": "Tree",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "A tree (sap.m.Tree) control shall be created as the content of the SmartList, if no list/tree already exists"
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.comp.smartlist.SmartList",
      "basename": "SmartList",
      "resource": "sap/ui/comp/smartlist/SmartList.js",
      "module": "sap/ui/comp/smartlist/SmartList",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.48",
      "extends": "sap.m.VBox",
      "description": "A smart control to simplify using the <code>sap.m.List</code> and <code>sap.m.Tree</code> controls in list patterns. <h3>Overview</h3> The <code>SmartList</code> control creates a list or tree based on the configuration specified. There is, however, a difference to other smart controls: This control does not use annotations to automatically create its content. Hence, a template must always be provided for this control. <h3>Structure</h3> The <code>SmartList</code> control consists of the following elements: <ul> <li> <code>OverflowToolbar</code> control: Displays the header and other action buttons. Users can add their own toolbar and buttons in the view.</li> <li> <code>List</code> or <code>Tree</code> control: The actual list/tree control. Users can also add this in the view with the required configuration.</li> </ul> The <code>entitySet</code> property must be specified to use the control. This attribute is used to fetch the actual data.<br> The <code>listItemTemplate</code> aggregation must also be specified with the required item template, such as <code>StandardListItem/StandardTreeItem</code>, which will be used during binding. <h3><b>Note:</b></h3> Most of the attributes/properties are not dynamic and cannot be changed once the control has been initialized.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "entitySet",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.48.0",
            "description": "The entity set name from which to fetch data.<br> <i>Note:</i><br> This is not a dynamic UI5 property.",
            "methods": ["getEntitySet", "setEntitySet"]
          },
          {
            "name": "selectFields",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.48.0",
            "description": "CSV of fields that must be selected when request is sent to the backend.<br> <i>Note:</i><br> No validation is done. Please ensure that you do not add spaces or special characters.<br> This property is only needed when used together with an <code>ODataModel</code>.",
            "methods": ["getSelectFields", "setSelectFields"]
          },
          {
            "name": "expandFields",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.48.0",
            "description": "CSV of fields that must be expanded when request is sent to the backend.<br> <i>Note:</i><br> No validation is done. Please ensure that you do not add spaces or special characters.<br> This property is only needed when used together with an <code>ODataModel</code>.",
            "methods": ["getExpandFields", "setExpandFields"]
          },
          {
            "name": "showRowCount",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "since": "1.48.0",
            "description": "If set to <code>true</code> (default), the number of rows is shown along with the header text.<br> If set to <code>false</code>, the number of rows will not be shown on the user interface.<br> <i>Note:</i><br> To avoid sending dedicated OData requests in order to improve your application's performance, you must configure the binding of the list as required.",
            "methods": ["getShowRowCount", "setShowRowCount"]
          },
          {
            "name": "header",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.48.0",
            "description": "Specifies header text that is shown in list.",
            "methods": ["getHeader", "setHeader"]
          },
          {
            "name": "enableAutoBinding",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "since": "1.48.0",
            "description": "When set to <code>true</code>, this enables automatic binding of the list using the <code>listBindingPath</code> (if it exists) or <code>entitySet</code> property. This happens right after the <code>initialise</code> event has been fired.",
            "methods": ["getEnableAutoBinding", "setEnableAutoBinding"]
          },
          {
            "name": "listBindingPath",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.48.0",
            "description": "Specifies the path that is used during the binding of the list. If not specified, the <code>entitySet</code> property is used instead. (used only if binding is done automatically or when using <code>rebindList</code>)",
            "methods": ["getListBindingPath", "setListBindingPath"]
          },
          {
            "name": "listType",
            "type": "sap.ui.comp.smartlist.ListType",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.48.0",
            "description": "Specifies the type of list to be created in the <code>SmartList</code> control.<br> <i>Note:</i><br> If you add a <code>List</code> or <code>Tree</code> to the content of the <code>SmartList</code> control in the view, this property has no effect.",
            "methods": ["getListType", "setListType"]
          },
          {
            "name": "showFullScreenButton",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "since": "1.48.0",
            "description": "Controls the visibility of the full screen button.",
            "methods": ["getShowFullScreenButton", "setShowFullScreenButton"]
          }
        ],
        "aggregations": [
          {
            "name": "listItemTemplate",
            "singularName": "listItemTemplate",
            "type": "sap.m.ListItemBase",
            "cardinality": "0..1",
            "visibility": "public",
            "since": "1.48.0",
            "description": "Specifies the template that is used for the inner <code>List</code> or <code>Tree</code> control.<br> <b>Note:</b><br> This template is used when binding the <code>items</code> of <code>sap.m.List</code> or <code>sap.m.Tree</code> control, and will not be available in the <code>SmartList</code> control once the binding has been done.",
            "methods": [
              "getListItemTemplate",
              "destroyListItemTemplate",
              "setListItemTemplate"
            ]
          }
        ],
        "associations": [
          {
            "name": "smartFilter",
            "singularName": "smartFilter",
            "type": "sap.ui.core.Control",
            "cardinality": "0..1",
            "visibility": "public",
            "since": "1.48.0",
            "description": "The <code>SmartFilterBar</code> control to be linked to the <code>SmartList</code> control. Some events of the <code>SmartFilterBar</code> control are then used to fetch data, show overlay etc.",
            "methods": ["getSmartFilter", "setSmartFilter"]
          }
        ],
        "events": [
          {
            "name": "initialise",
            "visibility": "public",
            "since": "1.48.0",
            "description": "Event fired once the control has been initialized.",
            "methods": [
              "attachInitialise",
              "detachInitialise",
              "fireInitialise"
            ]
          },
          {
            "name": "beforeRebindList",
            "visibility": "public",
            "since": "1.48.0",
            "description": "Event fired right before the binding is being done.",
            "methods": [
              "attachBeforeRebindList",
              "detachBeforeRebindList",
              "fireBeforeRebindList"
            ]
          },
          {
            "name": "dataReceived",
            "visibility": "public",
            "since": "1.48.0",
            "description": "Event fired when data is received after binding. The event is usually only fired if the binding for the list is done by the <code>SmartList</code> control itself.",
            "methods": [
              "attachDataReceived",
              "detachDataReceived",
              "fireDataReceived"
            ]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new smartlist/SmartList.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "beforeRebindList",
          "visibility": "public",
          "since": "1.48.0",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "Event fired right before the binding is being done."
        },
        {
          "name": "dataReceived",
          "visibility": "public",
          "since": "1.48.0",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "Event fired when data is received after binding. The event is usually only fired if the binding for the list is done by the <code>SmartList</code> control itself."
        },
        {
          "name": "initialise",
          "visibility": "public",
          "since": "1.48.0",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "Event fired once the control has been initialized."
        }
      ],
      "methods": [
        {
          "name": "attachBeforeRebindList",
          "visibility": "public",
          "since": "1.48.0",
          "returnValue": {
            "type": "sap.ui.comp.smartlist.SmartList",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartlist.SmartList</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:beforeRebindList beforeRebindList} event of this <code>sap.ui.comp.smartlist.SmartList</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartlist.SmartList</code> itself.\n\nEvent fired right before the binding is being done."
        },
        {
          "name": "attachDataReceived",
          "visibility": "public",
          "since": "1.48.0",
          "returnValue": {
            "type": "sap.ui.comp.smartlist.SmartList",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartlist.SmartList</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:dataReceived dataReceived} event of this <code>sap.ui.comp.smartlist.SmartList</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartlist.SmartList</code> itself.\n\nEvent fired when data is received after binding. The event is usually only fired if the binding for the list is done by the <code>SmartList</code> control itself."
        },
        {
          "name": "attachInitialise",
          "visibility": "public",
          "since": "1.48.0",
          "returnValue": {
            "type": "sap.ui.comp.smartlist.SmartList",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartlist.SmartList</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:initialise initialise} event of this <code>sap.ui.comp.smartlist.SmartList</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartlist.SmartList</code> itself.\n\nEvent fired once the control has been initialized."
        },
        {
          "name": "destroyListItemTemplate",
          "visibility": "public",
          "since": "1.48.0",
          "returnValue": {
            "type": "sap.ui.comp.smartlist.SmartList",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the listItemTemplate in the aggregation {@link #getListItemTemplate listItemTemplate}."
        },
        {
          "name": "detachBeforeRebindList",
          "visibility": "public",
          "since": "1.48.0",
          "returnValue": {
            "type": "sap.ui.comp.smartlist.SmartList",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:beforeRebindList beforeRebindList} event of this <code>sap.ui.comp.smartlist.SmartList</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachDataReceived",
          "visibility": "public",
          "since": "1.48.0",
          "returnValue": {
            "type": "sap.ui.comp.smartlist.SmartList",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:dataReceived dataReceived} event of this <code>sap.ui.comp.smartlist.SmartList</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachInitialise",
          "visibility": "public",
          "since": "1.48.0",
          "returnValue": {
            "type": "sap.ui.comp.smartlist.SmartList",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:initialise initialise} event of this <code>sap.ui.comp.smartlist.SmartList</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "exit",
          "visibility": "protected",
          "description": "Cleans up the control"
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.comp.smartlist.SmartList with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.m.VBox.extend}."
        },
        {
          "name": "fireBeforeRebindList",
          "visibility": "protected",
          "since": "1.48.0",
          "returnValue": {
            "type": "sap.ui.comp.smartlist.SmartList",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:beforeRebindList beforeRebindList} to attached listeners."
        },
        {
          "name": "fireDataReceived",
          "visibility": "protected",
          "since": "1.48.0",
          "returnValue": {
            "type": "sap.ui.comp.smartlist.SmartList",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:dataReceived dataReceived} to attached listeners."
        },
        {
          "name": "fireInitialise",
          "visibility": "protected",
          "since": "1.48.0",
          "returnValue": {
            "type": "sap.ui.comp.smartlist.SmartList",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:initialise initialise} to attached listeners."
        },
        {
          "name": "getEnableAutoBinding",
          "visibility": "public",
          "since": "1.48.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>enableAutoBinding</code>"
          },
          "description": "Gets current value of property {@link #getEnableAutoBinding enableAutoBinding}.\n\nWhen set to <code>true</code>, this enables automatic binding of the list using the <code>listBindingPath</code> (if it exists) or <code>entitySet</code> property. This happens right after the <code>initialise</code> event has been fired.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getEntitySet",
          "visibility": "public",
          "since": "1.48.0",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>entitySet</code>"
          },
          "description": "Gets current value of property {@link #getEntitySet entitySet}.\n\nThe entity set name from which to fetch data.<br> <i>Note:</i><br> This is not a dynamic UI5 property."
        },
        {
          "name": "getExpandFields",
          "visibility": "public",
          "since": "1.48.0",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>expandFields</code>"
          },
          "description": "Gets current value of property {@link #getExpandFields expandFields}.\n\nCSV of fields that must be expanded when request is sent to the backend.<br> <i>Note:</i><br> No validation is done. Please ensure that you do not add spaces or special characters.<br> This property is only needed when used together with an <code>ODataModel</code>."
        },
        {
          "name": "getHeader",
          "visibility": "public",
          "since": "1.48.0",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>header</code>"
          },
          "description": "Gets current value of property {@link #getHeader header}.\n\nSpecifies header text that is shown in list."
        },
        {
          "name": "getList",
          "visibility": "public",
          "returnValue": { "type": "object", "description": "the control" },
          "description": "Returns the <code>List</code> or <code>Tree</code> used internally."
        },
        {
          "name": "getListBindingPath",
          "visibility": "public",
          "since": "1.48.0",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>listBindingPath</code>"
          },
          "description": "Gets current value of property {@link #getListBindingPath listBindingPath}.\n\nSpecifies the path that is used during the binding of the list. If not specified, the <code>entitySet</code> property is used instead. (used only if binding is done automatically or when using <code>rebindList</code>)"
        },
        {
          "name": "getListItemTemplate",
          "visibility": "public",
          "since": "1.48.0",
          "returnValue": { "type": "sap.m.ListItemBase" },
          "description": "Gets content of aggregation {@link #getListItemTemplate listItemTemplate}.\n\nSpecifies the template that is used for the inner <code>List</code> or <code>Tree</code> control.<br> <b>Note:</b><br> This template is used when binding the <code>items</code> of <code>sap.m.List</code> or <code>sap.m.Tree</code> control, and will not be available in the <code>SmartList</code> control once the binding has been done."
        },
        {
          "name": "getListType",
          "visibility": "public",
          "since": "1.48.0",
          "returnValue": {
            "type": "sap.ui.comp.smartlist.ListType",
            "description": "Value of property <code>listType</code>"
          },
          "description": "Gets current value of property {@link #getListType listType}.\n\nSpecifies the type of list to be created in the <code>SmartList</code> control.<br> <i>Note:</i><br> If you add a <code>List</code> or <code>Tree</code> to the content of the <code>SmartList</code> control in the view, this property has no effect."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.comp.smartlist.SmartList."
        },
        {
          "name": "getSelectFields",
          "visibility": "public",
          "since": "1.48.0",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>selectFields</code>"
          },
          "description": "Gets current value of property {@link #getSelectFields selectFields}.\n\nCSV of fields that must be selected when request is sent to the backend.<br> <i>Note:</i><br> No validation is done. Please ensure that you do not add spaces or special characters.<br> This property is only needed when used together with an <code>ODataModel</code>."
        },
        {
          "name": "getShowFullScreenButton",
          "visibility": "public",
          "since": "1.48.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showFullScreenButton</code>"
          },
          "description": "Gets current value of property {@link #getShowFullScreenButton showFullScreenButton}.\n\nControls the visibility of the full screen button.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getShowRowCount",
          "visibility": "public",
          "since": "1.48.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showRowCount</code>"
          },
          "description": "Gets current value of property {@link #getShowRowCount showRowCount}.\n\nIf set to <code>true</code> (default), the number of rows is shown along with the header text.<br> If set to <code>false</code>, the number of rows will not be shown on the user interface.<br> <i>Note:</i><br> To avoid sending dedicated OData requests in order to improve your application's performance, you must configure the binding of the list as required.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getSmartFilter",
          "visibility": "public",
          "since": "1.48.0",
          "returnValue": { "type": "sap.ui.core.ID" },
          "description": "ID of the element which is the current target of the association {@link #getSmartFilter smartFilter}, or <code>null</code>."
        },
        {
          "name": "isInitialised",
          "visibility": "protected",
          "returnValue": {
            "type": "boolean",
            "description": "returns whether control has already been initialized"
          },
          "description": "Checks whether the control is initialized."
        },
        {
          "name": "rebindList",
          "visibility": "protected",
          "parameters": [
            {
              "name": "bForceRebind",
              "type": "boolean",
              "optional": false,
              "description": "force bind call to be triggered on the inner list"
            }
          ],
          "description": "This can be used to trigger binding on the list used in the SmartList"
        },
        {
          "name": "setEnableAutoBinding",
          "visibility": "public",
          "since": "1.48.0",
          "returnValue": {
            "type": "sap.ui.comp.smartlist.SmartList",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bEnableAutoBinding",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>enableAutoBinding</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getEnableAutoBinding enableAutoBinding}.\n\nWhen set to <code>true</code>, this enables automatic binding of the list using the <code>listBindingPath</code> (if it exists) or <code>entitySet</code> property. This happens right after the <code>initialise</code> event has been fired.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setEntitySet",
          "visibility": "public",
          "since": "1.48.0",
          "returnValue": {
            "type": "sap.ui.comp.smartlist.SmartList",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sEntitySet",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>entitySet</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getEntitySet entitySet}.\n\nThe entity set name from which to fetch data.<br> <i>Note:</i><br> This is not a dynamic UI5 property.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setExpandFields",
          "visibility": "public",
          "since": "1.48.0",
          "returnValue": {
            "type": "sap.ui.comp.smartlist.SmartList",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sExpandFields",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>expandFields</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getExpandFields expandFields}.\n\nCSV of fields that must be expanded when request is sent to the backend.<br> <i>Note:</i><br> No validation is done. Please ensure that you do not add spaces or special characters.<br> This property is only needed when used together with an <code>ODataModel</code>.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setHeader",
          "visibility": "public",
          "since": "1.48.0",
          "returnValue": {
            "type": "sap.ui.comp.smartlist.SmartList",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sHeader",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>header</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getHeader header}.\n\nSpecifies header text that is shown in list.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setListBindingPath",
          "visibility": "public",
          "since": "1.48.0",
          "returnValue": {
            "type": "sap.ui.comp.smartlist.SmartList",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sListBindingPath",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>listBindingPath</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getListBindingPath listBindingPath}.\n\nSpecifies the path that is used during the binding of the list. If not specified, the <code>entitySet</code> property is used instead. (used only if binding is done automatically or when using <code>rebindList</code>)\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setListItemTemplate",
          "visibility": "public",
          "since": "1.48.0",
          "returnValue": {
            "type": "sap.ui.comp.smartlist.SmartList",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oListItemTemplate",
              "type": "sap.m.ListItemBase",
              "optional": false,
              "description": "The listItemTemplate to set"
            }
          ],
          "description": "Sets the aggregated {@link #getListItemTemplate listItemTemplate}."
        },
        {
          "name": "setListType",
          "visibility": "public",
          "since": "1.48.0",
          "returnValue": {
            "type": "sap.ui.comp.smartlist.SmartList",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sListType",
              "type": "sap.ui.comp.smartlist.ListType",
              "optional": false,
              "description": "New value for property <code>listType</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getListType listType}.\n\nSpecifies the type of list to be created in the <code>SmartList</code> control.<br> <i>Note:</i><br> If you add a <code>List</code> or <code>Tree</code> to the content of the <code>SmartList</code> control in the view, this property has no effect.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setSelectFields",
          "visibility": "public",
          "since": "1.48.0",
          "returnValue": {
            "type": "sap.ui.comp.smartlist.SmartList",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sSelectFields",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>selectFields</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSelectFields selectFields}.\n\nCSV of fields that must be selected when request is sent to the backend.<br> <i>Note:</i><br> No validation is done. Please ensure that you do not add spaces or special characters.<br> This property is only needed when used together with an <code>ODataModel</code>.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setShowFullScreenButton",
          "visibility": "public",
          "since": "1.48.0",
          "returnValue": {
            "type": "sap.ui.comp.smartlist.SmartList",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowFullScreenButton",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showFullScreenButton</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowFullScreenButton showFullScreenButton}.\n\nControls the visibility of the full screen button.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setShowRowCount",
          "visibility": "public",
          "since": "1.48.0",
          "returnValue": {
            "type": "sap.ui.comp.smartlist.SmartList",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowRowCount",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showRowCount</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowRowCount showRowCount}.\n\nIf set to <code>true</code> (default), the number of rows is shown along with the header text.<br> If set to <code>false</code>, the number of rows will not be shown on the user interface.<br> <i>Note:</i><br> To avoid sending dedicated OData requests in order to improve your application's performance, you must configure the binding of the list as required.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setSmartFilter",
          "visibility": "public",
          "since": "1.48.0",
          "returnValue": {
            "type": "sap.ui.comp.smartlist.SmartList",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oSmartFilter",
              "type": "sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "ID of an element which becomes the new target of this smartFilter association; alternatively, an element instance may be given"
            }
          ],
          "description": "Sets the associated {@link #getSmartFilter smartFilter}."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.comp.smartmicrochart.SmartAreaMicroChart",
      "basename": "SmartAreaMicroChart",
      "resource": "sap/ui/comp/smartmicrochart/SmartAreaMicroChart.js",
      "module": "sap/ui/comp/smartmicrochart/SmartAreaMicroChart",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.38",
      "extends": "sap.ui.comp.smartmicrochart.SmartMicroChartBase",
      "description": "The SmartAreaMicroChart control creates a AreaMicroChart based on OData metadata and the configuration specified. The entitySet attribute must be specified to use the control. This attribute is used to fetch fields from OData metadata, from which Micro Area Chart UI will be generated; it can also be used to fetch the actual chart data.<br> <b><i>Note:</i></b><br> Most of the attributes/properties are not dynamic and cannot be changed once the control has been initialised.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "enableAutoBinding",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "description": "Only <code>true</code> value is supported: the chart will be bound to the chartBindingPath or to the entitySet",
            "methods": ["getEnableAutoBinding", "setEnableAutoBinding"]
          }
        ],
        "annotations": [
          {
            "name": "chart",
            "namespace": "com.sap.vocabularies.UI.v1",
            "target": ["EntityType"],
            "annotation": "Chart",
            "defaultValue": "null",
            "since": "1.38.0",
            "description": "Renders a AreaMicroChart based on the <code>Chart</code> annotation. <i>XML Example of SmartAreaMicroChart with Chart Annotation</i>\n\n<pre>\n   &lt;Annotations Target=&quot;AmcNamespace.StockPrice&quot; xmlns=&quot;http://docs.oasis-open.org/odata/ns/edm&quot;&gt;\n     &lt;Annotation Term=&quot;com.sap.vocabularies.UI.v1.Chart&quot; Qualifier=&quot;AreaChartQualifier&quot;&gt;\n       &lt;Record&gt;\n         &lt;PropertyValue Property=&quot;Title&quot; Path=&quot;Title&quot; /&gt;\n         &lt;PropertyValue Property=&quot;ChartType&quot; EnumMember=&quot;com.sap.vocabularies.UI.v1.Chart/Area&quot; /&gt;\n         &lt;PropertyValue Property=&quot;Description&quot; Path=&quot;Description&quot; /&gt;\n         &lt;PropertyValue Property=&quot;Dimensions&quot;&gt;\n           &lt;Collection&gt;\n             &lt;PropertyPath&gt;Day&lt;/PropertyPath&gt;\n           &lt;/Collection&gt;\n         &lt;/PropertyValue&gt;\n         &lt;PropertyValue Property=&quot;Measures&quot;&gt;\n           &lt;Collection&gt;\n             &lt;PropertyPath&gt;Price&lt;/PropertyPath&gt;\n           &lt;/Collection&gt;\n         &lt;/PropertyValue&gt;\n         &lt;PropertyValue Property=&quot;MeasureAttributes&quot;&gt;\n           &lt;Collection&gt;\n             &lt;Record Type=&quot;com.sap.vocabularies.UI.v1.ChartMeasureAttributeType&quot;&gt;\n               &lt;PropertyValue Property=&quot;Measure&quot; PropertyPath=&quot;Price&quot; /&gt;\n               &lt;PropertyValue Property=&quot;Role&quot; EnumMember=&quot;com.sap.vocabularies.UI.v1.ChartMeasureRoleType/Axis1&quot; /&gt;\n               &lt;PropertyValue Property=&quot;DataPoint&quot; AnnotationPath=&quot;@com.sap.vocabularies.UI.v1.DataPoint#AreaChartDataPoint&quot; /&gt;\n             &lt;/Record&gt;\n           &lt;/Collection&gt;\n         &lt;/PropertyValue&gt;\n       &lt;/Record&gt;\n     &lt;/Annotation&gt;\n   &lt;/Annotations&gt;\n</pre>"
          },
          {
            "name": "chartDefinitionType",
            "namespace": "com.sap.vocabularies.UI.v1",
            "target": ["EntityType"],
            "annotation": "ChartDefinitionType",
            "defaultValue": "null",
            "since": "1.38.0",
            "description": "The <code>ChartDefinitionType</code> is <code>ComplexType</code> that is used to describe the <code>Chart</code> annotation."
          },
          {
            "name": "chartType",
            "namespace": "com.sap.vocabularies.UI.v1",
            "target": ["Property"],
            "annotation": "ChartType",
            "defaultValue": "null",
            "since": "1.38.0",
            "description": "The <code>ChartType</code> is <code>EnumType</code> that is provided within the <code>Chart</code> annotation. The <code>ChartType</code> property value must be Area or Line. <i>XML Example of using ChartType property with Area</i>\n\n<pre>\n   &lt;Annotation Term=&quot;com.sap.vocabularies.UI.v1.Chart&quot; Qualifier=&quot;AreaChartQualifier&quot;&gt;\n     &lt;Record Type=&quot;com.sap.vocabularies.UI.v1.ChartDefinitionType&quot;&gt;\n       &lt;PropertyValue Property=&quot;ChartType&quot; EnumMember=&quot;com.sap.vocabularies.UI.v1.Chart/Area&quot; /&gt;\n     &lt;/Record&gt;\n   &lt;/Annotation&gt;\n</pre>"
          },
          {
            "name": "dataPoint",
            "namespace": "com.sap.vocabularies.UI.v1",
            "target": ["EntityType"],
            "annotation": "DataPoint",
            "defaultValue": "null",
            "since": "1.38.0",
            "description": "Based on the <code>DataPoint</code> annotation that is provided by the <code>MeasureAttributes</code>, the color of the chart is defined due to the thresholds by using the <code>CriticalityCalculation</code> property and <code>ImprovementDirection</code> property. <code>DataPoint</code> must be defined for an <code>EntityType</code>. The <code>total</code> chart property is defined by <code>MaximumValue</code> annotation.\n\n<pre>\n   &lt;Annotation Term=&quot;com.sap.vocabularies.UI.v1.DataPoint&quot; Qualifier=&quot;AreaChartDataPoint&quot; &gt;\n     &lt;Record Type=&quot;com.sap.vocabularies.UI.v1.DataPointType&quot;&gt;\n       &lt;PropertyValue Property=&quot;Value&quot; Path=&quot;Price&quot; /&gt;\n       &lt;PropertyValue Property=&quot;TargetValue&quot; Path=&quot;PriceTarget&quot;/&gt;\n       &lt;PropertyValue Property=&quot;CriticalityCalculation&quot;&gt;\n         &lt;Record Type=&quot;UI.CriticalityCalculationType&quot;&gt;\n           &lt;PropertyValue Property=&quot;ImprovementDirection&quot; EnumMember=&quot;UI.ImprovementDirectionType/Target&quot; /&gt;\n           &lt;PropertyValue Property=&quot;DeviationRangeLowValue&quot; Path=&quot;PriceDeviationLowerBound&quot;/&gt;\n           &lt;PropertyValue Property=&quot;ToleranceRangeLowValue&quot; Path=&quot;PriceToleranceLowerBound&quot;/&gt;\n           &lt;PropertyValue Property=&quot;ToleranceRangeHighValue&quot; Path=&quot;PriceToleranceUpperBound&quot;/&gt;\n           &lt;PropertyValue Property=&quot;DeviationRangeHighValue&quot; Path=&quot;PriceDeviationUpperBound&quot;/&gt;\n         &lt;/Record&gt;\n       &lt;/PropertyValue&gt;\n     &lt;/Record&gt;\n   &lt;/Annotation&gt;\n</pre>"
          },
          {
            "name": "dataPointType",
            "namespace": "com.sap.vocabularies.UI.v1",
            "target": ["EntityType"],
            "annotation": "DataPointType",
            "defaultValue": "null",
            "since": "1.38.0",
            "description": "The <code>DataPointType</code> is <code>ComplexType</code> that is used to define the type of the <code>DataPoint</code> annotation."
          },
          {
            "name": "criticalityCalculationType",
            "namespace": "com.sap.vocabularies.UI.v1",
            "target": ["Property"],
            "annotation": "CriticalityCalculationType",
            "defaultValue": "null",
            "since": "1.38.0",
            "description": "The <code>CriticalityCalculationType</code> is <code>ComplexType</code> that is used to define the type of <code>CriticalityCalculation</code> property in the <code>DataPoint</code> annotation. <i>XML Example of using CriticalityCalculation property with the CriticalityCalculationType type</i>\n\n<pre>\n   &lt;PropertyValue Property=&quot;CriticalityCalculation&quot;&gt;\n     &lt;Record Type=&quot;com.sap.vocabularies.UI.v1.CriticalityCalculationType&quot;&gt;\n       &lt;PropertyValue Property=&quot;ImprovementDirection&quot; EnumMember=&quot;com.sap.vocabularies.UI.v1.ImprovementDirectionType/Target&quot; /&gt;\n       &lt;PropertyValue Property=&quot;DeviationRangeLowValue&quot; Path=&quot;PriceDeviationLowerBound&quot;/&gt;\n       &lt;PropertyValue Property=&quot;ToleranceRangeLowValue&quot; Path=&quot;PriceToleranceLowerBound&quot;/&gt;\n       &lt;PropertyValue Property=&quot;ToleranceRangeHighValue&quot; Path=&quot;PriceToleranceUpperBound&quot;/&gt;\n       &lt;PropertyValue Property=&quot;DeviationRangeHighValue&quot; Path=&quot;PriceDeviationUpperBound&quot;/&gt;\n     &lt;/Record&gt;\n   &lt;/PropertyValue&gt;\n</pre>"
          },
          {
            "name": "currency",
            "namespace": "Org.OData.Measures.V1",
            "target": ["Property"],
            "annotation": "ISOCurrency",
            "defaultValue": "null",
            "since": "1.38.0",
            "description": "The <code>ISOCurrency</code> annotation describes the <code>Value</code> property of the <code>DataPoint</code> annotation. <i>XML Example of using ISOCurrency annotation</i>\n\n<pre>\n   &lt;Property Name=&quot;Revenue&quot;&gt;\n      &lt;Annotation Term=&quot;Org.OData.Measures.V1.ISOCurrency&quot; Path=&quot;Currency&quot; /&gt;\n   &lt;/Property&gt;\n   &lt;Property Name=&quot;Currency&quot; type=&quot;Edm.String&quot; /&gt;\n</pre>"
          },
          {
            "name": "unit",
            "namespace": "Org.OData.Measures.V1",
            "target": ["Property"],
            "annotation": "Unit",
            "defaultValue": "null",
            "since": "1.38.0",
            "description": "The <code>Unit</code> annotation describes the <code>Value</code> property of the <code>DataPoint</code> annotation. <i>XML Example of using Unit annotation</i>\n\n<pre>\n   &lt;Property Name=&quot;Revenue&quot;&gt;\n      &lt;Annotation Term=&quot;Org.OData.Measures.V1.Unit&quot; Path=&quot;Currency&quot; /&gt;\n   &lt;/Property&gt;\n   &lt;Property Name=&quot;Currency&quot; type=&quot;Edm.String&quot; /&gt;\n</pre>"
          },
          {
            "name": "isCalendarYear",
            "namespace": "com.sap.vocabularies.Common.v1",
            "target": ["Property"],
            "annotation": "IsCalendarYear",
            "defaultValue": "null",
            "since": "1.44.0",
            "description": "The <code>IsCalendarYear</code> annotation describes the Dimensions property in the <code>Chart</code> annotation. A corresponding formatter is used to format the value of the Dimensions property. <i>XML Example of using IsCalendarYear annotation</i>\n\n<pre>\n   &lt;Property Name=&quot;Date&quot;&gt;\n      &lt;Annotation Term=&quot;com.sap.vocabularies.Common.v1.IsCalendarYear&quot;/&gt;\n   &lt;/Property&gt;\n</pre>"
          },
          {
            "name": "isCalendarYearMonth",
            "namespace": "com.sap.vocabularies.Common.v1",
            "target": ["Property"],
            "annotation": "IsCalendarYearMonth",
            "defaultValue": "null",
            "since": "1.44.0",
            "description": "The <code>IsCalendarYearMonth</code> annotation describes the Dimensions property in the <code>Chart</code> annotation. A corresponding formatter is used to format the value of the Dimensions property. <i>XML Example of using IsCalendarYearMonth annotation</i>\n\n<pre>\n   &lt;Property Name=&quot;Date&quot;&gt;\n      &lt;Annotation Term=&quot;com.sap.vocabularies.Common.v1.IsCalendarYearMonth&quot;/&gt;\n   &lt;/Property&gt;\n</pre>"
          },
          {
            "name": "isCalendarDate",
            "namespace": "com.sap.vocabularies.Common.v1",
            "target": ["Property"],
            "annotation": "IsCalendarDate",
            "defaultValue": "null",
            "since": "1.44.0",
            "description": "The <code>IsCalendarDate</code> annotation describes the Dimensions property in the <code>Chart</code> annotation. A corresponding formatter is used to format the value of the Dimensions property. <i>XML Example of using IsCalendarDate annotation</i>\n\n<pre>\n   &lt;Property Name=&quot;Date&quot;&gt;\n      &lt;Annotation Term=&quot;com.sap.vocabularies.Common.v1.IsCalendarDate&quot;/&gt;\n   &lt;/Property&gt;\n</pre>"
          }
        ],
        "designtime": "sap/ui/comp/designtime/smartmicrochart/SmartAreaMicroChart.designtime"
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new sap.ui.comp.smartmicrochart.SmartAreaMicroChart.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.comp.smartmicrochart.SmartAreaMicroChart with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.comp.smartmicrochart.SmartMicroChartBase.extend}."
        },
        {
          "name": "getEnableAutoBinding",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>enableAutoBinding</code>"
          },
          "description": "Gets current value of property {@link #getEnableAutoBinding enableAutoBinding}.\n\nOnly <code>true</code> value is supported: the chart will be bound to the chartBindingPath or to the entitySet\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.comp.smartmicrochart.SmartAreaMicroChart."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.comp.smartmicrochart.SmartBulletMicroChart",
      "basename": "SmartBulletMicroChart",
      "resource": "sap/ui/comp/smartmicrochart/SmartBulletMicroChart.js",
      "module": "sap/ui/comp/smartmicrochart/SmartBulletMicroChart",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.38",
      "extends": "sap.ui.comp.smartmicrochart.SmartMicroChartBase",
      "description": "The SmartBulletMicroChart control creates a <code>sap.suite.ui.microchart.BulletMicroChart</code> based on OData metadata and the configuration specified by <code>mSettings</code>. The entitySet attribute must be specified to use the control. This attribute is used to fetch metadata and annotation information from the given default OData model. Based on this, the BulletMicroChart UI is created. <br> <b><i>Note:</i></b><br> Most of the attributes/properties are not dynamic and cannot be changed once the control has been initialized.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "enableAutoBinding",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "description": "If set to <code>true</code>, this enables automatic binding of the chart using the chartBindingPath (if it exists) property.",
            "methods": ["getEnableAutoBinding", "setEnableAutoBinding"]
          }
        ],
        "annotations": [
          {
            "name": "chart",
            "namespace": "com.sap.vocabularies.UI.v1",
            "target": ["EntityType"],
            "annotation": "Chart",
            "defaultValue": "null",
            "since": "1.38.0",
            "description": "Renders a BulletMicroChart based on the <code>Chart</code> annotation. <i>XML Example of SmartBulletMicroChart with Chart annotation</i>\n\n<pre>\n   &lt;Annotations Target=&quot;BmcNamespace.ProductType&quot; xmlns=&quot;http://docs.oasis-open.org/odata/ns/edm&quot;&gt;\n     &lt;Annotation Term=&quot;com.sap.vocabularies.UI.v1.Chart&quot; Qualifier=&quot;BulletChartQualifier&quot;&gt;\n       &lt;Record&gt;\n         &lt;PropertyValue Property=&quot;Title&quot; Path=&quot;Title&quot; /&gt;\n         &lt;PropertyValue Property=&quot;ChartType&quot; EnumMember=&quot;com.sap.vocabularies.UI.v1.Chart/Bullet&quot; /&gt;\n         &lt;PropertyValue Property=&quot;Description&quot; Path=&quot;Description&quot; /&gt;\n         &lt;PropertyValue Property=&quot;Measures&quot;&gt;\n           &lt;Collection&gt;\n             &lt;PropertyPath&gt;Revenue&lt;/PropertyPath&gt;\n           &lt;/Collection&gt;\n         &lt;/PropertyValue&gt;\n         &lt;PropertyValue Property=&quot;MeasureAttributes&quot;&gt;\n           &lt;Collection&gt;\n             &lt;Record Type=&quot;com.sap.vocabularies.UI.v1.ChartMeasureAttributeType&quot;&gt;\n               &lt;PropertyValue Property=&quot;Measure&quot; PropertyPath=&quot;Revenue&quot; /&gt;\n               &lt;PropertyValue Property=&quot;Role&quot; EnumMember=&quot;com.sap.vocabularies.UI.v1.ChartMeasureRoleType/Axis1&quot; /&gt;\n               &lt;PropertyValue Property=&quot;DataPoint&quot; AnnotationPath=&quot;@com.sap.vocabularies.UI.v1.DataPoint#BulletChartDataPoint&quot; /&gt;\n             &lt;/Record&gt;\n           &lt;/Collection&gt;\n         &lt;/PropertyValue&gt;\n       &lt;/Record&gt;\n     &lt;/Annotation&gt;\n   &lt;/Annotations&gt;\n</pre>"
          },
          {
            "name": "chartDefinitionType",
            "namespace": "com.sap.vocabularies.UI.v1",
            "target": ["EntityType"],
            "annotation": "ChartDefinitionType",
            "defaultValue": "null",
            "since": "1.38.0",
            "description": "The <code>ChartDefinitionType</code> is <code>ComplexType</code> that is used to describe the <code>Chart</code> annotation."
          },
          {
            "name": "chartType",
            "namespace": "com.sap.vocabularies.UI.v1",
            "target": ["Property"],
            "annotation": "ChartType",
            "defaultValue": "null",
            "since": "1.38.0",
            "description": "The <code>ChartType</code> is <code>EnumType</code> that is provided within the <code>Chart</code> annotation. The <code>ChartType</code> property value must be Bullet. <i>XML Example of using ChartType property with Bullet</i>\n\n<pre>\n   &lt;Annotation Term=&quot;com.sap.vocabularies.UI.v1.Chart&quot; Qualifier=&quot;BulletChartQualifier&quot;&gt;\n     &lt;Record Type=&quot;com.sap.vocabularies.UI.v1.ChartDefinitionType&quot;&gt;\n       &lt;PropertyValue Property=&quot;ChartType&quot; EnumMember=&quot;com.sap.vocabularies.UI.v1.Chart/Bullet&quot; /&gt;\n     &lt;/Record&gt;\n   &lt;/Annotation&gt;\n</pre>"
          },
          {
            "name": "dataPoint",
            "namespace": "com.sap.vocabularies.UI.v1",
            "target": ["EntityType"],
            "annotation": "DataPoint",
            "defaultValue": "null",
            "since": "1.38.0",
            "description": "Based on the <code>DataPoint</code> annotation that is provided by the <code>MeasureAttributes</code> property, the color of the chart is defined due to the <code>Criticality</code> property directly or to the thresholds by using the <code>CriticalityCalculation</code> property. <code>DataPoint</code> must be defined for an <code>EntityType</code> <i>XML Example of using DataPoint annotation and Criticality property</i>\n\n<pre>\n   &lt;Annotation Term=&quot;com.sap.vocabularies.UI.v1.DataPoint&quot; Qualifier=&quot;BulletChartDataPoint&quot; &gt;\n     &lt;Record Type=&quot;com.sap.vocabularies.UI.v1.DataPointType&quot;&gt;\n       &lt;PropertyValue Property=&quot;Title&quot; String=&quot;Price&quot;/&gt;\n       &lt;PropertyValue Property=&quot;Value&quot; Path=&quot;Revenue&quot;/&gt;\n       &lt;PropertyValue Property=&quot;TargetValue&quot; Path=&quot;TargetRevenue&quot;/&gt;\n       &lt;PropertyValue Property=&quot;ForecastValue&quot; Path=&quot;ForecastRevenue&quot;/&gt;\n       &lt;PropertyValue Property=&quot;MinimumValue&quot; Decimal=&quot;0&quot;/&gt;\n       &lt;PropertyValue Property=&quot;MaximumValue&quot; Decimal=&quot;200&quot;/&gt;\n       &lt;PropertyValue Property=&quot;Criticality&quot; Path=&quot;Criticality&quot;/&gt;\n     &lt;/Record&gt;\n   &lt;/Annotation&gt;\n</pre>\n\n<i>XML Example of using DataPoint annotation and CriticalityCalculation property</i>\n\n<pre>\n   &lt;Annotation Term=&quot;com.sap.vocabularies.UI.v1.DataPoint&quot; Qualifier=&quot;BulletChartDataPoint&quot; &gt;\n     &lt;Record Type=&quot;com.sap.vocabularies.UI.v1.DataPointType&quot;&gt;\n       &lt;PropertyValue Property=&quot;Title&quot; String=&quot;Price&quot;/&gt;\n       &lt;PropertyValue Property=&quot;Value&quot; Path=&quot;Revenue&quot;/&gt;\n       &lt;PropertyValue Property=&quot;TargetValue&quot; Path=&quot;TargetRevenue&quot;/&gt;\n       &lt;PropertyValue Property=&quot;ForecastValue&quot; Path=&quot;ForecastRevenue&quot;/&gt;\n       &lt;PropertyValue Property=&quot;MinimumValue&quot; Decimal=&quot;0&quot;/&gt;\n       &lt;PropertyValue Property=&quot;MaximumValue&quot; Decimal=&quot;200&quot;/&gt;\n       &lt;PropertyValue Property=&quot;CriticalityCalculation&quot;&gt;\n         &lt;Record Type=&quot;com.sap.vocabularies.UI.v1.CriticalityCalculationType&quot;&gt;\n           &lt;PropertyValue Property=&quot;ImprovementDirection&quot; EnumMember=&quot;com.sap.vocabularies.UI.v1.ImprovementDirectionType/Target&quot; /&gt;\n           &lt;PropertyValue Property=&quot;DeviationRangeLowValue&quot; Path=&quot;PriceDeviationLowerBound&quot;/&gt;\n           &lt;PropertyValue Property=&quot;ToleranceRangeLowValue&quot; Path=&quot;PriceToleranceLowerBound&quot;/&gt;\n           &lt;PropertyValue Property=&quot;ToleranceRangeHighValue&quot; Path=&quot;PriceToleranceUpperBound&quot;/&gt;\n           &lt;PropertyValue Property=&quot;DeviationRangeHighValue&quot; Path=&quot;PriceDeviationUpperBound&quot;/&gt;\n         &lt;/Record&gt;\n       &lt;/PropertyValue&gt;\n     &lt;/Record&gt;\n   &lt;/Annotation&gt;\n</pre>"
          },
          {
            "name": "dataPointType",
            "namespace": "com.sap.vocabularies.UI.v1",
            "target": ["EntityType"],
            "annotation": "DataPointType",
            "defaultValue": "null",
            "since": "1.38.0",
            "description": "The <code>DataPointType</code> is <code>ComplexType</code> that is used to define the type of the <code>DataPoint</code> annotation."
          },
          {
            "name": "criticalityCalculationType",
            "namespace": "com.sap.vocabularies.UI.v1",
            "target": ["Property"],
            "annotation": "CriticalityCalculationType",
            "defaultValue": "null",
            "since": "1.38.0",
            "description": "The <code>CriticalityCalculationType</code> is <code>ComplexType</code> that is used to define the type of the <code>CriticalityCalculation</code> property in the <code>DataPoint</code> annotation. <i>XML Example of using the CriticalityCalculation property with the CriticalityCalculationType type</i>\n\n<pre>\n   &lt;PropertyValue Property=&quot;CriticalityCalculation&quot;&gt;\n     &lt;Record Type=&quot;com.sap.vocabularies.UI.v1.CriticalityCalculationType&quot;&gt;\n       &lt;PropertyValue Property=&quot;ImprovementDirection&quot; EnumMember=&quot;com.sap.vocabularies.UI.v1.ImprovementDirectionType/Target&quot; /&gt;\n       &lt;PropertyValue Property=&quot;DeviationRangeLowValue&quot; Path=&quot;DeviationLowerBound&quot;/&gt;\n       &lt;PropertyValue Property=&quot;ToleranceRangeLowValue&quot; Path=&quot;PriceToleranceLowerBound&quot;/&gt;\n       &lt;PropertyValue Property=&quot;ToleranceRangeHighValue&quot; Path=&quot;PriceToleranceUpperBound&quot;/&gt;\n       &lt;PropertyValue Property=&quot;DeviationRangeHighValue&quot; Path=&quot;PriceDeviationUpperBound&quot;/&gt;\n     &lt;/Record&gt;\n   &lt;/PropertyValue&gt;\n</pre>"
          },
          {
            "name": "currency",
            "namespace": "Org.OData.Measures.V1",
            "target": ["Property"],
            "annotation": "ISOCurrency",
            "defaultValue": "null",
            "since": "1.38.0",
            "description": "The <code>ISOCurrency</code> annotation describes the <code>Value</code> property of the <code>DataPoint</code> annotation. <i>XML Example of using ISOCurrency annotation</i>\n\n<pre>\n   &lt;Property Name=&quot;Revenue&quot;&gt;\n      &lt;Annotation Term=&quot;Org.OData.Measures.V1.ISOCurrency&quot; Path=&quot;Currency&quot; /&gt;\n   &lt;/Property&gt;\n   &lt;Property Name=&quot;Currency&quot; type=&quot;Edm.String&quot; /&gt;\n</pre>"
          },
          {
            "name": "unit",
            "namespace": "Org.OData.Measures.V1",
            "target": ["Property"],
            "annotation": "Unit",
            "defaultValue": "null",
            "since": "1.38.0",
            "description": "The <code>Unit</code> annotation describes the <code>Value</code> property of the <code>DataPoint</code> annotation. <i>XML Example of using Unit annotation</i>\n\n<pre>\n   &lt;Property Name=&quot;Revenue&quot;&gt;\n      &lt;Annotation Term=&quot;Org.OData.Measures.V1.Unit&quot; Path=&quot;Currency&quot; /&gt;\n   &lt;/Property&gt;\n   &lt;Property Name=&quot;Currency&quot; type=&quot;Edm.String&quot; /&gt;\n</pre>"
          }
        ],
        "designtime": "sap/ui/comp/designtime/smartmicrochart/SmartBulletMicroChart.designtime"
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new sap.ui.comp.smartmicrochart.SmartBulletMicroChart.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.comp.smartmicrochart.SmartBulletMicroChart with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.comp.smartmicrochart.SmartMicroChartBase.extend}."
        },
        {
          "name": "getEnableAutoBinding",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>enableAutoBinding</code>"
          },
          "description": "Gets current value of property {@link #getEnableAutoBinding enableAutoBinding}.\n\nIf set to <code>true</code>, this enables automatic binding of the chart using the chartBindingPath (if it exists) property.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.comp.smartmicrochart.SmartBulletMicroChart."
        },
        {
          "name": "setEnableAutoBinding",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartmicrochart.SmartBulletMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bEnableAutoBinding",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>enableAutoBinding</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getEnableAutoBinding enableAutoBinding}.\n\nIf set to <code>true</code>, this enables automatic binding of the chart using the chartBindingPath (if it exists) property.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.comp.smartmicrochart.SmartColumnMicroChart",
      "basename": "SmartColumnMicroChart",
      "resource": "sap/ui/comp/smartmicrochart/SmartColumnMicroChart.js",
      "module": "sap/ui/comp/smartmicrochart/SmartColumnMicroChart",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.60",
      "extends": "sap.ui.comp.smartmicrochart.SmartMicroChartBase",
      "description": "The SmartColumnMicroChart control creates a {@link sap.suite.ui.microchart.ColumnMicroChart ColumnMicroChart} based on OData metadata and the configuration specified. <br>The <code>entitySet</code> property is required. The entity set you specify in this property is used to fetch OData metadata and to generate the micro chart's UI. This property can also be used to fetch actual chart data.<br> <b><i>Note:</i></b><br> Most properties are not dynamic and cannot be changed, once the control has been initialized.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "annotations": [
          {
            "name": "chart",
            "namespace": "com.sap.vocabularies.UI.v1",
            "target": ["EntityType"],
            "annotation": "Chart",
            "defaultValue": "null",
            "since": "1.60.0",
            "description": "Renders a ColumnMicroChart based on the <code>Chart</code> annotation. <i>XML Example of SmartColumnMicroChart with Chart Annotation</i>\n\n<pre>\n   &lt;Annotations Target=&quot;CmcNamespace.StockPrice&quot; xmlns=&quot;http://docs.oasis-open.org/odata/ns/edm&quot;&gt;\n     &lt;Annotation Term=&quot;com.sap.vocabularies.UI.v1.Chart&quot; Qualifier=&quot;ColumnChartQualifier&quot;&gt;\n       &lt;Record&gt;\n         &lt;PropertyValue Property=&quot;Title&quot; Path=&quot;ChartTitle&quot; /&gt;\n         &lt;PropertyValue Property=&quot;ChartType&quot; EnumMember=&quot;com.sap.vocabularies.UI.v1.Chart/Column&quot; /&gt;\n         &lt;PropertyValue Property=&quot;Description&quot; Path=&quot;Description&quot; /&gt;\n         &lt;PropertyValue Property=&quot;Dimensions&quot;&gt;\n           &lt;Collection&gt;\n             &lt;PropertyPath&gt;Day&lt;/PropertyPath&gt;\n           &lt;/Collection&gt;\n         &lt;/PropertyValue&gt;\n         &lt;PropertyValue Property=&quot;Measures&quot;&gt;\n           &lt;Collection&gt;\n             &lt;PropertyPath&gt;Price&lt;/PropertyPath&gt;\n           &lt;/Collection&gt;\n         &lt;/PropertyValue&gt;\n         &lt;PropertyValue Property=&quot;MeasureAttributes&quot;&gt;\n           &lt;Collection&gt;\n             &lt;Record Type=&quot;com.sap.vocabularies.UI.v1.ChartMeasureAttributeType&quot;&gt;\n               &lt;PropertyValue Property=&quot;Measure&quot; PropertyPath=&quot;Price&quot; /&gt;\n               &lt;PropertyValue Property=&quot;Role&quot; EnumMember=&quot;com.sap.vocabularies.UI.v1.ChartMeasureRoleType/Axis1&quot; /&gt;\n               &lt;PropertyValue Property=&quot;DataPoint&quot; AnnotationPath=&quot;@com.sap.vocabularies.UI.v1.DataPoint#ColumnChartDataPoint&quot; /&gt;\n             &lt;/Record&gt;\n           &lt;/Collection&gt;\n         &lt;/PropertyValue&gt;\n       &lt;/Record&gt;\n     &lt;/Annotation&gt;\n   &lt;/Annotations&gt;\n</pre>"
          },
          {
            "name": "chartDefinitionType",
            "namespace": "com.sap.vocabularies.UI.v1",
            "target": ["EntityType"],
            "annotation": "ChartDefinitionType",
            "defaultValue": "null",
            "since": "1.60.0",
            "description": "The <code>ChartDefinitionType</code> is <code>ComplexType</code> that is used to describe the <code>Chart</code> annotation."
          },
          {
            "name": "chartType",
            "namespace": "com.sap.vocabularies.UI.v1",
            "target": ["Property"],
            "annotation": "ChartType",
            "defaultValue": "null",
            "since": "1.60.0",
            "description": "The <code>ChartType</code> is <code>EnumType</code> that is provided within the <code>Chart</code> annotation. The <code>ChartType</code> property value must be Column. <i>XML Example of a ChartType property with Column</i>\n\n<pre>\n   &lt;Annotation Term=&quot;com.sap.vocabularies.UI.v1.Chart&quot; Qualifier=&quot;ColumnChartQualifier&quot;&gt;\n     &lt;Record Type=&quot;com.sap.vocabularies.UI.v1.ChartDefinitionType&quot;&gt;\n       &lt;PropertyValue Property=&quot;ChartType&quot; EnumMember=&quot;com.sap.vocabularies.UI.v1.Chart/Column&quot; /&gt;\n     &lt;/Record&gt;\n   &lt;/Annotation&gt;\n</pre>"
          },
          {
            "name": "dataPoint",
            "namespace": "com.sap.vocabularies.UI.v1",
            "target": ["EntityType"],
            "annotation": "DataPoint",
            "defaultValue": "null",
            "since": "1.60.0",
            "description": "Based on the <code>DataPoint</code> annotation that is provided by the <code>MeasureAttributes</code>, the values and colors of the chart are defined by using the <code>Value</code> property and <code>Criticality</code> property. Property <code>Title</code> of the column micro chart is set based on the <code>Title</code> property of the <code>DataPoint</code>. <code>DataPoint</code> must be defined for an <code>EntityType</code>.<br> <i>XML Example of using DataPoint annotation</i>\n\n<pre>\n   &lt;Annotation Term=&quot;com.sap.vocabularies.UI.v1.DataPoint&quot; Qualifier=&quot;ColumnChartDataPoint&quot; &gt;\n     &lt;Record Type=&quot;com.sap.vocabularies.UI.v1.DataPointType&quot;&gt;\n       &lt;PropertyValue Property=&quot;Value&quot; Path=&quot;Price&quot; /&gt;\n       &lt;PropertyValue Property=&quot;Criticality&quot; Path=&quot;Criticality&quot;/&gt;\n       &lt;PropertyValue Property=&quot;Title&quot; Path=&quot;Title&quot;/&gt;*\n     &lt;/Record&gt;\n   &lt;/Annotation&gt;\n</pre>"
          },
          {
            "name": "dataPointType",
            "namespace": "com.sap.vocabularies.UI.v1",
            "target": ["EntityType"],
            "annotation": "DataPointType",
            "defaultValue": "null",
            "since": "1.60.0",
            "description": "The <code>DataPointType</code> is <code>ComplexType</code> that is used to define the type of the <code>DataPoint</code> annotation."
          },
          {
            "name": "currency",
            "namespace": "Org.OData.Measures.V1",
            "target": ["Property"],
            "annotation": "ISOCurrency",
            "defaultValue": "null",
            "since": "1.60.0",
            "description": "The <code>ISOCurrency</code> annotation describes the <code>Value</code> property of the <code>DataPoint</code> annotation. <i>XML Example of an ISOCurrency annotation</i>\n\n<pre>\n   &lt;Property Name=&quot;Revenue&quot;&gt;\n      &lt;Annotation Term=&quot;Org.OData.Measures.V1.ISOCurrency&quot; Path=&quot;Currency&quot; /&gt;\n   &lt;/Property&gt;\n   &lt;Property Name=&quot;Currency&quot; type=&quot;Edm.String&quot; /&gt;\n</pre>"
          },
          {
            "name": "unit",
            "namespace": "Org.OData.Measures.V1",
            "target": ["Property"],
            "annotation": "Unit",
            "defaultValue": "null",
            "since": "1.60.0",
            "description": "The <code>Unit</code> annotation describes the <code>Value</code> property of the <code>DataPoint</code> annotation. <i>XML Example of using Unit annotation</i>\n\n<pre>\n   &lt;Property Name=&quot;Revenue&quot;&gt;\n      &lt;Annotation Term=&quot;Org.OData.Measures.V1.Unit&quot; Path=&quot;Currency&quot; /&gt;\n   &lt;/Property&gt;\n   &lt;Property Name=&quot;Currency&quot; type=&quot;Edm.String&quot; /&gt;\n</pre>"
          },
          {
            "name": "text",
            "namespace": "com.sap.vocabularies.Common.v1",
            "target": ["Property"],
            "annotation": "Text",
            "defaultValue": "null",
            "since": "1.60.0",
            "description": "The <code>Text</code> annotation describes the display value of <code>Value</code> property of the <code>DataPoint</code> annotation. Activates property <code>allowColumnLabels</code> of the inner column micro chart. <i>XML Example of using Text annotation</i>\n\n<pre>\n   &lt;Property Name=&quot;Price&quot;&gt;\n      &lt;Annotation Term=&quot;com.sap.vocabularies.Common.v1.Text&quot; Path=&quot;DisplayValue&quot; /&gt;\n   &lt;/Property&gt;\n   &lt;Property Name=&quot;DisplayValue&quot; type=&quot;Edm.String&quot; /&gt;\n</pre>"
          },
          {
            "name": "isCalendarYear",
            "namespace": "com.sap.vocabularies.Common.v1",
            "target": ["Property"],
            "annotation": "IsCalendarYear",
            "defaultValue": "null",
            "since": "1.60.0",
            "description": "The <code>IsCalendarYear</code> annotation describes the Dimensions property in the <code>Chart</code> annotation. A corresponding formatter is used to format the value of the Dimensions property. <i>XML Example of an IsCalendarYear annotation</i>\n\n<pre>\n   &lt;Property Name=&quot;Date&quot;&gt;\n      &lt;Annotation Term=&quot;com.sap.vocabularies.Common.v1.IsCalendarYear&quot;/&gt;\n   &lt;/Property&gt;\n</pre>"
          },
          {
            "name": "isCalendarYearMonth",
            "namespace": "com.sap.vocabularies.Common.v1",
            "target": ["Property"],
            "annotation": "IsCalendarYearMonth",
            "defaultValue": "null",
            "since": "1.60.0",
            "description": "The <code>IsCalendarYearMonth</code> annotation describes the Dimensions property in the <code>Chart</code> annotation. A corresponding formatter is used to format the value of the Dimensions property. <i>XML Example of an IsCalendarYearMonth annotation</i>\n\n<pre>\n   &lt;Property Name=&quot;Date&quot;&gt;\n      &lt;Annotation Term=&quot;com.sap.vocabularies.Common.v1.IsCalendarYearMonth&quot;/&gt;\n   &lt;/Property&gt;\n</pre>"
          },
          {
            "name": "isCalendarDate",
            "namespace": "com.sap.vocabularies.Common.v1",
            "target": ["Property"],
            "annotation": "IsCalendarDate",
            "defaultValue": "null",
            "since": "1.60.0",
            "description": "The <code>IsCalendarDate</code> annotation describes the Dimensions property in the <code>Chart</code> annotation. A corresponding formatter is used to format the value of the Dimensions property. <i>XML Example of an IsCalendarDate annotation</i>\n\n<pre>\n   &lt;Property Name=&quot;Date&quot;&gt;\n      &lt;Annotation Term=&quot;com.sap.vocabularies.Common.v1.IsCalendarDate&quot;/&gt;\n   &lt;/Property&gt;\n</pre>"
          }
        ],
        "designtime": "sap/ui/comp/designtime/smartmicrochart/SmartColumnMicroChart.designtime"
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new sap.ui.comp.smartmicrochart.SmartColumnMicroChart."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.comp.smartmicrochart.SmartColumnMicroChart with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.comp.smartmicrochart.SmartMicroChartBase.extend}."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.comp.smartmicrochart.SmartColumnMicroChart."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.comp.smartmicrochart.SmartComparisonMicroChart",
      "basename": "SmartComparisonMicroChart",
      "resource": "sap/ui/comp/smartmicrochart/SmartComparisonMicroChart.js",
      "module": "sap/ui/comp/smartmicrochart/SmartComparisonMicroChart",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.58",
      "extends": "sap.ui.comp.smartmicrochart.SmartMicroChartBase",
      "description": "The SmartComparisonMicroChart control creates a ComparisonMicroChart based on OData metadata and the configuration specified. The <code>entitySet</code> property is required to use the control. The entity set you specify in this property is used to feetch OData metadata and to generate the micro chart's UI. This property can also be used to fetch actual data.<br> <b><i>Notes:</i></b><br> <ol><li>Most properties are not dynamic and cannot be changed, once the control has been initialized.</li><li> SmartComparisonMicroChart does not have its own ChartType/Enum annotation. This means that ChartType annotation is not specified and SmartComparisonMicroChart cannot be created with a <code>SmartMicroChart</code>.</li></ol>",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "annotations": [
          {
            "name": "chart",
            "namespace": "com.sap.vocabularies.UI.v1",
            "target": ["EntityType"],
            "annotation": "Chart",
            "defaultValue": "null",
            "since": "1.58.0",
            "description": "Renders a ComparisonMicroChart based on the <code>Chart</code> annotation. SmartComparisonMicroChart does not have its own ChartType/Enum annotation. This means that ChartType annotation is not specified and SmartComparisonMicroChart cannot be created with <code>SmartMicroChart</code>.<br> <i>XML Example of SmartComparisonMicroChart with Chart Annotation</i>\n\n<pre>\n   &lt;Annotations Target=&quot;CmcNamespace.StockPrice&quot; xmlns=&quot;http://docs.oasis-open.org/odata/ns/edm&quot;&gt;\n     &lt;Annotation Term=&quot;com.sap.vocabularies.UI.v1.Chart&quot; Qualifier=&quot;ComparisonChartQualifier&quot;&gt;\n       &lt;Record&gt;\n         &lt;PropertyValue Property=&quot;Title&quot; Path=&quot;Title&quot; /&gt;\n         &lt;PropertyValue Property=&quot;Description&quot; Path=&quot;Description&quot; /&gt;\n         &lt;PropertyValue Property=&quot;Dimensions&quot;&gt;\n           &lt;Collection&gt;\n             &lt;PropertyPath&gt;Day&lt;/PropertyPath&gt;\n           &lt;/Collection&gt;\n         &lt;/PropertyValue&gt;\n         &lt;PropertyValue Property=&quot;Measures&quot;&gt;\n           &lt;Collection&gt;\n             &lt;PropertyPath&gt;Price&lt;/PropertyPath&gt;\n           &lt;/Collection&gt;\n         &lt;/PropertyValue&gt;\n         &lt;PropertyValue Property=&quot;MeasureAttributes&quot;&gt;\n           &lt;Collection&gt;\n             &lt;Record Type=&quot;com.sap.vocabularies.UI.v1.ChartMeasureAttributeType&quot;&gt;\n               &lt;PropertyValue Property=&quot;Measure&quot; PropertyPath=&quot;Price&quot; /&gt;\n               &lt;PropertyValue Property=&quot;Role&quot; EnumMember=&quot;com.sap.vocabularies.UI.v1.ChartMeasureRoleType/Axis1&quot; /&gt;\n               &lt;PropertyValue Property=&quot;DataPoint&quot; AnnotationPath=&quot;@com.sap.vocabularies.UI.v1.DataPoint#ComparisonChartDataPoint&quot; /&gt;\n             &lt;/Record&gt;\n           &lt;/Collection&gt;\n         &lt;/PropertyValue&gt;\n       &lt;/Record&gt;\n     &lt;/Annotation&gt;\n   &lt;/Annotations&gt;\n</pre>"
          },
          {
            "name": "chartDefinitionType",
            "namespace": "com.sap.vocabularies.UI.v1",
            "target": ["EntityType"],
            "annotation": "ChartDefinitionType",
            "defaultValue": "null",
            "since": "1.58.0",
            "description": "The <code>ChartDefinitionType</code> is <code>ComplexType</code> that is used to describe the <code>Chart</code> annotation."
          },
          {
            "name": "dataPoint",
            "namespace": "com.sap.vocabularies.UI.v1",
            "target": ["EntityType"],
            "annotation": "DataPoint",
            "defaultValue": "null",
            "since": "1.58.0",
            "description": "Based on the <code>DataPoint</code> annotation that is provided by the <code>MeasureAttributes</code>, the values, titles and colors of the chart are defined by using the <code>Value</code> property, <code>Title</code> property and <code>Criticality</code> property. <code>DataPoint</code> must be defined for an <code>EntityType</code>.<br> <i>XML Example of using DataPoint annotation</i>\n\n<pre>\n   &lt;Annotation Term=&quot;com.sap.vocabularies.UI.v1.DataPoint&quot; Qualifier=&quot;ComparisonChartDataPoint&quot; &gt;\n     &lt;Record Type=&quot;com.sap.vocabularies.UI.v1.DataPointType&quot;&gt;\n       &lt;PropertyValue Property=&quot;Value&quot; Path=&quot;Price&quot; /&gt;\n       &lt;PropertyValue Property=&quot;Title&quot; Path=&quot;Title&quot; /&gt;\n       &lt;PropertyValue Property=&quot;Criticality&quot; Path=&quot;Criticality&quot;/&gt;\n     &lt;/Record&gt;\n   &lt;/Annotation&gt;\n</pre>"
          },
          {
            "name": "dataPointType",
            "namespace": "com.sap.vocabularies.UI.v1",
            "target": ["EntityType"],
            "annotation": "DataPointType",
            "defaultValue": "null",
            "since": "1.58.0",
            "description": "The <code>DataPointType</code> is <code>ComplexType</code> that is used to define the type of the <code>DataPoint</code> annotation."
          },
          {
            "name": "currency",
            "namespace": "Org.OData.Measures.V1",
            "target": ["Property"],
            "annotation": "ISOCurrency",
            "defaultValue": "null",
            "since": "1.58.0",
            "description": "The <code>ISOCurrency</code> annotation describes the <code>Value</code> property of the <code>DataPoint</code> annotation. <i>XML Example of using ISOCurrency annotation</i>\n\n<pre>\n   &lt;Property Name=&quot;Revenue&quot;&gt;\n      &lt;Annotation Term=&quot;Org.OData.Measures.V1.ISOCurrency&quot; Path=&quot;Currency&quot; /&gt;\n   &lt;/Property&gt;\n   &lt;Property Name=&quot;Currency&quot; type=&quot;Edm.String&quot; /&gt;\n</pre>"
          },
          {
            "name": "unit",
            "namespace": "Org.OData.Measures.V1",
            "target": ["Property"],
            "annotation": "Unit",
            "defaultValue": "null",
            "since": "1.58.0",
            "description": "The <code>Unit</code> annotation describes the <code>Value</code> property of the <code>DataPoint</code> annotation. <i>XML Example of using Unit annotation</i>\n\n<pre>\n   &lt;Property Name=&quot;Revenue&quot;&gt;\n      &lt;Annotation Term=&quot;Org.OData.Measures.V1.Unit&quot; Path=&quot;Currency&quot; /&gt;\n   &lt;/Property&gt;\n   &lt;Property Name=&quot;Currency&quot; type=&quot;Edm.String&quot; /&gt;\n</pre>"
          },
          {
            "name": "text",
            "namespace": "com.sap.vocabularies.Common.v1",
            "target": ["Property"],
            "annotation": "Text",
            "defaultValue": "null",
            "since": "1.58.0",
            "description": "The <code>Text</code> annotation describes the display value of <code>Value</code> property of the <code>DataPoint</code> annotation. <i>XML Example of using Unit annotation</i>\n\n<pre>\n   &lt;Property Name=&quot;Price&quot;&gt;\n      &lt;Annotation Term=&quot;com.sap.vocabularies.Common.v1.Text&quot; Path=&quot;DisplayValue&quot; /&gt;\n   &lt;/Property&gt;\n   &lt;Property Name=&quot;DisplayValue&quot; type=&quot;Edm.String&quot; /&gt;\n</pre>"
          }
        ],
        "designtime": "sap/ui/comp/designtime/smartmicrochart/SmartComparisonMicroChart.designtime"
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new SmartComparisonMicroChart."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.comp.smartmicrochart.SmartComparisonMicroChart with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.comp.smartmicrochart.SmartMicroChartBase.extend}."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.comp.smartmicrochart.SmartComparisonMicroChart."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.comp.smartmicrochart.SmartDeltaMicroChart",
      "basename": "SmartDeltaMicroChart",
      "resource": "sap/ui/comp/smartmicrochart/SmartDeltaMicroChart.js",
      "module": "sap/ui/comp/smartmicrochart/SmartDeltaMicroChart",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.61",
      "extends": "sap.ui.comp.smartmicrochart.SmartMicroChartBase",
      "description": "The SmartDeltaMicroChart control creates a {@link sap.suite.ui.microchart.DeltaMicroChart DeltaMicroChart} based on OData metadata and the configuration specified. The delta micro chart represents the delta of two values as a chart.<br> The <code>entitySet</code> property is required to use the control. The entity set you specify in this property is used to fetch OData metadata and to generate the micro chart's UI. This property can also be used to fetch actual data.<br> <b><i>Notes:</i></b><br> <ul><li>Most properties are not dynamic and cannot be changed once the control has been initialized.</li><li> SmartDeltaMicroChart does not have its own ChartType/Enum annotation. This means that ChartType annotation is not specified and SmartDeltaMicroChart cannot be created with a <code>SmartMicroChart</code>.</li></ul>",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "enableAutoBinding",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "description": "If set to <code>true</code>, this enables automatic data binding using the <code>chartBindingPath</code> property , if such a property exists.",
            "methods": ["getEnableAutoBinding", "setEnableAutoBinding"]
          }
        ],
        "annotations": [
          {
            "name": "chart",
            "namespace": "com.sap.vocabularies.UI.v1",
            "target": ["EntityType"],
            "annotation": "Chart",
            "defaultValue": "null",
            "since": "1.61.0",
            "description": "Renders a DeltaMicroChart based on the <code>Chart</code> annotation. SmartDeltaMicroChart does not have its own ChartType/Enum annotation. This means that ChartType annotation is not specified and SmartDeltaMicroChart cannot be created with <code>SmartMicroChart</code>.<br> SmartDeltaMicroChart expects two Measures and their respective two DataPoints.<br> <i>XML Example of SmartDeltaMicroChart with Chart Annotation</i>\n\n<pre>\n   &lt;Annotations Target=&quot;DmcNamespace.StockPrice&quot; xmlns=&quot;http://docs.oasis-open.org/odata/ns/edm&quot;&gt;\n     &lt;Annotation Term=&quot;com.sap.vocabularies.UI.v1.Chart&quot; Qualifier=&quot;DeltaChartQualifier&quot;&gt;\n       &lt;Record&gt;\n         &lt;PropertyValue Property=&quot;Title&quot; Path=&quot;Title&quot; /&gt;\n         &lt;PropertyValue Property=&quot;Description&quot; Path=&quot;Description&quot; /&gt;\n         &lt;PropertyValue Property=&quot;Dimensions&quot;&gt;\n           &lt;Collection&gt;\n             &lt;PropertyPath&gt;Day&lt;/PropertyPath&gt;\n           &lt;/Collection&gt;\n         &lt;/PropertyValue&gt;\n         &lt;PropertyValue Property=&quot;Measures&quot;&gt;\n           &lt;Collection&gt;\n             &lt;PropertyPath&gt;Price&lt;/PropertyPath&gt;\n             &lt;PropertyPath&gt;Revenue&lt;/PropertyPath&gt;\n           &lt;/Collection&gt;\n         &lt;/PropertyValue&gt;\n         &lt;PropertyValue Property=&quot;MeasureAttributes&quot;&gt;\n           &lt;Collection&gt;\n             &lt;Record Type=&quot;com.sap.vocabularies.UI.v1.ChartMeasureAttributeType&quot;&gt;\n               &lt;PropertyValue Property=&quot;Measure&quot; PropertyPath=&quot;Price&quot; /&gt;\n               &lt;PropertyValue Property=&quot;Role&quot; EnumMember=&quot;com.sap.vocabularies.UI.v1.ChartMeasureRoleType/Axis1&quot; /&gt;\n               &lt;PropertyValue Property=&quot;DataPoint&quot; AnnotationPath=&quot;@com.sap.vocabularies.UI.v1.DataPoint#DeltaChartDataPoint1&quot; /&gt;\n             &lt;/Record&gt;\n             &lt;Record Type=&quot;com.sap.vocabularies.UI.v1.ChartMeasureAttributeType&quot;&gt;\n               &lt;PropertyValue Property=&quot;Measure&quot; PropertyPath=&quot;Revenue&quot; /&gt;\n               &lt;PropertyValue Property=&quot;Role&quot; EnumMember=&quot;com.sap.vocabularies.UI.v1.ChartMeasureRoleType/Axis1&quot; /&gt;\n               &lt;PropertyValue Property=&quot;DataPoint&quot; AnnotationPath=&quot;@com.sap.vocabularies.UI.v1.DataPoint#DeltaChartDataPoint2&quot; /&gt;\n             &lt;/Record&gt;\t\t\t *\n           &lt;/Collection&gt;\n         &lt;/PropertyValue&gt;\n       &lt;/Record&gt;\n     &lt;/Annotation&gt;\n   &lt;/Annotations&gt;\n</pre>"
          },
          {
            "name": "chartDefinitionType",
            "namespace": "com.sap.vocabularies.UI.v1",
            "target": ["EntityType"],
            "annotation": "ChartDefinitionType",
            "defaultValue": "null",
            "since": "1.61.0",
            "description": "The <code>ChartDefinitionType</code> is <code>ComplexType</code> that is used to describe the <code>Chart</code> annotation."
          },
          {
            "name": "dataPoint",
            "namespace": "com.sap.vocabularies.UI.v1",
            "target": ["EntityType"],
            "annotation": "DataPoint",
            "defaultValue": "null",
            "since": "1.61.0",
            "description": "Based on the <code>DataPoint</code> annotation that is provided by the <code>MeasureAttributes</code>, the values, titles and colors of the chart are defined by using the <code>Value</code> property, <code>Title</code> property and <code>Criticality</code> property. <code>DataPoint</code> must be defined for an <code>EntityType</code>.<br> <i>XML Example of using DataPoint annotation</i>\n\n<pre>\n   &lt;Annotation Term=&quot;com.sap.vocabularies.UI.v1.DataPoint&quot; Qualifier=&quot;DeltaChartDataPoint1&quot; &gt;\n     &lt;Record Type=&quot;com.sap.vocabularies.UI.v1.DataPointType&quot;&gt;\n       &lt;PropertyValue Property=&quot;Value&quot; Path=&quot;Price&quot; /&gt;\n       &lt;PropertyValue Property=&quot;Title&quot; Path=&quot;Title&quot; /&gt;\n       &lt;!-- note that criticality of the first data point is used for color definition --&gt;\n       &lt;PropertyValue Property=&quot;Criticality&quot; Path=&quot;Criticality&quot;/&gt;\n     &lt;/Record&gt;\n   &lt;/Annotation&gt;\n   &lt;Annotation Term=&quot;com.sap.vocabularies.UI.v1.DataPoint&quot; Qualifier=&quot;DeltaChartDataPoint2&quot; &gt;\n     &lt;Record Type=&quot;com.sap.vocabularies.UI.v1.DataPointType&quot;&gt;\n       &lt;PropertyValue Property=&quot;Value&quot; Path=&quot;Revenue&quot; /&gt;\n       &lt;PropertyValue Property=&quot;Title&quot; Path=&quot;Title&quot; /&gt;\n       &lt;!-- note that criticality of the first data point is used for color definition --&gt;\n     &lt;/Record&gt;\n   &lt;/Annotation&gt;*\n</pre>"
          },
          {
            "name": "dataPointType",
            "namespace": "com.sap.vocabularies.UI.v1",
            "target": ["EntityType"],
            "annotation": "DataPointType",
            "defaultValue": "null",
            "since": "1.61.0",
            "description": "The <code>DataPointType</code> is <code>ComplexType</code> that is used to define the type of the <code>DataPoint</code> annotation."
          },
          {
            "name": "currency",
            "namespace": "Org.OData.Measures.V1",
            "target": ["Property"],
            "annotation": "ISOCurrency",
            "defaultValue": "null",
            "since": "1.61.0",
            "description": "The <code>ISOCurrency</code> annotation describes the <code>Value</code> property of the <code>DataPoint</code> annotation. <i>XML Example of using ISOCurrency annotation</i>\n\n<pre>\n   &lt;Property Name=&quot;Revenue&quot;&gt;\n      &lt;Annotation Term=&quot;Org.OData.Measures.V1.ISOCurrency&quot; Path=&quot;Currency&quot; /&gt;\n   &lt;/Property&gt;\n   &lt;Property Name=&quot;Currency&quot; type=&quot;Edm.String&quot; /&gt;\n</pre>"
          },
          {
            "name": "unit",
            "namespace": "Org.OData.Measures.V1",
            "target": ["Property"],
            "annotation": "Unit",
            "defaultValue": "null",
            "since": "1.61.0",
            "description": "The <code>Unit</code> annotation describes the <code>Value</code> property of the <code>DataPoint</code> annotation. <i>XML Example of using Unit annotation</i>\n\n<pre>\n   &lt;Property Name=&quot;Revenue&quot;&gt;\n      &lt;Annotation Term=&quot;Org.OData.Measures.V1.Unit&quot; Path=&quot;Currency&quot; /&gt;\n   &lt;/Property&gt;\n   &lt;Property Name=&quot;Currency&quot; type=&quot;Edm.String&quot; /&gt;\n</pre>"
          }
        ],
        "designtime": "sap/ui/comp/designtime/smartmicrochart/SmartDeltaMicroChart.designtime"
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new sap.ui.comp.smartmicrochart.SmartDeltaMicroChart.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.comp.smartmicrochart.SmartDeltaMicroChart with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.comp.smartmicrochart.SmartMicroChartBase.extend}."
        },
        {
          "name": "getEnableAutoBinding",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>enableAutoBinding</code>"
          },
          "description": "Gets current value of property {@link #getEnableAutoBinding enableAutoBinding}.\n\nIf set to <code>true</code>, this enables automatic data binding using the <code>chartBindingPath</code> property , if such a property exists.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.comp.smartmicrochart.SmartDeltaMicroChart."
        },
        {
          "name": "setEnableAutoBinding",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartmicrochart.SmartDeltaMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bEnableAutoBinding",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>enableAutoBinding</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getEnableAutoBinding enableAutoBinding}.\n\nIf set to <code>true</code>, this enables automatic data binding using the <code>chartBindingPath</code> property , if such a property exists.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.comp.smartmicrochart.SmartHarveyBallMicroChart",
      "basename": "SmartHarveyBallMicroChart",
      "resource": "sap/ui/comp/smartmicrochart/SmartHarveyBallMicroChart.js",
      "module": "sap/ui/comp/smartmicrochart/SmartHarveyBallMicroChart",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.62.0",
      "extends": "sap.ui.comp.smartmicrochart.SmartMicroChartBase",
      "description": "The SmartHarveyBallMicroChart control creates a {@link sap.suite.ui.microchart.HarveyBallMicroChart} based on OData metadata and the configuration specified in the <code>mSettings</code> of the {@link sap.ui.base.ManagedObject}. <br>The <code>entitySet</code> property is required. The entity set is used to fetch OData metadata and annotation information from the provided default OData model. The chart's UI is created based on this data. <br> <b><i>Note:</i></b><br> Most of the properties are not dynamic and cannot be changed once the control has been initialized.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "enableAutoBinding",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "description": "If set to <code>true</code>, the chart is automatically bound using the <code>chartBindingPath</code> property, if it is specified.",
            "methods": ["getEnableAutoBinding", "setEnableAutoBinding"]
          }
        ],
        "associations": [
          {
            "name": "freeText",
            "singularName": "freeText",
            "type": "sap.m.Label",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "If the associated control is provided, its <code>text</code> property is set to the free text provided by annotations. The <code>Value</code> property of the <code>DataPoint</code> annotation should be annotated with this free text. The <code>Label</code> annotation from the <code>OData Common</code> vocabulary can be used.",
            "methods": ["getFreeText", "setFreeText"]
          }
        ],
        "annotations": [
          {
            "name": "chart",
            "namespace": "com.sap.vocabularies.UI.v1",
            "target": ["EntityType"],
            "annotation": "Chart",
            "defaultValue": "null",
            "since": "1.62.0",
            "description": "Renders a HarveyBallMicroChart based on the <code>Chart</code> annotation. <i>XML Example of SmartHarveyBallMicroChart with Chart Annotation</i>\n\n<pre>\n   &lt;Annotations Target=&quot;HbmcNamespace.ProductType&quot; xmlns=&quot;http://docs.oasis-open.org/odata/ns/edm&quot;&gt;\n     &lt;Annotation Term=&quot;com.sap.vocabularies.UI.v1.Chart&quot; Qualifier=&quot;PieChartQualifier&quot;&gt;\n       &lt;Record&gt;\n         &lt;PropertyValue Property=&quot;Title&quot; Path=&quot;Title&quot; /&gt;\n         &lt;PropertyValue Property=&quot;ChartType&quot; numMember=&quot;com.sap.vocabularies.UI.v1.Chart/Pie&quot; /&gt;\n         &lt;PropertyValue Property=&quot;Description&quot; Path=&quot;Description&quot; /&gt;\n         &lt;PropertyValue Property=&quot;Measures&quot;&gt;\n           &lt;Collection&gt;\n             &lt;PropertyPath&gt;Sold&lt;/PropertyPath&gt;\n           &lt;/Collection&gt;\n         &lt;/PropertyValue&gt;\n         &lt;PropertyValue Property=&quot;MeasureAttributes&quot;&gt;\n           &lt;Collection&gt;\n             &lt;Record Type=&quot;ChartMeasureAttributeType&quot;&gt;\n               &lt;PropertyValue Property=&quot;DataPoint&quot; AnnotationPath=&quot;@com.sap.vocabularies.UI.v1.DataPoint#PieChartDataPoint&quot; /&gt;\n             &lt;/Record&gt;\n           &lt;/Collection&gt;\n         &lt;/PropertyValue&gt;\n       &lt;/Record&gt;\n     &lt;/Annotation&gt;\n   &lt;/Annotations&gt;\n</pre>"
          },
          {
            "name": "chartDefinitionType",
            "namespace": "com.sap.vocabularies.UI.v1",
            "target": ["EntityType"],
            "annotation": "ChartDefinitionType",
            "defaultValue": "null",
            "since": "1.62.0",
            "description": "The <code>ChartDefinitionType</code> is a <code>ComplexType</code> that is used to describe the <code>Chart</code> annotation."
          },
          {
            "name": "chartType",
            "namespace": "com.sap.vocabularies.UI.v1",
            "target": ["Property"],
            "annotation": "ChartType",
            "defaultValue": "null",
            "since": "1.62.0",
            "description": "The <code>ChartType</code> is <code>EnumType</code> that is provided within the <code>Chart</code> annotation. The <code>ChartType</code> property value must be Pie. <i>XML Example of SmartHarveyBallMicroChart with chartType Pie</i>\n\n<pre>\n   &lt;Annotations Target=&quot;HbmcNamespace.ProductType&quot; xmlns=&quot;http://docs.oasis-open.org/odata/ns/edm&quot;&gt;\n     &lt;Annotation Term=&quot;com.sap.vocabularies.UI.v1.Chart&quot; Qualifier=&quot;PieChartQualifier&quot;&gt;\n       &lt;Record&gt;\n         &lt;PropertyValue Property=&quot;ChartType&quot; EnumMember=&quot;com.sap.vocabularies.UI.v1.ChartType/Pie&quot; /&gt;\n       &lt;/Record&gt;\n     &lt;/Annotation&gt;\n   &lt;/Annotations&gt;\n</pre>"
          },
          {
            "name": "dataPoint",
            "namespace": "com.sap.vocabularies.UI.v1",
            "target": ["EntityType"],
            "annotation": "DataPoint",
            "defaultValue": "null",
            "since": "1.62.0",
            "description": "Based on the <code>DataPoint</code> annotation that is provided by the <code>MeasureAttributes</code>, the color of the chart is defined due to the thresholds by using the <code>Criticality</code> property. <code>DataPoint</code> must be defined for an <code>EntityType</code>\n\n<i>XML Example with DataPoint annotation and Criticality property</i>\n\n<pre>\n   &lt;Annotation Term=&quot;com.sap.vocabularies.UI.v1.DataPoint&quot; Qualifier=&quot;PieChartDataPointPercent&quot; &gt;\n     &lt;Record Type=&quot;com.sap.vocabularies.UI.v1.DataPointType&quot;&gt;\n       &lt;PropertyValue Property=&quot;Value&quot; Path=&quot;Sold&quot; /&gt;\n       &lt;PropertyValue Property=&quot;MaximumValue&quot;&gt; /&gt;\n       &lt;PropertyValue Property=&quot;Criticality&quot;&gt; /&gt;\n     &lt;/Record&gt;\n   &lt;/Annotation&gt;\n</pre>"
          },
          {
            "name": "dataPointType",
            "namespace": "com.sap.vocabularies.UI.v1",
            "target": ["EntityType"],
            "annotation": "DataPointType",
            "defaultValue": "null",
            "since": "1.62.0",
            "description": "The <code>DataPointType</code> is <code>ComplexType</code> that is used to define the type of <code>DataPoint</code> annotation."
          },
          {
            "name": "currency",
            "namespace": "Org.OData.Measures.V1",
            "target": ["Property"],
            "annotation": "ISOCurrency",
            "defaultValue": "null",
            "since": "1.62.0",
            "description": "The <code>ISOCurrency</code> annotation describes the value property of the <code>DataPoint</code> annotation. <i>XML Example of ISOCurrency annotation</i>. The <code>totalScale</code> and <code>fractionScale</code> properties of the chart are defined by this annotation.\n\n<pre>\n   &lt;Annotations xmlns=&quot;http://docs.oasis-open.org/odata/ns/edm&quot; Target=&quot;HbmcNamespace.ProductType/Sold&quot; &gt;\n     &lt;Annotation Term=&quot;Org.OData.Measures.V1.ISOCurrency&quot; Path=&quot;Unit&quot;&gt;&lt;/Annotation&gt;\n   &lt;/Annotations&gt;\n</pre>"
          },
          {
            "name": "unit",
            "namespace": "Org.OData.Measures.V1",
            "target": ["Property"],
            "annotation": "Unit",
            "defaultValue": "null",
            "since": "1.62.0",
            "description": "The <code>Unit</code> annotation describes the value property of the <code>DataPoint</code> annotation. <i>XML Example of using Unit annotation</i>\n\n<pre>\n   &lt;Property Name=&quot;Revenue&quot;&gt;\n      &lt;Annotation Term=&quot;Org.OData.Measures.V1.Unit&quot; Path=&quot;Currency&quot; /&gt;\n   &lt;/Property&gt;\n   &lt;Property Name=&quot;Currency&quot; type=&quot;Edm.String&quot; /&gt;\n</pre>"
          }
        ],
        "designtime": "sap/ui/comp/designtime/smartmicrochart/SmartHarveyBallMicroChart.designtime"
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new SmartHarveyBallMicroChart.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.comp.smartmicrochart.SmartHarveyBallMicroChart with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.comp.smartmicrochart.SmartMicroChartBase.extend}."
        },
        {
          "name": "getEnableAutoBinding",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>enableAutoBinding</code>"
          },
          "description": "Gets current value of property {@link #getEnableAutoBinding enableAutoBinding}.\n\nIf set to <code>true</code>, the chart is automatically bound using the <code>chartBindingPath</code> property, if it is specified.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getFreeText",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.ID" },
          "description": "ID of the element which is the current target of the association {@link #getFreeText freeText}, or <code>null</code>."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.comp.smartmicrochart.SmartHarveyBallMicroChart."
        },
        {
          "name": "setEnableAutoBinding",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartmicrochart.SmartHarveyBallMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bEnableAutoBinding",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>enableAutoBinding</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getEnableAutoBinding enableAutoBinding}.\n\nIf set to <code>true</code>, the chart is automatically bound using the <code>chartBindingPath</code> property, if it is specified.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setFreeText",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartmicrochart.SmartHarveyBallMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oFreeText",
              "type": "sap.ui.core.ID|sap.m.Label",
              "optional": false,
              "description": "ID of an element which becomes the new target of this freeText association; alternatively, an element instance may be given"
            }
          ],
          "description": "Sets the associated {@link #getFreeText freeText}."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.comp.smartmicrochart.SmartLineMicroChart",
      "basename": "SmartLineMicroChart",
      "resource": "sap/ui/comp/smartmicrochart/SmartLineMicroChart.js",
      "module": "sap/ui/comp/smartmicrochart/SmartLineMicroChart",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.60",
      "extends": "sap.ui.comp.smartmicrochart.SmartMicroChartBase",
      "description": "The SmartLineMicroChart control creates a {@link sap.suite.ui.microchart.LineMicroChart LineMicroChart} based on OData metadata and the configuration specified. <br>The <code>entitySet</code> property is required. The entity set you specify in this property is used to fetch OData metadata and to generate the micro chart's UI. This property can also be used to fetch actual chart data.<br> <b><i>Note:</i></b><br> Most properties are not dynamic and cannot be changed, once the control has been initialized.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "annotations": [
          {
            "name": "chart",
            "namespace": "com.sap.vocabularies.UI.v1",
            "target": ["EntityType"],
            "annotation": "Chart",
            "defaultValue": "null",
            "since": "1.60.0",
            "description": "Renders a SmartLineMicroChart based on the <code>Chart</code> annotation. <i>XML Example of SmartLineMicroChart with Chart Annotation</i>\n\n<pre>\n   &lt;Annotations Target=&quot;SBmcNamespace.StockPrice&quot; xmlns=&quot;http://docs.oasis-open.org/odata/ns/edm&quot;&gt;\n     &lt;Annotation Term=&quot;com.sap.vocabularies.UI.v1.Chart&quot; Qualifier=&quot;LineMicroChartQualifier&quot;&gt;\n       &lt;Record&gt;\n         &lt;PropertyValue Property=&quot;Title&quot; Path=&quot;Title&quot; /&gt;\n         &lt;PropertyValue Property=&quot;ChartType&quot; EnumMember=&quot;com.sap.vocabularies.UI.v1.Chart/Line&quot; /&gt;\n         &lt;PropertyValue Property=&quot;Description&quot; Path=&quot;Description&quot; /&gt;\n         &lt;PropertyValue Property=&quot;Dimensions&quot;&gt;\n           &lt;Collection&gt;\n             &lt;PropertyPath&gt;Day&lt;/PropertyPath&gt;\n           &lt;/Collection&gt;\n         &lt;/PropertyValue&gt;\n         &lt;PropertyValue Property=&quot;Measures&quot;&gt;\n           &lt;Collection&gt;\n             &lt;PropertyPath&gt;Price&lt;/PropertyPath&gt;\n           &lt;/Collection&gt;\n         &lt;/PropertyValue&gt;\n         &lt;PropertyValue Property=&quot;MeasureAttributes&quot;&gt;\n           &lt;Collection&gt;\n             &lt;Record Type=&quot;com.sap.vocabularies.UI.v1.ChartMeasureAttributeType&quot;&gt;\n               &lt;PropertyValue Property=&quot;Measure&quot; PropertyPath=&quot;Price&quot; /&gt;\n               &lt;PropertyValue Property=&quot;Role&quot; EnumMember=&quot;com.sap.vocabularies.UI.v1.ChartMeasureRoleType/Axis1&quot; /&gt;\n               &lt;PropertyValue Property=&quot;DataPoint&quot; AnnotationPath=&quot;@com.sap.vocabularies.UI.v1.DataPoint#LineMicroChartDataPoint&quot; /&gt;\n             &lt;/Record&gt;\n           &lt;/Collection&gt;\n         &lt;/PropertyValue&gt;\n       &lt;/Record&gt;\n     &lt;/Annotation&gt;\n   &lt;/Annotations&gt;\n</pre>"
          },
          {
            "name": "chartDefinitionType",
            "namespace": "com.sap.vocabularies.UI.v1",
            "target": ["EntityType"],
            "annotation": "ChartDefinitionType",
            "defaultValue": "null",
            "since": "1.60.0",
            "description": "The <code>ChartDefinitionType</code> is <code>ComplexType</code> that is used to describe the <code>Chart</code> annotation."
          },
          {
            "name": "chartType",
            "namespace": "com.sap.vocabularies.UI.v1",
            "target": ["Property"],
            "annotation": "ChartType",
            "defaultValue": "null",
            "since": "1.60.0",
            "description": "The <code>ChartType</code> is <code>EnumType</code> that is provided within the <code>Chart</code> annotation. The <code>ChartType</code> property value must be <code>Line</code>. <i>XML Example of using the ChartType property set to Line</i>\n\n<pre>\n   &lt;Annotation Term=&quot;com.sap.vocabularies.UI.v1.Chart&quot; Qualifier=&quot;LineMicroChartQualifier&quot;&gt;\n     &lt;Record Type=&quot;com.sap.vocabularies.UI.v1.ChartDefinitionType&quot;&gt;\n       &lt;PropertyValue Property=&quot;ChartType&quot; EnumMember=&quot;com.sap.vocabularies.UI.v1.Chart/Line&quot; /&gt;\n     &lt;/Record&gt;\n   &lt;/Annotation&gt;\n</pre>"
          },
          {
            "name": "dataPoint",
            "namespace": "com.sap.vocabularies.UI.v1",
            "target": ["EntityType"],
            "annotation": "DataPoint",
            "defaultValue": "null",
            "since": "1.60.0",
            "description": "Based on the <code>DataPoint</code> annotation that is provided by the <code>MeasureAttributes</code>, the values and colors of the chart are defined by using the <code>Value</code> property and <code>Criticality</code> property. <code>DataPoint</code> must be defined for an <code>EntityType</code>.<br> <i>XML Example of using DataPoint annotation</i>\n\n<pre>\n   &lt;Annotation Term=&quot;com.sap.vocabularies.UI.v1.DataPoint&quot; Qualifier=&quot;LineMicroChartDataPoint&quot; &gt;\n     &lt;Record Type=&quot;com.sap.vocabularies.UI.v1.DataPointType&quot;&gt;\n       &lt;PropertyValue Property=&quot;Value&quot; Path=&quot;Price&quot; /&gt;\n       &lt;PropertyValue Property=&quot;Criticality&quot; Path=&quot;Criticality&quot;/&gt;\n     &lt;/Record&gt;\n   &lt;/Annotation&gt;\n</pre>"
          },
          {
            "name": "dataPointType",
            "namespace": "com.sap.vocabularies.UI.v1",
            "target": ["EntityType"],
            "annotation": "DataPointType",
            "defaultValue": "null",
            "since": "1.60.0",
            "description": "The <code>DataPointType</code> is <code>ComplexType</code> that is used to define the type of the <code>DataPoint</code> annotation."
          },
          {
            "name": "currency",
            "namespace": "Org.OData.Measures.V1",
            "target": ["Property"],
            "annotation": "ISOCurrency",
            "defaultValue": "null",
            "since": "1.60.0",
            "description": "The <code>ISOCurrency</code> annotation describes the <code>Value</code> property of the <code>DataPoint</code> annotation. <i>XML Example of using ISOCurrency annotation</i>\n\n<pre>\n   &lt;Property Name=&quot;Revenue&quot;&gt;\n      &lt;Annotation Term=&quot;Org.OData.Measures.V1.ISOCurrency&quot; Path=&quot;Currency&quot; /&gt;\n   &lt;/Property&gt;\n   &lt;Property Name=&quot;Currency&quot; type=&quot;Edm.String&quot; /&gt;\n</pre>"
          },
          {
            "name": "unit",
            "namespace": "Org.OData.Measures.V1",
            "target": ["Property"],
            "annotation": "Unit",
            "defaultValue": "null",
            "since": "1.60.0",
            "description": "The <code>Unit</code> annotation describes the <code>Value</code> property of the <code>DataPoint</code> annotation. <i>XML Example of using Unit annotation</i>\n\n<pre>\n   &lt;Property Name=&quot;Revenue&quot;&gt;\n      &lt;Annotation Term=&quot;Org.OData.Measures.V1.Unit&quot; Path=&quot;Currency&quot; /&gt;\n   &lt;/Property&gt;\n   &lt;Property Name=&quot;Currency&quot; type=&quot;Edm.String&quot; /&gt;\n</pre>"
          },
          {
            "name": "isCalendarYear",
            "namespace": "com.sap.vocabularies.Common.v1",
            "target": ["Property"],
            "annotation": "IsCalendarYear",
            "defaultValue": "null",
            "since": "1.60.0",
            "description": "The <code>IsCalendarYear</code> annotation describes the <code>Dimensions</code> property in the <code>Chart</code> annotation. A corresponding formatter is used to format the value of the <code>Dimensions</code> property. <i>XML Example of using IsCalendarYear annotation</i>\n\n<pre>\n   &lt;Property Name=&quot;Date&quot;&gt;\n      &lt;Annotation Term=&quot;com.sap.vocabularies.Common.v1.IsCalendarYear&quot;/&gt;\n   &lt;/Property&gt;\n</pre>"
          },
          {
            "name": "isCalendarYearMonth",
            "namespace": "com.sap.vocabularies.Common.v1",
            "target": ["Property"],
            "annotation": "IsCalendarYearMonth",
            "defaultValue": "null",
            "since": "1.60.0",
            "description": "The <code>IsCalendarYearMonth</code> annotation describes the <code>Dimensions</code> property in the <code>Chart</code> annotation. A corresponding formatter is used to format the value of the <code>Dimensions</code> property. <i>XML Example of using IsCalendarYearMonth annotation</i>\n\n<pre>\n   &lt;Property Name=&quot;Date&quot;&gt;\n      &lt;Annotation Term=&quot;com.sap.vocabularies.Common.v1.IsCalendarYearMonth&quot;/&gt;\n   &lt;/Property&gt;\n</pre>"
          },
          {
            "name": "isCalendarDate",
            "namespace": "com.sap.vocabularies.Common.v1",
            "target": ["Property"],
            "annotation": "IsCalendarDate",
            "defaultValue": "null",
            "since": "1.60.0",
            "description": "The <code>IsCalendarDate</code> annotation describes the <code>Dimensions</code> property in the <code>Chart</code> annotation. A corresponding formatter is used to format the value of the <code>Dimensions</code> property. <i>XML Example of using IsCalendarDate annotation</i>\n\n<pre>\n   &lt;Property Name=&quot;Date&quot;&gt;\n      &lt;Annotation Term=&quot;com.sap.vocabularies.Common.v1.IsCalendarDate&quot;/&gt;\n   &lt;/Property&gt;\n</pre>"
          }
        ],
        "designtime": "sap/ui/comp/designtime/smartmicrochart/SmartLineMicroChart.designtime"
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new sap.ui.comp.smartmicrochart.SmartLineMicroChart."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.comp.smartmicrochart.SmartLineMicroChart with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.comp.smartmicrochart.SmartMicroChartBase.extend}."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.comp.smartmicrochart.SmartLineMicroChart."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.comp.smartmicrochart.SmartMicroChart",
      "basename": "SmartMicroChart",
      "resource": "sap/ui/comp/smartmicrochart/SmartMicroChart.js",
      "module": "sap/ui/comp/smartmicrochart/SmartMicroChart",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.38",
      "extends": "sap.ui.core.Control",
      "description": "The SmartMicroChart control creates a chart based on OData metadata and the configuration specified by <code>mSettings</code>. <br>The <code>entitySet</code> property is required. This property is used to fetch metadata and annotation information from the specified default OData model. Depending on the UI/ChartType annotation, the control creates a corresponding {@link sap.ui.comp.smartmicrochart.SmartAreaMicroChart SmartAreaMicroChart}, {@link sap.ui.comp.smartmicrochart.SmartBulletMicroChart SmartBulletMicroChart}, {@link sap.ui.comp.smartmicrochart.SmartStackedBarMicroChart SmartStackedBarMicroChart}, {@link sap.ui.comp.smartmicrochart.SmartLineMicroChart SmartLineMicroChart}, or {@link sap.ui.comp.smartmicrochart.SmartRadialMicroChart SmartRadialMicroChart} instance and delegates it to the internal control. <br> <b><i>Note:</i></b> Most of the attributes are not dynamic and cannot be changed once the control has been initialized.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "entitySet",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The entity set name to fetch data and create the internal chart representation from. Note that this is not a dynamic UI5 property.",
            "methods": ["getEntitySet", "setEntitySet"]
          },
          {
            "name": "showLabel",
            "type": "boolean",
            "defaultValue": true,
            "group": "Appearance",
            "visibility": "public",
            "description": "Determines if any label is shown or not",
            "methods": ["getShowLabel", "setShowLabel"]
          },
          {
            "name": "enableAutoBinding",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "description": "If set to <code>true</code>, this enables automatic binding of the chart using the chartBindingPath (if it exists) or entitySet property.",
            "methods": ["getEnableAutoBinding", "setEnableAutoBinding"]
          },
          {
            "name": "chartBindingPath",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "This attribute can be used to specify the path that is used during the binding of the chart. If not specified, the entitySet attribute is used instead and also stored in this property. Calling <code>bindElement</code> binds the control and sets this property.",
            "methods": ["getChartBindingPath", "setChartBindingPath"]
          },
          {
            "name": "chartType",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Specifies the type of chart. Note that this property is read-only.",
            "methods": ["getChartType", "setChartType"]
          },
          {
            "name": "width",
            "type": "sap.ui.core.CSSSize",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The width of the chart. Overrides the width specified in the <code>size</code> property.",
            "methods": ["getWidth", "setWidth"]
          },
          {
            "name": "height",
            "type": "sap.ui.core.CSSSize",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The height of the chart. Overrides the height specified in the <code>size</code> property.",
            "methods": ["getHeight", "setHeight"]
          },
          {
            "name": "size",
            "type": "sap.m.Size",
            "defaultValue": "Auto",
            "group": "Misc",
            "visibility": "public",
            "since": "1.62",
            "description": "The size of the microchart. If not set, the default size is applied based on the size of the device tile. Responsive size takes width and height of the parent container where the micro chart is included.",
            "methods": ["getSize", "setSize"]
          },
          {
            "name": "isResponsive",
            "type": "boolean",
            "defaultValue": false,
            "group": "Appearance",
            "visibility": "public",
            "description": "If this set to true, width and height of the control are determined by the width and height of the container in which the control is placed or by the width and height property.",
            "deprecated": { "since": "1.62" },
            "methods": ["getIsResponsive", "setIsResponsive"]
          }
        ],
        "aggregations": [
          {
            "name": "_chart",
            "singularName": "_chart",
            "type": "sap.ui.core.Control",
            "cardinality": "0..1",
            "visibility": "hidden",
            "description": "This private aggregation is used for the internal instance of Smart<*>MicroChart.",
            "methods": ["get_chart", "destroy_chart", "set_chart"]
          }
        ],
        "defaultAggregation": "_chart",
        "associations": [
          {
            "name": "chartTitle",
            "singularName": "chartTitle",
            "type": "sap.m.Label",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "If the associated control is provided, its <code>text</code> property is set to the Title property of the Chart annotation. Title property of the DataPoint annotation is ignored.",
            "methods": ["getChartTitle", "setChartTitle"]
          },
          {
            "name": "chartDescription",
            "singularName": "chartDescription",
            "type": "sap.m.Label",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "If the associated control is provided, its <code>text</code> property is set to the Description property of the Chart annotation. Description property of the DataPoint annotation is ignored.",
            "methods": ["getChartDescription", "setChartDescription"]
          },
          {
            "name": "unitOfMeasure",
            "singularName": "unitOfMeasure",
            "type": "sap.m.Label",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "If the associated control is provided, its <code>text</code> property is set to the Unit of Measure. The Value property of the DataPoint annotation should be annotated with this Unit of Measure. It can be either ISOCurrency or Unit from the OData Measures annotations.",
            "methods": ["getUnitOfMeasure", "setUnitOfMeasure"]
          },
          {
            "name": "freeText",
            "singularName": "freeText",
            "type": "sap.m.Label",
            "cardinality": "0..1",
            "visibility": "public",
            "since": "1.42.0",
            "description": "If the associated control is provided, its <code>text</code> property is set to the free text provided by annotations. The Value property of the DataPoint annotation should be annotated with this free text. As of 1.42.0, this association is only available for chart type 'Donut'.",
            "methods": ["getFreeText", "setFreeText"]
          },
          {
            "name": "ariaLabelledBy",
            "singularName": "ariaLabelledBy",
            "type": "sap.ui.core.Control",
            "cardinality": "0..n",
            "visibility": "public",
            "since": "1.60.0",
            "description": "Controls or IDs that label this control. Can be used by screen reader software.",
            "methods": [
              "getAriaLabelledBy",
              "addAriaLabelledBy",
              "removeAriaLabelledBy",
              "removeAllAriaLabelledBy"
            ]
          }
        ],
        "events": [
          {
            "name": "initialize",
            "visibility": "public",
            "description": "Event fired once the control has been initialized.",
            "methods": [
              "attachInitialize",
              "detachInitialize",
              "fireInitialize"
            ]
          }
        ],
        "annotations": [
          {
            "name": "chart",
            "namespace": "com.sap.vocabularies.UI.v1",
            "target": ["EntityType"],
            "annotation": "Chart",
            "defaultValue": "null",
            "since": "1.38.0",
            "description": "Renders a MicroChart based on the information that is provided within the <code>Chart</code> annotation. The <code>Chart</code> annotation contains the <code>ChartType</code> property that must be defined. Supported chart types are Area, Bullet, Donut and Line. <i>XML Example of using Chart annotation with Bullet ChartType</i>\n\n<pre>\n   &lt;Annotations Target=&quot;SmartMicroChart.ProductType&quot; xmlns=&quot;http://docs.oasis-open.org/odata/ns/edm&quot;&gt;\n     &lt;Annotation Term=&quot;com.sap.vocabularies.UI.v1.Chart&quot; Qualifier=&quot;BulletChartQualifier&quot;&gt;\n       &lt;Record&gt;\n         &lt;PropertyValue Property=&quot;ChartType&quot; EnumMember=&quot;com.sap.vocabularies.UI.v1.ChartType/Bullet&quot; /&gt;\n         &lt;PropertyValue Property=&quot;Title&quot; String=&quot;ProductTitle&quot; /&gt;\n         &lt;PropertyValue Property=&quot;Description&quot; String=&quot;ProductDescription&quot; /&gt;\n         &lt;PropertyValue Property=&quot;Measures&quot;&gt;\n           &lt;Collection&gt;\n             &lt;PropertyPath&gt;Revenue&lt;/PropertyPath&gt;\n           &lt;/Collection&gt;\n         &lt;/PropertyValue&gt;\n         &lt;PropertyValue Property=&quot;MeasureAttributes&quot;&gt;\n           &lt;Collection&gt;\n             &lt;Record Type=&quot;com.sap.vocabularies.UI.v1.ChartMeasureAttributeType&quot;&gt;\n               &lt;PropertyValue Property=&quot;Measure&quot; PropertyPath=&quot;Revenue&quot; /&gt;\n               &lt;PropertyValue Property=&quot;Role&quot; EnumMember=&quot;com.sap.vocabularies.UI.v1.ChartMeasureRoleType/Axis1&quot; /&gt;\n               &lt;PropertyValue Property=&quot;DataPoint&quot; AnnotationPath=&quot;@com.sap.vocabularies.UI.v1.DataPoint#BulletChartDataPoint&quot; /&gt;\n             &lt;/Record&gt;\n           &lt;/Collection&gt;\n         &lt;/PropertyValue&gt;\n       &lt;/Record&gt;\n     &lt;/Annotation&gt;\n   &lt;/Annotations&gt;\n</pre>"
          },
          {
            "name": "chartDefinitionType",
            "namespace": "com.sap.vocabularies.UI.v1",
            "target": ["EntityType"],
            "annotation": "ChartDefinitionType",
            "defaultValue": "null",
            "since": "1.38.0",
            "description": "The <code>ChartDefinitionType</code> is <code>ComplexType</code> that is used to describe the <code>Chart</code> annotation."
          },
          {
            "name": "chartType",
            "namespace": "com.sap.vocabularies.UI.v1",
            "target": ["Property"],
            "annotation": "ChartType",
            "defaultValue": "null",
            "since": "1.38.0",
            "description": "The <code>ChartType</code> is <code>EnumType</code> that is provided within the <code>Chart</code> annotation to define the chart type. Supported chart types are Area, Bullet, Donut and Line. <i>XML Example of using ChartType property with Bullet</i>\n\n<pre>\n   &lt;Annotation Term=&quot;com.sap.vocabularies.UI.v1.Chart&quot; Qualifier=&quot;BulletChartQualifier&quot;&gt;\n     &lt;Record Type=&quot;com.sap.vocabularies.UI.v1.ChartDefinitionType&quot;&gt;\n       &lt;PropertyValue Property=&quot;ChartType&quot; EnumMember=&quot;com.sap.vocabularies.UI.v1.Chart/Bullet&quot; /&gt;\n     &lt;/Record&gt;\n   &lt;/Annotation&gt;\n</pre>"
          }
        ],
        "designtime": "sap/ui/comp/designtime/smartmicrochart/SmartMicroChart.designtime"
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new sap.ui.comp.smartmicrochart.SmartMicroChart.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "initialize",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "Event fired once the control has been initialized."
        }
      ],
      "methods": [
        {
          "name": "addAriaLabelledBy",
          "visibility": "public",
          "since": "1.60.0",
          "returnValue": {
            "type": "sap.ui.comp.smartmicrochart.SmartMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "vAriaLabelledBy",
              "type": "sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaLabelledBy to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "attachInitialize",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartmicrochart.SmartMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartmicrochart.SmartMicroChart</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:initialize initialize} event of this <code>sap.ui.comp.smartmicrochart.SmartMicroChart</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartmicrochart.SmartMicroChart</code> itself.\n\nEvent fired once the control has been initialized."
        },
        {
          "name": "detachInitialize",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartmicrochart.SmartMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:initialize initialize} event of this <code>sap.ui.comp.smartmicrochart.SmartMicroChart</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.comp.smartmicrochart.SmartMicroChart with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "fireInitialize",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.comp.smartmicrochart.SmartMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:initialize initialize} to attached listeners."
        },
        {
          "name": "getAriaLabelledBy",
          "visibility": "public",
          "since": "1.60.0",
          "returnValue": { "type": "sap.ui.core.ID[]" },
          "description": "Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "getChartBindingPath",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>chartBindingPath</code>"
          },
          "description": "Gets current value of property {@link #getChartBindingPath chartBindingPath}.\n\nThis attribute can be used to specify the path that is used during the binding of the chart. If not specified, the entitySet attribute is used instead and also stored in this property. Calling <code>bindElement</code> binds the control and sets this property."
        },
        {
          "name": "getChartDescription",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.ID" },
          "description": "ID of the element which is the current target of the association {@link #getChartDescription chartDescription}, or <code>null</code>."
        },
        {
          "name": "getChartTitle",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.ID" },
          "description": "ID of the element which is the current target of the association {@link #getChartTitle chartTitle}, or <code>null</code>."
        },
        {
          "name": "getChartType",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>chartType</code>"
          },
          "description": "Gets current value of property {@link #getChartType chartType}.\n\nSpecifies the type of chart. Note that this property is read-only."
        },
        {
          "name": "getEnableAutoBinding",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>enableAutoBinding</code>"
          },
          "description": "Gets current value of property {@link #getEnableAutoBinding enableAutoBinding}.\n\nIf set to <code>true</code>, this enables automatic binding of the chart using the chartBindingPath (if it exists) or entitySet property.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getEntitySet",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>entitySet</code>"
          },
          "description": "Gets current value of property {@link #getEntitySet entitySet}.\n\nThe entity set name to fetch data and create the internal chart representation from. Note that this is not a dynamic UI5 property."
        },
        {
          "name": "getFreeText",
          "visibility": "public",
          "since": "1.42.0",
          "returnValue": { "type": "sap.ui.core.ID" },
          "description": "ID of the element which is the current target of the association {@link #getFreeText freeText}, or <code>null</code>."
        },
        {
          "name": "getHeight",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.CSSSize",
            "description": "Value of property <code>height</code>"
          },
          "description": "Gets current value of property {@link #getHeight height}.\n\nThe height of the chart. Overrides the height specified in the <code>size</code> property."
        },
        {
          "name": "getIsResponsive",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>isResponsive</code>"
          },
          "description": "Gets current value of property {@link #getIsResponsive isResponsive}.\n\nIf this set to true, width and height of the control are determined by the width and height of the container in which the control is placed or by the width and height property.\n\nDefault value is <code>false</code>.",
          "deprecated": { "since": "1.62" }
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.comp.smartmicrochart.SmartMicroChart."
        },
        {
          "name": "getShowLabel",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showLabel</code>"
          },
          "description": "Gets current value of property {@link #getShowLabel showLabel}.\n\nDetermines if any label is shown or not\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getSize",
          "visibility": "public",
          "since": "1.62",
          "returnValue": {
            "type": "sap.m.Size",
            "description": "Value of property <code>size</code>"
          },
          "description": "Gets current value of property {@link #getSize size}.\n\nThe size of the microchart. If not set, the default size is applied based on the size of the device tile. Responsive size takes width and height of the parent container where the micro chart is included.\n\nDefault value is <code>Auto</code>."
        },
        {
          "name": "getUnitOfMeasure",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.ID" },
          "description": "ID of the element which is the current target of the association {@link #getUnitOfMeasure unitOfMeasure}, or <code>null</code>."
        },
        {
          "name": "getWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.CSSSize",
            "description": "Value of property <code>width</code>"
          },
          "description": "Gets current value of property {@link #getWidth width}.\n\nThe width of the chart. Overrides the width specified in the <code>size</code> property."
        },
        {
          "name": "removeAllAriaLabelledBy",
          "visibility": "public",
          "since": "1.60.0",
          "returnValue": {
            "type": "sap.ui.core.ID[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "removeAriaLabelledBy",
          "visibility": "public",
          "since": "1.60.0",
          "returnValue": {
            "type": "sap.ui.core.ID",
            "description": "The removed ariaLabelledBy or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vAriaLabelledBy",
              "type": "int|sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaLabelledBy to be removed or its index or ID"
            }
          ],
          "description": "Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "setChartBindingPath",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartmicrochart.SmartMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sChartBindingPath",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>chartBindingPath</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getChartBindingPath chartBindingPath}.\n\nThis attribute can be used to specify the path that is used during the binding of the chart. If not specified, the entitySet attribute is used instead and also stored in this property. Calling <code>bindElement</code> binds the control and sets this property.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setChartDescription",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartmicrochart.SmartMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oChartDescription",
              "type": "sap.ui.core.ID|sap.m.Label",
              "optional": false,
              "description": "ID of an element which becomes the new target of this chartDescription association; alternatively, an element instance may be given"
            }
          ],
          "description": "Sets the associated {@link #getChartDescription chartDescription}."
        },
        {
          "name": "setChartTitle",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartmicrochart.SmartMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oChartTitle",
              "type": "sap.ui.core.ID|sap.m.Label",
              "optional": false,
              "description": "ID of an element which becomes the new target of this chartTitle association; alternatively, an element instance may be given"
            }
          ],
          "description": "Sets the associated {@link #getChartTitle chartTitle}."
        },
        {
          "name": "setEnableAutoBinding",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartmicrochart.SmartMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bEnableAutoBinding",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>enableAutoBinding</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getEnableAutoBinding enableAutoBinding}.\n\nIf set to <code>true</code>, this enables automatic binding of the chart using the chartBindingPath (if it exists) or entitySet property.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setEntitySet",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartmicrochart.SmartMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sEntitySet",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>entitySet</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getEntitySet entitySet}.\n\nThe entity set name to fetch data and create the internal chart representation from. Note that this is not a dynamic UI5 property.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setFreeText",
          "visibility": "public",
          "since": "1.42.0",
          "returnValue": {
            "type": "sap.ui.comp.smartmicrochart.SmartMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oFreeText",
              "type": "sap.ui.core.ID|sap.m.Label",
              "optional": false,
              "description": "ID of an element which becomes the new target of this freeText association; alternatively, an element instance may be given"
            }
          ],
          "description": "Sets the associated {@link #getFreeText freeText}."
        },
        {
          "name": "setHeight",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartmicrochart.SmartMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sHeight",
              "type": "sap.ui.core.CSSSize",
              "optional": false,
              "description": "New value for property <code>height</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getHeight height}.\n\nThe height of the chart. Overrides the height specified in the <code>size</code> property.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setIsResponsive",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartmicrochart.SmartMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bIsResponsive",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>isResponsive</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getIsResponsive isResponsive}.\n\nIf this set to true, width and height of the control are determined by the width and height of the container in which the control is placed or by the width and height property.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>.",
          "deprecated": { "since": "1.62" }
        },
        {
          "name": "setShowLabel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartmicrochart.SmartMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowLabel",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showLabel</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowLabel showLabel}.\n\nDetermines if any label is shown or not\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setSize",
          "visibility": "public",
          "since": "1.62",
          "returnValue": {
            "type": "sap.ui.comp.smartmicrochart.SmartMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sSize",
              "type": "sap.m.Size",
              "optional": false,
              "description": "New value for property <code>size</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSize size}.\n\nThe size of the microchart. If not set, the default size is applied based on the size of the device tile. Responsive size takes width and height of the parent container where the micro chart is included.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Auto</code>."
        },
        {
          "name": "setUnitOfMeasure",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartmicrochart.SmartMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oUnitOfMeasure",
              "type": "sap.ui.core.ID|sap.m.Label",
              "optional": false,
              "description": "ID of an element which becomes the new target of this unitOfMeasure association; alternatively, an element instance may be given"
            }
          ],
          "description": "Sets the associated {@link #getUnitOfMeasure unitOfMeasure}."
        },
        {
          "name": "setWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartmicrochart.SmartMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sWidth",
              "type": "sap.ui.core.CSSSize",
              "optional": false,
              "description": "New value for property <code>width</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getWidth width}.\n\nThe width of the chart. Overrides the width specified in the <code>size</code> property.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.comp.smartmicrochart.SmartMicroChartBase",
      "basename": "SmartMicroChartBase",
      "resource": "sap/ui/comp/smartmicrochart/SmartMicroChartBase.js",
      "module": "sap/ui/comp/smartmicrochart/SmartMicroChartBase",
      "export": "",
      "abstract": true,
      "static": true,
      "visibility": "public",
      "since": "1.60",
      "extends": "sap.ui.core.Control",
      "description": "This is an abstract base class for Smart Micro Charts.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "entitySet",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The OData entity set bound to the smart line micro chart.<br> This entity set is used to pull data into the micro chart and create its internal representation.<br> Please note that this property cannot be updated dynamically.",
            "methods": ["getEntitySet", "setEntitySet"]
          },
          {
            "name": "chartType",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Specifies the type of chart. Note that this property is read-only.",
            "methods": ["getChartType", "setChartType"]
          },
          {
            "name": "chartBindingPath",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "This property can be used to specify a relative path (without '/') to an entity set (not a single entity) that is used during the binding of the chart.<br> For example, it can be a navigation property that will be added to the context path.<br> If not specified, the <code>entitySet</code> property is used instead.",
            "methods": ["getChartBindingPath", "setChartBindingPath"]
          },
          {
            "name": "showLabel",
            "type": "boolean",
            "defaultValue": true,
            "group": "Appearance",
            "visibility": "public",
            "description": "Determines if any label is shown or not.",
            "methods": ["getShowLabel", "setShowLabel"]
          },
          {
            "name": "width",
            "type": "sap.ui.core.CSSSize",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The width of the chart. Overrides the width specified in the <code>size</code> property.",
            "methods": ["getWidth", "setWidth"]
          },
          {
            "name": "height",
            "type": "sap.ui.core.CSSSize",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The height of the chart. Overrides the height specified in the <code>size</code> property.",
            "methods": ["getHeight", "setHeight"]
          },
          {
            "name": "size",
            "type": "sap.m.Size",
            "defaultValue": "Auto",
            "group": "Misc",
            "visibility": "public",
            "since": "1.62",
            "description": "The size of the microchart. If not set, the default size is applied based on the size of the device tile. Responsive size takes width and height of the parent container where the micro chart is included.",
            "methods": ["getSize", "setSize"]
          },
          {
            "name": "isResponsive",
            "type": "boolean",
            "defaultValue": false,
            "group": "Appearance",
            "visibility": "public",
            "description": "If this set to true, width and height of the control are determined by the width and height of the container in which the control is placed or by the width and height property.",
            "deprecated": { "since": "1.62" },
            "methods": ["getIsResponsive", "setIsResponsive"]
          }
        ],
        "aggregations": [
          {
            "name": "_chart",
            "singularName": "_chart",
            "type": "sap.ui.core.Control",
            "cardinality": "0..1",
            "visibility": "hidden",
            "description": "This private aggregation is used for the internal binding of the {@link sap.suite.ui.microchart.LineMicroChart}",
            "methods": ["get_chart", "destroy_chart", "set_chart"]
          }
        ],
        "defaultAggregation": "_chart",
        "associations": [
          {
            "name": "chartTitle",
            "singularName": "chartTitle",
            "type": "sap.m.Label",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "If the associated control is provided, its <code>Text</code> property is set to the <code>Title</code> property of the Chart annotation. The <code>Title</code> property of the DataPoint annotation is ignored.",
            "methods": ["getChartTitle", "setChartTitle"]
          },
          {
            "name": "chartDescription",
            "singularName": "chartDescription",
            "type": "sap.m.Label",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "If the associated control is provided, its <code>Text</code> property is set to the <code>Description</code> property of the Chart annotation. The <code>Description</code> property of the DataPoint annotation is ignored.",
            "methods": ["getChartDescription", "setChartDescription"]
          },
          {
            "name": "unitOfMeasure",
            "singularName": "unitOfMeasure",
            "type": "sap.m.Label",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "If the associated control is provided, its <code>Text</code> property is set to the <code>Unit of Measure</code> property of the Chart annotation. The <code>Value</code> property of the DataPoint annotation should be annotated with this unit of measurement. It can be either ISOCurrency or Unit from the OData Measures annotations.",
            "methods": ["getUnitOfMeasure", "setUnitOfMeasure"]
          },
          {
            "name": "ariaLabelledBy",
            "singularName": "ariaLabelledBy",
            "type": "sap.ui.core.Control",
            "cardinality": "0..n",
            "visibility": "public",
            "since": "1.60.0",
            "description": "Controls or IDs that label this control. Can be used by screen reader software.",
            "methods": [
              "getAriaLabelledBy",
              "addAriaLabelledBy",
              "removeAriaLabelledBy",
              "removeAllAriaLabelledBy"
            ]
          }
        ],
        "events": [
          {
            "name": "initialize",
            "visibility": "public",
            "description": "This event is fired after the control has been initialized.",
            "methods": [
              "attachInitialize",
              "detachInitialize",
              "fireInitialize"
            ]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "description": "Constructor for a new sap.ui.comp.smartmicrochart.SmartMicroChartBase.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "initialize",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "This event is fired after the control has been initialized."
        }
      ],
      "methods": [
        {
          "name": "addAriaLabelledBy",
          "visibility": "public",
          "since": "1.60.0",
          "returnValue": {
            "type": "sap.ui.comp.smartmicrochart.SmartMicroChartBase",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "vAriaLabelledBy",
              "type": "sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaLabelledBy to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "attachInitialize",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartmicrochart.SmartMicroChartBase",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartmicrochart.SmartMicroChartBase</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:initialize initialize} event of this <code>sap.ui.comp.smartmicrochart.SmartMicroChartBase</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartmicrochart.SmartMicroChartBase</code> itself.\n\nThis event is fired after the control has been initialized."
        },
        {
          "name": "detachInitialize",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartmicrochart.SmartMicroChartBase",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:initialize initialize} event of this <code>sap.ui.comp.smartmicrochart.SmartMicroChartBase</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.comp.smartmicrochart.SmartMicroChartBase with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "fireInitialize",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.comp.smartmicrochart.SmartMicroChartBase",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:initialize initialize} to attached listeners."
        },
        {
          "name": "getAriaLabelledBy",
          "visibility": "public",
          "since": "1.60.0",
          "returnValue": { "type": "sap.ui.core.ID[]" },
          "description": "Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "getChartBindingPath",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>chartBindingPath</code>"
          },
          "description": "Gets current value of property {@link #getChartBindingPath chartBindingPath}.\n\nThis property can be used to specify a relative path (without '/') to an entity set (not a single entity) that is used during the binding of the chart.<br> For example, it can be a navigation property that will be added to the context path.<br> If not specified, the <code>entitySet</code> property is used instead."
        },
        {
          "name": "getChartDescription",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.ID" },
          "description": "ID of the element which is the current target of the association {@link #getChartDescription chartDescription}, or <code>null</code>."
        },
        {
          "name": "getChartTitle",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.ID" },
          "description": "ID of the element which is the current target of the association {@link #getChartTitle chartTitle}, or <code>null</code>."
        },
        {
          "name": "getChartType",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>chartType</code>"
          },
          "description": "Gets current value of property {@link #getChartType chartType}.\n\nSpecifies the type of chart. Note that this property is read-only."
        },
        {
          "name": "getEntitySet",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>entitySet</code>"
          },
          "description": "Gets current value of property {@link #getEntitySet entitySet}.\n\nThe OData entity set bound to the smart line micro chart.<br> This entity set is used to pull data into the micro chart and create its internal representation.<br> Please note that this property cannot be updated dynamically."
        },
        {
          "name": "getHeight",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.CSSSize",
            "description": "Value of property <code>height</code>"
          },
          "description": "Gets current value of property {@link #getHeight height}.\n\nThe height of the chart. Overrides the height specified in the <code>size</code> property."
        },
        {
          "name": "getIsResponsive",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>isResponsive</code>"
          },
          "description": "Gets current value of property {@link #getIsResponsive isResponsive}.\n\nIf this set to true, width and height of the control are determined by the width and height of the container in which the control is placed or by the width and height property.\n\nDefault value is <code>false</code>.",
          "deprecated": { "since": "1.62" }
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.comp.smartmicrochart.SmartMicroChartBase."
        },
        {
          "name": "getShowLabel",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showLabel</code>"
          },
          "description": "Gets current value of property {@link #getShowLabel showLabel}.\n\nDetermines if any label is shown or not.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getSize",
          "visibility": "public",
          "since": "1.62",
          "returnValue": {
            "type": "sap.m.Size",
            "description": "Value of property <code>size</code>"
          },
          "description": "Gets current value of property {@link #getSize size}.\n\nThe size of the microchart. If not set, the default size is applied based on the size of the device tile. Responsive size takes width and height of the parent container where the micro chart is included.\n\nDefault value is <code>Auto</code>."
        },
        {
          "name": "getUnitOfMeasure",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.ID" },
          "description": "ID of the element which is the current target of the association {@link #getUnitOfMeasure unitOfMeasure}, or <code>null</code>."
        },
        {
          "name": "getWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.CSSSize",
            "description": "Value of property <code>width</code>"
          },
          "description": "Gets current value of property {@link #getWidth width}.\n\nThe width of the chart. Overrides the width specified in the <code>size</code> property."
        },
        {
          "name": "removeAllAriaLabelledBy",
          "visibility": "public",
          "since": "1.60.0",
          "returnValue": {
            "type": "sap.ui.core.ID[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "removeAriaLabelledBy",
          "visibility": "public",
          "since": "1.60.0",
          "returnValue": {
            "type": "sap.ui.core.ID",
            "description": "The removed ariaLabelledBy or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vAriaLabelledBy",
              "type": "int|sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaLabelledBy to be removed or its index or ID"
            }
          ],
          "description": "Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "setChartBindingPath",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartmicrochart.SmartMicroChartBase",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sChartBindingPath",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>chartBindingPath</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getChartBindingPath chartBindingPath}.\n\nThis property can be used to specify a relative path (without '/') to an entity set (not a single entity) that is used during the binding of the chart.<br> For example, it can be a navigation property that will be added to the context path.<br> If not specified, the <code>entitySet</code> property is used instead.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setChartDescription",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartmicrochart.SmartMicroChartBase",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oChartDescription",
              "type": "sap.ui.core.ID|sap.m.Label",
              "optional": false,
              "description": "ID of an element which becomes the new target of this chartDescription association; alternatively, an element instance may be given"
            }
          ],
          "description": "Sets the associated {@link #getChartDescription chartDescription}."
        },
        {
          "name": "setChartTitle",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartmicrochart.SmartMicroChartBase",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oChartTitle",
              "type": "sap.ui.core.ID|sap.m.Label",
              "optional": false,
              "description": "ID of an element which becomes the new target of this chartTitle association; alternatively, an element instance may be given"
            }
          ],
          "description": "Sets the associated {@link #getChartTitle chartTitle}."
        },
        {
          "name": "setEntitySet",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartmicrochart.SmartMicroChartBase",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sEntitySet",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>entitySet</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getEntitySet entitySet}.\n\nThe OData entity set bound to the smart line micro chart.<br> This entity set is used to pull data into the micro chart and create its internal representation.<br> Please note that this property cannot be updated dynamically.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setHeight",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartmicrochart.SmartMicroChartBase",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sHeight",
              "type": "sap.ui.core.CSSSize",
              "optional": false,
              "description": "New value for property <code>height</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getHeight height}.\n\nThe height of the chart. Overrides the height specified in the <code>size</code> property.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setIsResponsive",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartmicrochart.SmartMicroChartBase",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bIsResponsive",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>isResponsive</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getIsResponsive isResponsive}.\n\nIf this set to true, width and height of the control are determined by the width and height of the container in which the control is placed or by the width and height property.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>.",
          "deprecated": { "since": "1.62" }
        },
        {
          "name": "setShowLabel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartmicrochart.SmartMicroChartBase",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowLabel",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showLabel</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowLabel showLabel}.\n\nDetermines if any label is shown or not.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setSize",
          "visibility": "public",
          "since": "1.62",
          "returnValue": {
            "type": "sap.ui.comp.smartmicrochart.SmartMicroChartBase",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sSize",
              "type": "sap.m.Size",
              "optional": false,
              "description": "New value for property <code>size</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSize size}.\n\nThe size of the microchart. If not set, the default size is applied based on the size of the device tile. Responsive size takes width and height of the parent container where the micro chart is included.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Auto</code>."
        },
        {
          "name": "setUnitOfMeasure",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartmicrochart.SmartMicroChartBase",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oUnitOfMeasure",
              "type": "sap.ui.core.ID|sap.m.Label",
              "optional": false,
              "description": "ID of an element which becomes the new target of this unitOfMeasure association; alternatively, an element instance may be given"
            }
          ],
          "description": "Sets the associated {@link #getUnitOfMeasure unitOfMeasure}."
        },
        {
          "name": "setWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartmicrochart.SmartMicroChartBase",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sWidth",
              "type": "sap.ui.core.CSSSize",
              "optional": false,
              "description": "New value for property <code>width</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getWidth width}.\n\nThe width of the chart. Overrides the width specified in the <code>size</code> property.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.comp.smartmicrochart.SmartRadialMicroChart",
      "basename": "SmartRadialMicroChart",
      "resource": "sap/ui/comp/smartmicrochart/SmartRadialMicroChart.js",
      "module": "sap/ui/comp/smartmicrochart/SmartRadialMicroChart",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.42.0",
      "extends": "sap.ui.comp.smartmicrochart.SmartMicroChartBase",
      "description": "The SmartRadialMicroChart control creates a <code>sap.suite.ui.microchart.RadialMicroChart</code> based on OData metadata and the configuration specified by <code>mSettings</code>. The entitySet attribute must be specified to use the control. This attribute is used to fetch metadata and annotation information from the given default OData model. Based on this, the RadialMicroChart UI is created. <br> <b><i>Note:</i></b><br> Most of the attributes/properties are not dynamic and cannot be changed once the control has been initialized.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "enableAutoBinding",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "description": "If set to <code>true</code>, this enables automatic binding of the chart using the chartBindingPath (if it exists) property.",
            "methods": ["getEnableAutoBinding", "setEnableAutoBinding"]
          }
        ],
        "associations": [
          {
            "name": "freeText",
            "singularName": "freeText",
            "type": "sap.m.Label",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "If the associated control is provided, its <code>text</code> property is set to the free text provided by annotations. The Value property of the DataPoint annotation should be annotated with this free text. The Label annotation from the OData Common vocabulary can be used.",
            "methods": ["getFreeText", "setFreeText"]
          }
        ],
        "annotations": [
          {
            "name": "chart",
            "namespace": "com.sap.vocabularies.UI.v1",
            "target": ["EntityType"],
            "annotation": "Chart",
            "defaultValue": "null",
            "since": "1.42.0",
            "description": "Renders a RadialMicroChart based on the <code>Chart</code> annotation. <i>XML Example of SmartRadialMicroChart with Chart Annotation</i>\n\n<pre>\n   &lt;Annotations Target=&quot;DmcNamespace.ProductType&quot; xmlns=&quot;http://docs.oasis-open.org/odata/ns/edm&quot;&gt;\n     &lt;Annotation Term=&quot;com.sap.vocabularies.UI.v1.Chart&quot; Qualifier=&quot;DonutChartQualifier&quot;&gt;\n       &lt;Record&gt;\n         &lt;PropertyValue Property=&quot;Title&quot; Path=&quot;Title&quot; /&gt;\n         &lt;PropertyValue Property=&quot;ChartType&quot; EnumMember=&quot;com.sap.vocabularies.UI.v1.Chart/Donut&quot; /&gt;\n         &lt;PropertyValue Property=&quot;Description&quot; Path=&quot;Description&quot; /&gt;\n         &lt;PropertyValue Property=&quot;Measures&quot;&gt;\n           &lt;Collection&gt;\n             &lt;PropertyPath&gt;Sold&lt;/PropertyPath&gt;\n           &lt;/Collection&gt;\n         &lt;/PropertyValue&gt;\n         &lt;PropertyValue Property=&quot;MeasureAttributes&quot;&gt;\n           &lt;Collection&gt;\n             &lt;Record Type=&quot;ChartMeasureAttributeType&quot;&gt;\n               &lt;PropertyValue Property=&quot;Measure&quot; PropertyPath=&quot;Price&quot; /&gt;\n               &lt;PropertyValue Property=&quot;Role&quot; EnumMember=&quot;com.sap.vocabularies.UI.v1.ChartMeasureRoleType/Axis1&quot; /&gt;\n               &lt;PropertyValue Property=&quot;DataPoint&quot; AnnotationPath=&quot;@com.sap.vocabularies.UI.v1.DataPoint#DonutChartDataPoint&quot; /&gt;\n             &lt;/Record&gt;\n           &lt;/Collection&gt;\n         &lt;/PropertyValue&gt;\n       &lt;/Record&gt;\n     &lt;/Annotation&gt;\n   &lt;/Annotations&gt;\n</pre>"
          },
          {
            "name": "chartDefinitionType",
            "namespace": "com.sap.vocabularies.UI.v1",
            "target": ["EntityType"],
            "annotation": "ChartDefinitionType",
            "defaultValue": "null",
            "since": "1.42.0",
            "description": "The <code>ChartDefinitionType</code> is a <code>ComplexType</code> that is used to describe the <code>Chart</code> annotation."
          },
          {
            "name": "chartType",
            "namespace": "com.sap.vocabularies.UI.v1",
            "target": ["Property"],
            "annotation": "ChartType",
            "defaultValue": "null",
            "since": "1.42.0",
            "description": "The <code>ChartType</code> is <code>EnumType</code> that is provided within the <code>Chart</code> annotation. The <code>ChartType</code> property value must be Donut. <i>XML Example of SmartRadialMicroChart with chartType Donut</i>\n\n<pre>\n   &lt;Annotations Target=&quot;DmcNamespace.ProductType&quot; xmlns=&quot;http://docs.oasis-open.org/odata/ns/edm&quot;&gt;\n     &lt;Annotation Term=&quot;com.sap.vocabularies.UI.v1.Chart&quot; Qualifier=&quot;DonutChartQualifier&quot;&gt;\n       &lt;Record&gt;\n         &lt;PropertyValue Property=&quot;ChartType&quot; EnumMember=&quot;com.sap.vocabularies.UI.v1.ChartType/Donut&quot; /&gt;\n       &lt;/Record&gt;\n     &lt;/Annotation&gt;\n   &lt;/Annotations&gt;\n</pre>"
          },
          {
            "name": "dataPoint",
            "namespace": "com.sap.vocabularies.UI.v1",
            "target": ["EntityType"],
            "annotation": "DataPoint",
            "defaultValue": "null",
            "since": "1.42.0",
            "description": "Based on the <code>DataPoint</code> annotation that is provided by the <code>MeasureAttributes</code>, the color of the chart is defined due to the thresholds by either using the <code>Criticality</code> property or by using both <code>CriticalityCalculation</code> and <code>ImprovementDirection</code> properties. <code>DataPoint</code> must be defined for an <code>EntityType</code>\n\n<i>XML Example with DataPoint annotation and Criticality property</i>\n\n<pre>\n   &lt;Annotation Term=&quot;com.sap.vocabularies.UI.v1.DataPoint&quot; Qualifier=&quot;DonutChartDataPointPercent&quot; &gt;\n     &lt;Record Type=&quot;com.sap.vocabularies.UI.v1.DataPointType&quot;&gt;\n       &lt;PropertyValue Property=&quot;Value&quot; Path=&quot;Price&quot; /&gt;\n       &lt;PropertyValue Property=&quot;TargetValue&quot;&gt; /&gt;\n       &lt;PropertyValue Property=&quot;Criticality&quot;&gt; /&gt;\n     &lt;/Record&gt;\n   &lt;/Annotation&gt;\n</pre>\n\n<i>XML Example with DataPoint annotation and CriticalityCalculation property</i>\n\n<pre>\n   &lt;Annotation Term=&quot;com.sap.vocabularies.UI.v1.DataPoint&quot; Qualifier=&quot;DonutChartDataPointPercent&quot; &gt;\n     &lt;Record Type=&quot;com.sap.vocabularies.UI.v1.DataPointType&quot;&gt;\n       &lt;PropertyValue Property=&quot;Value&quot; Path=&quot;Price&quot; /&gt;\n       &lt;PropertyValue Property=&quot;TargetValue&quot;&gt; /&gt;\n       &lt;PropertyValue Property=&quot;CriticalityCalculation&quot;&gt;\n         &lt;Record&gt;\n           &lt;PropertyValue Property=&quot;ImprovementDirection&quot; EnumMember=&quot;com.sap.vocabularies.UI.v1.ImprovementDirectionType/Maximize&quot; /&gt;\n           &lt;PropertyValue Path=&quot;MinSold&quot; Property=&quot;DeviationRangeLowValue&quot;/&gt;\n           &lt;PropertyValue Path=&quot;ToleranceSold&quot; Property=&quot;ToleranceRangeLowValue&quot;/&gt;\n         &lt;/Record&gt;\n       &lt;/PropertyValue&gt;\n     &lt;/Record&gt;\n   &lt;/Annotation&gt;\n</pre>"
          },
          {
            "name": "dataPointType",
            "namespace": "com.sap.vocabularies.UI.v1",
            "target": ["EntityType"],
            "annotation": "DataPointType",
            "defaultValue": "null",
            "since": "1.42.0",
            "description": "The <code>DataPointType</code> is <code>ComplexType</code> that is used to define the type of <code>DataPoint</code> annotation."
          },
          {
            "name": "criticalityCalculationType",
            "namespace": "com.sap.vocabularies.UI.v1",
            "target": ["Property"],
            "annotation": "CriticalityCalculationType",
            "defaultValue": "null",
            "since": "1.42.0",
            "description": "The <code>CriticalityCalculationType</code> is <code>ComplexType</code> that is used to define the type of <code>CriticalityCalculation</code> property in the <code>DataPoint</code> annotation. <i>XML Example of using CriticalityCalculation property with CriticalityCalculationType type</i>\n\n<pre>\n   &lt;PropertyValue Property=&quot;CriticalityCalculation&quot;&gt;\n     &lt;Record Type=&quot;com.sap.vocabularies.UI.v1.CriticalityCalculationType&quot;&gt;\n       &lt;PropertyValue Property=&quot;ImprovementDirection&quot; EnumMember=&quot;com.sap.vocabularies.UI.v1.ImprovementDirectionType/Target&quot; /&gt;\n       &lt;PropertyValue Property=&quot;DeviationRangeLowValue&quot; Path=&quot;DeviationLowerBound&quot;/&gt;\n       &lt;PropertyValue Property=&quot;ToleranceRangeLowValue&quot; Path=&quot;PriceToleranceLowerBound&quot;/&gt;\n       &lt;PropertyValue Property=&quot;ToleranceRangeHighValue&quot; Path=&quot;PriceToleranceUpperBound&quot;/&gt;\n       &lt;PropertyValue Property=&quot;DeviationRangeHighValue&quot; Path=&quot;PriceDeviationUpperBound&quot;/&gt;\n     &lt;/Record&gt;\n   &lt;/PropertyValue&gt;\n</pre>"
          },
          {
            "name": "currency",
            "namespace": "Org.OData.Measures.V1",
            "target": ["Property"],
            "annotation": "ISOCurrency",
            "defaultValue": "null",
            "since": "1.42.0",
            "description": "The <code>ISOCurrency</code> annotation describes the value property of the <code>DataPoint</code> annotation. <i>XML Example of ISOCurrency annotation</i>\n\n<pre>\n   &lt;Annotations xmlns=&quot;http://docs.oasis-open.org/odata/ns/edm&quot; Target=&quot;AmcNamespace.StockPrice/Price&quot; &gt;\n     &lt;Annotation Term=&quot;Org.OData.Measures.V1.ISOCurrency&quot; Path=&quot;Currency&quot;&gt;&lt;/Annotation&gt;\n   &lt;/Annotations&gt;\n</pre>"
          },
          {
            "name": "unit",
            "namespace": "Org.OData.Measures.V1",
            "target": ["Property"],
            "annotation": "Unit",
            "defaultValue": "null",
            "since": "1.42.0",
            "description": "The <code>Unit</code> annotation describes the value property of the <code>DataPoint</code> annotation. <i>XML Example of using Unit annotation</i>\n\n<pre>\n   &lt;Property Name=&quot;Revenue&quot;&gt;\n      &lt;Annotation Term=&quot;Org.OData.Measures.V1.Unit&quot; Path=&quot;Currency&quot; /&gt;\n   &lt;/Property&gt;\n   &lt;Property Name=&quot;Currency&quot; type=&quot;Edm.String&quot; /&gt;\n</pre>"
          },
          {
            "name": "label",
            "namespace": "com.sap.vocabularies.Common.v1",
            "target": ["Property"],
            "annotation": "Label",
            "defaultValue": "null",
            "since": "1.42.0",
            "description": "The <code>Label</code> annotation describes the value property of the <code>DataPoint</code> annotation. <i>XML Example of using Label annotation</i>\n\n<pre>\n   &lt;Property Name=&quot;Revenue&quot;&gt;\n      &lt;Annotation Term=&quot;com.sap.vocabularies.Common.v1.Label&quot; Path=&quot;FreeText&quot; /&gt;\n   &lt;/Property&gt;\n   &lt;Property Name=&quot;FreeText&quot; type=&quot;Edm.String&quot; /&gt;\n</pre>"
          }
        ],
        "designtime": "sap/ui/comp/designtime/smartmicrochart/SmartRadialMicroChart.designtime"
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new sap.ui.comp.smartmicrochart.SmartRadialMicroChart.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.comp.smartmicrochart.SmartRadialMicroChart with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.comp.smartmicrochart.SmartMicroChartBase.extend}."
        },
        {
          "name": "getEnableAutoBinding",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>enableAutoBinding</code>"
          },
          "description": "Gets current value of property {@link #getEnableAutoBinding enableAutoBinding}.\n\nIf set to <code>true</code>, this enables automatic binding of the chart using the chartBindingPath (if it exists) property.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getFreeText",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.ID" },
          "description": "ID of the element which is the current target of the association {@link #getFreeText freeText}, or <code>null</code>."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.comp.smartmicrochart.SmartRadialMicroChart."
        },
        {
          "name": "setEnableAutoBinding",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartmicrochart.SmartRadialMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bEnableAutoBinding",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>enableAutoBinding</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getEnableAutoBinding enableAutoBinding}.\n\nIf set to <code>true</code>, this enables automatic binding of the chart using the chartBindingPath (if it exists) property.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setFreeText",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartmicrochart.SmartRadialMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oFreeText",
              "type": "sap.ui.core.ID|sap.m.Label",
              "optional": false,
              "description": "ID of an element which becomes the new target of this freeText association; alternatively, an element instance may be given"
            }
          ],
          "description": "Sets the associated {@link #getFreeText freeText}."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.comp.smartmicrochart.SmartStackedBarMicroChart",
      "basename": "SmartStackedBarMicroChart",
      "resource": "sap/ui/comp/smartmicrochart/SmartStackedBarMicroChart.js",
      "module": "sap/ui/comp/smartmicrochart/SmartStackedBarMicroChart",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.58",
      "extends": "sap.ui.comp.smartmicrochart.SmartMicroChartBase",
      "description": "The SmartStackedBarMicroChart control creates a StackedBarMicroChart based on OData metadata and the configuration specified. The <code>entitySet</code> property is required. The entity set you specify in this property is used to fetch OData metadata and to generate the micro chart's UI. This property can also be used to fetch actual chart data.<br> <b><i>Note:</i></b><br> Most properties are not dynamic and cannot be changed, once the control has been initialised.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "annotations": [
          {
            "name": "chart",
            "namespace": "com.sap.vocabularies.UI.v1",
            "target": ["EntityType"],
            "annotation": "Chart",
            "defaultValue": "null",
            "since": "1.58.0",
            "description": "Renders a StackedBarMicroChart based on the <code>Chart</code> annotation. <i>XML Example of SmartStackedBarMicroChart with Chart Annotation</i>\n\n<pre>\n   &lt;Annotations Target=&quot;SBmcNamespace.StockPrice&quot; xmlns=&quot;http://docs.oasis-open.org/odata/ns/edm&quot;&gt;\n     &lt;Annotation Term=&quot;com.sap.vocabularies.UI.v1.Chart&quot; Qualifier=&quot;StackedBarChartQualifier&quot;&gt;\n       &lt;Record&gt;\n         &lt;PropertyValue Property=&quot;Title&quot; Path=&quot;Title&quot; /&gt;\n         &lt;PropertyValue Property=&quot;ChartType&quot; EnumMember=&quot;com.sap.vocabularies.UI.v1.Chart/BarStacked&quot; /&gt;\n         &lt;PropertyValue Property=&quot;Description&quot; Path=&quot;Description&quot; /&gt;\n         &lt;PropertyValue Property=&quot;Dimensions&quot;&gt;\n           &lt;Collection&gt;\n             &lt;PropertyPath&gt;Day&lt;/PropertyPath&gt;\n           &lt;/Collection&gt;\n         &lt;/PropertyValue&gt;\n         &lt;PropertyValue Property=&quot;Measures&quot;&gt;\n           &lt;Collection&gt;\n             &lt;PropertyPath&gt;Price&lt;/PropertyPath&gt;\n           &lt;/Collection&gt;\n         &lt;/PropertyValue&gt;\n         &lt;PropertyValue Property=&quot;MeasureAttributes&quot;&gt;\n           &lt;Collection&gt;\n             &lt;Record Type=&quot;com.sap.vocabularies.UI.v1.ChartMeasureAttributeType&quot;&gt;\n               &lt;PropertyValue Property=&quot;Measure&quot; PropertyPath=&quot;Price&quot; /&gt;\n               &lt;PropertyValue Property=&quot;Role&quot; EnumMember=&quot;com.sap.vocabularies.UI.v1.ChartMeasureRoleType/Axis1&quot; /&gt;\n               &lt;PropertyValue Property=&quot;DataPoint&quot; AnnotationPath=&quot;@com.sap.vocabularies.UI.v1.DataPoint#StackedBarChartDataPoint&quot; /&gt;\n             &lt;/Record&gt;\n           &lt;/Collection&gt;\n         &lt;/PropertyValue&gt;\n       &lt;/Record&gt;\n     &lt;/Annotation&gt;\n   &lt;/Annotations&gt;\n</pre>"
          },
          {
            "name": "chartDefinitionType",
            "namespace": "com.sap.vocabularies.UI.v1",
            "target": ["EntityType"],
            "annotation": "ChartDefinitionType",
            "defaultValue": "null",
            "since": "1.58.0",
            "description": "The <code>ChartDefinitionType</code> is <code>ComplexType</code> that is used to describe the <code>Chart</code> annotation."
          },
          {
            "name": "chartType",
            "namespace": "com.sap.vocabularies.UI.v1",
            "target": ["Property"],
            "annotation": "ChartType",
            "defaultValue": "null",
            "since": "1.58.0",
            "description": "The <code>ChartType</code> is <code>EnumType</code> that is provided within the <code>Chart</code> annotation. The <code>ChartType</code> property value must be BarStacked. <i>XML Example of using ChartType property with BarStacked</i>\n\n<pre>\n   &lt;Annotation Term=&quot;com.sap.vocabularies.UI.v1.Chart&quot; Qualifier=&quot;StackedBarChartQualifier&quot;&gt;\n     &lt;Record Type=&quot;com.sap.vocabularies.UI.v1.ChartDefinitionType&quot;&gt;\n       &lt;PropertyValue Property=&quot;ChartType&quot; EnumMember=&quot;com.sap.vocabularies.UI.v1.Chart/BarStacked&quot; /&gt;\n     &lt;/Record&gt;\n   &lt;/Annotation&gt;\n</pre>"
          },
          {
            "name": "dataPoint",
            "namespace": "com.sap.vocabularies.UI.v1",
            "target": ["EntityType"],
            "annotation": "DataPoint",
            "defaultValue": "null",
            "since": "1.58.0",
            "description": "Based on the <code>DataPoint</code> annotation that is provided by the <code>MeasureAttributes</code>, the values and colors of the chart are defined by using the <code>Value</code> property and <code>Criticality</code> property. <code>DataPoint</code> must be defined for an <code>EntityType</code>.<br> <i>XML Example of using DataPoint annotation</i>\n\n<pre>\n   &lt;Annotation Term=&quot;com.sap.vocabularies.UI.v1.DataPoint&quot; Qualifier=&quot;StackedBarChartDataPoint&quot; &gt;\n     &lt;Record Type=&quot;com.sap.vocabularies.UI.v1.DataPointType&quot;&gt;\n       &lt;PropertyValue Property=&quot;Value&quot; Path=&quot;Price&quot; /&gt;\n       &lt;PropertyValue Property=&quot;Criticality&quot; Path=&quot;Criticality&quot;/&gt;\n     &lt;/Record&gt;\n   &lt;/Annotation&gt;\n</pre>"
          },
          {
            "name": "dataPointType",
            "namespace": "com.sap.vocabularies.UI.v1",
            "target": ["EntityType"],
            "annotation": "DataPointType",
            "defaultValue": "null",
            "since": "1.58.0",
            "description": "The <code>DataPointType</code> is <code>ComplexType</code> that is used to define the type of the <code>DataPoint</code> annotation."
          },
          {
            "name": "currency",
            "namespace": "Org.OData.Measures.V1",
            "target": ["Property"],
            "annotation": "ISOCurrency",
            "defaultValue": "null",
            "since": "1.58.0",
            "description": "The <code>ISOCurrency</code> annotation describes the <code>Value</code> property of the <code>DataPoint</code> annotation. <i>XML Example of using ISOCurrency annotation</i>\n\n<pre>\n   &lt;Property Name=&quot;Revenue&quot;&gt;\n      &lt;Annotation Term=&quot;Org.OData.Measures.V1.ISOCurrency&quot; Path=&quot;Currency&quot; /&gt;\n   &lt;/Property&gt;\n   &lt;Property Name=&quot;Currency&quot; type=&quot;Edm.String&quot; /&gt;\n</pre>"
          },
          {
            "name": "unit",
            "namespace": "Org.OData.Measures.V1",
            "target": ["Property"],
            "annotation": "Unit",
            "defaultValue": "null",
            "since": "1.58.0",
            "description": "The <code>Unit</code> annotation describes the <code>Value</code> property of the <code>DataPoint</code> annotation. <i>XML Example of using Unit annotation</i>\n\n<pre>\n   &lt;Property Name=&quot;Revenue&quot;&gt;\n      &lt;Annotation Term=&quot;Org.OData.Measures.V1.Unit&quot; Path=&quot;Currency&quot; /&gt;\n   &lt;/Property&gt;\n   &lt;Property Name=&quot;Currency&quot; type=&quot;Edm.String&quot; /&gt;\n</pre>"
          },
          {
            "name": "text",
            "namespace": "com.sap.vocabularies.Common.v1",
            "target": ["Property"],
            "annotation": "Text",
            "defaultValue": "null",
            "since": "1.58.0",
            "description": "The <code>Text</code> annotation describes the display value of <code>Value</code> property of the <code>DataPoint</code> annotation. <i>XML Example of using Text annotation</i>\n\n<pre>\n   &lt;Property Name=&quot;Price&quot;&gt;\n      &lt;Annotation Term=&quot;com.sap.vocabularies.Common.v1.Text&quot; Path=&quot;DisplayValue&quot; /&gt;\n   &lt;/Property&gt;\n   &lt;Property Name=&quot;DisplayValue&quot; type=&quot;Edm.String&quot; /&gt;\n</pre>"
          }
        ],
        "designtime": "sap/ui/comp/designtime/smartmicrochart/SmartStackedBarMicroChart.designtime"
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new sap.ui.comp.smartmicrochart.SmartStackedBarMicroChart."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.comp.smartmicrochart.SmartStackedBarMicroChart with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.comp.smartmicrochart.SmartMicroChartBase.extend}."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.comp.smartmicrochart.SmartStackedBarMicroChart."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.comp.smartmultiedit.Container",
      "basename": "Container",
      "resource": "sap/ui/comp/smartmultiedit/Container.js",
      "module": "sap/ui/comp/smartmultiedit/Container",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.52.0",
      "extends": "sap.ui.core.Control",
      "description": "The SmartMultiEdit.Container control provides a layout for the smart multi edit fields ({@link sap.ui.comp.smartmultiedit.Field}) it includes and enables them to access the updated binding contexts.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "entitySet",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The entity set name to fetch metadata for. This entity set should have <code>sap:creatable</code> annotation set to <code>true</code> as this control needs to create an entry internally for a short period of time.<br> Please note that this is not a dynamic SAP UI5 property: setting it twice will not result in an update of the property.",
            "methods": ["getEntitySet", "setEntitySet"]
          },
          {
            "name": "contexts",
            "type": "sap.ui.model.Context[]",
            "defaultValue": "[]",
            "group": "Misc",
            "visibility": "public",
            "description": "The binding contexts relevant to this mass editing operation.",
            "methods": ["getContexts", "setContexts"]
          }
        ],
        "aggregations": [
          {
            "name": "layout",
            "singularName": "layout",
            "type": "sap.ui.comp.smartform.SmartForm",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "The form that contains smart multi edit fields ({@link sap.ui.comp.smartmultiedit.Field} controls).",
            "methods": ["getLayout", "destroyLayout", "setLayout"]
          }
        ],
        "defaultAggregation": "layout",
        "designtime": "sap/ui/comp/designtime/smartmultiedit/Container.designtime"
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new <code>sap.ui.comp.smartmultiedit.Container</code>.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "destroyLayout",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartmultiedit.Container",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the layout in the aggregation {@link #getLayout layout}."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.comp.smartmultiedit.Container with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "getAllUpdatedContexts",
          "visibility": "public",
          "returnValue": {
            "type": "Promise",
            "description": "A Promise that is resolved when all contexts ({@link sap.ui.model.Context}) are copied and updated."
          },
          "parameters": [
            {
              "name": "merge",
              "type": "boolean",
              "optional": true,
              "description": "If true, the returned data structure includes all entity set properties per context."
            }
          ],
          "description": "Provides updated objects, including the values of all {@link sap.ui.comp.smartmultiedit.Field} instances in the <code>layout</code> aggregation.<br><br> The function returns a Promise that is resolved when each {@link sap.ui.model.Context} in the <code>contexts</code> property is copied and updated. The fulfilled function is called with an array that contains an object for each context in the <code>contexts</code> property.<br> Each object in this array contains: <ul> <li>A <code>context</code> property that corresponds to the respective context.</li> <li>A <code>data</code> property that contains the updated data object.</li> </ul>"
        },
        {
          "name": "getContexts",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.model.Context[]",
            "description": "Value of property <code>contexts</code>"
          },
          "description": "Gets current value of property {@link #getContexts contexts}.\n\nThe binding contexts relevant to this mass editing operation.\n\nDefault value is <code>[]</code>."
        },
        {
          "name": "getEntitySet",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>entitySet</code>"
          },
          "description": "Gets current value of property {@link #getEntitySet entitySet}.\n\nThe entity set name to fetch metadata for. This entity set should have <code>sap:creatable</code> annotation set to <code>true</code> as this control needs to create an entry internally for a short period of time.<br> Please note that this is not a dynamic SAP UI5 property: setting it twice will not result in an update of the property."
        },
        {
          "name": "getErroneousFields",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartmultiedit.Field[]",
            "description": "An array of fields having client errors."
          },
          "description": "Collects all fields that have currently client errors.",
          "deprecated": {
            "since": "1.61.0",
            "text": "replaced by <code>getErroneousFieldsAndTokens</code>"
          }
        },
        {
          "name": "getErroneousFieldsAndTokens",
          "visibility": "public",
          "since": "1.61.0",
          "returnValue": {
            "type": "Promise",
            "description": "Resolves with an array of fields having client errors."
          },
          "description": "Collects all fields that currently have client errors."
        },
        {
          "name": "getFields",
          "visibility": "public",
          "returnValue": {
            "type": "Array",
            "description": "An array of {@link sap.ui.comp.smartmultiedit.Field} fields."
          },
          "description": "Collects all instances of {@link sap.ui.comp.smartmultiedit.Field} scattered across the smart form ({@link sap.ui.comp.smartform.SmartForm}) layout."
        },
        {
          "name": "getLayout",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.comp.smartform.SmartForm" },
          "description": "Gets content of aggregation {@link #getLayout layout}.\n\nThe form that contains smart multi edit fields ({@link sap.ui.comp.smartmultiedit.Field} controls)."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.comp.smartmultiedit.Container."
        },
        {
          "name": "indexField",
          "visibility": "public",
          "parameters": [
            {
              "name": "oField",
              "type": "sap.ui.comp.smartmultiedit.Field",
              "optional": false,
              "description": "{@link sap.ui.comp.smartmultiedit.Field} to push the custom data to."
            }
          ],
          "description": "Explicitly pushes the smart multi edit container's ({@link sap.ui.comp.smartmultiedit.Container}) custom data to the specified field ({@link sap.ui.comp.smartmultiedit.Field}). Can be useful when adding fields to a container after it has already been rendered."
        },
        {
          "name": "setContexts",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartmultiedit.Container",
            "description": "Returns <code>this</code> to allow method chaining."
          },
          "parameters": [
            {
              "name": "contexts",
              "type": "sap.ui.model.Context[]",
              "optional": false,
              "description": "Contexts to be used. This property must be an array."
            }
          ],
          "description": "Sets the contexts to be updated. These contexts are required for offering possible values and are also used by the {@link sap.ui.comp.smartmultiedit.Container#getAllUpdatedContexts} method."
        },
        {
          "name": "setEntitySet",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartmultiedit.Container",
            "description": "Returns <code>this</code> to allow method chaining."
          },
          "parameters": [
            {
              "name": "entitySet",
              "type": "string",
              "optional": false,
              "description": "Entity set to use."
            }
          ],
          "description": "Sets the entity set to read the properties from. Setting this value twice will not result in an update of the underlining components."
        },
        {
          "name": "setLayout",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartmultiedit.Container",
            "description": "Returns <code>this</code> to allow method chaining."
          },
          "parameters": [
            {
              "name": "oSmartForm",
              "type": "sap.ui.comp.smartmultiedit.Field",
              "optional": false,
              "description": "Smart form with the layout."
            }
          ],
          "description": "Sets the layout to use."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.comp.smartmultiedit.Field",
      "basename": "Field",
      "resource": "sap/ui/comp/smartmultiedit/Field.js",
      "module": "sap/ui/comp/smartmultiedit/Field",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.52.0",
      "extends": "sap.ui.core.Control",
      "description": "The SmartMultiEdit.Field control enables you to edit multiple homogeneous objects simultaneously. It allows you to select a predefined item from a combo box and apply your selection to all objects being edited.<br> In addition, SmartMultiEdit.Field can handle metadata for a specific OData property when you need to enable mass editing for multiple contexts. The contexts are handled by the {@link sap.ui.comp.smartmultiedit.Container} control.",
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "propertyName",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The OData property name to fetch metadata for.<br> Please note that this is not a dynamic SAP UI5 property: setting it twice will not result in a new binding.",
            "methods": ["getPropertyName", "setPropertyName"]
          },
          {
            "name": "useApplyToEmptyOnly",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "description": "Indicates whether to display applyToEmptyOnly flag.",
            "methods": ["getUseApplyToEmptyOnly", "setUseApplyToEmptyOnly"]
          },
          {
            "name": "applyToEmptyOnly",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "description": "Indicates whether to check for an existing value in the data model before applying the changes.<br> Please note that this property does not automatically update the model. It is up to you as the app developer to decide whether you want to consider this property when updating the model or not.",
            "methods": ["getApplyToEmptyOnly", "setApplyToEmptyOnly"]
          },
          {
            "name": "description",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Optional description of the field.",
            "methods": ["getDescription", "setDescription"]
          },
          {
            "name": "validateTokenExistence",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "since": "1.61.0",
            "description": "Defines whether the existence of the selected token should be validated. <br>If you set this property to <code>true</code>, you should use the {@link sap.ui.comp.smartmultiedit.Container#getErroneousFieldsAndTokens} method, as the validation becomes asynchronous.",
            "methods": [
              "getValidateTokenExistence",
              "setValidateTokenExistence"
            ]
          }
        ],
        "aggregations": [
          {
            "name": "configuration",
            "singularName": "configuration",
            "type": "sap.ui.comp.smartfield.Configuration",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "Optional configuration for <code>SmartField</code>.",
            "methods": [
              "getConfiguration",
              "destroyConfiguration",
              "setConfiguration"
            ]
          }
        ],
        "events": [
          {
            "name": "change",
            "visibility": "public",
            "description": "This event is fired when the selection focus moves from one item in the combo box to another.",
            "parameters": {
              "selectedItem": {
                "name": "selectedItem",
                "type": "sap.ui.core.Item",
                "description": "The selected item."
              }
            },
            "methods": ["attachChange", "detachChange", "fireChange"]
          }
        ],
        "designtime": "sap/ui/comp/designtime/smartmultiedit/Field.designtime"
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new <code>sap.ui.comp.smartmultiedit.Field</code>.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "change",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "selectedItem": {
                      "name": "selectedItem",
                      "type": "sap.ui.core.Item",
                      "optional": false,
                      "description": "The selected item."
                    }
                  }
                }
              }
            }
          ],
          "description": "This event is fired when the selection focus moves from one item in the combo box to another."
        }
      ],
      "methods": [
        {
          "name": "attachChange",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartmultiedit.Field",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartmultiedit.Field</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:change change} event of this <code>sap.ui.comp.smartmultiedit.Field</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartmultiedit.Field</code> itself.\n\nThis event is fired when the selection focus moves from one item in the combo box to another."
        },
        {
          "name": "destroyConfiguration",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartmultiedit.Field",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the configuration in the aggregation {@link #getConfiguration configuration}."
        },
        {
          "name": "detachChange",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartmultiedit.Field",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:change change} event of this <code>sap.ui.comp.smartmultiedit.Field</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.comp.smartmultiedit.Field with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "fireChange",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.comp.smartmultiedit.Field",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "selectedItem": {
                  "name": "selectedItem",
                  "type": "sap.ui.core.Item",
                  "optional": true,
                  "description": "The selected item."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:change change} to attached listeners."
        },
        {
          "name": "getApplyToEmptyOnly",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>applyToEmptyOnly</code>"
          },
          "description": "Gets current value of property {@link #getApplyToEmptyOnly applyToEmptyOnly}.\n\nIndicates whether to check for an existing value in the data model before applying the changes.<br> Please note that this property does not automatically update the model. It is up to you as the app developer to decide whether you want to consider this property when updating the model or not.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getConfiguration",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.comp.smartfield.Configuration" },
          "description": "Gets content of aggregation {@link #getConfiguration configuration}.\n\nOptional configuration for <code>SmartField</code>."
        },
        {
          "name": "getDataType",
          "visibility": "public",
          "returnValue": {
            "type": "String",
            "description": "The EDM data type of the smart field as defined by its metadata."
          },
          "description": "Returns the data type used by the smart field. This data type is determined from metadata."
        },
        {
          "name": "getDescription",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>description</code>"
          },
          "description": "Gets current value of property {@link #getDescription description}.\n\nOptional description of the field."
        },
        {
          "name": "getLabel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.m.Label|sap.ui.comp.smartfield.SmartLabel",
            "description": "An instance of {@link sap.m.Label} or {@link sap.ui.comp.smartfield.SmartLabel} that displays read-only values."
          },
          "description": "Returns the label associated with this field."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.comp.smartmultiedit.Field."
        },
        {
          "name": "getNullable",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "True if nullable, false otherwise."
          },
          "description": "Checks if the data type of the smart multi edit field is nullable as defined by its metadata."
        },
        {
          "name": "getPropertyName",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>propertyName</code>"
          },
          "description": "Gets current value of property {@link #getPropertyName propertyName}.\n\nThe OData property name to fetch metadata for.<br> Please note that this is not a dynamic SAP UI5 property: setting it twice will not result in a new binding."
        },
        {
          "name": "getRawValue",
          "visibility": "public",
          "returnValue": {
            "type": "object",
            "description": "An object containing the property name and its raw (non-formatted) value."
          },
          "description": "Returns the raw value for the OData property that is determined by the <code>propertyName</code> property. If the 'Keep existing value' item is selected, an empty plain object is returned."
        },
        {
          "name": "getRecordTextPath",
          "visibility": "public",
          "returnValue": {
            "type": "string|null",
            "description": "Path to the text property of the record."
          },
          "description": "Returns the path to the text property used by the combo box."
        },
        {
          "name": "getSelectedItem",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.Item|null",
            "description": "The current target of the <code>selectedItem</code> association, or null."
          },
          "description": "Returns the item that was selected using the Select action."
        },
        {
          "name": "getShowValueHelp",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "True if {@link sap.ui.comp.smartfield.SmartField} present, false otherwise."
          },
          "description": "Checks if a {@link sap.ui.comp.smartfield.SmartField} is present, which provides a way to define an explicit value for the field."
        },
        {
          "name": "getSmartField",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartfield.SmartField",
            "description": "An instance of {@link sap.ui.comp.smartfield.SmartField} that helps to define an explicit value."
          },
          "description": "Returns the smart field that is used for selecting a new value."
        },
        {
          "name": "getUnitOfMeasure",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of the unit of measurement of the parent component."
          },
          "description": "Returns the unit of measurement for the underlying smart field."
        },
        {
          "name": "getUnitOfMeasurePropertyName",
          "visibility": "public",
          "returnValue": {
            "type": "string|null",
            "description": "Name of the property that defines the unit of measurement of the underlying component."
          },
          "description": "Returns the name of the property used for the unit of measurement."
        },
        {
          "name": "getUseApplyToEmptyOnly",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>useApplyToEmptyOnly</code>"
          },
          "description": "Gets current value of property {@link #getUseApplyToEmptyOnly useApplyToEmptyOnly}.\n\nIndicates whether to display applyToEmptyOnly flag.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getValidateTokenExistence",
          "visibility": "public",
          "since": "1.61.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>validateTokenExistence</code>"
          },
          "description": "Gets current value of property {@link #getValidateTokenExistence validateTokenExistence}.\n\nDefines whether the existence of the selected token should be validated. <br>If you set this property to <code>true</code>, you should use the {@link sap.ui.comp.smartmultiedit.Container#getErroneousFieldsAndTokens} method, as the validation becomes asynchronous.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getValue",
          "visibility": "public",
          "returnValue": {
            "type": "*",
            "description": "The current value of a {@link sap.ui.comp.smartfield.SmartField} instance."
          },
          "description": "Returns the current value of the smart field."
        },
        {
          "name": "hasClientError",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "An indication of client error."
          },
          "description": "Returns true if there is a client error present, false otherwise."
        },
        {
          "name": "isBlankSelected",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "True if the 'Leave blank' item is selected."
          },
          "description": "Checks if the 'Leave blank' item is selected."
        },
        {
          "name": "isBoolean",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "True if the field contains a boolean value, false otherwise."
          },
          "description": "Checks if the data type of the smart field is boolean."
        },
        {
          "name": "isComboBox",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "True if the field uses some kind of a combo box, false otherwise."
          },
          "description": "Checks if the field uses a combo box. This check doesn't rely on data type but rather a certain combination of annotations."
        },
        {
          "name": "isComposite",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "True if the field contains a value along with a unit of measure, false otherwise."
          },
          "description": "Checks if the data type of the smart field is unit of measurement (UOM)."
        },
        {
          "name": "isDate",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "True if the smart field contains a date value, false otherwise."
          },
          "description": "Checks if the data type of the smart field is date."
        },
        {
          "name": "isDateTime",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "True if the smart field contains some both date and time value, false otherwise."
          },
          "description": "Checks if the data type of the smart field is date with time."
        },
        {
          "name": "isFloat",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "True if the smart field contains some kind of a float number, false otherwise."
          },
          "description": "Checks if the data type of the smart field is some kind of a float number."
        },
        {
          "name": "isInteger",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "True if the smart field contains some kind of a integer number, false otherwise."
          },
          "description": "Checks if the data type of the smart field is some kind of a integer number."
        },
        {
          "name": "isKeepExistingSelected",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "True if the 'Keep existing value' item is selected."
          },
          "description": "Checks if the 'Keep existing value' item is selected."
        },
        {
          "name": "isString",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "True if the smart field type is string, false otherwise."
          },
          "description": "Checks if the data type of the smart field is string."
        },
        {
          "name": "isTime",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "True if the field contains some kind of a time value, false otherwise."
          },
          "description": "Checks if the data type of the smart field is time."
        },
        {
          "name": "isValueHelpSelected",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "True if the 'Use Value Help' item is selected."
          },
          "description": "Checks if the 'Use Value Help' item is selected."
        },
        {
          "name": "setApplyToEmptyOnly",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartmultiedit.Field",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bApplyToEmptyOnly",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>applyToEmptyOnly</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getApplyToEmptyOnly applyToEmptyOnly}.\n\nIndicates whether to check for an existing value in the data model before applying the changes.<br> Please note that this property does not automatically update the model. It is up to you as the app developer to decide whether you want to consider this property when updating the model or not.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setConfiguration",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartmultiedit.Field",
            "description": "Returns <code>this</code> to allow method chaining."
          },
          "parameters": [
            {
              "name": "oConfig",
              "type": "sap.ui.comp.smartfield.Configuration",
              "optional": false,
              "description": "Optional configuration to set."
            }
          ],
          "description": "Sets the optional configuration aggregation."
        },
        {
          "name": "setDescription",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartmultiedit.Field",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sDescription",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>description</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getDescription description}.\n\nOptional description of the field.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setPropertyName",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartmultiedit.Field",
            "description": "Returns <code>this</code> to allow method chaining."
          },
          "parameters": [
            {
              "name": "sName",
              "type": "string",
              "optional": false,
              "description": "Name of the property to bind to."
            }
          ],
          "description": "Sets the name of the property to bind to."
        },
        {
          "name": "setSelectedIndex",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartmultiedit.Field",
            "description": "Returns <code>this</code> to allow method chaining."
          },
          "parameters": [
            {
              "name": "iIndex",
              "type": "number",
              "optional": false,
              "description": "An index of the item inside the Select action."
            }
          ],
          "description": "Sets the item to be selected in the <code>sap.m.Select</code> instance, using its index."
        },
        {
          "name": "setSelectedItem",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartmultiedit.Field",
            "description": "Returns <code>this</code> to allow method chaining."
          },
          "parameters": [
            {
              "name": "oItem",
              "type": "sap.ui.core.Item|null",
              "optional": false,
              "description": "An {@link sap.ui.core.Item} instance or <code>null</code>."
            }
          ],
          "description": "Sets the item to be treated as selected in the <code>sap.m.Select</code> instance."
        },
        {
          "name": "setUseApplyToEmptyOnly",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartmultiedit.Field",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bUseApplyToEmptyOnly",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>useApplyToEmptyOnly</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getUseApplyToEmptyOnly useApplyToEmptyOnly}.\n\nIndicates whether to display applyToEmptyOnly flag.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setValidateTokenExistence",
          "visibility": "public",
          "since": "1.61.0",
          "returnValue": {
            "type": "sap.ui.comp.smartmultiedit.Field",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bValidateTokenExistence",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>validateTokenExistence</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getValidateTokenExistence validateTokenExistence}.\n\nDefines whether the existence of the selected token should be validated. <br>If you set this property to <code>true</code>, you should use the {@link sap.ui.comp.smartmultiedit.Container#getErroneousFieldsAndTokens} method, as the validation becomes asynchronous.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.comp.smartmultiinput.SmartMultiInput",
      "basename": "SmartMultiInput",
      "resource": "sap/ui/comp/smartmultiinput/SmartMultiInput.js",
      "module": "sap/ui/comp/smartmultiinput/SmartMultiInput",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.56.0",
      "extends": "sap.ui.comp.smartfield.SmartField",
      "description": "The <code>SmartMultiInput</code> control is a wrapper for other controls that extends the {@link sap.ui.comp.smartfield.SmartField} control and supports the same settings and annotations.<br> It interprets OData metadata to create multi-input controls, such as {@link sap.m.MultiInput} and {@link sap.m.MultiComboBox}.<br> The OData entity property that is changed or displayed in the control is derived from the control's <code>value</code> property. You can use the <code>SmartMultiInput</code> control in two ways: <ul> <li>With data binding - the <code>value</code> property is bound to a navigation property (1:N relationship).</li> <li>Without data binding - the <code>value</code> property is bound to an arbitrary property of the entity set that is specified in the <code>entitySet</code> property.</li> </ul> Both cases are shown in the example bellow as well as in the samples. Tokens selected in <code>SmartMultiInput</code> can be retrieved using either the {@link #getTokens} or the {@link #getValue} method.\n\n<pre>\n&lt;sap.ui.comp.smartmultiinput.SmartMultiInput value=&quot;{Categories/CategoryId}&quot;/&gt;\n&lt;sap.ui.comp.smartmultiinput.SmartMultiInput entitySet=&quot;Categories&quot; value=&quot;{CategoryId}&quot;/&gt;\n</pre>\n\nFor more details, see the {@link https://ui5.sap.com/#/entity/sap.ui.comp.smartmultiinput.SmartMultiInput samples}.\n\nNote: Just as the rest of the {@link sap.ui.comp} library, this control supports only OData V2 (see {@link sap.ui.model.odata.v2.ODataModel}) and default models.",
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "supportRanges",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "description": "Enables value help with conditions. Can only be used without binding context. Otherwise, has no effect.",
            "methods": ["getSupportRanges", "setSupportRanges"]
          },
          {
            "name": "supportMultiSelect",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "description": "Enables multiple selection in value help dialog.",
            "methods": ["getSupportMultiSelect", "setSupportMultiSelect"]
          }
        ],
        "events": [
          {
            "name": "beforeCreate",
            "visibility": "public",
            "description": "This event is fired before the OData model's <code>create</code> method is called. Provides object with parameters of the call for editing.",
            "parameters": {
              "oData": {
                "name": "oData",
                "type": "object",
                "description": "Data of the entry that should be created."
              },
              "mParameters": {
                "name": "mParameters",
                "type": "object",
                "description": "Parameter map that will be passed to the OData model's <code>create</code> method, accepts the same properties as mParameters of the <code>create</code> method. Parameters <code>success</code> and <code>error</code> have no meaning as they are changed and used internally."
              }
            },
            "methods": [
              "attachBeforeCreate",
              "detachBeforeCreate",
              "fireBeforeCreate"
            ]
          },
          {
            "name": "beforeRemove",
            "visibility": "public",
            "description": "This event is fired before the OData model's <code>remove</code> method is called. Provides object with parameters of the call in key:value format for editing.",
            "parameters": {
              "mParameters": {
                "name": "mParameters",
                "type": "object",
                "description": "Parameter map that will be passed to the OData model's <code>remove</code> method, accepts the same properties as mParameters of the <code>remove</code> method. Parameters <code>success</code> and <code>error</code> have no meaning as they are changed and used internally."
              }
            },
            "methods": [
              "attachBeforeRemove",
              "detachBeforeRemove",
              "fireBeforeRemove"
            ]
          },
          {
            "name": "tokenUpdate",
            "visibility": "public",
            "description": "This event is fired when the tokens aggregation is changed due to a user action (add / remove token). This event is fired only for token changes in non-bound <code>SmartMultiInput</code> elements.",
            "parameters": {
              "type": {
                "name": "type",
                "type": "string",
                "description": "Type of TokenUpdate event. There are two TokenUpdate types: <code>added</code> and <code>removed</code>. Use Tokenizer.TokenUpdateType.Added for \"added\" and Tokenizer.TokenUpdateType.Removed for \"removed\". See {@link sap.m.Tokenizer} for details."
              },
              "addedTokens": {
                "name": "addedTokens",
                "type": "sap.m.Token[]",
                "description": "The array of tokens that are added. This parameter is used when tokenUpdate type is \"added\"."
              },
              "removedTokens": {
                "name": "removedTokens",
                "type": "sap.m.Token[]",
                "description": "The array of tokens that are removed. This parameter is used when tokenUpdate type is \"removed\"."
              }
            },
            "methods": [
              "attachTokenUpdate",
              "detachTokenUpdate",
              "fireTokenUpdate"
            ]
          },
          {
            "name": "selectionChange",
            "visibility": "public",
            "description": "This event is fired when item selection is changed. It is relevant only for selection changes on non-bound <code>SmartMultiInput</code> elements with fixed values, such as {@link sap.m.MultiComboBox}.",
            "parameters": {
              "changedItem": {
                "name": "changedItem",
                "type": "sap.ui.core.Item",
                "description": "Item that was selected or deselected."
              },
              "selected": {
                "name": "selected",
                "type": "boolean",
                "description": "Selection state: <code>true</code> if the item is selected, <code>false</code> if item is not selected."
              }
            },
            "methods": [
              "attachSelectionChange",
              "detachSelectionChange",
              "fireSelectionChange"
            ]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new <code>sap.ui.comp.smartfield.SmartMultiInput</code>.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.",
        "references": [
          "{@link topic:5644169deb76438f800f269b0cb715fc Smart Multi Input}"
        ]
      },
      "events": [
        {
          "name": "beforeCreate",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "oData": {
                      "name": "oData",
                      "type": "object",
                      "optional": false,
                      "description": "Data of the entry that should be created."
                    },
                    "mParameters": {
                      "name": "mParameters",
                      "type": "object",
                      "optional": false,
                      "description": "Parameter map that will be passed to the OData model's <code>create</code> method, accepts the same properties as mParameters of the <code>create</code> method. Parameters <code>success</code> and <code>error</code> have no meaning as they are changed and used internally."
                    }
                  }
                }
              }
            }
          ],
          "description": "This event is fired before the OData model's <code>create</code> method is called. Provides object with parameters of the call for editing."
        },
        {
          "name": "beforeRemove",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "mParameters": {
                      "name": "mParameters",
                      "type": "object",
                      "optional": false,
                      "description": "Parameter map that will be passed to the OData model's <code>remove</code> method, accepts the same properties as mParameters of the <code>remove</code> method. Parameters <code>success</code> and <code>error</code> have no meaning as they are changed and used internally."
                    }
                  }
                }
              }
            }
          ],
          "description": "This event is fired before the OData model's <code>remove</code> method is called. Provides object with parameters of the call in key:value format for editing."
        },
        {
          "name": "selectionChange",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "changedItem": {
                      "name": "changedItem",
                      "type": "sap.ui.core.Item",
                      "optional": false,
                      "description": "Item that was selected or deselected."
                    },
                    "selected": {
                      "name": "selected",
                      "type": "boolean",
                      "optional": false,
                      "description": "Selection state: <code>true</code> if the item is selected, <code>false</code> if item is not selected."
                    }
                  }
                }
              }
            }
          ],
          "description": "This event is fired when item selection is changed. It is relevant only for selection changes on non-bound <code>SmartMultiInput</code> elements with fixed values, such as {@link sap.m.MultiComboBox}."
        },
        {
          "name": "tokenUpdate",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "type": {
                      "name": "type",
                      "type": "string",
                      "optional": false,
                      "description": "Type of TokenUpdate event. There are two TokenUpdate types: <code>added</code> and <code>removed</code>. Use Tokenizer.TokenUpdateType.Added for \"added\" and Tokenizer.TokenUpdateType.Removed for \"removed\". See {@link sap.m.Tokenizer} for details."
                    },
                    "addedTokens": {
                      "name": "addedTokens",
                      "type": "sap.m.Token[]",
                      "optional": false,
                      "description": "The array of tokens that are added. This parameter is used when tokenUpdate type is \"added\"."
                    },
                    "removedTokens": {
                      "name": "removedTokens",
                      "type": "sap.m.Token[]",
                      "optional": false,
                      "description": "The array of tokens that are removed. This parameter is used when tokenUpdate type is \"removed\"."
                    }
                  }
                }
              }
            }
          ],
          "description": "This event is fired when the tokens aggregation is changed due to a user action (add / remove token). This event is fired only for token changes in non-bound <code>SmartMultiInput</code> elements."
        }
      ],
      "methods": [
        {
          "name": "attachBeforeCreate",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartmultiinput.SmartMultiInput",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartmultiinput.SmartMultiInput</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:beforeCreate beforeCreate} event of this <code>sap.ui.comp.smartmultiinput.SmartMultiInput</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartmultiinput.SmartMultiInput</code> itself.\n\nThis event is fired before the OData model's <code>create</code> method is called. Provides object with parameters of the call for editing."
        },
        {
          "name": "attachBeforeRemove",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartmultiinput.SmartMultiInput",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartmultiinput.SmartMultiInput</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:beforeRemove beforeRemove} event of this <code>sap.ui.comp.smartmultiinput.SmartMultiInput</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartmultiinput.SmartMultiInput</code> itself.\n\nThis event is fired before the OData model's <code>remove</code> method is called. Provides object with parameters of the call in key:value format for editing."
        },
        {
          "name": "attachSelectionChange",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartmultiinput.SmartMultiInput",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartmultiinput.SmartMultiInput</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:selectionChange selectionChange} event of this <code>sap.ui.comp.smartmultiinput.SmartMultiInput</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartmultiinput.SmartMultiInput</code> itself.\n\nThis event is fired when item selection is changed. It is relevant only for selection changes on non-bound <code>SmartMultiInput</code> elements with fixed values, such as {@link sap.m.MultiComboBox}."
        },
        {
          "name": "attachTokenUpdate",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartmultiinput.SmartMultiInput",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartmultiinput.SmartMultiInput</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:tokenUpdate tokenUpdate} event of this <code>sap.ui.comp.smartmultiinput.SmartMultiInput</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartmultiinput.SmartMultiInput</code> itself.\n\nThis event is fired when the tokens aggregation is changed due to a user action (add / remove token). This event is fired only for token changes in non-bound <code>SmartMultiInput</code> elements."
        },
        {
          "name": "checkClientError",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "<code>true</code>, if a client error has been detected, <code>false</code> otherwise"
          },
          "description": "Checks whether a client error has been detected. In addition, this method displays an error message, if it is not already displayed."
        },
        {
          "name": "detachBeforeCreate",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartmultiinput.SmartMultiInput",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:beforeCreate beforeCreate} event of this <code>sap.ui.comp.smartmultiinput.SmartMultiInput</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachBeforeRemove",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartmultiinput.SmartMultiInput",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:beforeRemove beforeRemove} event of this <code>sap.ui.comp.smartmultiinput.SmartMultiInput</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachSelectionChange",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartmultiinput.SmartMultiInput",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:selectionChange selectionChange} event of this <code>sap.ui.comp.smartmultiinput.SmartMultiInput</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachTokenUpdate",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartmultiinput.SmartMultiInput",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:tokenUpdate tokenUpdate} event of this <code>sap.ui.comp.smartmultiinput.SmartMultiInput</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.comp.smartmultiinput.SmartMultiInput with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.comp.smartfield.SmartField.extend}."
        },
        {
          "name": "fireBeforeCreate",
          "visibility": "protected",
          "returnValue": {
            "type": "boolean",
            "description": "Whether or not to prevent the default action"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "oData": {
                  "name": "oData",
                  "type": "object",
                  "optional": true,
                  "description": "Data of the entry that should be created."
                },
                "mParameters": {
                  "name": "mParameters",
                  "type": "object",
                  "optional": true,
                  "description": "Parameter map that will be passed to the OData model's <code>create</code> method, accepts the same properties as mParameters of the <code>create</code> method. Parameters <code>success</code> and <code>error</code> have no meaning as they are changed and used internally."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:beforeCreate beforeCreate} to attached listeners.\n\nListeners may prevent the default action of this event by using the <code>preventDefault</code>-method on the event object."
        },
        {
          "name": "fireBeforeRemove",
          "visibility": "protected",
          "returnValue": {
            "type": "boolean",
            "description": "Whether or not to prevent the default action"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "mParameters": {
                  "name": "mParameters",
                  "type": "object",
                  "optional": true,
                  "description": "Parameter map that will be passed to the OData model's <code>remove</code> method, accepts the same properties as mParameters of the <code>remove</code> method. Parameters <code>success</code> and <code>error</code> have no meaning as they are changed and used internally."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:beforeRemove beforeRemove} to attached listeners.\n\nListeners may prevent the default action of this event by using the <code>preventDefault</code>-method on the event object."
        },
        {
          "name": "fireSelectionChange",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.comp.smartmultiinput.SmartMultiInput",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "changedItem": {
                  "name": "changedItem",
                  "type": "sap.ui.core.Item",
                  "optional": true,
                  "description": "Item that was selected or deselected."
                },
                "selected": {
                  "name": "selected",
                  "type": "boolean",
                  "optional": true,
                  "description": "Selection state: <code>true</code> if the item is selected, <code>false</code> if item is not selected."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:selectionChange selectionChange} to attached listeners."
        },
        {
          "name": "fireTokenUpdate",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.comp.smartmultiinput.SmartMultiInput",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "type": {
                  "name": "type",
                  "type": "string",
                  "optional": true,
                  "description": "Type of TokenUpdate event. There are two TokenUpdate types: <code>added</code> and <code>removed</code>. Use Tokenizer.TokenUpdateType.Added for \"added\" and Tokenizer.TokenUpdateType.Removed for \"removed\". See {@link sap.m.Tokenizer} for details."
                },
                "addedTokens": {
                  "name": "addedTokens",
                  "type": "sap.m.Token[]",
                  "optional": true,
                  "description": "The array of tokens that are added. This parameter is used when tokenUpdate type is \"added\"."
                },
                "removedTokens": {
                  "name": "removedTokens",
                  "type": "sap.m.Token[]",
                  "optional": true,
                  "description": "The array of tokens that are removed. This parameter is used when tokenUpdate type is \"removed\"."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:tokenUpdate tokenUpdate} to attached listeners."
        },
        {
          "name": "getFilter",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.model.Filter",
            "description": "filter object based on current SmartMultiInput values"
          },
          "description": "Returns a filter that can be applied to restrict the OData query."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.comp.smartmultiinput.SmartMultiInput."
        },
        {
          "name": "getRangeData",
          "visibility": "public",
          "returnValue": {
            "type": "Array",
            "description": "array of range values, one for each token"
          },
          "description": "Returns an array of token values in range format."
        },
        {
          "name": "getSupportMultiSelect",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>supportMultiSelect</code>"
          },
          "description": "Gets current value of property {@link #getSupportMultiSelect supportMultiSelect}.\n\nEnables multiple selection in value help dialog.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getSupportRanges",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>supportRanges</code>"
          },
          "description": "Gets current value of property {@link #getSupportRanges supportRanges}.\n\nEnables value help with conditions. Can only be used without binding context. Otherwise, has no effect.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getTokens",
          "visibility": "public",
          "returnValue": {
            "type": "sap.m.Token[]",
            "description": "Selected tokens"
          },
          "description": "Returns tokens selected in <code>SmartMultiInput</code>"
        },
        {
          "name": "getValue",
          "visibility": "public",
          "returnValue": {
            "type": "sap.m.Token[]",
            "description": "Selected tokens"
          },
          "description": "Returns tokens selected in <code>SmartMultiInput</code>"
        },
        {
          "name": "setRangeData",
          "visibility": "public",
          "parameters": [
            {
              "name": "vRangeData",
              "type": "object|array",
              "optional": false,
              "description": "Object or array of objects with range data. Tokens will be created based on this data and fed into the smart multi input."
            }
          ],
          "description": "Sets tokens based on given objects with range data. Can only be used without a data binding. Otherwise, has no effect."
        },
        {
          "name": "setSupportMultiSelect",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartmultiinput.SmartMultiInput",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bSupportMultiSelect",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>supportMultiSelect</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSupportMultiSelect supportMultiSelect}.\n\nEnables multiple selection in value help dialog.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setSupportRanges",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartmultiinput.SmartMultiInput",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bSupportRanges",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>supportRanges</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSupportRanges supportRanges}.\n\nEnables value help with conditions. Can only be used without binding context. Otherwise, has no effect.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.ui.comp.smarttable.ExportType",
      "basename": "ExportType",
      "resource": "sap/ui/comp/library.js",
      "module": "sap/ui/comp/library",
      "export": "smarttable.ExportType",
      "static": true,
      "visibility": "public",
      "description": "Provides the type of services available for export in the <code>SmartTable</code> control.",
      "ui5-metamodel": true,
      "properties": [
        {
          "name": "GW",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Gateway backend spreadsheet export service is used"
        },
        {
          "name": "UI5Client",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "UI5 client-side spreadsheet export service is used (default as of UI5 version 1.52)"
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.ui.comp.smarttable.InfoToolbarBehavior",
      "basename": "InfoToolbarBehavior",
      "resource": "sap/ui/comp/library.js",
      "module": "sap/ui/comp/library",
      "export": "smarttable.InfoToolbarBehavior",
      "static": true,
      "visibility": "public",
      "since": "1.70",
      "description": "Enumeration <code>sap.ui.comp.smarttable.InfoToolbarBehavior</code> determines the behavior of the info toolbar in the <code>SmartTable</code> control.\n\nThe info toolbar represents the filters that are applied using the table personalization dialog.",
      "ui5-metamodel": true,
      "properties": [
        {
          "name": "Auto",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The info toolbar is rendered for the <code>SmartTable</code> control of table type <code>ResponsiveTable</code> only."
        },
        {
          "name": "Off",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The info toolbar is not rendered."
        },
        {
          "name": "On",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The info toolbar is rendered for the <code>SmartTable</code> control regardless of the table type.\n\n<b>Note:</b> Currently the info toolbar is only rendered for table type <code>ResponsiveTable</code>."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.comp.smarttable.SmartTable",
      "basename": "SmartTable",
      "resource": "sap/ui/comp/smarttable/SmartTable.js",
      "module": "sap/ui/comp/smarttable/SmartTable",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.m.VBox",
      "description": "The SmartTable control creates a table based on OData metadata and the configuration specified. The entitySet attribute must be specified to use the control. This attribute is used to fetch fields from OData metadata, from which columns will be generated; it can also be used to fetch the actual table data.<br> Based on the tableType property, this control will render a standard, analytical, tree, or responsive table.<br> <b><i>Note:</i></b><br> Most of the attributes/properties are not dynamic and cannot be changed once the control has been initialized.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "entitySet",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.26.0",
            "description": "The entity set name from which to fetch data and generate the columns. Note that this is not a dynamic UI5 property\n\n<b>Note:</b> It is not allowed to have one of the following strings as field names for your OData entity: <ul> <li><code>btnEditToggle</code></li> <li><code>btnExcelExport</code></li> <li><code>btnFullScreen</code></li> <li><code>btnPersonalisation</code></li> <li><code>header</code></li> <li><code>infoToolbarText</code></li> <li><code>persoController</code></li> <li><code>toolbarSeperator</code></li> <li><code>toolbarSpacer</code></li> <li><code>ui5table</code></li> <li><code>variant</code></li> </ul>",
            "methods": ["getEntitySet", "setEntitySet"]
          },
          {
            "name": "smartFilterId",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.26.0",
            "description": "ID of the corresponding SmartFilter control; When specified, the SmartTable searches for the SmartFilter (also in the closest parent View) and attaches to the relevant events of the SmartFilter; to fetch data, show overlay etc.",
            "methods": ["getSmartFilterId", "setSmartFilterId"]
          },
          {
            "name": "ignoredFields",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.26.0",
            "description": "CSV of fields that must be ignored in the OData metadata by the SmartTable control.<br> <i>Note:</i><br> No validation is done. Please ensure that you do not add spaces or special characters.",
            "methods": ["getIgnoredFields", "setIgnoredFields"]
          },
          {
            "name": "initiallyVisibleFields",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.32.0",
            "description": "CSV of fields that must be shown initially in the SmartTable as visible columns and in the order specified.<br> This property is mainly meant to be used when no LineItem annotation exists.<br> If you have fields in the XMLView they are always shown first; then, the columns are added based on the LineItem annotation and finally based on this property.<br> <i>Note:</i><br> If both this property and the LineItem annotation exist, the order of fields cannot be guaranteed to be as mentioned here.<br> No validation is done. Please ensure that you do not add spaces or special characters.",
            "methods": [
              "getInitiallyVisibleFields",
              "setInitiallyVisibleFields"
            ]
          },
          {
            "name": "requestAtLeastFields",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.32.0",
            "description": "CSV of fields that must be always requested from the backend<br> This property is mainly meant to be used when there is no PresentationVariant annotation.<br> If both this property and the PresentationVariant annotation exist, the select request sent to the backend would be a combination of both.<br> <i>Note:</i><br> For <code>AnalyticalTable</code> (supported since 1.54), the following restrictions apply: <ul> <li>The property name(s) must not point to a new dimension or a measure.</li> <li>The property name(s) must not point to a navigationProperty/association path, as this might not supported by analytical services.</li> </ul> No validation is done. Please ensure that you do not add spaces or special characters.",
            "methods": ["getRequestAtLeastFields", "setRequestAtLeastFields"]
          },
          {
            "name": "ignoreFromPersonalisation",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.32.0",
            "description": "CSV of fields that is not shown in the personalization dialog.<br> <i>Note:</i><br> No validation is done. Please ensure that you do not add spaces or special characters.",
            "methods": [
              "getIgnoreFromPersonalisation",
              "setIgnoreFromPersonalisation"
            ]
          },
          {
            "name": "tableType",
            "type": "sap.ui.comp.smarttable.TableType",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.26.0",
            "description": "Specifies the type of table to be created in the SmartTable control.<br> <i>Note:</i><br> If you add a table to the content of the SmartTable in the view, this property has no effect.",
            "methods": ["getTableType", "setTableType"]
          },
          {
            "name": "useVariantManagement",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "since": "1.26.0",
            "description": "The useVariantManagement attribute can be set to true or false depending on whether you want to use variants. As a prerequisite you need to specify the persistencyKey property.",
            "methods": ["getUseVariantManagement", "setUseVariantManagement"]
          },
          {
            "name": "showVariantManagement",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "since": "1.38.0",
            "description": "The showVariantManagement attribute can be set to true or false for controlling the visibility of VariantManagement button.",
            "methods": ["getShowVariantManagement", "setShowVariantManagement"]
          },
          {
            "name": "useExportToExcel",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "since": "1.26.0",
            "description": "Can be set to true or false depending on whether you want to export data to a spreadsheet application, for example Microsoft Excel.<br> <i>Note:</i><br> If <code>exportType</code> is <code>sap.ui.comp.smarttable.ExportType.GW</code>, any $expand parameters are removed when sending the request to generate the spreadsheet.<br> As of UI5 version 1.56: If <code>exportType</code> is <code>sap.ui.comp.smarttable.ExportType.UI5Client</code> and <code>TreeTable</code> is used, the <code>worksheet.hierarchyLevel</code> property (see {@link sap.ui.export.Spreadsheet}) is filled from the binding, if the relevant information is available there for exporting hierarchical data in the spreadsheet.",
            "methods": ["getUseExportToExcel", "setUseExportToExcel"]
          },
          {
            "name": "exportType",
            "type": "sap.ui.comp.smarttable.ExportType",
            "defaultValue": "UI5Client",
            "group": "Misc",
            "visibility": "public",
            "since": "1.50.0",
            "description": "Specifies the type of export to be used in the <code>SmartTable</code> control.",
            "methods": ["getExportType", "setExportType"]
          },
          {
            "name": "useTablePersonalisation",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "since": "1.26.0",
            "description": "The useTablePersonalisation attribute can be set to true or false depending on whether you want to define personalized table settings. If you want to persist the table personalization, you need to specify the persistencyKey property.",
            "methods": [
              "getUseTablePersonalisation",
              "setUseTablePersonalisation"
            ]
          },
          {
            "name": "showTablePersonalisation",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "since": "1.38.0",
            "description": "The showTablePersonalisation attribute can be set to true or false for controlling the visibility of the TablePersonalisation button.",
            "methods": [
              "getShowTablePersonalisation",
              "setShowTablePersonalisation"
            ]
          },
          {
            "name": "showRowCount",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "since": "1.26.0",
            "description": "If set to <code>true</code> (default), the number of rows is shown along with the header text.<br> If set to <code>false</code>, the number of rows will not be shown on the user interface.<br> <i>Note:</i><br> To avoid sending dedicated OData requests in order to improve your application's performance, you must configure the binding of the table as required.",
            "methods": ["getShowRowCount", "setShowRowCount"]
          },
          {
            "name": "header",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.26.0",
            "description": "Specifies header text that is shown in table",
            "methods": ["getHeader", "setHeader"]
          },
          {
            "name": "toolbarStyleClass",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.26.0",
            "description": "A style class which is defined for the toolbar of the table.",
            "methods": ["getToolbarStyleClass", "setToolbarStyleClass"]
          },
          {
            "name": "enableCustomFilter",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "since": "1.26.0",
            "description": "Can be used to override the filter behavior. If set to true (default), instead of the filter input box a button is rendered. When pressing this button, the SmartTable control opens the filter panel directly in the table personalization dialog.",
            "deprecated": {
              "since": "1.40.0",
              "text": "After personalization dialog has been introduced in SmartTable the property <code>enableCustomFilter</code> does not make sense. When setting the property to <code>false</code>, the entered custom filter value will not be shown in personalization dialog and will also not be persisted in variant management. The custom filter will also be overwritten when rebindTable is called on the SmartTable."
            },
            "methods": ["getEnableCustomFilter", "setEnableCustomFilter"]
          },
          {
            "name": "persistencyKey",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.26.0",
            "description": "Key used to access personalization data.",
            "methods": ["getPersistencyKey", "setPersistencyKey"]
          },
          {
            "name": "useOnlyOneSolidToolbar",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "since": "1.26.0",
            "description": "If set to true, the standard toolbar and custom toolbar will be merged into one toolbar. The combined toolbar will have a solid style.",
            "deprecated": {
              "since": "1.29",
              "text": "This property has no effect"
            },
            "methods": [
              "getUseOnlyOneSolidToolbar",
              "setUseOnlyOneSolidToolbar"
            ]
          },
          {
            "name": "placeToolbarInTable",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "since": "1.56",
            "description": "Specifies whether the <code>Toolbar</code> control of the <code>SmartTable</code> is placed inside the corresponding aggregation of the inner UI5 table control.",
            "methods": ["getPlaceToolbarInTable", "setPlaceToolbarInTable"]
          },
          {
            "name": "currentVariantId",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.28.0",
            "description": "Retrieves or sets the current variant.",
            "methods": ["getCurrentVariantId", "setCurrentVariantId"]
          },
          {
            "name": "editable",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "since": "1.28.0",
            "description": "This attribute can be used to specify if the controls created by the SmartTable control are editable. (The automatic toggle of controls works only for the SmartField/SmartToggle scenario)",
            "methods": ["getEditable", "setEditable"]
          },
          {
            "name": "enableAutoBinding",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "since": "1.28.0",
            "description": "When set to true, this enables automatic binding of the table using the tableBindingPath (if it exists) or entitySet property. This happens just after the <code>initialise</code> event has been fired.",
            "methods": ["getEnableAutoBinding", "setEnableAutoBinding"]
          },
          {
            "name": "tableBindingPath",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.28.0",
            "description": "This attribute can be used to specify the path that is used during the binding of the table. If not specified, the entitySet attribute is used instead. (used only if binding is established internally/automatically - See enableAutoBinding)",
            "methods": ["getTableBindingPath", "setTableBindingPath"]
          },
          {
            "name": "editTogglable",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "since": "1.28.0",
            "description": "Specifies whether the editable property can be toggled via a button on the toolbar. (The automatic toggle of controls works only for the SmartField/SmartToggle scenario)",
            "methods": ["getEditTogglable", "setEditTogglable"]
          },
          {
            "name": "demandPopin",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "since": "1.30.0",
            "description": "The demandPopin attribute can be set to true or false depending on whether you want to display columns as popins on the responsive table",
            "methods": ["getDemandPopin", "setDemandPopin"]
          },
          {
            "name": "showFullScreenButton",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "since": "1.38",
            "description": "Controls the visibility of the FullScreen button.",
            "methods": ["getShowFullScreenButton", "setShowFullScreenButton"]
          },
          {
            "name": "initialNoDataText",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.58",
            "description": "The text shown initially before the control is bound and initialized. The special values <code>$FILTERBAR</code> or <code>$NO_FILTERBAR</code> can be specified to make the <code>SmartTable</code> control show the initial text as if the <code>SmartFilterBar</code> control were associated with it. If nothing is specified, the default behavior is to show the initial text based on whether the <code>SmartFilterBar</code> control is actually associated with the <code>SmartTable</code> control.",
            "methods": ["getInitialNoDataText", "setInitialNoDataText"]
          },
          {
            "name": "useInfoToolbar",
            "type": "sap.ui.comp.smarttable.InfoToolbarBehavior",
            "defaultValue": "Auto",
            "group": "Behavior",
            "visibility": "public",
            "since": "1.70",
            "description": "Shows an info toolbar.<br> Filters that are applied using the table personalization dialog are shown in the info toolbar.<br> <b>Note:</b><br> <ul> <li>The default value for the property is <code>Auto</code>, which means that the info toolbar is shown by default if table type is <code>ResponsiveTable</code>.</li> <li>The info toolbar is hidden if the property is set to <code>Off</code>.</li> <li>The info toolbar is visible if the property is set to <code>On</code>. Currently the info toolbar is only available for the table type <code>ResponsiveTable</code>.</li> <li>If multiple filters are applied to the same column, then the info toolbar contains the column name only once.</li> <li>In case there is a custom info toolbar used for the responsive table control, then the property must be set to <code>Off</code>. Otherwise, an error is logged in the browser console.</li> </ul>",
            "methods": ["getUseInfoToolbar", "setUseInfoToolbar"]
          }
        ],
        "aggregations": [
          {
            "name": "customToolbar",
            "singularName": "customToolbar",
            "type": "sap.m.Toolbar",
            "cardinality": "0..1",
            "visibility": "public",
            "since": "1.26.0",
            "description": "A toolbar that can be added by the user to define their own custom buttons, icons, etc. If this is specified, the SmartTable control does not create an additional toolbar, but makes use of this one.<br> <i>Note:</i><br> The CSS class sapMTBHeader-CTX is applied on the given toolbar.",
            "methods": [
              "getCustomToolbar",
              "destroyCustomToolbar",
              "setCustomToolbar"
            ]
          },
          {
            "name": "semanticObjectController",
            "singularName": "semanticObjectController",
            "type": "sap.ui.comp.navpopover.SemanticObjectController",
            "cardinality": "0..1",
            "visibility": "public",
            "since": "1.28.0",
            "description": "The Semantic Object Controller allows the user to specify and overwrite functionality for semantic object navigation.",
            "methods": [
              "getSemanticObjectController",
              "destroySemanticObjectController",
              "setSemanticObjectController"
            ]
          },
          {
            "name": "noData",
            "singularName": "noData",
            "type": "sap.ui.core.Control",
            "altTypes": ["string"],
            "cardinality": "0..1",
            "visibility": "public",
            "since": "1.32.0",
            "description": "The value for the noData aggregation can be either a string value or a control instance.<br> The control is shown, in case there is no data for the Table available. In case of a string value this will simply replace the no data text.<br> Currently the Responsive Table only supports string values.",
            "methods": ["getNoData", "destroyNoData", "setNoData"]
          },
          {
            "name": "semanticKeyAdditionalControl",
            "singularName": "semanticKeyAdditionalControl",
            "type": "sap.ui.core.Control",
            "cardinality": "0..1",
            "visibility": "public",
            "since": "1.38.0",
            "description": "Allows users to specify an additional control that will be added to a VBox for the first semantic key field.<br> <i>Note:</i><br> This property is not meant for public use.",
            "methods": [
              "getSemanticKeyAdditionalControl",
              "destroySemanticKeyAdditionalControl",
              "setSemanticKeyAdditionalControl"
            ]
          }
        ],
        "associations": [
          {
            "name": "smartVariant",
            "singularName": "smartVariant",
            "type": "sap.ui.core.Control",
            "cardinality": "0..1",
            "visibility": "public",
            "since": "1.38",
            "description": "Identifies the SmartVariant control which should be used for the personalization. Will be ignored if the advanced mode is set.",
            "methods": ["getSmartVariant", "setSmartVariant"]
          }
        ],
        "events": [
          {
            "name": "initialise",
            "visibility": "public",
            "since": "1.26.0",
            "description": "This event is fired once the control has been initialized.",
            "methods": [
              "attachInitialise",
              "detachInitialise",
              "fireInitialise"
            ]
          },
          {
            "name": "beforeRebindTable",
            "visibility": "public",
            "since": "1.26.0",
            "description": "This event is fired just before the binding is being done.",
            "parameters": {
              "bindingParams": {
                "name": "bindingParams",
                "type": "object",
                "description": "The bindingParams object contains filters, sorters and other binding related information for the table."
              },
              "bindingParams.preventTableBind": {
                "name": "bindingParams.preventTableBind",
                "type": "boolean",
                "description": "If set to <code>true</code> by the listener, binding is prevented"
              },
              "bindingParams.filters": {
                "name": "bindingParams.filters",
                "type": "sap.ui.model.Filter[]",
                "description": "The combined filter array containing a set of sap.ui.model.Filter instances of the SmartTable and SmartFilter controls; can be modified by users to influence filtering"
              },
              "bindingParams.sorter": {
                "name": "bindingParams.sorter",
                "type": "sap.ui.model.Sorter[]",
                "description": "An array containing a set of sap.ui.model.Sorter instances of the SmartTable control (personalization); can be modified by users to influence sorting"
              },
              "bindingParams.parameters": {
                "name": "bindingParams.parameters",
                "type": "object",
                "description": "a map of parameters which is passed to the binding"
              },
              "bindingParams.events": {
                "name": "bindingParams.events",
                "type": "object",
                "description": "map of event listeners for the binding events (since 1.56). The events listeners can only be registered while the binding is created. So, ensure that the events parameter is filled from the beginning, so that the registration can be done while the binding is created."
              }
            },
            "methods": [
              "attachBeforeRebindTable",
              "detachBeforeRebindTable",
              "fireBeforeRebindTable"
            ]
          },
          {
            "name": "editToggled",
            "visibility": "public",
            "since": "1.28.0",
            "description": "This event is fired when display/edit button is clicked.",
            "methods": [
              "attachEditToggled",
              "detachEditToggled",
              "fireEditToggled"
            ]
          },
          {
            "name": "dataRequested",
            "visibility": "public",
            "since": "1.52.0",
            "description": "This event is fired when data is requested after binding. The event is fired if the binding for the table is done by the SmartTable itself.",
            "deprecated": {
              "since": "1.56",
              "text": "Use <code>beforeRebindTable</code> event to attach/listen to the binding \"events\" directly"
            },
            "methods": [
              "attachDataRequested",
              "detachDataRequested",
              "fireDataRequested"
            ]
          },
          {
            "name": "dataReceived",
            "visibility": "public",
            "since": "1.28.0",
            "description": "This event is fired when data is received after binding. The event is fired if the binding for the table is done by the SmartTable itself.",
            "deprecated": {
              "since": "1.56",
              "text": "Use <code>beforeRebindTable</code> event to attach/listen to the binding \"events\" directly"
            },
            "methods": [
              "attachDataReceived",
              "detachDataReceived",
              "fireDataReceived"
            ]
          },
          {
            "name": "afterVariantInitialise",
            "visibility": "public",
            "since": "1.28.0",
            "description": "This event is fired after variant management in the SmartTable has been initialized.",
            "methods": [
              "attachAfterVariantInitialise",
              "detachAfterVariantInitialise",
              "fireAfterVariantInitialise"
            ]
          },
          {
            "name": "afterVariantSave",
            "visibility": "public",
            "since": "1.28.0",
            "description": "This event is fired after a variant has been saved. This event can be used to retrieve the ID of the saved variant.",
            "parameters": {
              "currentVariantId": {
                "name": "currentVariantId",
                "type": "string",
                "description": "ID of the currently selected variant"
              }
            },
            "methods": [
              "attachAfterVariantSave",
              "detachAfterVariantSave",
              "fireAfterVariantSave"
            ]
          },
          {
            "name": "afterVariantApply",
            "visibility": "public",
            "since": "1.28.0",
            "description": "This event is fired after a variant has been applied.",
            "parameters": {
              "currentVariantId": {
                "name": "currentVariantId",
                "type": "string",
                "description": "ID of the currently selected variant"
              }
            },
            "methods": [
              "attachAfterVariantApply",
              "detachAfterVariantApply",
              "fireAfterVariantApply"
            ]
          },
          {
            "name": "showOverlay",
            "visibility": "public",
            "since": "1.32.0",
            "description": "This event is fired just before the overlay is being shown.",
            "parameters": {
              "overlay": {
                "name": "overlay",
                "type": "object",
                "description": "The overlay object contains information related to the table's overlay"
              },
              "overlay.show": {
                "name": "overlay.show",
                "type": "boolean",
                "description": "If set to <code>false</code> by the listener, overlay is not shown"
              }
            },
            "methods": [
              "attachShowOverlay",
              "detachShowOverlay",
              "fireShowOverlay"
            ]
          },
          {
            "name": "fieldChange",
            "visibility": "public",
            "since": "1.34.0",
            "description": "This event is fired when an editable field, created internally by the SmartTable control, is changed.",
            "methods": [
              "attachFieldChange",
              "detachFieldChange",
              "fireFieldChange"
            ]
          },
          {
            "name": "fullScreenToggled",
            "visibility": "public",
            "since": "1.46",
            "description": "This event is fired right after the full screen mode of the SmartTable control has been changed.",
            "parameters": {
              "fullScreen": {
                "name": "fullScreen",
                "type": "boolean",
                "description": "If <code>true</code>, control is in full screen mode"
              }
            },
            "methods": [
              "attachFullScreenToggled",
              "detachFullScreenToggled",
              "fireFullScreenToggled"
            ]
          },
          {
            "name": "beforeExport",
            "visibility": "public",
            "since": "1.50",
            "description": "This event is fired just before export is triggered.",
            "parameters": {
              "exportSettings": {
                "name": "exportSettings",
                "type": "object",
                "description": "Contains workbook.columns, dataSource and other export-related information"
              },
              "userExportSettings": {
                "name": "userExportSettings",
                "type": "object",
                "description": "Contains the export settings defined by the user"
              }
            },
            "methods": [
              "attachBeforeExport",
              "detachBeforeExport",
              "fireBeforeExport"
            ]
          },
          {
            "name": "beforePaste",
            "visibility": "public",
            "description": "This event is fired just before the paste event is triggered and can be used to prevent the default paste behavior.",
            "experimental": {
              "since": "1.64",
              "text": "This API is experimental and subject to change"
            },
            "parameters": {
              "columnInfos": {
                "name": "columnInfos",
                "type": "object[]",
                "description": "Contains array of column info object as determined by the SmartTable"
              }
            },
            "methods": [
              "attachBeforePaste",
              "detachBeforePaste",
              "fireBeforePaste"
            ]
          },
          {
            "name": "paste",
            "visibility": "public",
            "description": "This event is fired when paste is triggered.",
            "experimental": {
              "since": "1.64",
              "text": "This API is experimental and subject to change"
            },
            "parameters": {
              "result": {
                "name": "result",
                "type": "object",
                "description": "Contains parsed/validated paste information returned by PasteHelper.parse API"
              }
            },
            "methods": ["attachPaste", "detachPaste", "firePaste"]
          }
        ],
        "annotations": [
          {
            "name": "sortable",
            "namespace": "Org.OData.Capabilities.V1",
            "target": ["EntitySet"],
            "annotation": "SortRestrictions",
            "defaultValue": "true",
            "appliesTo": ["columns/#"],
            "since": "1.28.1",
            "description": "Defines whether a column can be sorted. Columns are sortable by default. If sorting on columns has to be restricted, then such columns must be listed under <code>NonSortableProperties</code> (exclude from sorting).\n\nThe annotation is calculated from the currently bound <code>EntitySet</code> and contains a <code>Property</code> collection of the corresponding <code>EntityType</code> definition. Only <code>PropertyPath</code> for columns to be excluded from sorting can be applied.\n\nFor columns added to the content of the SmartTable control, the annotation is not used, and the hosting component needs to take care of correct settings.\n\n<i>XML Example of OData V4 with Customer and CompanyCode Properties Excluded from Sorting</i> <pre>\n   &lt;Annotation Term=\"Org.OData.Capabilities.V1.SortRestrictions\"&gt;\n     &lt;PropertyValue Property=\"NonSortableProperties\"&gt;\n       &lt;Collection&gt;\n          &lt;PropertyPath&gt;Customer&lt;/PropertyPath&gt;\n          &lt;PropertyPath&gt;CompanyCode&lt;/PropertyPath&gt;\n       &lt;/Collection&gt;\n     &lt;/PropertyValue&gt;\n   &lt;/Annotation&gt;\n</pre>\n\nFor OData v2 the <code>sap:sortable</code> annotation on the <code>Property</code> can be used to exclude from sorting. <pre>\n   &lt;Property Name=\"Customer\" ... sap:sortable=\"false\"/&gt;\n   &lt;Property Name=\"CompanyCode\" ... sap:sortable=\"false\"/&gt;\n</pre>"
          },
          {
            "name": "filterable",
            "namespace": "Org.OData.Capabilities.V1",
            "target": ["EntitySet"],
            "annotation": "FilterRestrictions",
            "defaultValue": "true",
            "appliesTo": ["columns/#"],
            "since": "1.28.1",
            "description": "Defines whether a column can be filtered. Columns are filterable by default and need to be excluded.\n\nThe annotation is calculated from the currently bound <code>EntitySet</code> and contains a <code>PropertyPath</code> collection of the corresponding <code>EntityType</code> definition. Only PropertyPaths for columns to be excluded from filtering can be applied.\n\nFor columns added to the content's table of the SmartTable, the annotation is not used and the hosting component needs to take care of correct settings.\n\n<b>Note:</b> Currently only OData V2 annotation is supported.\n\n<i>XML Example of OData V4 with Excluded Customer and CompanyCode Properties from Filtering</i> <pre>\n   &lt;Annotation Term=\"Org.OData.Capabilities.V1.FilterRestrictions\"&gt;\n     &lt;PropertyValue Property=\"NonFilterableProperties\"&gt;\n       &lt;Collection&gt;\n          &lt;PropertyPath&gt;Customer&lt;/PropertyPath&gt;\n          &lt;PropertyPath&gt;CompanyCode&lt;/PropertyPath&gt;\n       &lt;/Collection&gt;\n     &lt;/PropertyValue&gt;\n   &lt;/Annotation&gt;\n</pre>\n\nFor OData v2 the <code>sap:filterable</code> annotation on the <code>Property</code> can be used to exclude from filtering. <pre>\n   &lt;Property Name=\"Customer\" ... sap:filterable=\"false\"/&gt;\n   &lt;Property Name=\"CompanyCode\" ... sap:filterable=\"false\"/&gt;\n</pre>"
          },
          {
            "name": "columnLabelOnProperty",
            "namespace": "com.sap.vocabularies.Common.v1",
            "target": ["Property", "PropertyPath"],
            "annotation": "Label",
            "defaultValue": "null",
            "appliesTo": ["columns/#/label"],
            "since": "1.28.1",
            "description": "A short, human-readable text suitable for the column header's text.\n\nEither <code>com.sap.vocabularies.Common.v1.Label</code> annotation on the <code>Property</code> or <code>Label</code> annotation of <code>com.sap.vocabularies.UI.v1.DataFieldAbstract</code> within <code>com.sap.vocabularies.UI.v1.LineItem</code> annotation can be used. If <code>com.sap.vocabularies.Common.v1.Label</code> annotation is given, it has precedence. If none of the annotations is given the label will be the Property name of the column.\n\nFor columns added to the content's table of the SmartTable, the annotation is not used and the hosting component needs to take care of correct settings and translation.\n\n<i>XML Example of OData V4 with CustomerName as Label for Customer Property</i> <pre>\n   &lt;Property Name=\"Customer\"&gt;\n      &lt;Annotation Term=\"com.sap.vocabularies.Common.v1.Label\" String=\"My Customer\" /&gt;\n   &lt;/Property&gt;\n</pre>\n\nFor OData v2 the <code>sap:label</code> annotation on the <code>Property</code> can be used to define the label of the column. <pre>\n   &lt;Property Name=\"Customer\" ... sap:label=\"My Customer\"/&gt;\n</pre>"
          },
          {
            "name": "columnVisible",
            "namespace": "com.sap.vocabularies.Common.v1",
            "target": ["Property"],
            "annotation": "FieldControlType",
            "defaultValue": "false",
            "appliesTo": ["columns/#/visible"],
            "since": "1.28.1",
            "description": "Defines whether the column is visible. The SmartTable control interprets the <code>EnumMember</code> <code>FieldControlType/Hidden</code> of the <code>FieldControl</code> annotation for setting the visibility. If a <code>Property</code> is set to hidden in OData annotation, then the SmartTable control ignores processing this <code>Property</code>.\n\n<b>Note:</b> Currently only <code>FieldControlType/Hidden</code> is supported for statically hiding the columns.\n\n<i>XML Example of OData V4 with Hidden Customer and CompanyCode Properties</i> <pre>\n   &lt;Property Name=\"Customer\"&gt;\n     &lt;Annotation Term=&quot;com.sap.vocabularies.Common.v1.FieldControl&quot; EnumMember=&quot;com.sap.vocabularies.Common.v1.FieldControlType/Hidden&quot;/&gt;\n   &lt;/Property&gt;\n   &lt;Property Name=\"CompanyCode\"&gt;\n     &lt;Annotation Term=&quot;com.sap.vocabularies.Common.v1.FieldControl&quot; EnumMember=&quot;com.sap.vocabularies.Common.v1.FieldControlType/Hidden&quot;/&gt;\n   &lt;/Property&gt;\n</pre>\n\nFor OData v2 the <code>sap:visible</code> annotation on the <code>Property</code> can be used to assign visibility. <pre>\n   &lt;Property Name=&quot;Customer&quot; ... sap:visible=&quot;false&quot;/&gt;\n   &lt;Property Name=&quot;CompanyCode&quot; ... sap:visible=&quot;false&quot;/&gt;\n</pre>"
          },
          {
            "name": "columnCurrencyCode",
            "namespace": "Org.OData.Measures.V1",
            "target": ["Property"],
            "annotation": "ISOCurrency",
            "defaultValue": "null",
            "appliesTo": ["columns/#/cellContent"],
            "since": "1.28.1",
            "description": "Defines a currency code for an amount according to the ISO 4217 standard. <code>ISOCurrency</code> annotation can point to a <code>Property</code>, which can also be <code>null</code>.\n\n<i>XML Example of OData V4 with CurrencyCode Associated to Price Property</i> <pre>\n   &lt;Property Name=\"Price\"&gt;\n      &lt;Annotation Term=\"Org.OData.Measures.V1.ISOCurrency\" Path=\"CurrencyCode\" /&gt;\n   &lt;/Property&gt;\n   &lt;Property Name=\"CurrencyCode\" type=\"Edm.String\" /&gt;\n</pre>\n\nFor OData v2 the <code>sap:semantics=\"currency-code\"</code> along with <code>sap:unit</code> annotations on the <code>Property</code> can be used to assign a currency code to the field. <pre>\n   &lt;Property Name=\"Price\" ... sap:unit=\"CurrencyCode\"/&gt;\n   &lt;Property Name=\"CurrencyCode\" ... sap:semantics=\"currency-code\"/&gt;\n</pre>"
          },
          {
            "name": "columnUnitOfMeasure",
            "namespace": "Org.OData.Measures.V1",
            "target": ["Property"],
            "annotation": "Unit",
            "defaultValue": "null",
            "appliesTo": ["columns/#/cellContent"],
            "since": "1.28.1",
            "description": "The unit of measure for a measured quantity, for example, cm for centimeters. Renders the value associated with the unit annotation of a <code>Property</code>, which can be <code>null</code>.\n\n<i>XML Example of OData V4 with OrderedUnit Associated to OrderedQuantity Property</i> <pre>\n  &lt;Property Name=\"OrderedQuantity\"&gt;\n    &lt;Annotation Term=\"Org.OData.Measures.V1.Unit\" Path=\"OrderedUnit\" /&gt;\n  &lt;/Property&gt;\n  &lt;Property Name=\"OrderedUnit\" type=\"Edm.String\" /&gt;\n</pre>\n\nFor OData v2 the <code>sap:semantics=\"unit-of-measure\"</code> along with <code>sap:unit</code> annotations on the <code>Property</code> can be used to assign unit of measure to the field. <pre>\n   &lt;Property Name=\"OrderedQuantity\" ... sap:unit=\"OrderedUnit\"/&gt;\n   &lt;Property Name=\"OrderedUnit\" ... sap:semantics=\"unit-of-measure\"/&gt;\n</pre>"
          },
          {
            "name": "columnUpperCase",
            "namespace": "com.sap.vocabularies.Common.v1",
            "target": ["Property", "Parameter"],
            "annotation": "IsUpperCase",
            "defaultValue": "true",
            "appliesTo": ["columns/#", "columns/#/cellContent"],
            "since": "1.28.1",
            "description": "Defines whether a string is capitalized.\n\n<i>XML Example of OData V4 with Capitalized Customer and CompanyCode Properties</i> <pre>\n   &lt;Annotation Term=\"com.sap.vocabularies.Common.v1.IsUpperCase\"&gt;\n       &lt;Collection&gt;\n          &lt;PropertyPath&gt;Customer&lt;/PropertyPath&gt;\n          &lt;PropertyPath&gt;CompanyCode&lt;/PropertyPath&gt;\n       &lt;/Collection&gt;\n   &lt;/Annotation&gt;\n</pre>\n\nFor OData v2 the <code>sap:display-format=\"UpperCase\"</code> annotation on the <code>Property</code> can be used to render the text in upper case format. <pre>\n   &lt;Property Name=\"Customer\" ... sap:display-format=\"UpperCase\"/&gt;\n   &lt;Property Name=\"CompanyCode\" ... sap:display-format=\"UpperCase\"/&gt;\n</pre>"
          },
          {
            "name": "columnCalendarDate",
            "namespace": "com.sap.vocabularies.Common.v1",
            "target": ["Property"],
            "annotation": "IsCalendarDate",
            "defaultValue": "true",
            "appliesTo": ["columns/#/cellContent"],
            "since": "1.54",
            "description": "Indicates whether the annotated <code>Property</code> is a string that is based on a calendar date following the pattern 'YYYYMMDD'.\n\nIntended for <code>Edm.String</code> properties that are stored as ABAP date strings with the pattern 'YYYYMMDD'.\n\n<i>XML Example of the OData V4 Annotation</i>\n\n<pre>\n   &lt;Property Name=&quot;Price&quot; MaxLength=&quot;20&quot; Type=&quot;Edm.String&quot;/&gt;\n   &lt;Annotations Target=&quot;Price&quot;&gt;\n       &lt;Annotation Term=&quot;com.sap.vocabularies.Common.v1.IsCalendarDate&quot; Bool=&quot;true&quot;/&gt;\n   &lt;/Annotations&gt;\n</pre>\n\nFor OData v2 the <code>sap:semantics=\"yearmonthday\"</code> annotation on the <code>Property</code> can be used to render a string as date. <pre>\n   &lt;Property Name=\"CreationDate\" Type=\"Edm.String\" ... sap:semantics=\"yearmonthday\"/&gt;\n   &lt;Property Name=\"ChangeDate\" Type=\"Edm.String\" ... sap:semantics=\"yearmonthday\"/&gt;\n</pre>\n\n<b>Note:</b> The calendar & fiscal annotations of the <code>com.sap.vocabularies.Common.v1</code> vocabulary mentioned below right align the columns.<br> <pre>\n    IsCalendarDate, IsCalendarYear, IsCalendarYearMonth, IsCalendarYearQuarter, IsCalendarYearWeek, IsCalendarYear, IsFiscalYear, IsFiscalYearPeriod\n</pre>"
          },
          {
            "name": "lineItem",
            "namespace": "com.sap.vocabularies.UI.v1",
            "target": ["EntityType"],
            "annotation": "LineItem",
            "defaultValue": "null",
            "appliesTo": ["columns"],
            "since": "1.28.1",
            "description": "Renders the initial columns for the SmartTable control.\n\n<i>XML Example of OData V4 Customer and CompanyCode Properties as LineItem</i> <pre>\n   &lt;Annotation Term=\"com.sap.vocabularies.UI.v1.LineItem\"&gt;\n       &lt;Collection&gt;\n         &lt;Record&gt;\n            &lt;PropertyValue Property=\"Value\" Path=\"Customer\" /&gt;\n            &lt;PropertyValue Property=\"Value\" Path=\"CompanyCode\" /&gt;\n          &lt;/Record&gt;\n       &lt;/Collection&gt;\n   &lt;/Annotation&gt;\n</pre>\n\nThe following record types are supported: <code>DataFieldWithUrl</code> and <code>DataField</code>."
          },
          {
            "name": "dataFieldDefault",
            "namespace": "com.sap.vocabularies.UI.v1",
            "target": ["Property"],
            "annotation": "DataFieldDefault",
            "defaultValue": "null",
            "appliesTo": ["columns"],
            "since": "1.65",
            "description": "Configures the rendering of additional columns (the ones not added using the <code>LineItem</code> annotation) for the <code>SmartTable</code> control.\n\n<i>XML Example of OData V4 Customer Property with DataFieldDefault</i> <pre>\n&lt;Annotations Target=\"Namespace.EntityType/Customer\"&gt;\n\t&lt;Annotation Term=\"UI.DataFieldDefault\"&gt;\n\t\t&lt;Record Type=\"UI.DataField\"&gt;\n\t\t\t&lt;PropertyValue Property=\"Label\" String=\"Label via DataFieldDefault\"/&gt;\n\t\t\t&lt;PropertyValue Property=\"Criticality\" Path=\"to_Criticality/Criticality\"/&gt;\n\t\t\t&lt;PropertyValue Property=\"CriticalityRepresentation\" EnumMember=\"UI.CriticalityRepresentationType/WithoutIcon\"/&gt;\n\t\t\t&lt;PropertyValue Property=\"Value\" Path=\"Customer\"/&gt;\n\t\t&lt;/Record&gt;\n\t&lt;/Annotation&gt;\n&lt;/Annotations&gt;\n</pre>\n\nThe following record types are supported: <code>DataFieldWithUrl</code> and <code>DataField</code>."
          },
          {
            "name": "presentationVariant",
            "namespace": "com.sap.vocabularies.UI.v1",
            "target": ["EntitySet", "EntityType"],
            "annotation": "PresentationVariant",
            "defaultValue": "null",
            "appliesTo": ["columns"],
            "since": "1.28.1",
            "description": "Defines the presentation behaviour of the SmartTable control. A <code>PropertyPath</code> and an <code>AnnotationPath</code> can be used for constructing PresentationVariant annotation.\n\n<b>Note:</b><br> The following restrictions currently apply: <ul> <li><code>SortOrder</code> is not evaluated for the <code>ResponsiveTable</code> control.</li> <li><code>GroupBy</code> is only evaluated for the <code>AnalyticalTable</code> control.</li> <li>Other properties, such as <code>MaxItems</code>, <code>Total</code>, etc. are not supported by the <code>SmartTable</code> control.</li> </ul>\n\n<i>XML Example of OData V4 with Customer and CompanyCode Properties as PresentationVariant</i> <pre>\n   &lt;Annotation Term=\"com.sap.vocabularies.UI.v1.PresentationVariant\"&gt;\n     &lt;Record&gt;\n       &lt;PropertyValue Property=\"Visualizations\"&gt;\n         &lt;Collection&gt;\n           &lt;AnnotationPath&gt;@UI.LineItem&lt;/AnnotationPath&gt;\n         &lt;/Collection&gt;\n       &lt;/PropertyValue&gt;\n       &lt;PropertyValue Property=\"RequestAtLeast\"&gt;\n         &lt;Collection&gt;\n           &lt;PropertyPath&gt;Customer&lt;/PropertyPath&gt;\n           &lt;PropertyPath&gt;CompanyCode&lt;/PropertyPath&gt;\n         &lt;/Collection&gt;\n       &lt;/PropertyValue&gt;\n         &lt;PropertyValue Property=\"SortOrder\"&gt;\n           &lt;Collection&gt;\n             &lt;Record&gt;\n               &lt;PropertyValue Property=\"Property\" PropertyPath=\"CompanyCode\"/&gt;\n               &lt;PropertyValue Property=\"Descending\" Bool=\"true\"/&gt;\n             &lt;/Record&gt;\n             &lt;Record&gt;\n               &lt;PropertyValue Property=\"Property\" PropertyPath=\"Customer\"/&gt;\n             &lt;/Record&gt;\n           &lt;/Collection&gt;\n         &lt;/PropertyValue&gt;\n       &lt;/Record&gt;\n     &lt;/Annotation&gt;\n</pre>"
          },
          {
            "name": "columnImportance",
            "namespace": "com.sap.vocabularies.UI.v1",
            "target": ["Record", "Annotation"],
            "annotation": "Importance",
            "defaultValue": "null",
            "appliesTo": ["columns/#/visible"],
            "since": "1.28.1",
            "description": "Shows columns with priority high on phones, with priority medium or high on tablets, and with all priorities on the desktop.\n\n<b>Note:</b> Currently the <code>Importance</code> annotation is only evaluated in the <code>LineItem DataField</code> annotation.\n\n<i>XML Example of OData V4 with the Importance Annotation</i> <pre>\n   &lt;Property Name=\"Customer\"&gt;\n     &lt;Annotation Term=\"com.sap.vocabularies.UI.v1.Importance\" EnumMember=\"com.sap.vocabularies.UI.v1.ImportanceType/High\" /&gt;\n   &lt;/Property&gt;\n   &lt;Property Name=\"CompanyCode\"&gt;\n     &lt;Annotation Term=\"com.sap.vocabularies.UI.v1.Importance\" EnumMember=\"com.sap.vocabularies.UI.v1.ImportanceType/Medium\" /&gt;\n   &lt;/Property&gt;\n</pre>"
          },
          {
            "name": "columnDataField",
            "namespace": "com.sap.vocabularies.UI.v1",
            "target": ["LineItem/Record"],
            "annotation": "DataField",
            "defaultValue": "null",
            "appliesTo": ["columns/cellContent"],
            "since": "1.28.1",
            "description": "This annotation can be specified along with the <code>LineItem</code> annotation in order to specify that a property is rendered as a regular data field.\n\n<i>XML Example for OData V4 with DataField Annotation</i> <pre>\n   &lt;Record Type=\"com.sap.vocabularies.UI.v1.DataField\"&gt;\n     &lt;Annotation Term=\"UI.Importance\" EnumMember=\"UI.ImportanceType/High\"/&gt;\n     &lt;PropertyValue Property=\"Label\" String=\"Language\"/&gt;\n     &lt;PropertyValue Property=\"Value\" Path=\"Language\"/&gt;\n   &lt;/Record&gt;\n</pre>\n\nSupported properties are: <code>Criticality, CriticalityRepresentation, Label</code> and <code>Value</code>."
          },
          {
            "name": "columnDataFieldWithUrl",
            "namespace": "com.sap.vocabularies.UI.v1",
            "target": ["LineItem/Record"],
            "annotation": "DataFieldWithUrl",
            "defaultValue": "null",
            "appliesTo": ["columns/cellContent"],
            "since": "1.38.1",
            "description": "Renders the value as a URL, if a URL parameter path is present. This annotation must be specified along with the <code>LineItem</code> annotation.\n\n<b>Note:</b><br> Currently only <code>odata.fillUriTemplate</code> with LabeledElement for filling the URL parameter is supported in the <code>Apply Function</code>. For <code>AnalyticalTable</code> (supported since 1.54), the following restrictions apply: <ul> <li>Any property represented by the <code>LabeledElement</code> or <code>Url</code> annotation must not be a different dimension or a measure.</li> <li>Any property represented by the <code>LabeledElement</code> or <code>Url</code> annotation must not be a navigationProperty/association path, as this is not supported by analytical services.</li> </ul>\n\n<i>XML Example for OData V4 with DataFieldWithUrl Annotation</i> <pre>\n   &lt;Record Type=\"com.sap.vocabularies.UI.v1.DataFieldWithUrl\"&gt;\n     &lt;PropertyValue Property=\"Label\" String=\"Link to\"/&gt;\n     &lt;PropertyValue Property=\"Value\" String=\"Google Maps\"/&gt;\n     &lt;PropertyValue Property=\"Url\"&gt;\n       &lt;Apply Function=\"odata.fillUriTemplate\"&gt;\n         &lt;String&gt;https://www.google.de/maps/{city1}/{street},{city2}&lt;/String&gt;\n           &lt;LabeledElement Name=\"street\"&gt;\n             &lt;Path&gt;Address/Street&lt;/Path&gt;\n           &lt;/LabeledElement&gt;\n           &lt;LabeledElement Name=\"city1\"&gt;\n             &lt;Path&gt;Address/City&lt;/Path&gt;\n           &lt;/LabeledElement&gt;\n           &lt;LabeledElement Name=\"city2\"&gt;\n             &lt;Path&gt;Address/City&lt;/Path&gt;\n           &lt;/LabeledElement&gt;\n       &lt;/Apply&gt;\n     &lt;/PropertyValue&gt;\n   &lt;/Record&gt;\n</pre>\n\nSupported properties are: <code>Url, Label</code> and <code>Value</code>."
          },
          {
            "name": "columnCriticality",
            "namespace": "com.sap.vocabularies.UI.v1",
            "target": ["PropertyPath"],
            "annotation": "CriticalityType",
            "defaultValue": "null",
            "appliesTo": ["columns/criticality"],
            "since": "1.38.1",
            "description": "Represents the criticality state of the data that is present inside the column. This annotation must be specified along with the <code>LineItem</code> annotation. Color coding is also applied to the criticality state based on the provided <code>EnumMember</code>.\n\n<b>Note:</b><br> <code>TextArrangement</code> annotation is also considered to format the field (if a Text annotation is present) since 1.54. For <code>AnalyticalTable</code> (supported since 1.54), the following restrictions apply: <ul> <li>The property represented by the <code>Criticality</code> or <code>CriticalityRepresentation</code> annotation must not be a different dimension or a measure.</li> <li>The property represented by the <code>Criticality</code> or <code>CriticalityRepresentation</code> annotation must not be a navigationProperty/association path, as this is not supported by analytical services.</li> </ul>\n\n<i>XML Example for OData V4 with CriticalityType Annotation</i> <pre>\n   &lt;Record Type=\"com.sap.vocabularies.UI.v1.DataField\"&gt;\n     &lt;PropertyValue Property=\"Criticality\"\n       Path=\"to_StockAvailability/StockAvailability\" /&gt;\n     &lt;PropertyValue Property=\"CriticalityRepresentation\"\n       EnumMember=\"com.sap.vocabularies.UI.v1.CriticalityRepresentationType/WithoutIcon\" /&gt;\n     &lt;PropertyValue Property=\"Value\" Path=\"to_StockAvailability/StockAvailability\" /&gt;\n   &lt;/Record&gt;\n</pre>"
          },
          {
            "name": "columnCriticalityRepresentationType",
            "namespace": "com.sap.vocabularies.UI.v1",
            "target": ["Property"],
            "annotation": "CriticalityRepresentationType",
            "defaultValue": "null",
            "appliesTo": ["columns/criticalityIcon"],
            "since": "1.38.1",
            "description": "Determines if criticality is visualized by means of an icon. The <code>CriticalityRepresentation</code> contains <code>EnumMember</code> that can be used to control the visibility of the icon. An icon is added along with the criticality state by default. If <code>PropertyPath</code> is to be excluded from having an icon, then <code>PropertyPath</code> must be annotated with the <code>CriticalityRepresentationType/WithoutIcon</code> annotation.\n\n<b>Note:</b> For <code>AnalyticalTable</code> (supported since 1.54), the following restrictions apply: <ul> <li>The property represented by the <code>Criticality</code> or <code>CriticalityRepresentation</code> annotation must not be a different dimension or a measure.</li> <li>The property represented by the <code>Criticality</code> or <code>CriticalityRepresentation</code> annotation must not be a navigationProperty/association path, as this is not supported by analytical services.</li> </ul>\n\n<i>XML Example for OData V4 with CriticalityRepresentationType/WithoutIcon Annotation</i> <pre>\n   &lt;Record Type=\"com.sap.vocabularies.UI.v1.DataField\"&gt;\n     &lt;PropertyValue Property=\"Criticality\"\n       Path=\"to_StockAvailability/StockAvailability\" /&gt;\n     &lt;PropertyValue Property=\"CriticalityRepresentation\"\n       EnumMember=\"com.sap.vocabularies.UI.v1.CriticalityRepresentationType/WithoutIcon\" /&gt;\n     &lt;PropertyValue Property=\"Value\" Path=\"to_StockAvailability/StockAvailability\" /&gt;\n   &lt;/Record&gt;\n</pre>"
          },
          {
            "name": "semanticKey",
            "namespace": "com.sap.vocabularies.Common.v1",
            "target": ["EntityType"],
            "annotation": "SemanticKey",
            "defaultValue": "null",
            "appliesTo": ["columns/cellContent"],
            "since": "1.38.1",
            "description": "Defines whether a property is a semantic key which is used for key columns (rendering <code>sap.m.ObjectIdentifier</code>).<br> In addition, the <code>Common.EditableFieldFor</code> annotation, which points to a semantic key, can be used for editable properties to achieve the same rendering in display scenarios.<br> <br> <b>Note:</b> The rendering with the <code>ObjectIdentifier</code> control is only valid for <code>ResponsiveTable</code> scenarios.\n\n<i>XML Example of OData V4 with SemanticKey Annotation</i> <pre>\n   &lt;Annotations Target=\"SalesOrderType\" xmlns=\"http://docs.oasis-open.org/odata/ns/edm\"&gt;\n     &lt;Annotation Term=\"com.sap.vocabularies.Common.v1.SemanticKey\"&gt;\n       &lt;Collection&gt;\n         &lt;PropertyPath&gt;SalesOrderID&lt;/PropertyPath&gt;\n         &lt;PropertyPath&gt;SalesOrderItemID&lt;/PropertyPath&gt;\n       &lt;/Collection&gt;\n     &lt;/Annotation&gt;\n   &lt;/Annotations&gt;\n</pre>\n\n<i>XML Example of OData V4 with EditableFieldFor Annotation</i> <pre>\n   &lt;Annotations Target=\"NameSpace.SalesOrderType/SalesOrderEditable\" xmlns=\"http://docs.oasis-open.org/odata/ns/edm\"&gt;\n     &lt;Annotation Term=\"com.sap.vocabularies.Common.v1.EditableFieldFor\" PropertyPath=\"SalesOrderID\"/&gt;\n   &lt;/Annotations&gt;\n</pre>"
          },
          {
            "name": "semanticObject",
            "namespace": "com.sap.vocabularies.Common.v1",
            "target": ["Property"],
            "annotation": "SemanticObject",
            "defaultValue": "null",
            "appliesTo": ["columns/cellContent"],
            "since": "1.28.1",
            "description": "Defines a name of the <code>SemanticObject</code> that can be represented with a <code>Property</code> that is defined within an <code>EntityType</code>. The <code>SmartTable</code> control creates a <code>SmartLink</code> control by providing relevant information to the <code>SmartLink</code> control.\n\n<br> <b>Note:</b> Navigation targets are determined using {@link sap.ushell.services.CrossApplicationNavigation CrossApplicationNavigation} of the unified shell service.\n\n<i>XML Example of OData V4 with SemanticObject Annotation</i> <pre>\n  &lt;Annotations Target=&quot;ProductCollection.Product/Name&quot; xmlns=&quot;http://docs.oasis-open.org/odata/ns/edm&quot;&gt;\n     &lt;Annotation Term=&quot;com.sap.vocabularies.Common.v1.SemanticObject&quot; String=&quot;SemanticObjectName&quot; /&gt;\n  &lt;/Annotations&gt;\n</pre>"
          },
          {
            "name": "columnIsImageURL",
            "namespace": "com.sap.vocabularies.UI.v1",
            "target": ["Property"],
            "annotation": "IsImageURL",
            "defaultValue": "true",
            "appliesTo": ["columns/image"],
            "since": "1.38.1",
            "description": "Renders an image in the cell if the annotation is present.\n\n<i>XML Example of OData V4 with the IsImageURL Annotation</i> <pre>\n   &lt;Property Name=\"Product\"&gt;\n     &lt;Annotation Term=\"com.sap.vocabularies.Common.v1.IsImageURL\" Bool=\"true\" /&gt;\n   &lt;/Property&gt;\n</pre>"
          },
          {
            "name": "columnText",
            "namespace": "com.sap.vocabularies.Common.v1",
            "target": ["Property"],
            "annotation": "Text",
            "defaultValue": "null",
            "appliesTo": ["column/cellContent"],
            "since": "1.28.1",
            "description": "A descriptive text for values of the annotated property.\n\n<b>Note:</b><br> The value must be a dynamic expression (property) when used as metadata annotation.<br> For <code>AnalyticalTable</code> (supported since 1.54), the following restrictions apply: <ul> <li>The property represented by the <code>Text</code> annotation must not be a dimension or a measure.</li> <li>The property represented by the <code>Text</code> annotation must not be a navigationProperty/association path, as this is not supported by analytical services.</li> </ul>\n\n<i>XML Example of OData V4 Text on Customer Property</i>\n\n<pre>\n   &lt;Property Name=&quot;Customer&quot;&gt;\n     &lt;Annotation Term=&quot;com.sap.vocabularies.Common.v1.Text&quot; Path=&quot;CustomerName&quot; /&gt;\n   &lt;/Property&gt;\n   &lt;Property Name=&quot;CustomerName&quot; type=&quot;Edm.String&quot; /&gt;\n</pre>\n\nFor OData v2 the <code>sap:text</code> annotation on the <code>Property</code> can be used to assign text.\n\n<pre>\n   &lt;Property Name=&quot;Customer&quot; ... sap:text=&quot;CustomerName&quot;/&gt;\n   &lt;Property Name=&quot;CustomerName&quot; type=&quot;Edm.String&quot;/&gt;\n</pre>"
          },
          {
            "name": "textArrangement",
            "namespace": "com.sap.vocabularies.UI.v1",
            "target": ["EntityType", "com.sap.vocabularies.Common.v1.Text"],
            "annotation": "TextArrangement",
            "defaultValue": "null",
            "appliesTo": ["column/cellContent"],
            "since": "1.38",
            "description": "Describes the arrangement of a code value and its text. The <code>TextArragement</code> annotation requires the <code>com.sap.vocabularies.Common.v1.Text</code> annotation to be defined. The enumeration members can have the following values: <ul> <li><code>com.sap.vocabularies.UI.v1.TextArrangementType/TextFirst</code><br> The underlying control is represented with the specified description followed by its ID. This is the default, if no annotation is specified.</li> <li><code>com.sap.vocabularies.UI.v1.TextArrangementType/TextOnly</code><br> The underlying control is represented with the specified description only. </li> <li><code>com.sap.vocabularies.UI.v1.TextArrangementType/TextLast</code><br> The underlying control is represented with the specified ID followed by its description. </li> <li><code>com.sap.vocabularies.UI.v1.TextArrangementType/TextSeparate</code><br> The underlying control is represented with the specified ID only. </li> </ul>\n\n<i>XML Example of OData V4 with EntityType ProductType</i>\n\n<pre>\n   &lt;Annotations Target=&quot;Namespace.ProductType&quot;&gt;\n     &lt;Annotation Term=&quot;com.sap.vocabularies.UI.v1.TextArrangement&quot; EnumMember=&quot;com.sap.vocabularies.UI.v1.TextArrangementType/TextFirst&quot;/&gt;\n   &lt;/Annotations&gt;\n</pre>"
          },
          {
            "name": "emailAddress",
            "namespace": "com.sap.vocabularies.Communication.v1",
            "target": ["Property"],
            "annotation": "IsEmailAddress",
            "defaultValue": "true",
            "appliesTo": ["column/cellContent"],
            "since": "1.60",
            "description": "Indicates whether a <code>Property</code> contains an e-mail address.\n\n<i>XML Example of the OData V4 E-mail Address Annotation</i>\n\n<pre>\n   &lt;Property Name=&quot;Email&quot; Type=&quot;Edm.String&quot;/&gt;\n   &lt;Annotations Target=&quot;Email&quot;&gt;\n       &lt;Annotation Term=&quot;com.sap.vocabularies.Communication.v1.IsEmailAddress&quot; Bool=&quot;true&quot;/&gt;\n   &lt;/Annotations&gt;\n</pre>"
          },
          {
            "name": "phoneNumber",
            "namespace": "com.sap.vocabularies.Communication.v1",
            "target": ["Property"],
            "annotation": "IsPhoneNumber",
            "defaultValue": "true",
            "appliesTo": ["fieldItem/#/value"],
            "since": "1.60",
            "description": "Indicates whether a <code>Property</code> contains a phone number.\n\n<i>XML Example of the OData V4 Phone Number Annotation</i>\n\n<pre>\n   &lt;Property Name=&quot;Phone&quot; Type=&quot;Edm.String&quot;/&gt;\n   &lt;Annotations Target=&quot;Phone&quot;&gt;\n       &lt;Annotation Term=&quot;com.sap.vocabularies.Communication.v1.IsPhoneNumber&quot; Bool=&quot;true&quot;/&gt;\n   &lt;/Annotations&gt;\n</pre>"
          },
          {
            "name": "multiUnitBehaviorForSortingAndFiltering",
            "namespace": "com.sap.vocabularies.Common.v1",
            "target": ["EntityContainer"],
            "annotation": "ApplyMultiUnitBehaviorForSortingAndFiltering",
            "defaultValue": "true",
            "appliesTo": ["column/cellContent"],
            "since": "1.69",
            "description": "Indicates whether sorting and filtering amounts with multiple currencies has to be taken into consideration.\n\n<b>Note:</b> <ul> <li>During sorting, the currency fields are sorted first by unit and then by value, if the unit has not already been sorted.</li> <li>Filtering is not yet supported.</li> </ul>\n\n<i>XML Example of the OData V4 multi-unit behavior for sorting and filtering Annotation</i>\n\n<pre>\n   &lt;Annotations xmlns=&quot;http://docs.oasis-open.org/odata/ns/edm&quot;\n       Target=&quot;Namespace.ProductEntities&quot;&gt;\n       &lt;Annotaion Term=&quot;com.sap.vocabularies.Common.v1.ApplyMultiUnitBehaviorForSortingAndFiltering&quot;/&gt;\n   &lt;/Annotations&gt;\n</pre>"
          }
        ],
        "designtime": "sap/ui/comp/designtime/smarttable/SmartTable.designtime"
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new smarttable/SmartTable.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.",
        "references": [
          "{@link topic:bed8274140d04fc0b9bcb2db42d8bac2 Smart Table}"
        ]
      },
      "events": [
        {
          "name": "afterVariantApply",
          "visibility": "public",
          "since": "1.28.0",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "currentVariantId": {
                      "name": "currentVariantId",
                      "type": "string",
                      "optional": false,
                      "description": "ID of the currently selected variant"
                    }
                  }
                }
              }
            }
          ],
          "description": "This event is fired after a variant has been applied."
        },
        {
          "name": "afterVariantInitialise",
          "visibility": "public",
          "since": "1.28.0",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "This event is fired after variant management in the SmartTable has been initialized."
        },
        {
          "name": "afterVariantSave",
          "visibility": "public",
          "since": "1.28.0",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "currentVariantId": {
                      "name": "currentVariantId",
                      "type": "string",
                      "optional": false,
                      "description": "ID of the currently selected variant"
                    }
                  }
                }
              }
            }
          ],
          "description": "This event is fired after a variant has been saved. This event can be used to retrieve the ID of the saved variant."
        },
        {
          "name": "beforeExport",
          "visibility": "public",
          "since": "1.50",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "exportSettings": {
                      "name": "exportSettings",
                      "type": "object",
                      "optional": false,
                      "description": "Contains workbook.columns, dataSource and other export-related information"
                    },
                    "userExportSettings": {
                      "name": "userExportSettings",
                      "type": "object",
                      "optional": false,
                      "description": "Contains the export settings defined by the user"
                    }
                  }
                }
              }
            }
          ],
          "description": "This event is fired just before export is triggered."
        },
        {
          "name": "beforePaste",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "columnInfos": {
                      "name": "columnInfos",
                      "type": "object[]",
                      "optional": false,
                      "description": "Contains array of column info object as determined by the SmartTable"
                    }
                  }
                }
              }
            }
          ],
          "description": "This event is fired just before the paste event is triggered and can be used to prevent the default paste behavior.",
          "experimental": {
            "since": "1.64",
            "text": "This API is experimental and subject to change"
          }
        },
        {
          "name": "beforeRebindTable",
          "visibility": "public",
          "since": "1.26.0",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "bindingParams": {
                      "name": "bindingParams",
                      "type": "object",
                      "optional": false,
                      "parameterProperties": {
                        "preventTableBind": {
                          "name": "preventTableBind",
                          "type": "boolean",
                          "optional": false,
                          "description": "If set to <code>true</code> by the listener, binding is prevented"
                        },
                        "filters": {
                          "name": "filters",
                          "type": "sap.ui.model.Filter[]",
                          "optional": false,
                          "description": "The combined filter array containing a set of sap.ui.model.Filter instances of the SmartTable and SmartFilter controls; can be modified by users to influence filtering"
                        },
                        "sorter": {
                          "name": "sorter",
                          "type": "sap.ui.model.Sorter[]",
                          "optional": false,
                          "description": "An array containing a set of sap.ui.model.Sorter instances of the SmartTable control (personalization); can be modified by users to influence sorting"
                        },
                        "parameters": {
                          "name": "parameters",
                          "type": "object",
                          "optional": false,
                          "description": "a map of parameters which is passed to the binding"
                        },
                        "events": {
                          "name": "events",
                          "type": "object",
                          "optional": false,
                          "description": "map of event listeners for the binding events (since 1.56). The events listeners can only be registered while the binding is created. So, ensure that the events parameter is filled from the beginning, so that the registration can be done while the binding is created."
                        }
                      },
                      "description": "The bindingParams object contains filters, sorters and other binding related information for the table."
                    }
                  }
                }
              }
            }
          ],
          "description": "This event is fired just before the binding is being done."
        },
        {
          "name": "dataReceived",
          "visibility": "public",
          "since": "1.28.0",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "This event is fired when data is received after binding. The event is fired if the binding for the table is done by the SmartTable itself.",
          "deprecated": {
            "since": "1.56",
            "text": "Use <code>beforeRebindTable</code> event to attach/listen to the binding \"events\" directly"
          }
        },
        {
          "name": "dataRequested",
          "visibility": "public",
          "since": "1.52.0",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "This event is fired when data is requested after binding. The event is fired if the binding for the table is done by the SmartTable itself.",
          "deprecated": {
            "since": "1.56",
            "text": "Use <code>beforeRebindTable</code> event to attach/listen to the binding \"events\" directly"
          }
        },
        {
          "name": "editToggled",
          "visibility": "public",
          "since": "1.28.0",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "This event is fired when display/edit button is clicked."
        },
        {
          "name": "fieldChange",
          "visibility": "public",
          "since": "1.34.0",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "This event is fired when an editable field, created internally by the SmartTable control, is changed."
        },
        {
          "name": "fullScreenToggled",
          "visibility": "public",
          "since": "1.46",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "fullScreen": {
                      "name": "fullScreen",
                      "type": "boolean",
                      "optional": false,
                      "description": "If <code>true</code>, control is in full screen mode"
                    }
                  }
                }
              }
            }
          ],
          "description": "This event is fired right after the full screen mode of the SmartTable control has been changed."
        },
        {
          "name": "initialise",
          "visibility": "public",
          "since": "1.26.0",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "This event is fired once the control has been initialized."
        },
        {
          "name": "paste",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "result": {
                      "name": "result",
                      "type": "object",
                      "optional": false,
                      "description": "Contains parsed/validated paste information returned by PasteHelper.parse API"
                    }
                  }
                }
              }
            }
          ],
          "description": "This event is fired when paste is triggered.",
          "experimental": {
            "since": "1.64",
            "text": "This API is experimental and subject to change"
          }
        },
        {
          "name": "showOverlay",
          "visibility": "public",
          "since": "1.32.0",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "overlay": {
                      "name": "overlay",
                      "type": "object",
                      "optional": false,
                      "parameterProperties": {
                        "show": {
                          "name": "show",
                          "type": "boolean",
                          "optional": false,
                          "description": "If set to <code>false</code> by the listener, overlay is not shown"
                        }
                      },
                      "description": "The overlay object contains information related to the table's overlay"
                    }
                  }
                }
              }
            }
          ],
          "description": "This event is fired just before the overlay is being shown."
        }
      ],
      "methods": [
        {
          "name": "applyVariant",
          "visibility": "public",
          "parameters": [
            {
              "name": "oVariantJSON",
              "type": "object",
              "optional": false,
              "description": "The variants json"
            },
            {
              "name": "sContext",
              "type": "string",
              "optional": false,
              "description": "Describes the context in which the apply was executed"
            }
          ],
          "description": "Interface function for SmartVariantManagement control, sets the current variant. <b>Note:</b> If an application default variant exists, then all other variants are extended from this application default variant."
        },
        {
          "name": "attachAfterVariantApply",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.SmartTable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smarttable.SmartTable</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:afterVariantApply afterVariantApply} event of this <code>sap.ui.comp.smarttable.SmartTable</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smarttable.SmartTable</code> itself.\n\nThis event is fired after a variant has been applied."
        },
        {
          "name": "attachAfterVariantInitialise",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.SmartTable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smarttable.SmartTable</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:afterVariantInitialise afterVariantInitialise} event of this <code>sap.ui.comp.smarttable.SmartTable</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smarttable.SmartTable</code> itself.\n\nThis event is fired after variant management in the SmartTable has been initialized."
        },
        {
          "name": "attachAfterVariantSave",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.SmartTable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smarttable.SmartTable</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:afterVariantSave afterVariantSave} event of this <code>sap.ui.comp.smarttable.SmartTable</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smarttable.SmartTable</code> itself.\n\nThis event is fired after a variant has been saved. This event can be used to retrieve the ID of the saved variant."
        },
        {
          "name": "attachBeforeExport",
          "visibility": "public",
          "since": "1.50",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.SmartTable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smarttable.SmartTable</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:beforeExport beforeExport} event of this <code>sap.ui.comp.smarttable.SmartTable</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smarttable.SmartTable</code> itself.\n\nThis event is fired just before export is triggered."
        },
        {
          "name": "attachBeforePaste",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.SmartTable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smarttable.SmartTable</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:beforePaste beforePaste} event of this <code>sap.ui.comp.smarttable.SmartTable</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smarttable.SmartTable</code> itself.\n\nThis event is fired just before the paste event is triggered and can be used to prevent the default paste behavior.",
          "experimental": {
            "since": "1.64",
            "text": "This API is experimental and subject to change"
          }
        },
        {
          "name": "attachBeforeRebindTable",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.SmartTable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smarttable.SmartTable</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:beforeRebindTable beforeRebindTable} event of this <code>sap.ui.comp.smarttable.SmartTable</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smarttable.SmartTable</code> itself.\n\nThis event is fired just before the binding is being done."
        },
        {
          "name": "attachDataReceived",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.SmartTable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smarttable.SmartTable</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:dataReceived dataReceived} event of this <code>sap.ui.comp.smarttable.SmartTable</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smarttable.SmartTable</code> itself.\n\nThis event is fired when data is received after binding. The event is fired if the binding for the table is done by the SmartTable itself.",
          "deprecated": {
            "since": "1.56",
            "text": "Use <code>beforeRebindTable</code> event to attach/listen to the binding \"events\" directly"
          }
        },
        {
          "name": "attachDataRequested",
          "visibility": "public",
          "since": "1.52.0",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.SmartTable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smarttable.SmartTable</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:dataRequested dataRequested} event of this <code>sap.ui.comp.smarttable.SmartTable</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smarttable.SmartTable</code> itself.\n\nThis event is fired when data is requested after binding. The event is fired if the binding for the table is done by the SmartTable itself.",
          "deprecated": {
            "since": "1.56",
            "text": "Use <code>beforeRebindTable</code> event to attach/listen to the binding \"events\" directly"
          }
        },
        {
          "name": "attachEditToggled",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.SmartTable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smarttable.SmartTable</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:editToggled editToggled} event of this <code>sap.ui.comp.smarttable.SmartTable</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smarttable.SmartTable</code> itself.\n\nThis event is fired when display/edit button is clicked."
        },
        {
          "name": "attachFieldChange",
          "visibility": "public",
          "since": "1.34.0",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.SmartTable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smarttable.SmartTable</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:fieldChange fieldChange} event of this <code>sap.ui.comp.smarttable.SmartTable</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smarttable.SmartTable</code> itself.\n\nThis event is fired when an editable field, created internally by the SmartTable control, is changed."
        },
        {
          "name": "attachFullScreenToggled",
          "visibility": "public",
          "since": "1.46",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.SmartTable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smarttable.SmartTable</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:fullScreenToggled fullScreenToggled} event of this <code>sap.ui.comp.smarttable.SmartTable</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smarttable.SmartTable</code> itself.\n\nThis event is fired right after the full screen mode of the SmartTable control has been changed."
        },
        {
          "name": "attachInitialise",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.SmartTable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smarttable.SmartTable</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:initialise initialise} event of this <code>sap.ui.comp.smarttable.SmartTable</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smarttable.SmartTable</code> itself.\n\nThis event is fired once the control has been initialized."
        },
        {
          "name": "attachPaste",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.SmartTable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smarttable.SmartTable</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:paste paste} event of this <code>sap.ui.comp.smarttable.SmartTable</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smarttable.SmartTable</code> itself.\n\nThis event is fired when paste is triggered.",
          "experimental": {
            "since": "1.64",
            "text": "This API is experimental and subject to change"
          }
        },
        {
          "name": "attachShowOverlay",
          "visibility": "public",
          "since": "1.32.0",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.SmartTable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smarttable.SmartTable</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:showOverlay showOverlay} event of this <code>sap.ui.comp.smarttable.SmartTable</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smarttable.SmartTable</code> itself.\n\nThis event is fired just before the overlay is being shown."
        },
        {
          "name": "deactivateColumns",
          "visibility": "public",
          "since": "1.54.0",
          "parameters": [
            {
              "name": "aColumnKeys",
              "type": "string[]|null|undefined",
              "optional": false,
              "description": "An array of column keys by which the corresponding columns are deactivated. If <code>null</code> or <code>undefined</code> or an empty array is passed, no column is deactivated, and all previously deactivated columns will be reset"
            }
          ],
          "description": "Deactivates existing columns in the personalization dialog based on the provided column keys.<br> <i>Note:</i> The columns are set to invisible and excluded from all panels in the table personalization. Any existing sorting, filtering or grouping in the personalization dialog for such columns will no longer be taken into account."
        },
        {
          "name": "destroyCustomToolbar",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.SmartTable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the customToolbar in the aggregation {@link #getCustomToolbar customToolbar}."
        },
        {
          "name": "destroyNoData",
          "visibility": "public",
          "since": "1.32.0",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.SmartTable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the noData in the aggregation {@link #getNoData noData}."
        },
        {
          "name": "destroySemanticKeyAdditionalControl",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.SmartTable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the semanticKeyAdditionalControl in the aggregation {@link #getSemanticKeyAdditionalControl semanticKeyAdditionalControl}."
        },
        {
          "name": "destroySemanticObjectController",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.SmartTable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the semanticObjectController in the aggregation {@link #getSemanticObjectController semanticObjectController}."
        },
        {
          "name": "detachAfterVariantApply",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.SmartTable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:afterVariantApply afterVariantApply} event of this <code>sap.ui.comp.smarttable.SmartTable</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachAfterVariantInitialise",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.SmartTable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:afterVariantInitialise afterVariantInitialise} event of this <code>sap.ui.comp.smarttable.SmartTable</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachAfterVariantSave",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.SmartTable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:afterVariantSave afterVariantSave} event of this <code>sap.ui.comp.smarttable.SmartTable</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachBeforeExport",
          "visibility": "public",
          "since": "1.50",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.SmartTable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:beforeExport beforeExport} event of this <code>sap.ui.comp.smarttable.SmartTable</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachBeforePaste",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.SmartTable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:beforePaste beforePaste} event of this <code>sap.ui.comp.smarttable.SmartTable</code>.\n\nThe passed function and listener object must match the ones used for event registration.",
          "experimental": {
            "since": "1.64",
            "text": "This API is experimental and subject to change"
          }
        },
        {
          "name": "detachBeforeRebindTable",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.SmartTable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:beforeRebindTable beforeRebindTable} event of this <code>sap.ui.comp.smarttable.SmartTable</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachDataReceived",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.SmartTable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:dataReceived dataReceived} event of this <code>sap.ui.comp.smarttable.SmartTable</code>.\n\nThe passed function and listener object must match the ones used for event registration.",
          "deprecated": {
            "since": "1.56",
            "text": "Use <code>beforeRebindTable</code> event to attach/listen to the binding \"events\" directly"
          }
        },
        {
          "name": "detachDataRequested",
          "visibility": "public",
          "since": "1.52.0",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.SmartTable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:dataRequested dataRequested} event of this <code>sap.ui.comp.smarttable.SmartTable</code>.\n\nThe passed function and listener object must match the ones used for event registration.",
          "deprecated": {
            "since": "1.56",
            "text": "Use <code>beforeRebindTable</code> event to attach/listen to the binding \"events\" directly"
          }
        },
        {
          "name": "detachEditToggled",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.SmartTable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:editToggled editToggled} event of this <code>sap.ui.comp.smarttable.SmartTable</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachFieldChange",
          "visibility": "public",
          "since": "1.34.0",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.SmartTable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:fieldChange fieldChange} event of this <code>sap.ui.comp.smarttable.SmartTable</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachFullScreenToggled",
          "visibility": "public",
          "since": "1.46",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.SmartTable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:fullScreenToggled fullScreenToggled} event of this <code>sap.ui.comp.smarttable.SmartTable</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachInitialise",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.SmartTable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:initialise initialise} event of this <code>sap.ui.comp.smarttable.SmartTable</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachPaste",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.SmartTable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:paste paste} event of this <code>sap.ui.comp.smarttable.SmartTable</code>.\n\nThe passed function and listener object must match the ones used for event registration.",
          "experimental": {
            "since": "1.64",
            "text": "This API is experimental and subject to change"
          }
        },
        {
          "name": "detachShowOverlay",
          "visibility": "public",
          "since": "1.32.0",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.SmartTable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:showOverlay showOverlay} event of this <code>sap.ui.comp.smarttable.SmartTable</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "exit",
          "visibility": "protected",
          "description": "Cleans up the control"
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.comp.smarttable.SmartTable with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.m.VBox.extend}."
        },
        {
          "name": "fetchVariant",
          "visibility": "public",
          "returnValue": {
            "type": "object",
            "description": "The currently set variant"
          },
          "description": "Interface function for SmartVariantManagement control, returns the current used variant data"
        },
        {
          "name": "fireAfterVariantApply",
          "visibility": "protected",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.SmartTable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "currentVariantId": {
                  "name": "currentVariantId",
                  "type": "string",
                  "optional": true,
                  "description": "ID of the currently selected variant"
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:afterVariantApply afterVariantApply} to attached listeners."
        },
        {
          "name": "fireAfterVariantInitialise",
          "visibility": "protected",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.SmartTable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:afterVariantInitialise afterVariantInitialise} to attached listeners."
        },
        {
          "name": "fireAfterVariantSave",
          "visibility": "protected",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.SmartTable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "currentVariantId": {
                  "name": "currentVariantId",
                  "type": "string",
                  "optional": true,
                  "description": "ID of the currently selected variant"
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:afterVariantSave afterVariantSave} to attached listeners."
        },
        {
          "name": "fireBeforeExport",
          "visibility": "protected",
          "since": "1.50",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.SmartTable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "exportSettings": {
                  "name": "exportSettings",
                  "type": "object",
                  "optional": true,
                  "description": "Contains workbook.columns, dataSource and other export-related information"
                },
                "userExportSettings": {
                  "name": "userExportSettings",
                  "type": "object",
                  "optional": true,
                  "description": "Contains the export settings defined by the user"
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:beforeExport beforeExport} to attached listeners."
        },
        {
          "name": "fireBeforePaste",
          "visibility": "protected",
          "returnValue": {
            "type": "boolean",
            "description": "Whether or not to prevent the default action"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "columnInfos": {
                  "name": "columnInfos",
                  "type": "object[]",
                  "optional": true,
                  "description": "Contains array of column info object as determined by the SmartTable"
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:beforePaste beforePaste} to attached listeners.\n\nListeners may prevent the default action of this event by using the <code>preventDefault</code>-method on the event object.",
          "experimental": {
            "since": "1.64",
            "text": "This API is experimental and subject to change"
          }
        },
        {
          "name": "fireBeforeRebindTable",
          "visibility": "protected",
          "since": "1.26.0",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.SmartTable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:beforeRebindTable beforeRebindTable} to attached listeners."
        },
        {
          "name": "fireDataReceived",
          "visibility": "protected",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.SmartTable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:dataReceived dataReceived} to attached listeners.",
          "deprecated": {
            "since": "1.56",
            "text": "Use <code>beforeRebindTable</code> event to attach/listen to the binding \"events\" directly"
          }
        },
        {
          "name": "fireDataRequested",
          "visibility": "protected",
          "since": "1.52.0",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.SmartTable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:dataRequested dataRequested} to attached listeners.",
          "deprecated": {
            "since": "1.56",
            "text": "Use <code>beforeRebindTable</code> event to attach/listen to the binding \"events\" directly"
          }
        },
        {
          "name": "fireEditToggled",
          "visibility": "protected",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.SmartTable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:editToggled editToggled} to attached listeners."
        },
        {
          "name": "fireFieldChange",
          "visibility": "protected",
          "since": "1.34.0",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.SmartTable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:fieldChange fieldChange} to attached listeners."
        },
        {
          "name": "fireFullScreenToggled",
          "visibility": "protected",
          "since": "1.46",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.SmartTable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "fullScreen": {
                  "name": "fullScreen",
                  "type": "boolean",
                  "optional": true,
                  "description": "If <code>true</code>, control is in full screen mode"
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:fullScreenToggled fullScreenToggled} to attached listeners."
        },
        {
          "name": "fireInitialise",
          "visibility": "protected",
          "since": "1.26.0",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.SmartTable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:initialise initialise} to attached listeners."
        },
        {
          "name": "firePaste",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.SmartTable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "result": {
                  "name": "result",
                  "type": "object",
                  "optional": true,
                  "description": "Contains parsed/validated paste information returned by PasteHelper.parse API"
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:paste paste} to attached listeners.",
          "experimental": {
            "since": "1.64",
            "text": "This API is experimental and subject to change"
          }
        },
        {
          "name": "fireShowOverlay",
          "visibility": "protected",
          "since": "1.32.0",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.SmartTable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:showOverlay showOverlay} to attached listeners."
        },
        {
          "name": "getCurrentVariantId",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "id of the currently selected variant"
          },
          "description": "returns the id of the currently selected variant."
        },
        {
          "name": "getCustomToolbar",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": { "type": "sap.m.Toolbar" },
          "description": "Gets content of aggregation {@link #getCustomToolbar customToolbar}.\n\nA toolbar that can be added by the user to define their own custom buttons, icons, etc. If this is specified, the SmartTable control does not create an additional toolbar, but makes use of this one.<br> <i>Note:</i><br> The CSS class sapMTBHeader-CTX is applied on the given toolbar."
        },
        {
          "name": "getDemandPopin",
          "visibility": "public",
          "since": "1.30.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>demandPopin</code>"
          },
          "description": "Gets current value of property {@link #getDemandPopin demandPopin}.\n\nThe demandPopin attribute can be set to true or false depending on whether you want to display columns as popins on the responsive table\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getEditable",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>editable</code>"
          },
          "description": "Gets current value of property {@link #getEditable editable}.\n\nThis attribute can be used to specify if the controls created by the SmartTable control are editable. (The automatic toggle of controls works only for the SmartField/SmartToggle scenario)\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getEditTogglable",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>editTogglable</code>"
          },
          "description": "Gets current value of property {@link #getEditTogglable editTogglable}.\n\nSpecifies whether the editable property can be toggled via a button on the toolbar. (The automatic toggle of controls works only for the SmartField/SmartToggle scenario)\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getEnableAutoBinding",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>enableAutoBinding</code>"
          },
          "description": "Gets current value of property {@link #getEnableAutoBinding enableAutoBinding}.\n\nWhen set to true, this enables automatic binding of the table using the tableBindingPath (if it exists) or entitySet property. This happens just after the <code>initialise</code> event has been fired.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getEnableCustomFilter",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>enableCustomFilter</code>"
          },
          "description": "Gets current value of property {@link #getEnableCustomFilter enableCustomFilter}.\n\nCan be used to override the filter behavior. If set to true (default), instead of the filter input box a button is rendered. When pressing this button, the SmartTable control opens the filter panel directly in the table personalization dialog.\n\nDefault value is <code>true</code>.",
          "deprecated": {
            "since": "1.40.0",
            "text": "After personalization dialog has been introduced in SmartTable the property <code>enableCustomFilter</code> does not make sense. When setting the property to <code>false</code>, the entered custom filter value will not be shown in personalization dialog and will also not be persisted in variant management. The custom filter will also be overwritten when rebindTable is called on the SmartTable."
          }
        },
        {
          "name": "getEntitySet",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>entitySet</code>"
          },
          "description": "Gets current value of property {@link #getEntitySet entitySet}.\n\nThe entity set name from which to fetch data and generate the columns. Note that this is not a dynamic UI5 property\n\n<b>Note:</b> It is not allowed to have one of the following strings as field names for your OData entity: <ul> <li><code>btnEditToggle</code></li> <li><code>btnExcelExport</code></li> <li><code>btnFullScreen</code></li> <li><code>btnPersonalisation</code></li> <li><code>header</code></li> <li><code>infoToolbarText</code></li> <li><code>persoController</code></li> <li><code>toolbarSeperator</code></li> <li><code>toolbarSpacer</code></li> <li><code>ui5table</code></li> <li><code>variant</code></li> </ul>"
        },
        {
          "name": "getExportType",
          "visibility": "public",
          "since": "1.50.0",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.ExportType",
            "description": "Value of property <code>exportType</code>"
          },
          "description": "Gets current value of property {@link #getExportType exportType}.\n\nSpecifies the type of export to be used in the <code>SmartTable</code> control.\n\nDefault value is <code>UI5Client</code>."
        },
        {
          "name": "getHeader",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>header</code>"
          },
          "description": "Gets current value of property {@link #getHeader header}.\n\nSpecifies header text that is shown in table"
        },
        {
          "name": "getIgnoredFields",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>ignoredFields</code>"
          },
          "description": "Gets current value of property {@link #getIgnoredFields ignoredFields}.\n\nCSV of fields that must be ignored in the OData metadata by the SmartTable control.<br> <i>Note:</i><br> No validation is done. Please ensure that you do not add spaces or special characters."
        },
        {
          "name": "getIgnoreFromPersonalisation",
          "visibility": "public",
          "since": "1.32.0",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>ignoreFromPersonalisation</code>"
          },
          "description": "Gets current value of property {@link #getIgnoreFromPersonalisation ignoreFromPersonalisation}.\n\nCSV of fields that is not shown in the personalization dialog.<br> <i>Note:</i><br> No validation is done. Please ensure that you do not add spaces or special characters."
        },
        {
          "name": "getInitiallyVisibleFields",
          "visibility": "public",
          "since": "1.32.0",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>initiallyVisibleFields</code>"
          },
          "description": "Gets current value of property {@link #getInitiallyVisibleFields initiallyVisibleFields}.\n\nCSV of fields that must be shown initially in the SmartTable as visible columns and in the order specified.<br> This property is mainly meant to be used when no LineItem annotation exists.<br> If you have fields in the XMLView they are always shown first; then, the columns are added based on the LineItem annotation and finally based on this property.<br> <i>Note:</i><br> If both this property and the LineItem annotation exist, the order of fields cannot be guaranteed to be as mentioned here.<br> No validation is done. Please ensure that you do not add spaces or special characters."
        },
        {
          "name": "getInitialNoDataText",
          "visibility": "public",
          "since": "1.58",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>initialNoDataText</code>"
          },
          "description": "Gets current value of property {@link #getInitialNoDataText initialNoDataText}.\n\nThe text shown initially before the control is bound and initialized. The special values <code>$FILTERBAR</code> or <code>$NO_FILTERBAR</code> can be specified to make the <code>SmartTable</code> control show the initial text as if the <code>SmartFilterBar</code> control were associated with it. If nothing is specified, the default behavior is to show the initial text based on whether the <code>SmartFilterBar</code> control is actually associated with the <code>SmartTable</code> control."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.comp.smarttable.SmartTable."
        },
        {
          "name": "getNoData",
          "visibility": "public",
          "since": "1.32.0",
          "returnValue": { "type": "sap.ui.core.Control|string" },
          "description": "Gets content of aggregation {@link #getNoData noData}.\n\nThe value for the noData aggregation can be either a string value or a control instance.<br> The control is shown, in case there is no data for the Table available. In case of a string value this will simply replace the no data text.<br> Currently the Responsive Table only supports string values."
        },
        {
          "name": "getPersistencyKey",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>persistencyKey</code>"
          },
          "description": "Gets current value of property {@link #getPersistencyKey persistencyKey}.\n\nKey used to access personalization data."
        },
        {
          "name": "getPlaceToolbarInTable",
          "visibility": "public",
          "since": "1.56",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>placeToolbarInTable</code>"
          },
          "description": "Gets current value of property {@link #getPlaceToolbarInTable placeToolbarInTable}.\n\nSpecifies whether the <code>Toolbar</code> control of the <code>SmartTable</code> is placed inside the corresponding aggregation of the inner UI5 table control.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getRequestAtLeastFields",
          "visibility": "public",
          "since": "1.32.0",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>requestAtLeastFields</code>"
          },
          "description": "Gets current value of property {@link #getRequestAtLeastFields requestAtLeastFields}.\n\nCSV of fields that must be always requested from the backend<br> This property is mainly meant to be used when there is no PresentationVariant annotation.<br> If both this property and the PresentationVariant annotation exist, the select request sent to the backend would be a combination of both.<br> <i>Note:</i><br> For <code>AnalyticalTable</code> (supported since 1.54), the following restrictions apply: <ul> <li>The property name(s) must not point to a new dimension or a measure.</li> <li>The property name(s) must not point to a navigationProperty/association path, as this might not supported by analytical services.</li> </ul> No validation is done. Please ensure that you do not add spaces or special characters."
        },
        {
          "name": "getSemanticKeyAdditionalControl",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": { "type": "sap.ui.core.Control" },
          "description": "Gets content of aggregation {@link #getSemanticKeyAdditionalControl semanticKeyAdditionalControl}.\n\nAllows users to specify an additional control that will be added to a VBox for the first semantic key field.<br> <i>Note:</i><br> This property is not meant for public use."
        },
        {
          "name": "getSemanticObjectController",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.navpopover.SemanticObjectController"
          },
          "description": "Gets content of aggregation {@link #getSemanticObjectController semanticObjectController}.\n\nThe Semantic Object Controller allows the user to specify and overwrite functionality for semantic object navigation."
        },
        {
          "name": "getShowFullScreenButton",
          "visibility": "public",
          "since": "1.38",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showFullScreenButton</code>"
          },
          "description": "Gets current value of property {@link #getShowFullScreenButton showFullScreenButton}.\n\nControls the visibility of the FullScreen button.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getShowRowCount",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showRowCount</code>"
          },
          "description": "Gets current value of property {@link #getShowRowCount showRowCount}.\n\nIf set to <code>true</code> (default), the number of rows is shown along with the header text.<br> If set to <code>false</code>, the number of rows will not be shown on the user interface.<br> <i>Note:</i><br> To avoid sending dedicated OData requests in order to improve your application's performance, you must configure the binding of the table as required.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getShowTablePersonalisation",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showTablePersonalisation</code>"
          },
          "description": "Gets current value of property {@link #getShowTablePersonalisation showTablePersonalisation}.\n\nThe showTablePersonalisation attribute can be set to true or false for controlling the visibility of the TablePersonalisation button.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getShowVariantManagement",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showVariantManagement</code>"
          },
          "description": "Gets current value of property {@link #getShowVariantManagement showVariantManagement}.\n\nThe showVariantManagement attribute can be set to true or false for controlling the visibility of VariantManagement button.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getSmartFilterId",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>smartFilterId</code>"
          },
          "description": "Gets current value of property {@link #getSmartFilterId smartFilterId}.\n\nID of the corresponding SmartFilter control; When specified, the SmartTable searches for the SmartFilter (also in the closest parent View) and attaches to the relevant events of the SmartFilter; to fetch data, show overlay etc."
        },
        {
          "name": "getSmartVariant",
          "visibility": "public",
          "since": "1.38",
          "returnValue": { "type": "sap.ui.core.ID" },
          "description": "ID of the element which is the current target of the association {@link #getSmartVariant smartVariant}, or <code>null</code>."
        },
        {
          "name": "getTable",
          "visibility": "public",
          "returnValue": { "type": "object", "description": "the table" },
          "description": "returns the internally used table object"
        },
        {
          "name": "getTableBindingPath",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>tableBindingPath</code>"
          },
          "description": "Gets current value of property {@link #getTableBindingPath tableBindingPath}.\n\nThis attribute can be used to specify the path that is used during the binding of the table. If not specified, the entitySet attribute is used instead. (used only if binding is established internally/automatically - See enableAutoBinding)"
        },
        {
          "name": "getTableType",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.TableType",
            "description": "Value of property <code>tableType</code>"
          },
          "description": "Gets current value of property {@link #getTableType tableType}.\n\nSpecifies the type of table to be created in the SmartTable control.<br> <i>Note:</i><br> If you add a table to the content of the SmartTable in the view, this property has no effect."
        },
        {
          "name": "getToolbar",
          "visibility": "public",
          "since": "1.56",
          "returnValue": {
            "type": "sap.m.Toolbar",
            "description": "The <code>Toolbar</code> instance"
          },
          "description": "Returns the <code>Toolbar</code> instance used inside the <code>SmartTable</code> control."
        },
        {
          "name": "getToolbarStyleClass",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>toolbarStyleClass</code>"
          },
          "description": "Gets current value of property {@link #getToolbarStyleClass toolbarStyleClass}.\n\nA style class which is defined for the toolbar of the table."
        },
        {
          "name": "getUiState",
          "visibility": "public",
          "since": "1.52",
          "returnValue": {
            "type": "sap.ui.comp.state.UIState",
            "description": "Current UI state"
          },
          "description": "Returns the current UI state of the <code>SmartTable</code> control.<br> <b>Note:</b><br> The following limitations apply: <ul> <li>Visualizations can only be used to modify the visibility and order of columns, the template or importance of the column cannot be changed</li> <li>MaxItems is not supported</li> <li>RequestAtLeast contains values that are combined from both the <code>SmartTable</code> control property and PresentationVariant annotation, but when it is updated it only affects the internal array. The property in the <code>SmartTable</code> stays the same as before</li> <li>Changes to RequestAtLeast alone will not lead to a new data request</li> <li>RequestAtLeast is not supported in <code>AnalyticalTable</code> scenario</li> <li>Any other limitations, like the ones mentioned in {@link sap.ui.comp.state.UIState}, also apply</li> </ul>"
        },
        {
          "name": "getUseExportToExcel",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>useExportToExcel</code>"
          },
          "description": "Gets current value of property {@link #getUseExportToExcel useExportToExcel}.\n\nCan be set to true or false depending on whether you want to export data to a spreadsheet application, for example Microsoft Excel.<br> <i>Note:</i><br> If <code>exportType</code> is <code>sap.ui.comp.smarttable.ExportType.GW</code>, any $expand parameters are removed when sending the request to generate the spreadsheet.<br> As of UI5 version 1.56: If <code>exportType</code> is <code>sap.ui.comp.smarttable.ExportType.UI5Client</code> and <code>TreeTable</code> is used, the <code>worksheet.hierarchyLevel</code> property (see {@link sap.ui.export.Spreadsheet}) is filled from the binding, if the relevant information is available there for exporting hierarchical data in the spreadsheet.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getUseInfoToolbar",
          "visibility": "public",
          "since": "1.70",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.InfoToolbarBehavior",
            "description": "Value of property <code>useInfoToolbar</code>"
          },
          "description": "Gets current value of property {@link #getUseInfoToolbar useInfoToolbar}.\n\nShows an info toolbar.<br> Filters that are applied using the table personalization dialog are shown in the info toolbar.<br> <b>Note:</b><br> <ul> <li>The default value for the property is <code>Auto</code>, which means that the info toolbar is shown by default if table type is <code>ResponsiveTable</code>.</li> <li>The info toolbar is hidden if the property is set to <code>Off</code>.</li> <li>The info toolbar is visible if the property is set to <code>On</code>. Currently the info toolbar is only available for the table type <code>ResponsiveTable</code>.</li> <li>If multiple filters are applied to the same column, then the info toolbar contains the column name only once.</li> <li>In case there is a custom info toolbar used for the responsive table control, then the property must be set to <code>Off</code>. Otherwise, an error is logged in the browser console.</li> </ul>\n\nDefault value is <code>Auto</code>."
        },
        {
          "name": "getUseOnlyOneSolidToolbar",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>useOnlyOneSolidToolbar</code>"
          },
          "description": "Gets current value of property {@link #getUseOnlyOneSolidToolbar useOnlyOneSolidToolbar}.\n\nIf set to true, the standard toolbar and custom toolbar will be merged into one toolbar. The combined toolbar will have a solid style.\n\nDefault value is <code>false</code>.",
          "deprecated": {
            "since": "1.29",
            "text": "This property has no effect"
          }
        },
        {
          "name": "getUseTablePersonalisation",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>useTablePersonalisation</code>"
          },
          "description": "Gets current value of property {@link #getUseTablePersonalisation useTablePersonalisation}.\n\nThe useTablePersonalisation attribute can be set to true or false depending on whether you want to define personalized table settings. If you want to persist the table personalization, you need to specify the persistencyKey property.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getUseVariantManagement",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>useVariantManagement</code>"
          },
          "description": "Gets current value of property {@link #getUseVariantManagement useVariantManagement}.\n\nThe useVariantManagement attribute can be set to true or false depending on whether you want to use variants. As a prerequisite you need to specify the persistencyKey property.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "isInitialised",
          "visibility": "protected",
          "returnValue": {
            "type": "boolean",
            "description": "returns whether control is already initialised"
          },
          "description": "Checks whether the control is initialised"
        },
        {
          "name": "openPersonalisationDialog",
          "visibility": "public",
          "since": "1.48.0",
          "parameters": [
            {
              "name": "sPanel",
              "type": "string",
              "optional": false,
              "description": "The desired panel; the value is either \"Columns\", \"Sort\", \"Filter\" or \"Group\""
            }
          ],
          "description": "Opens the desired panel of the personalization dialog.<br> <i>Note:</i> Calling this for panels that are globally hidden (E.g. manually by the application, or due to unavailability of functionality) leads to an empty dialog being shown."
        },
        {
          "name": "rebindTable",
          "visibility": "protected",
          "parameters": [
            {
              "name": "bForceRebind",
              "type": "boolean",
              "optional": false,
              "description": "force bind call to be triggered on the inner table"
            }
          ],
          "description": "This can be used to trigger binding on the table used in the SmartTable"
        },
        {
          "name": "setCurrentVariantId",
          "visibility": "public",
          "returnValue": {
            "type": "Object",
            "description": "the control instance"
          },
          "parameters": [
            {
              "name": "sVariantId",
              "type": "string",
              "optional": false,
              "description": "id of the currently selected variant"
            }
          ],
          "description": "Set the current variant according to the sVariantId. In case an empty string or null or undefined was passed the STANDARD will be set. STANDARD will also be set, in case the passed sVariantId could not be found. In case neither a flexibility variant, nor the content for the standard variant could not be obtained, nor the personalisable control obtained nothing will be executed/changed"
        },
        {
          "name": "setCustomToolbar",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.SmartTable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oCustomToolbar",
              "type": "sap.m.Toolbar",
              "optional": false,
              "description": "The customToolbar to set"
            }
          ],
          "description": "Sets the aggregated {@link #getCustomToolbar customToolbar}."
        },
        {
          "name": "setDemandPopin",
          "visibility": "public",
          "since": "1.30.0",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.SmartTable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bDemandPopin",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>demandPopin</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getDemandPopin demandPopin}.\n\nThe demandPopin attribute can be set to true or false depending on whether you want to display columns as popins on the responsive table\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setEditable",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.SmartTable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bEditable",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>editable</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getEditable editable}.\n\nThis attribute can be used to specify if the controls created by the SmartTable control are editable. (The automatic toggle of controls works only for the SmartField/SmartToggle scenario)\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setEditTogglable",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.SmartTable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bEditTogglable",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>editTogglable</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getEditTogglable editTogglable}.\n\nSpecifies whether the editable property can be toggled via a button on the toolbar. (The automatic toggle of controls works only for the SmartField/SmartToggle scenario)\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setEnableAutoBinding",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.SmartTable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bEnableAutoBinding",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>enableAutoBinding</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getEnableAutoBinding enableAutoBinding}.\n\nWhen set to true, this enables automatic binding of the table using the tableBindingPath (if it exists) or entitySet property. This happens just after the <code>initialise</code> event has been fired.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setEnableCustomFilter",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.SmartTable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bEnableCustomFilter",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>enableCustomFilter</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getEnableCustomFilter enableCustomFilter}.\n\nCan be used to override the filter behavior. If set to true (default), instead of the filter input box a button is rendered. When pressing this button, the SmartTable control opens the filter panel directly in the table personalization dialog.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>.",
          "deprecated": {
            "since": "1.40.0",
            "text": "After personalization dialog has been introduced in SmartTable the property <code>enableCustomFilter</code> does not make sense. When setting the property to <code>false</code>, the entered custom filter value will not be shown in personalization dialog and will also not be persisted in variant management. The custom filter will also be overwritten when rebindTable is called on the SmartTable."
          }
        },
        {
          "name": "setEntitySet",
          "visibility": "public",
          "returnValue": {
            "type": "Object",
            "description": "the control instance"
          },
          "parameters": [
            {
              "name": "sEntitySetName",
              "type": "string",
              "optional": false,
              "description": "The entity set"
            }
          ],
          "description": "The entity set name from OData metadata, with which the table should be bound to"
        },
        {
          "name": "setExportType",
          "visibility": "public",
          "since": "1.50.0",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.SmartTable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sExportType",
              "type": "sap.ui.comp.smarttable.ExportType",
              "optional": false,
              "description": "New value for property <code>exportType</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getExportType exportType}.\n\nSpecifies the type of export to be used in the <code>SmartTable</code> control.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>UI5Client</code>."
        },
        {
          "name": "setHeader",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.SmartTable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sHeader",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>header</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getHeader header}.\n\nSpecifies header text that is shown in table\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setIgnoredFields",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.SmartTable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sIgnoredFields",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>ignoredFields</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getIgnoredFields ignoredFields}.\n\nCSV of fields that must be ignored in the OData metadata by the SmartTable control.<br> <i>Note:</i><br> No validation is done. Please ensure that you do not add spaces or special characters.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setIgnoreFromPersonalisation",
          "visibility": "public",
          "since": "1.32.0",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.SmartTable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sIgnoreFromPersonalisation",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>ignoreFromPersonalisation</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getIgnoreFromPersonalisation ignoreFromPersonalisation}.\n\nCSV of fields that is not shown in the personalization dialog.<br> <i>Note:</i><br> No validation is done. Please ensure that you do not add spaces or special characters.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setInitiallyVisibleFields",
          "visibility": "public",
          "since": "1.32.0",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.SmartTable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sInitiallyVisibleFields",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>initiallyVisibleFields</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getInitiallyVisibleFields initiallyVisibleFields}.\n\nCSV of fields that must be shown initially in the SmartTable as visible columns and in the order specified.<br> This property is mainly meant to be used when no LineItem annotation exists.<br> If you have fields in the XMLView they are always shown first; then, the columns are added based on the LineItem annotation and finally based on this property.<br> <i>Note:</i><br> If both this property and the LineItem annotation exist, the order of fields cannot be guaranteed to be as mentioned here.<br> No validation is done. Please ensure that you do not add spaces or special characters.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setInitialNoDataText",
          "visibility": "public",
          "since": "1.58",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.SmartTable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sInitialNoDataText",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>initialNoDataText</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getInitialNoDataText initialNoDataText}.\n\nThe text shown initially before the control is bound and initialized. The special values <code>$FILTERBAR</code> or <code>$NO_FILTERBAR</code> can be specified to make the <code>SmartTable</code> control show the initial text as if the <code>SmartFilterBar</code> control were associated with it. If nothing is specified, the default behavior is to show the initial text based on whether the <code>SmartFilterBar</code> control is actually associated with the <code>SmartTable</code> control.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setNoData",
          "visibility": "public",
          "since": "1.32.0",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.SmartTable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "vNoData",
              "type": "sap.ui.core.Control|string",
              "optional": false,
              "description": "The noData to set"
            }
          ],
          "description": "Sets the aggregated {@link #getNoData noData}."
        },
        {
          "name": "setPersistencyKey",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.SmartTable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sPersistencyKey",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>persistencyKey</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getPersistencyKey persistencyKey}.\n\nKey used to access personalization data.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setPlaceToolbarInTable",
          "visibility": "public",
          "since": "1.56",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.SmartTable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bPlaceToolbarInTable",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>placeToolbarInTable</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getPlaceToolbarInTable placeToolbarInTable}.\n\nSpecifies whether the <code>Toolbar</code> control of the <code>SmartTable</code> is placed inside the corresponding aggregation of the inner UI5 table control.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setRequestAtLeastFields",
          "visibility": "public",
          "since": "1.32.0",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.SmartTable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sRequestAtLeastFields",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>requestAtLeastFields</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getRequestAtLeastFields requestAtLeastFields}.\n\nCSV of fields that must be always requested from the backend<br> This property is mainly meant to be used when there is no PresentationVariant annotation.<br> If both this property and the PresentationVariant annotation exist, the select request sent to the backend would be a combination of both.<br> <i>Note:</i><br> For <code>AnalyticalTable</code> (supported since 1.54), the following restrictions apply: <ul> <li>The property name(s) must not point to a new dimension or a measure.</li> <li>The property name(s) must not point to a navigationProperty/association path, as this might not supported by analytical services.</li> </ul> No validation is done. Please ensure that you do not add spaces or special characters.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setSemanticKeyAdditionalControl",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.SmartTable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oSemanticKeyAdditionalControl",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The semanticKeyAdditionalControl to set"
            }
          ],
          "description": "Sets the aggregated {@link #getSemanticKeyAdditionalControl semanticKeyAdditionalControl}."
        },
        {
          "name": "setSemanticObjectController",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.SmartTable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oSemanticObjectController",
              "type": "sap.ui.comp.navpopover.SemanticObjectController",
              "optional": false,
              "description": "The semanticObjectController to set"
            }
          ],
          "description": "Sets the aggregated {@link #getSemanticObjectController semanticObjectController}."
        },
        {
          "name": "setShowFullScreenButton",
          "visibility": "public",
          "since": "1.38",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.SmartTable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowFullScreenButton",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showFullScreenButton</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowFullScreenButton showFullScreenButton}.\n\nControls the visibility of the FullScreen button.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setShowRowCount",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.SmartTable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowRowCount",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showRowCount</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowRowCount showRowCount}.\n\nIf set to <code>true</code> (default), the number of rows is shown along with the header text.<br> If set to <code>false</code>, the number of rows will not be shown on the user interface.<br> <i>Note:</i><br> To avoid sending dedicated OData requests in order to improve your application's performance, you must configure the binding of the table as required.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setShowTablePersonalisation",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.SmartTable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowTablePersonalisation",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showTablePersonalisation</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowTablePersonalisation showTablePersonalisation}.\n\nThe showTablePersonalisation attribute can be set to true or false for controlling the visibility of the TablePersonalisation button.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setShowVariantManagement",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.SmartTable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowVariantManagement",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showVariantManagement</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowVariantManagement showVariantManagement}.\n\nThe showVariantManagement attribute can be set to true or false for controlling the visibility of VariantManagement button.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setSmartFilterId",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.SmartTable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sSmartFilterId",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>smartFilterId</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSmartFilterId smartFilterId}.\n\nID of the corresponding SmartFilter control; When specified, the SmartTable searches for the SmartFilter (also in the closest parent View) and attaches to the relevant events of the SmartFilter; to fetch data, show overlay etc.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setSmartVariant",
          "visibility": "public",
          "since": "1.38",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.SmartTable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oSmartVariant",
              "type": "sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "ID of an element which becomes the new target of this smartVariant association; alternatively, an element instance may be given"
            }
          ],
          "description": "Sets the associated {@link #getSmartVariant smartVariant}."
        },
        {
          "name": "setTableBindingPath",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.SmartTable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sTableBindingPath",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>tableBindingPath</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getTableBindingPath tableBindingPath}.\n\nThis attribute can be used to specify the path that is used during the binding of the table. If not specified, the entitySet attribute is used instead. (used only if binding is established internally/automatically - See enableAutoBinding)\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setTableType",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.SmartTable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sTableType",
              "type": "sap.ui.comp.smarttable.TableType",
              "optional": false,
              "description": "New value for property <code>tableType</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getTableType tableType}.\n\nSpecifies the type of table to be created in the SmartTable control.<br> <i>Note:</i><br> If you add a table to the content of the SmartTable in the view, this property has no effect.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setToolbarStyleClass",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.SmartTable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sToolbarStyleClass",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>toolbarStyleClass</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getToolbarStyleClass toolbarStyleClass}.\n\nA style class which is defined for the toolbar of the table.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setUiState",
          "visibility": "public",
          "since": "1.52",
          "parameters": [
            {
              "name": "oUIState",
              "type": "sap.ui.comp.state.UIState",
              "optional": false,
              "description": "the new representation of UI state"
            }
          ],
          "description": "Replaces the current UI state of the <code>SmartTable</code> control with the data represented in {@link sap.ui.comp.state.UIState}.<br> <b>Note:</b><br> The following limitations apply: <ul> <li>Visualizations can only be used to modify the visibility and order of columns, the template or importance of the column cannot be changed</li> <li>MaxItems is not supported</li> <li>RequestAtLeast contains values that are combined from both the <code>SmartTable</code> control property and PresentationVariant annotation, but when it is updated it only affects the internal array. The property in the <code>SmartTable</code> stays the same as before</li> <li>Changes to RequestAtLeast alone will not lead to a new data request</li> <li>RequestAtLeast is not supported in <code>AnalyticalTable</code> scenario</li> <li>Any other limitations, like the ones mentioned in {@link sap.ui.comp.state.UIState}, also apply</li> </ul>"
        },
        {
          "name": "setUseExportToExcel",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.SmartTable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bUseExportToExcel",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>useExportToExcel</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getUseExportToExcel useExportToExcel}.\n\nCan be set to true or false depending on whether you want to export data to a spreadsheet application, for example Microsoft Excel.<br> <i>Note:</i><br> If <code>exportType</code> is <code>sap.ui.comp.smarttable.ExportType.GW</code>, any $expand parameters are removed when sending the request to generate the spreadsheet.<br> As of UI5 version 1.56: If <code>exportType</code> is <code>sap.ui.comp.smarttable.ExportType.UI5Client</code> and <code>TreeTable</code> is used, the <code>worksheet.hierarchyLevel</code> property (see {@link sap.ui.export.Spreadsheet}) is filled from the binding, if the relevant information is available there for exporting hierarchical data in the spreadsheet.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setUseInfoToolbar",
          "visibility": "public",
          "since": "1.70",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.SmartTable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sUseInfoToolbar",
              "type": "sap.ui.comp.smarttable.InfoToolbarBehavior",
              "optional": false,
              "description": "New value for property <code>useInfoToolbar</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getUseInfoToolbar useInfoToolbar}.\n\nShows an info toolbar.<br> Filters that are applied using the table personalization dialog are shown in the info toolbar.<br> <b>Note:</b><br> <ul> <li>The default value for the property is <code>Auto</code>, which means that the info toolbar is shown by default if table type is <code>ResponsiveTable</code>.</li> <li>The info toolbar is hidden if the property is set to <code>Off</code>.</li> <li>The info toolbar is visible if the property is set to <code>On</code>. Currently the info toolbar is only available for the table type <code>ResponsiveTable</code>.</li> <li>If multiple filters are applied to the same column, then the info toolbar contains the column name only once.</li> <li>In case there is a custom info toolbar used for the responsive table control, then the property must be set to <code>Off</code>. Otherwise, an error is logged in the browser console.</li> </ul>\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Auto</code>."
        },
        {
          "name": "setUseOnlyOneSolidToolbar",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.SmartTable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bUseOnlyOneSolidToolbar",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>useOnlyOneSolidToolbar</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getUseOnlyOneSolidToolbar useOnlyOneSolidToolbar}.\n\nIf set to true, the standard toolbar and custom toolbar will be merged into one toolbar. The combined toolbar will have a solid style.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>.",
          "deprecated": {
            "since": "1.29",
            "text": "This property has no effect"
          }
        },
        {
          "name": "setUseTablePersonalisation",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.SmartTable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bUseTablePersonalisation",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>useTablePersonalisation</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getUseTablePersonalisation useTablePersonalisation}.\n\nThe useTablePersonalisation attribute can be set to true or false depending on whether you want to define personalized table settings. If you want to persist the table personalization, you need to specify the persistencyKey property.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setUseVariantManagement",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "sap.ui.comp.smarttable.SmartTable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bUseVariantManagement",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>useVariantManagement</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getUseVariantManagement useVariantManagement}.\n\nThe useVariantManagement attribute can be set to true or false depending on whether you want to use variants. As a prerequisite you need to specify the persistencyKey property.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "updateTableHeaderState",
          "visibility": "public",
          "description": "This can be called once data is received to update table header (count) and toolbar buttons(e.g. Excel Export) enabled state"
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.ui.comp.smarttable.TableType",
      "basename": "TableType",
      "resource": "sap/ui/comp/library.js",
      "module": "sap/ui/comp/library",
      "export": "smarttable.TableType",
      "static": true,
      "visibility": "public",
      "description": "Provides enumeration sap.ui.comp.smarttable.TableType. A subset of table types that fit to a simple API returning one string.",
      "ui5-metamodel": true,
      "properties": [
        {
          "name": "AnalyticalTable",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "An analytical table (sap.ui.table.AnalyticalTable) control shall be created as the content of the SmartTable, if no table already exists"
        },
        {
          "name": "ResponsiveTable",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "A responsive table (sap.m.Table) control that can be used on mobile devices shall be created as the content of the SmartTable, if no table already exists"
        },
        {
          "name": "Table",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "A table (sap.ui.table.Table) control shall be created as the content of the SmartTable, if no table already exists (default)"
        },
        {
          "name": "TreeTable",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "A tree table (sap.ui.table.TreeTable) control shall be created as the content of the SmartTable, if no table already exists"
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.ui.comp.smartvariants.ChangeHandlerType",
      "basename": "ChangeHandlerType",
      "resource": "sap/ui/comp/library.js",
      "module": "sap/ui/comp/library",
      "export": "smartvariants.ChangeHandlerType",
      "static": true,
      "visibility": "public",
      "description": "Enumeration for changes for personalization of variant favorites.",
      "ui5-metamodel": true,
      "properties": [
        {
          "name": "addFavorite",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Change handler creating a change for an added favorite."
        },
        {
          "name": "removeFavorite",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Change handler creating a change for a removed favorite."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.comp.smartvariants.PersonalizableInfo",
      "basename": "PersonalizableInfo",
      "resource": "sap/ui/comp/smartvariants/PersonalizableInfo.js",
      "module": "sap/ui/comp/smartvariants/PersonalizableInfo",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.core.Element",
      "description": "The PersonalizableInfo class describes the personalizable control associated with the <code>SmartVariantManagement</code> control.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "element",
        "properties": [
          {
            "name": "type",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Describes the type of variant management.",
            "methods": ["getType", "setType"]
          },
          {
            "name": "dataSource",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Name of the data service",
            "methods": ["getDataSource", "setDataSource"]
          },
          {
            "name": "keyName",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Defines the property name of the personalization key.",
            "methods": ["getKeyName", "setKeyName"]
          }
        ],
        "associations": [
          {
            "name": "control",
            "singularName": "control",
            "type": "sap.ui.core.Control",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "Contains the control that can be personalized.",
            "methods": ["getControl", "setControl"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new smartvariants/PersonalizableInfo.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.comp.smartvariants.PersonalizableInfo with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
        },
        {
          "name": "getControl",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.ID" },
          "description": "ID of the element which is the current target of the association {@link #getControl control}, or <code>null</code>."
        },
        {
          "name": "getDataSource",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>dataSource</code>"
          },
          "description": "Gets current value of property {@link #getDataSource dataSource}.\n\nName of the data service"
        },
        {
          "name": "getKeyName",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>keyName</code>"
          },
          "description": "Gets current value of property {@link #getKeyName keyName}.\n\nDefines the property name of the personalization key."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.comp.smartvariants.PersonalizableInfo."
        },
        {
          "name": "getType",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>type</code>"
          },
          "description": "Gets current value of property {@link #getType type}.\n\nDescribes the type of variant management."
        },
        {
          "name": "setControl",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartvariants.PersonalizableInfo",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oControl",
              "type": "sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "ID of an element which becomes the new target of this control association; alternatively, an element instance may be given"
            }
          ],
          "description": "Sets the associated {@link #getControl control}."
        },
        {
          "name": "setDataSource",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartvariants.PersonalizableInfo",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sDataSource",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>dataSource</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getDataSource dataSource}.\n\nName of the data service\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setKeyName",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartvariants.PersonalizableInfo",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sKeyName",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>keyName</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getKeyName keyName}.\n\nDefines the property name of the personalization key.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setType",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartvariants.PersonalizableInfo",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sType",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>type</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getType type}.\n\nDescribes the type of variant management.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.comp.smartvariants.SmartVariantManagement",
      "basename": "SmartVariantManagement",
      "resource": "sap/ui/comp/smartvariants/SmartVariantManagement.js",
      "module": "sap/ui/comp/smartvariants/SmartVariantManagement",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.comp.variants.VariantManagement",
      "description": "<h3>Overview</h3> The <code>SmartVariantManagement</code> control is a specialization of the {@link sap.ui.comp.variants.VariantManagement VariantManagement} control and communicates with the flexibility library that offers SAPUI5 flexibility to manage the variants.<br> <h3>Usage</h3> You can use this control in combination with the following controls: <ul> <li><code>SmartFilterBar</code></li> <li><code>SmartChart</code></li> <li><code>SmartTable</code></li> </ul>",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "persistencyKey",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Key used to access personalization data.",
            "methods": ["getPersistencyKey", "setPersistencyKey"]
          },
          {
            "name": "entitySet",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The OData entity set whose metadata is used to create the variant items based on the SelectionPresentationVariant annotation.",
            "methods": ["getEntitySet", "setEntitySet"]
          }
        ],
        "aggregations": [
          {
            "name": "personalizableControls",
            "singularName": "personalizableControl",
            "type": "sap.ui.comp.smartvariants.PersonalizableInfo",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "All controls that rely on variant handling have to be added to this aggregation.",
            "methods": [
              "getPersonalizableControls",
              "destroyPersonalizableControls",
              "insertPersonalizableControl",
              "addPersonalizableControl",
              "removePersonalizableControl",
              "indexOfPersonalizableControl",
              "removeAllPersonalizableControls"
            ]
          }
        ],
        "events": [
          {
            "name": "initialise",
            "visibility": "public",
            "description": "This event is fired when the SmartVariantManagement control is initialized.",
            "deprecated": {
              "since": "1.38.0",
              "text": "Replaced by providing the personalizable control and the callback via the <code>initialise</code>-method."
            },
            "methods": [
              "attachInitialise",
              "detachInitialise",
              "fireInitialise"
            ]
          },
          {
            "name": "save",
            "visibility": "public",
            "description": "This event is fired after a variant has been saved.",
            "parameters": {
              "tile": {
                "name": "tile",
                "type": "boolean",
                "description": "If the property <code>showCreateTile</code> is set, the Create Tile checkbox is shown and its value is passed to this event parameter.<br> If the property <code>showCreateTile</code> is not set, this event parameter is skipped."
              }
            },
            "methods": ["attachSave", "detachSave", "fireSave"]
          },
          {
            "name": "afterSave",
            "visibility": "public",
            "description": "This event is fired after all changes are successfully stored.",
            "methods": ["attachAfterSave", "detachAfterSave", "fireAfterSave"]
          }
        ],
        "designtime": "sap/ui/comp/designtime/smartvariants/SmartVariantManagement.designtime"
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new SmartVariantManagement.<br> The call sequence is as follows:<br> A control for which personalization is used has to be registered first via the <code>personalizableControls</code> association. Then it has to call the <code>initialise</code> method with the arguments <code>fCallback</code> function which will be called once the personalization data has been retrieved and <code>oPersoControl</code>, the control itself.<BR> <b>Note:</b> the function callback has to be defined in the personalizable control.<BR> The old behavior, where the control has to register to the <code>initialise</code> event, before the <code>initialise</code> method call, should not be used any longer and is not supported at all for the page variant scenarios.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.",
        "references": [
          "{@link topic:06a4c3ac1cf545a7b51864e7f3aa02da Smart Variant Management}",
          "{@link topic:a8e55aa2f8bc4127923b20685a6d1621 SAPUI5 Flexibility: Adapting UIs Made Easy}"
        ]
      },
      "events": [
        {
          "name": "afterSave",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "This event is fired after all changes are successfully stored."
        },
        {
          "name": "initialise",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "This event is fired when the SmartVariantManagement control is initialized.",
          "deprecated": {
            "since": "1.38.0",
            "text": "Replaced by providing the personalizable control and the callback via the <code>initialise</code>-method."
          }
        },
        {
          "name": "save",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "tile": {
                      "name": "tile",
                      "type": "boolean",
                      "optional": false,
                      "description": "If the property <code>showCreateTile</code> is set, the Create Tile checkbox is shown and its value is passed to this event parameter.<br> If the property <code>showCreateTile</code> is not set, this event parameter is skipped."
                    }
                  }
                }
              }
            }
          ],
          "description": "This event is fired after a variant has been saved."
        }
      ],
      "methods": [
        {
          "name": "addPersonalizableControl",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartvariants.SmartVariantManagement",
            "description": "Current instance"
          },
          "parameters": [
            {
              "name": "oCurrentControlInfo",
              "type": "sap.ui.comp.smartvariants.PersonalizableInfo",
              "optional": false,
              "description": "Wrapper for the personalizable control"
            }
          ],
          "description": "Registers all controls interested and relying on variant handling."
        },
        {
          "name": "applyDefaultFavorites",
          "visibility": "protected",
          "parameters": [
            {
              "name": "aVariantKeys",
              "type": "array",
              "optional": false,
              "description": "Contains the added variant keys"
            },
            {
              "name": "bSelectionVariants",
              "type": "boolean",
              "optional": false,
              "description": "Defines if this is the SelectionVariant scenario"
            }
          ],
          "description": "Applies the favorites."
        },
        {
          "name": "attachAfterSave",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartvariants.SmartVariantManagement",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartvariants.SmartVariantManagement</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:afterSave afterSave} event of this <code>sap.ui.comp.smartvariants.SmartVariantManagement</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartvariants.SmartVariantManagement</code> itself.\n\nThis event is fired after all changes are successfully stored."
        },
        {
          "name": "attachInitialise",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartvariants.SmartVariantManagement",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartvariants.SmartVariantManagement</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:initialise initialise} event of this <code>sap.ui.comp.smartvariants.SmartVariantManagement</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartvariants.SmartVariantManagement</code> itself.\n\nThis event is fired when the SmartVariantManagement control is initialized.",
          "deprecated": {
            "since": "1.38.0",
            "text": "Replaced by providing the personalizable control and the callback via the <code>initialise</code>-method."
          }
        },
        {
          "name": "attachSave",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartvariants.SmartVariantManagement",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartvariants.SmartVariantManagement</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:save save} event of this <code>sap.ui.comp.smartvariants.SmartVariantManagement</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartvariants.SmartVariantManagement</code> itself.\n\nThis event is fired after a variant has been saved."
        },
        {
          "name": "currentVariantSetModified",
          "visibility": "public",
          "parameters": [
            {
              "name": "bFlag",
              "type": "boolean",
              "optional": false,
              "description": "The value indicating the dirty state of the current variant"
            }
          ],
          "description": "Sets the dirty flag of the current variant."
        },
        {
          "name": "destroyPersonalizableControls",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartvariants.SmartVariantManagement",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the personalizableControls in the aggregation {@link #getPersonalizableControls personalizableControls}."
        },
        {
          "name": "detachAfterSave",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartvariants.SmartVariantManagement",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:afterSave afterSave} event of this <code>sap.ui.comp.smartvariants.SmartVariantManagement</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachInitialise",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartvariants.SmartVariantManagement",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:initialise initialise} event of this <code>sap.ui.comp.smartvariants.SmartVariantManagement</code>.\n\nThe passed function and listener object must match the ones used for event registration.",
          "deprecated": {
            "since": "1.38.0",
            "text": "Replaced by providing the personalizable control and the callback via the <code>initialise</code>-method."
          }
        },
        {
          "name": "detachSave",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartvariants.SmartVariantManagement",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:save save} event of this <code>sap.ui.comp.smartvariants.SmartVariantManagement</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.comp.smartvariants.SmartVariantManagement with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.comp.variants.VariantManagement.extend}."
        },
        {
          "name": "fireAfterSave",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.comp.smartvariants.SmartVariantManagement",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:afterSave afterSave} to attached listeners."
        },
        {
          "name": "fireInitialise",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.comp.smartvariants.SmartVariantManagement",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:initialise initialise} to attached listeners.",
          "deprecated": {
            "since": "1.38.0",
            "text": "Replaced by providing the personalizable control and the callback via the <code>initialise</code>-method."
          }
        },
        {
          "name": "getCurrentVariantId",
          "visibility": "public",
          "since": "1.28.1",
          "returnValue": {
            "type": "string",
            "description": "Current variant ID"
          },
          "description": "Retrieves the current variant ID. For a standard variant, an empty string is returned."
        },
        {
          "name": "getEntitySet",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>entitySet</code>"
          },
          "description": "Gets current value of property {@link #getEntitySet entitySet}.\n\nThe OData entity set whose metadata is used to create the variant items based on the SelectionPresentationVariant annotation."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.comp.smartvariants.SmartVariantManagement."
        },
        {
          "name": "getPersistencyKey",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>persistencyKey</code>"
          },
          "description": "Gets current value of property {@link #getPersistencyKey persistencyKey}.\n\nKey used to access personalization data."
        },
        {
          "name": "getPersonalizableControls",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartvariants.PersonalizableInfo[]"
          },
          "description": "Gets content of aggregation {@link #getPersonalizableControls personalizableControls}.\n\nAll controls that rely on variant handling have to be added to this aggregation."
        },
        {
          "name": "getStandardVariant",
          "visibility": "public",
          "returnValue": {
            "type": "Object",
            "description": "The standard variant."
          },
          "parameters": [
            {
              "name": "oCurrentControl",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "Current personalizable control"
            }
          ],
          "description": "Returns the standard variant."
        },
        {
          "name": "getVariantContent",
          "visibility": "public",
          "returnValue": {
            "type": "object",
            "description": "JSON Representing the content of the variant"
          },
          "parameters": [
            {
              "name": "oControl",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "Current personalizable control"
            },
            {
              "name": "sKey",
              "type": "string",
              "optional": false,
              "description": "The variant key"
            }
          ],
          "description": "Retrieves the variant content."
        },
        {
          "name": "indexOfPersonalizableControl",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oPersonalizableControl",
              "type": "sap.ui.comp.smartvariants.PersonalizableInfo",
              "optional": false,
              "description": "The personalizableControl whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.ui.comp.smartvariants.PersonalizableInfo</code> in the aggregation {@link #getPersonalizableControls personalizableControls}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "initialise",
          "visibility": "public",
          "parameters": [
            {
              "name": "fCallback",
              "type": "function",
              "optional": false,
              "description": "Function will be called whenever the data for the personalizable control is received"
            },
            {
              "name": "oPersoControl",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "Current control that can be personalized"
            }
          ],
          "description": "Initializes the control by retrieving the variants from SAPUI5 flexibility. Once the initialization has been completed, the controls for personalization are notified via the <code>initialise</code> event."
        },
        {
          "name": "insertPersonalizableControl",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartvariants.SmartVariantManagement",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oPersonalizableControl",
              "type": "sap.ui.comp.smartvariants.PersonalizableInfo",
              "optional": false,
              "description": "The personalizableControl to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the personalizableControl should be inserted at; for a negative value of <code>iIndex</code>, the personalizableControl is inserted at position 0; for a value greater than the current size of the aggregation, the personalizableControl is inserted at the last position"
            }
          ],
          "description": "Inserts a personalizableControl into the aggregation {@link #getPersonalizableControls personalizableControls}."
        },
        {
          "name": "isPageVariant",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "<code>true</code> if it is a page variant, otherwise <code>false</code>"
          },
          "description": "Determines if the <code>SmartVariantManagement</code> instance is a page variant."
        },
        {
          "name": "removeAllPersonalizableControls",
          "visibility": "public",
          "description": "Removes all registered personalizable controls."
        },
        {
          "name": "removePersonalizableControl",
          "visibility": "public",
          "returnValue": {
            "type": "object",
            "description": "removed wrapper for the personalizable control"
          },
          "parameters": [
            {
              "name": "oCurrentControlInfo",
              "type": "sap.ui.comp.smartvariants.PersonalizableInfo",
              "optional": false,
              "description": "wrapper for the personalizable control"
            }
          ],
          "description": "Removes a registered personalizable control."
        },
        {
          "name": "removePersonalizableControlById",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControl",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "the personalizable control"
            }
          ],
          "description": "Removes a registered personalizable control."
        },
        {
          "name": "setCurrentVariantId",
          "visibility": "public",
          "since": "1.28.1",
          "parameters": [
            {
              "name": "sVariantId",
              "type": "string",
              "optional": false,
              "description": "ID of the variant"
            },
            {
              "name": "bDoNotApplyVariant",
              "type": "boolean",
              "optional": false,
              "description": "If set to <code>true</code>, the <code>applyVariant</code> method is not executed yet."
            }
          ],
          "description": "Sets the current variant ID."
        },
        {
          "name": "setEntitySet",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartvariants.SmartVariantManagement",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sEntitySet",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>entitySet</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getEntitySet entitySet}.\n\nThe OData entity set whose metadata is used to create the variant items based on the SelectionPresentationVariant annotation.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setPersistencyKey",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartvariants.SmartVariantManagement",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sPersistencyKey",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>persistencyKey</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getPersistencyKey persistencyKey}.\n\nKey used to access personalization data.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.comp.smartvariants.SmartVariantManagementAdapter",
      "basename": "SmartVariantManagementAdapter",
      "resource": "sap/ui/comp/smartvariants/SmartVariantManagementAdapter.js",
      "module": "sap/ui/comp/smartvariants/SmartVariantManagementAdapter",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.core.Element",
      "description": "Handles the odata metadata based information. An instance of this class will be created and used by the {@link sap.ui.comp.smartvariants.SmartVariantManagement SmartVariantManagement} control. The adapter transforms odata metadata based SelectionPresentationVariant information to UIState object. For each SelectionPresentationVariant annotation an entry will be added to the VariantManagement control. It will be called by the SmartVariantManagement whenever the user selects the corresponding entry and will provide a valid {@link sap.ui.comp.state.UIState UIState} object.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "element",
        "properties": [
          {
            "name": "selectionPresentationVariants",
            "type": "object",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "description": "assign an array of selectionPresentationVariants annotations.",
            "methods": [
              "getSelectionPresentationVariants",
              "setSelectionPresentationVariants"
            ]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for new instance of a SmartVariantManagementAdapter control.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.comp.smartvariants.SmartVariantManagementAdapter with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.comp.smartvariants.SmartVariantManagementAdapter."
        },
        {
          "name": "getSelectionPresentationVariants",
          "visibility": "public",
          "returnValue": {
            "type": "object",
            "description": "Value of property <code>selectionPresentationVariants</code>"
          },
          "description": "Gets current value of property {@link #getSelectionPresentationVariants selectionPresentationVariants}.\n\nassign an array of selectionPresentationVariants annotations.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setSelectionPresentationVariants",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartvariants.SmartVariantManagementAdapter",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oSelectionPresentationVariants",
              "type": "object",
              "optional": false,
              "description": "New value for property <code>selectionPresentationVariants</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSelectionPresentationVariants selectionPresentationVariants}.\n\nassign an array of selectionPresentationVariants annotations.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.comp.smartvariants.SmartVariantManagementUi2",
      "basename": "SmartVariantManagementUi2",
      "resource": "sap/ui/comp/smartvariants/SmartVariantManagementUi2.js",
      "module": "sap/ui/comp/smartvariants/SmartVariantManagementUi2",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.comp.variants.VariantManagement",
      "description": "The SmartVariantManagementUi2 control is a specialization of the {@link sap.ui.comp.variants.VariantManagement VariantManagement} control and communicates with the Ui2 personalization layer to manage the variants.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "aggregations": [
          {
            "name": "personalizableControl",
            "singularName": "personalizableControl",
            "type": "sap.ui.comp.smartvariants.PersonalizableInfo",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "All controls that rely on variant handling have to be added to this aggregation. The only consumer currently known is the <code>FilterBar</code> control.",
            "methods": [
              "getPersonalizableControl",
              "destroyPersonalizableControl",
              "setPersonalizableControl"
            ]
          }
        ],
        "events": [
          {
            "name": "initialise",
            "visibility": "public",
            "description": "Once the <code>SmartVariantManagementUi2</code> control has been initialized, and especially after retrieving the variants via the UI2 personalization service, the registered consumer will be notified that this phase has completed",
            "methods": [
              "attachInitialise",
              "detachInitialise",
              "fireInitialise"
            ]
          },
          {
            "name": "afterSave",
            "visibility": "public",
            "description": "Fired after a variant is saved. This event can be used to retrieve the id of the saved variant.",
            "methods": ["attachAfterSave", "detachAfterSave", "fireAfterSave"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new SmartVariantManagementUi2.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "afterSave",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "Fired after a variant is saved. This event can be used to retrieve the id of the saved variant."
        },
        {
          "name": "initialise",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "Once the <code>SmartVariantManagementUi2</code> control has been initialized, and especially after retrieving the variants via the UI2 personalization service, the registered consumer will be notified that this phase has completed"
        }
      ],
      "methods": [
        {
          "name": "addPersonalizableControl",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartvariants.SmartVariantManagementUi2",
            "description": "the current instance"
          },
          "parameters": [
            {
              "name": "oCurrentControlInfo",
              "type": "sap.ui.comp.smartvariants.PersonalizableInfo",
              "optional": false,
              "description": "control providing the required aggregation for flex-layer"
            }
          ],
          "description": "Registers all controls interested and relying on variant handling. Each control has to be registered separately."
        },
        {
          "name": "attachAfterSave",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartvariants.SmartVariantManagementUi2",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartvariants.SmartVariantManagementUi2</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:afterSave afterSave} event of this <code>sap.ui.comp.smartvariants.SmartVariantManagementUi2</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartvariants.SmartVariantManagementUi2</code> itself.\n\nFired after a variant is saved. This event can be used to retrieve the id of the saved variant."
        },
        {
          "name": "attachInitialise",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartvariants.SmartVariantManagementUi2",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartvariants.SmartVariantManagementUi2</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:initialise initialise} event of this <code>sap.ui.comp.smartvariants.SmartVariantManagementUi2</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartvariants.SmartVariantManagementUi2</code> itself.\n\nOnce the <code>SmartVariantManagementUi2</code> control has been initialized, and especially after retrieving the variants via the UI2 personalization service, the registered consumer will be notified that this phase has completed"
        },
        {
          "name": "destroyPersonalizableControl",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartvariants.SmartVariantManagementUi2",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the personalizableControl in the aggregation {@link #getPersonalizableControl personalizableControl}."
        },
        {
          "name": "detachAfterSave",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartvariants.SmartVariantManagementUi2",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:afterSave afterSave} event of this <code>sap.ui.comp.smartvariants.SmartVariantManagementUi2</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachInitialise",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartvariants.SmartVariantManagementUi2",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:initialise initialise} event of this <code>sap.ui.comp.smartvariants.SmartVariantManagementUi2</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.comp.smartvariants.SmartVariantManagementUi2 with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.comp.variants.VariantManagement.extend}."
        },
        {
          "name": "fireAfterSave",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.comp.smartvariants.SmartVariantManagementUi2",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:afterSave afterSave} to attached listeners."
        },
        {
          "name": "fireInitialise",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.comp.smartvariants.SmartVariantManagementUi2",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:initialise initialise} to attached listeners."
        },
        {
          "name": "getCurrentVariantId",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Current variant ID"
          },
          "description": "Retrieves the current variant ID. For a standard variant, an empty string is returned."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.comp.smartvariants.SmartVariantManagementUi2."
        },
        {
          "name": "getPersonalizableControl",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartvariants.PersonalizableInfo"
          },
          "description": "Gets content of aggregation {@link #getPersonalizableControl personalizableControl}.\n\nAll controls that rely on variant handling have to be added to this aggregation. The only consumer currently known is the <code>FilterBar</code> control."
        },
        {
          "name": "getVariantContent",
          "visibility": "public",
          "returnValue": {
            "type": "object",
            "description": "json object representing the content of the variant"
          },
          "parameters": [
            {
              "name": "oControl",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "current control"
            },
            {
              "name": "sKey",
              "type": "string",
              "optional": false,
              "description": "the variant key"
            }
          ],
          "description": "Retrieves the variant content."
        },
        {
          "name": "initialise",
          "visibility": "public",
          "description": "Initializes the UI2 personalization layer by retrieving the list of variants. Once the initialization has been completed, the control for personalization is informed via the initialise event."
        },
        {
          "name": "isPageVariant",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "always returns <code>false</code>"
          },
          "description": "Determines if the <code>SmartVariantManagementUi3</code> instance is a page variant."
        },
        {
          "name": "setCurrentVariantId",
          "visibility": "public",
          "parameters": [
            {
              "name": "sVariantId",
              "type": "string",
              "optional": false,
              "description": "ID of the variant"
            },
            {
              "name": "bDoNotApplyVariant",
              "type": "boolean",
              "optional": false,
              "description": "If set to <code>true</code>, the <code>applyVariant</code> method is not executed yet. Relevant during navigation, when called before the initialise event has been executed"
            }
          ],
          "description": "Sets the current variant ID. In case an invalid ID is passed, a standard variant is set."
        },
        {
          "name": "setPersonalizableControl",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.smartvariants.SmartVariantManagementUi2",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oPersonalizableControl",
              "type": "sap.ui.comp.smartvariants.PersonalizableInfo",
              "optional": false,
              "description": "The personalizableControl to set"
            }
          ],
          "description": "Sets the aggregated {@link #getPersonalizableControl personalizableControl}."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.comp.state.UIState",
      "basename": "UIState",
      "resource": "sap/ui/comp/state/UIState.js",
      "module": "sap/ui/comp/state/UIState",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.50",
      "extends": "sap.ui.base.ManagedObject",
      "description": "Creates a new instance of an UIState class.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "object",
        "properties": [
          {
            "name": "presentationVariant",
            "type": "object",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Object representing the presentation variant. The structure looks like:\n\n<pre><code>\n{\n\tContextUrl: {string},\n\tMaxItems: {int},\n SortOrder: [],\n\tGroupBy: [],\n\tTotal: [],\n\tRequestAtLeast: [],\n\tVisualizations: []\n}\n</code></pre>\n\n<b>Note:</b> <ul> <li> <code>PresentationVariantID</code> property is not provided</li> <li> <code>Text</code> property is not provided because it is translated text</li> <li> <code>TotalBy</code> is not supported yet</li> <li> <code>IncludeGrandTotal</code> is not supported yet</li> <li> <code>InitialExpansionLevel</code> is not supported yet</li> <li> <code>Title</code> of <code>Visualizations.Content</code> property is not provided because it is translated text</li> <li> <code>Description</code> of <code>Visualizations.Content</code> property is not provided because it is translated text</li> <li> <code>VariantName</code> property is not part of specified DataSuiteFormat yet </ul>",
            "methods": ["getPresentationVariant", "setPresentationVariant"]
          },
          {
            "name": "selectionVariant",
            "type": "object",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Object representing the selection variant. The structure looks like:\n\n<pre><code>\n{\n SelectionVariant: {\n     SelectionVariantID: {string},\n\t\tParameters: [],\n\t\tSelectOptions: []\n}\n</code></pre>",
            "methods": ["getSelectionVariant", "setSelectionVariant"]
          },
          {
            "name": "variantName",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Variant name.",
            "methods": ["getVariantName", "setVariantName"]
          },
          {
            "name": "valueTexts",
            "type": "object",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Structure containing filter value keys and its corresponding descriptions.\n\n<pre><code>\n{\n\tTexts: [\n\t\t{\n\t\t\tLanguage: string,\n\t\t\tContextUrl: string,\n\t\t\tPropertyTexts: [\n\t\t\t\t{\n\t\t\t\t\tPropertyName: string,\n\t\t\t\t\tValueTexts: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tPropertyValue: string,\n\t\t\t\t\t\t\tText: string\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}\n</code></pre>",
            "methods": ["getValueTexts", "setValueTexts"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Accepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "calculateValueTexts",
          "visibility": "protected",
          "static": true,
          "returnValue": {
            "type": "object",
            "description": "the values texts format"
          },
          "parameters": [
            {
              "name": "oSelectionVariant",
              "type": "object",
              "optional": false,
              "description": "selection variant object"
            },
            {
              "name": "mData",
              "type": "map",
              "optional": false,
              "description": "the filter provider model data"
            }
          ],
          "description": "Constructs the value state out of a given selection variant and the current model data"
        },
        {
          "name": "createFromSelectionAndPresentationVariantAnnotation",
          "visibility": "protected",
          "static": true,
          "returnValue": {
            "type": "sap.ui.comp.state.UIState",
            "description": "UIState object containing converted parts of SelectionVariant and PresentationVariant annotations"
          },
          "parameters": [
            {
              "name": "sVariantName",
              "type": "string",
              "optional": false,
              "description": "Name of the variant"
            },
            {
              "name": "oSelectionVariantAnnotation",
              "type": "object",
              "optional": false,
              "description": "Object representing the com.sap.vocabularies.UI.v1.SelectionVariant annotation provided by MetadataAnalyser"
            },
            {
              "name": "oPresentationVariantAnnotation",
              "type": "object",
              "optional": false,
              "description": "Object representing the com.sap.vocabularies.UI.v1.PresentationVariant annotation provided by MetadataAnalyser"
            }
          ],
          "description": "Converts PresentationVariant annotation to UIState object."
        },
        {
          "name": "enrichWithValueTexts",
          "visibility": "protected",
          "static": true,
          "returnValue": {
            "type": "string",
            "description": "enriched the filter bar inner data format"
          },
          "parameters": [
            {
              "name": "sPayload",
              "type": "string",
              "optional": false,
              "description": "the filter bar inner data format"
            },
            {
              "name": "oValueTexts",
              "type": "object",
              "optional": false,
              "description": "the value texts format containing the eventual descriptions."
            }
          ],
          "description": "Enriches the internal filter bar value format with the information from the value state."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.comp.state.UIState with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.ManagedObject.extend}."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.comp.state.UIState."
        },
        {
          "name": "getPresentationVariant",
          "visibility": "public",
          "returnValue": {
            "type": "object",
            "description": "Value of property <code>presentationVariant</code>"
          },
          "description": "Gets current value of property {@link #getPresentationVariant presentationVariant}.\n\nObject representing the presentation variant. The structure looks like:\n\n<pre><code>\n{\n\tContextUrl: {string},\n\tMaxItems: {int},\n SortOrder: [],\n\tGroupBy: [],\n\tTotal: [],\n\tRequestAtLeast: [],\n\tVisualizations: []\n}\n</code></pre>\n\n<b>Note:</b> <ul> <li> <code>PresentationVariantID</code> property is not provided</li> <li> <code>Text</code> property is not provided because it is translated text</li> <li> <code>TotalBy</code> is not supported yet</li> <li> <code>IncludeGrandTotal</code> is not supported yet</li> <li> <code>InitialExpansionLevel</code> is not supported yet</li> <li> <code>Title</code> of <code>Visualizations.Content</code> property is not provided because it is translated text</li> <li> <code>Description</code> of <code>Visualizations.Content</code> property is not provided because it is translated text</li> <li> <code>VariantName</code> property is not part of specified DataSuiteFormat yet </ul>"
        },
        {
          "name": "getSelectionVariant",
          "visibility": "public",
          "returnValue": {
            "type": "object",
            "description": "Value of property <code>selectionVariant</code>"
          },
          "description": "Gets current value of property {@link #getSelectionVariant selectionVariant}.\n\nObject representing the selection variant. The structure looks like:\n\n<pre><code>\n{\n SelectionVariant: {\n     SelectionVariantID: {string},\n\t\tParameters: [],\n\t\tSelectOptions: []\n}\n</code></pre>"
        },
        {
          "name": "getValueTexts",
          "visibility": "public",
          "returnValue": {
            "type": "object",
            "description": "Value of property <code>valueTexts</code>"
          },
          "description": "Gets current value of property {@link #getValueTexts valueTexts}.\n\nStructure containing filter value keys and its corresponding descriptions.\n\n<pre><code>\n{\n\tTexts: [\n\t\t{\n\t\t\tLanguage: string,\n\t\t\tContextUrl: string,\n\t\t\tPropertyTexts: [\n\t\t\t\t{\n\t\t\t\t\tPropertyName: string,\n\t\t\t\t\tValueTexts: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tPropertyValue: string,\n\t\t\t\t\t\t\tText: string\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}\n</code></pre>"
        },
        {
          "name": "getVariantName",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>variantName</code>"
          },
          "description": "Gets current value of property {@link #getVariantName variantName}.\n\nVariant name."
        },
        {
          "name": "setPresentationVariant",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.state.UIState",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oPresentationVariant",
              "type": "object",
              "optional": false,
              "description": "New value for property <code>presentationVariant</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getPresentationVariant presentationVariant}.\n\nObject representing the presentation variant. The structure looks like:\n\n<pre><code>\n{\n\tContextUrl: {string},\n\tMaxItems: {int},\n SortOrder: [],\n\tGroupBy: [],\n\tTotal: [],\n\tRequestAtLeast: [],\n\tVisualizations: []\n}\n</code></pre>\n\n<b>Note:</b> <ul> <li> <code>PresentationVariantID</code> property is not provided</li> <li> <code>Text</code> property is not provided because it is translated text</li> <li> <code>TotalBy</code> is not supported yet</li> <li> <code>IncludeGrandTotal</code> is not supported yet</li> <li> <code>InitialExpansionLevel</code> is not supported yet</li> <li> <code>Title</code> of <code>Visualizations.Content</code> property is not provided because it is translated text</li> <li> <code>Description</code> of <code>Visualizations.Content</code> property is not provided because it is translated text</li> <li> <code>VariantName</code> property is not part of specified DataSuiteFormat yet </ul>\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setSelectionVariant",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.state.UIState",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oSelectionVariant",
              "type": "object",
              "optional": false,
              "description": "New value for property <code>selectionVariant</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSelectionVariant selectionVariant}.\n\nObject representing the selection variant. The structure looks like:\n\n<pre><code>\n{\n SelectionVariant: {\n     SelectionVariantID: {string},\n\t\tParameters: [],\n\t\tSelectOptions: []\n}\n</code></pre>\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setValueTexts",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.state.UIState",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oValueTexts",
              "type": "object",
              "optional": false,
              "description": "New value for property <code>valueTexts</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getValueTexts valueTexts}.\n\nStructure containing filter value keys and its corresponding descriptions.\n\n<pre><code>\n{\n\tTexts: [\n\t\t{\n\t\t\tLanguage: string,\n\t\t\tContextUrl: string,\n\t\t\tPropertyTexts: [\n\t\t\t\t{\n\t\t\t\t\tPropertyName: string,\n\t\t\t\t\tValueTexts: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tPropertyValue: string,\n\t\t\t\t\t\t\tText: string\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}\n</code></pre>\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setVariantName",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.state.UIState",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sVariantName",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>variantName</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getVariantName variantName}.\n\nVariant name.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.ui.comp.TextArrangementType",
      "basename": "TextArrangementType",
      "resource": "sap/ui/comp/library.js",
      "module": "sap/ui/comp/library",
      "export": "TextArrangementType",
      "static": true,
      "visibility": "public",
      "since": "1.60",
      "description": "Enumeration of text arrangement types.",
      "ui5-metamodel": true,
      "properties": [
        {
          "name": "TextFirst",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Text comes first, followed by the ID."
        },
        {
          "name": "TextLast",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "ID comes first, followed by the description."
        },
        {
          "name": "TextOnly",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Only description is represented, ID is hidden (for example, for <code>UUIDs</code>)."
        },
        {
          "name": "TextSeparate",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "ID and description are represented separately."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.comp.transport.TransportDialog",
      "basename": "TransportDialog",
      "resource": "sap/ui/comp/transport/TransportDialog.js",
      "module": "sap/ui/comp/transport/TransportDialog",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.fl.transport.TransportDialog",
      "description": "The Transport Dialog Control can be used to implement a value help for selecting an ABAP package and transport request. It is not a generic utility, but part of the VariantManagement and therefore cannot be used in any other application.",
      "deprecated": {},
      "ui5-metadata": { "stereotype": "control" },
      "constructor": {
        "visibility": "public",
        "description": "Constructor for a new transport/TransportDialog."
      }
    },
    {
      "kind": "class",
      "name": "sap.ui.comp.valuehelpdialog.ValueHelpDialog",
      "basename": "ValueHelpDialog",
      "resource": "sap/ui/comp/valuehelpdialog/ValueHelpDialog.js",
      "module": "sap/ui/comp/valuehelpdialog/ValueHelpDialog",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.m.Dialog",
      "description": "The ValueHelpDialog control can be used to implement a value help for an input field.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "basicSearchText",
            "type": "string",
            "defaultValue": "",
            "group": "Misc",
            "visibility": "public",
            "since": "1.24",
            "description": "Defines the value for the basic search field. The value is set into the basic search field of the filter bar used.",
            "methods": ["getBasicSearchText", "setBasicSearchText"]
          },
          {
            "name": "supportMultiselect",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "since": "1.24",
            "description": "Enables multi-selection in the table used.",
            "methods": ["getSupportMultiselect", "setSupportMultiselect"]
          },
          {
            "name": "supportRanges",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "since": "1.24",
            "description": "Enables the ranges (conditions) feature in the dialog.",
            "methods": ["getSupportRanges", "setSupportRanges"]
          },
          {
            "name": "supportRangesOnly",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "since": "1.24",
            "description": "If this property is set to <code>true</code>, the value help dialog only supports the ranges (conditions) feature.",
            "methods": ["getSupportRangesOnly", "setSupportRangesOnly"]
          },
          {
            "name": "key",
            "type": "string",
            "defaultValue": "",
            "group": "Misc",
            "visibility": "public",
            "since": "1.24",
            "description": "Defines the key of the column used for the internal key handling. The value of the column is used for the token key and also to identify the row in the table.",
            "methods": ["getKey", "setKey"]
          },
          {
            "name": "keys",
            "type": "string[]",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.24",
            "description": "Defines the list of additional keys of the column used for the internal key handling.",
            "methods": ["getKeys", "setKeys"]
          },
          {
            "name": "descriptionKey",
            "type": "string",
            "defaultValue": "",
            "group": "Misc",
            "visibility": "public",
            "since": "1.24",
            "description": "Defines the key of the column used for the token text.",
            "methods": ["getDescriptionKey", "setDescriptionKey"]
          },
          {
            "name": "maxIncludeRanges",
            "type": "string",
            "defaultValue": "-1",
            "group": "Misc",
            "visibility": "public",
            "since": "1.24",
            "description": "Defines the maximum number of include ranges.",
            "methods": ["getMaxIncludeRanges", "setMaxIncludeRanges"]
          },
          {
            "name": "maxExcludeRanges",
            "type": "string",
            "defaultValue": "-1",
            "group": "Misc",
            "visibility": "public",
            "since": "1.24",
            "description": "Defines the maximum number of exclude ranges.",
            "methods": ["getMaxExcludeRanges", "setMaxExcludeRanges"]
          },
          {
            "name": "displayFormat",
            "type": "string",
            "defaultValue": "",
            "group": "Misc",
            "visibility": "public",
            "since": "1.24",
            "description": "Represents the display format of the range values. With the <code>displayFormat</code> value UpperCase, the entered value of the range (condition) is converted to uppercase letters.",
            "methods": ["getDisplayFormat", "setDisplayFormat"]
          },
          {
            "name": "tokenDisplayBehaviour",
            "type": "string",
            "defaultValue": "",
            "group": "Misc",
            "visibility": "public",
            "since": "1.24",
            "description": "Represents how the item token text should be displayed in ValueHelpDialog. Use one of the valid <code>sap.ui.comp.smartfilterbar.DisplayBehaviour</code> values.",
            "methods": ["getTokenDisplayBehaviour", "setTokenDisplayBehaviour"]
          },
          {
            "name": "filterMode",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "since": "1.24",
            "description": "Sets the dialog into a filter mode, which only shows ranges (conditions) and hides the tokens.",
            "methods": ["getFilterMode", "setFilterMode"]
          }
        ],
        "aggregations": [
          {
            "name": "filterBar",
            "singularName": "filterBar",
            "type": "sap.ui.comp.filterbar.FilterBar",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "Allows you to add a {@link sap.ui.comp.filterbar.FilterBar FilterBar} or {@link sap.ui.comp.smartfilterbar.SmartFilterBar SmartFilterBar} control to the value help dialog.",
            "methods": ["getFilterBar", "destroyFilterBar", "setFilterBar"]
          }
        ],
        "events": [
          {
            "name": "ok",
            "visibility": "public",
            "since": "1.24",
            "description": "This event is fired when the OK button is pressed.",
            "parameters": {
              "tokens": {
                "name": "tokens",
                "type": "sap.m.Token[]",
                "description": "The array of tokens created or modified on the ValueHelpDialog."
              }
            },
            "methods": ["attachOk", "detachOk", "fireOk"]
          },
          {
            "name": "cancel",
            "visibility": "public",
            "since": "1.24",
            "description": "This event is fired when the Cancel button is pressed.",
            "methods": ["attachCancel", "detachCancel", "fireCancel"]
          },
          {
            "name": "selectionChange",
            "visibility": "public",
            "since": "1.32",
            "description": "This event is fired when the user selects an item in the items table.\n\n<b>Note:</b> The event will only be raised when the dialog gets a table instance from outside via <code>setTable</code>.",
            "parameters": {
              "tableSelectionParams": {
                "name": "tableSelectionParams",
                "type": "object",
                "description": "The RowSelectionChange event parameter from the hosted table that contains the selected items."
              },
              "updateTokens": {
                "name": "updateTokens",
                "type": "object[]",
                "description": "Returns an array of objects which represents all selected row tokens. The object contains the token key, the row object data from the model, and the information if the token is selected. <code> [{sKey, oRow, bSelect}, ...] </code>"
              },
              "useDefault": {
                "name": "useDefault",
                "type": "boolean",
                "description": "Can be set to <code>true</code> to execute the default behaviour of the ValueHelpDialog."
              },
              "table": {
                "name": "table",
                "type": "object",
                "since": "1.58",
                "description": "The table instance used"
              }
            },
            "methods": [
              "attachSelectionChange",
              "detachSelectionChange",
              "fireSelectionChange"
            ]
          },
          {
            "name": "tokenRemove",
            "visibility": "public",
            "since": "1.32",
            "description": "This event is fired when the user removes one or multiple existing token(s) from the dialog.\n\n<b>Note:</b> The event will only be raised when the dialog gets a table instance from outside via <code>setTable</code>.",
            "parameters": {
              "tokenKeys": {
                "name": "tokenKeys",
                "type": "string[]",
                "description": "The array of token keys that has been removed."
              },
              "useDefault": {
                "name": "useDefault",
                "type": "boolean",
                "description": "Can be set to true to execute the default behaviour of ValueHelpDialog."
              }
            },
            "methods": [
              "attachTokenRemove",
              "detachTokenRemove",
              "fireTokenRemove"
            ]
          },
          {
            "name": "updateSelection",
            "visibility": "public",
            "since": "1.32",
            "description": "This event is fired when the table gets an update and all existing tokens must be selected in the table.\n\n<b>Note:</b> The event will only be raised when the dialog gets a table instance from outside via <code>setTable</code>.",
            "parameters": {
              "tokenKeys": {
                "name": "tokenKeys",
                "type": "string[]",
                "description": "The array of existing token keys for which the selection in the table has to be updated."
              },
              "useDefault": {
                "name": "useDefault",
                "type": "boolean",
                "description": "Can be set to true to execute the default behavior of ValueHelpDialog."
              }
            },
            "methods": [
              "attachUpdateSelection",
              "detachUpdateSelection",
              "fireUpdateSelection"
            ]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new valuehelpdialog/ValueHelpDialog.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "cancel",
          "visibility": "public",
          "since": "1.24",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "This event is fired when the Cancel button is pressed."
        },
        {
          "name": "ok",
          "visibility": "public",
          "since": "1.24",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "tokens": {
                      "name": "tokens",
                      "type": "sap.m.Token[]",
                      "optional": false,
                      "description": "The array of tokens created or modified on the ValueHelpDialog."
                    }
                  }
                }
              }
            }
          ],
          "description": "This event is fired when the OK button is pressed."
        },
        {
          "name": "selectionChange",
          "visibility": "public",
          "since": "1.32",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "tableSelectionParams": {
                      "name": "tableSelectionParams",
                      "type": "object",
                      "optional": false,
                      "description": "The RowSelectionChange event parameter from the hosted table that contains the selected items."
                    },
                    "updateTokens": {
                      "name": "updateTokens",
                      "type": "object[]",
                      "optional": false,
                      "description": "Returns an array of objects which represents all selected row tokens. The object contains the token key, the row object data from the model, and the information if the token is selected. <code> [{sKey, oRow, bSelect}, ...] </code>"
                    },
                    "useDefault": {
                      "name": "useDefault",
                      "type": "boolean",
                      "optional": false,
                      "description": "Can be set to <code>true</code> to execute the default behaviour of the ValueHelpDialog."
                    },
                    "table": {
                      "name": "table",
                      "type": "object",
                      "optional": false,
                      "description": "The table instance used"
                    }
                  }
                }
              }
            }
          ],
          "description": "This event is fired when the user selects an item in the items table.\n\n<b>Note:</b> The event will only be raised when the dialog gets a table instance from outside via <code>setTable</code>."
        },
        {
          "name": "tokenRemove",
          "visibility": "public",
          "since": "1.32",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "tokenKeys": {
                      "name": "tokenKeys",
                      "type": "string[]",
                      "optional": false,
                      "description": "The array of token keys that has been removed."
                    },
                    "useDefault": {
                      "name": "useDefault",
                      "type": "boolean",
                      "optional": false,
                      "description": "Can be set to true to execute the default behaviour of ValueHelpDialog."
                    }
                  }
                }
              }
            }
          ],
          "description": "This event is fired when the user removes one or multiple existing token(s) from the dialog.\n\n<b>Note:</b> The event will only be raised when the dialog gets a table instance from outside via <code>setTable</code>."
        },
        {
          "name": "updateSelection",
          "visibility": "public",
          "since": "1.32",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "tokenKeys": {
                      "name": "tokenKeys",
                      "type": "string[]",
                      "optional": false,
                      "description": "The array of existing token keys for which the selection in the table has to be updated."
                    },
                    "useDefault": {
                      "name": "useDefault",
                      "type": "boolean",
                      "optional": false,
                      "description": "Can be set to true to execute the default behavior of ValueHelpDialog."
                    }
                  }
                }
              }
            }
          ],
          "description": "This event is fired when the table gets an update and all existing tokens must be selected in the table.\n\n<b>Note:</b> The event will only be raised when the dialog gets a table instance from outside via <code>setTable</code>."
        }
      ],
      "methods": [
        {
          "name": "attachCancel",
          "visibility": "public",
          "since": "1.24",
          "returnValue": {
            "type": "sap.ui.comp.valuehelpdialog.ValueHelpDialog",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:cancel cancel} event of this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog</code> itself.\n\nThis event is fired when the Cancel button is pressed."
        },
        {
          "name": "attachOk",
          "visibility": "public",
          "since": "1.24",
          "returnValue": {
            "type": "sap.ui.comp.valuehelpdialog.ValueHelpDialog",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:ok ok} event of this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog</code> itself.\n\nThis event is fired when the OK button is pressed."
        },
        {
          "name": "attachSelectionChange",
          "visibility": "public",
          "since": "1.32",
          "returnValue": {
            "type": "sap.ui.comp.valuehelpdialog.ValueHelpDialog",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:selectionChange selectionChange} event of this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog</code> itself.\n\nThis event is fired when the user selects an item in the items table.\n\n<b>Note:</b> The event will only be raised when the dialog gets a table instance from outside via <code>setTable</code>."
        },
        {
          "name": "attachTokenRemove",
          "visibility": "public",
          "since": "1.32",
          "returnValue": {
            "type": "sap.ui.comp.valuehelpdialog.ValueHelpDialog",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:tokenRemove tokenRemove} event of this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog</code> itself.\n\nThis event is fired when the user removes one or multiple existing token(s) from the dialog.\n\n<b>Note:</b> The event will only be raised when the dialog gets a table instance from outside via <code>setTable</code>."
        },
        {
          "name": "attachUpdateSelection",
          "visibility": "public",
          "since": "1.32",
          "returnValue": {
            "type": "sap.ui.comp.valuehelpdialog.ValueHelpDialog",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:updateSelection updateSelection} event of this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog</code> itself.\n\nThis event is fired when the table gets an update and all existing tokens must be selected in the table.\n\n<b>Note:</b> The event will only be raised when the dialog gets a table instance from outside via <code>setTable</code>."
        },
        {
          "name": "destroyFilterBar",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.valuehelpdialog.ValueHelpDialog",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the filterBar in the aggregation {@link #getFilterBar filterBar}."
        },
        {
          "name": "detachCancel",
          "visibility": "public",
          "since": "1.24",
          "returnValue": {
            "type": "sap.ui.comp.valuehelpdialog.ValueHelpDialog",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:cancel cancel} event of this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachOk",
          "visibility": "public",
          "since": "1.24",
          "returnValue": {
            "type": "sap.ui.comp.valuehelpdialog.ValueHelpDialog",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:ok ok} event of this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachSelectionChange",
          "visibility": "public",
          "since": "1.32",
          "returnValue": {
            "type": "sap.ui.comp.valuehelpdialog.ValueHelpDialog",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:selectionChange selectionChange} event of this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachTokenRemove",
          "visibility": "public",
          "since": "1.32",
          "returnValue": {
            "type": "sap.ui.comp.valuehelpdialog.ValueHelpDialog",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:tokenRemove tokenRemove} event of this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachUpdateSelection",
          "visibility": "public",
          "since": "1.32",
          "returnValue": {
            "type": "sap.ui.comp.valuehelpdialog.ValueHelpDialog",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:updateSelection updateSelection} event of this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.comp.valuehelpdialog.ValueHelpDialog with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.m.Dialog.extend}."
        },
        {
          "name": "fireCancel",
          "visibility": "protected",
          "since": "1.24",
          "returnValue": {
            "type": "sap.ui.comp.valuehelpdialog.ValueHelpDialog",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:cancel cancel} to attached listeners."
        },
        {
          "name": "fireOk",
          "visibility": "protected",
          "since": "1.24",
          "returnValue": {
            "type": "sap.ui.comp.valuehelpdialog.ValueHelpDialog",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "tokens": {
                  "name": "tokens",
                  "type": "sap.m.Token[]",
                  "optional": true,
                  "description": "The array of tokens created or modified on the ValueHelpDialog."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:ok ok} to attached listeners."
        },
        {
          "name": "fireSelectionChange",
          "visibility": "protected",
          "since": "1.32",
          "returnValue": {
            "type": "sap.ui.comp.valuehelpdialog.ValueHelpDialog",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "tableSelectionParams": {
                  "name": "tableSelectionParams",
                  "type": "object",
                  "optional": true,
                  "description": "The RowSelectionChange event parameter from the hosted table that contains the selected items."
                },
                "updateTokens": {
                  "name": "updateTokens",
                  "type": "object[]",
                  "optional": true,
                  "description": "Returns an array of objects which represents all selected row tokens. The object contains the token key, the row object data from the model, and the information if the token is selected. <code> [{sKey, oRow, bSelect}, ...] </code>"
                },
                "useDefault": {
                  "name": "useDefault",
                  "type": "boolean",
                  "optional": true,
                  "description": "Can be set to <code>true</code> to execute the default behaviour of the ValueHelpDialog."
                },
                "table": {
                  "name": "table",
                  "type": "object",
                  "optional": true,
                  "description": "The table instance used"
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:selectionChange selectionChange} to attached listeners."
        },
        {
          "name": "fireTokenRemove",
          "visibility": "protected",
          "since": "1.32",
          "returnValue": {
            "type": "sap.ui.comp.valuehelpdialog.ValueHelpDialog",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "tokenKeys": {
                  "name": "tokenKeys",
                  "type": "string[]",
                  "optional": true,
                  "description": "The array of token keys that has been removed."
                },
                "useDefault": {
                  "name": "useDefault",
                  "type": "boolean",
                  "optional": true,
                  "description": "Can be set to true to execute the default behaviour of ValueHelpDialog."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:tokenRemove tokenRemove} to attached listeners."
        },
        {
          "name": "fireUpdateSelection",
          "visibility": "protected",
          "since": "1.32",
          "returnValue": {
            "type": "sap.ui.comp.valuehelpdialog.ValueHelpDialog",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "tokenKeys": {
                  "name": "tokenKeys",
                  "type": "string[]",
                  "optional": true,
                  "description": "The array of existing token keys for which the selection in the table has to be updated."
                },
                "useDefault": {
                  "name": "useDefault",
                  "type": "boolean",
                  "optional": true,
                  "description": "Can be set to true to execute the default behavior of ValueHelpDialog."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:updateSelection updateSelection} to attached listeners."
        },
        {
          "name": "getBasicSearchText",
          "visibility": "public",
          "since": "1.24",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>basicSearchText</code>"
          },
          "description": "Gets current value of property {@link #getBasicSearchText basicSearchText}.\n\nDefines the value for the basic search field. The value is set into the basic search field of the filter bar used.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "getDescriptionKey",
          "visibility": "public",
          "since": "1.24",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>descriptionKey</code>"
          },
          "description": "Gets current value of property {@link #getDescriptionKey descriptionKey}.\n\nDefines the key of the column used for the token text.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "getDisplayFormat",
          "visibility": "public",
          "since": "1.24",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>displayFormat</code>"
          },
          "description": "Gets current value of property {@link #getDisplayFormat displayFormat}.\n\nRepresents the display format of the range values. With the <code>displayFormat</code> value UpperCase, the entered value of the range (condition) is converted to uppercase letters.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "getFilterBar",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.comp.filterbar.FilterBar" },
          "description": "Gets content of aggregation {@link #getFilterBar filterBar}.\n\nAllows you to add a {@link sap.ui.comp.filterbar.FilterBar FilterBar} or {@link sap.ui.comp.smartfilterbar.SmartFilterBar SmartFilterBar} control to the value help dialog."
        },
        {
          "name": "getFilterMode",
          "visibility": "public",
          "since": "1.24",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>filterMode</code>"
          },
          "description": "Gets current value of property {@link #getFilterMode filterMode}.\n\nSets the dialog into a filter mode, which only shows ranges (conditions) and hides the tokens.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getKey",
          "visibility": "public",
          "since": "1.24",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>key</code>"
          },
          "description": "Gets current value of property {@link #getKey key}.\n\nDefines the key of the column used for the internal key handling. The value of the column is used for the token key and also to identify the row in the table.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "getKeys",
          "visibility": "public",
          "since": "1.24",
          "returnValue": {
            "type": "string[]",
            "description": "Value of property <code>keys</code>"
          },
          "description": "Gets current value of property {@link #getKeys keys}.\n\nDefines the list of additional keys of the column used for the internal key handling."
        },
        {
          "name": "getMaxExcludeRanges",
          "visibility": "public",
          "since": "1.24",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>maxExcludeRanges</code>"
          },
          "description": "Gets current value of property {@link #getMaxExcludeRanges maxExcludeRanges}.\n\nDefines the maximum number of exclude ranges.\n\nDefault value is <code>-1</code>."
        },
        {
          "name": "getMaxIncludeRanges",
          "visibility": "public",
          "since": "1.24",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>maxIncludeRanges</code>"
          },
          "description": "Gets current value of property {@link #getMaxIncludeRanges maxIncludeRanges}.\n\nDefines the maximum number of include ranges.\n\nDefault value is <code>-1</code>."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.comp.valuehelpdialog.ValueHelpDialog."
        },
        {
          "name": "getSupportMultiselect",
          "visibility": "public",
          "since": "1.24",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>supportMultiselect</code>"
          },
          "description": "Gets current value of property {@link #getSupportMultiselect supportMultiselect}.\n\nEnables multi-selection in the table used.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getSupportRanges",
          "visibility": "public",
          "since": "1.24",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>supportRanges</code>"
          },
          "description": "Gets current value of property {@link #getSupportRanges supportRanges}.\n\nEnables the ranges (conditions) feature in the dialog.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getSupportRangesOnly",
          "visibility": "public",
          "since": "1.24",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>supportRangesOnly</code>"
          },
          "description": "Gets current value of property {@link #getSupportRangesOnly supportRangesOnly}.\n\nIf this property is set to <code>true</code>, the value help dialog only supports the ranges (conditions) feature.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getTable",
          "visibility": "public",
          "since": "1.28",
          "returnValue": {
            "type": "object",
            "description": "the used table instance"
          },
          "description": "Gives access to the internal table instance.",
          "deprecated": {
            "since": "1.60.0",
            "text": "replaced by {@link sap.ui.comp.valuehelpdialog.ValueHelpDialog#getTableAsync} to prevent synchronous calls."
          }
        },
        {
          "name": "getTableAsync",
          "visibility": "public",
          "since": "1.58",
          "returnValue": {
            "type": "Promise",
            "description": "Promise that, if resolved, returns the table object"
          },
          "description": "Gives access to the internal table instance."
        },
        {
          "name": "getTokenDisplayBehaviour",
          "visibility": "public",
          "since": "1.24",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>tokenDisplayBehaviour</code>"
          },
          "description": "Gets current value of property {@link #getTokenDisplayBehaviour tokenDisplayBehaviour}.\n\nRepresents how the item token text should be displayed in ValueHelpDialog. Use one of the valid <code>sap.ui.comp.smartfilterbar.DisplayBehaviour</code> values.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "setBasicSearchText",
          "visibility": "public",
          "since": "1.24",
          "returnValue": {
            "type": "sap.ui.comp.valuehelpdialog.ValueHelpDialog",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sBasicSearchText",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>basicSearchText</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getBasicSearchText basicSearchText}.\n\nDefines the value for the basic search field. The value is set into the basic search field of the filter bar used.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "setDescriptionKey",
          "visibility": "public",
          "since": "1.24",
          "returnValue": {
            "type": "sap.ui.comp.valuehelpdialog.ValueHelpDialog",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sDescriptionKey",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>descriptionKey</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getDescriptionKey descriptionKey}.\n\nDefines the key of the column used for the token text.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "setDisplayFormat",
          "visibility": "public",
          "since": "1.24",
          "returnValue": {
            "type": "sap.ui.comp.valuehelpdialog.ValueHelpDialog",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sDisplayFormat",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>displayFormat</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getDisplayFormat displayFormat}.\n\nRepresents the display format of the range values. With the <code>displayFormat</code> value UpperCase, the entered value of the range (condition) is converted to uppercase letters.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "setExcludeRangeOperations",
          "visibility": "public",
          "since": "1.24",
          "parameters": [
            {
              "name": "aOperation",
              "type": "sap.ui.comp.valuehelpdialog.ValueHelpRangeOperation[]",
              "optional": false,
              "description": "An array of range operations"
            },
            {
              "name": "sType",
              "type": "string",
              "optional": false,
              "description": "the type for which the operations are defined"
            }
          ],
          "description": "Sets the array for the supported exclude range operations."
        },
        {
          "name": "setFilterBar",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.valuehelpdialog.ValueHelpDialog",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oFilterBar",
              "type": "sap.ui.comp.filterbar.FilterBar",
              "optional": false,
              "description": "The filterBar to set"
            }
          ],
          "description": "Sets the aggregated {@link #getFilterBar filterBar}."
        },
        {
          "name": "setFilterMode",
          "visibility": "public",
          "since": "1.24",
          "returnValue": {
            "type": "sap.ui.comp.valuehelpdialog.ValueHelpDialog",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bFilterMode",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>filterMode</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getFilterMode filterMode}.\n\nSets the dialog into a filter mode, which only shows ranges (conditions) and hides the tokens.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setIncludeRangeOperations",
          "visibility": "public",
          "since": "1.24",
          "parameters": [
            {
              "name": "aOperation",
              "type": "sap.ui.comp.valuehelpdialog.ValueHelpRangeOperation[]",
              "optional": false,
              "description": "An array of range operations"
            },
            {
              "name": "sType",
              "type": "string",
              "optional": false,
              "description": "the type for which the operations are defined"
            }
          ],
          "description": "Sets the array for the supported include range operations."
        },
        {
          "name": "setKey",
          "visibility": "public",
          "since": "1.24",
          "returnValue": {
            "type": "sap.ui.comp.valuehelpdialog.ValueHelpDialog",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sKey",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>key</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getKey key}.\n\nDefines the key of the column used for the internal key handling. The value of the column is used for the token key and also to identify the row in the table.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "setKeys",
          "visibility": "public",
          "since": "1.24",
          "returnValue": {
            "type": "sap.ui.comp.valuehelpdialog.ValueHelpDialog",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sKeys",
              "type": "string[]",
              "optional": false,
              "description": "New value for property <code>keys</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getKeys keys}.\n\nDefines the list of additional keys of the column used for the internal key handling.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setMaxExcludeRanges",
          "visibility": "public",
          "since": "1.24",
          "returnValue": {
            "type": "sap.ui.comp.valuehelpdialog.ValueHelpDialog",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sMaxExcludeRanges",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>maxExcludeRanges</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getMaxExcludeRanges maxExcludeRanges}.\n\nDefines the maximum number of exclude ranges.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>-1</code>."
        },
        {
          "name": "setMaxIncludeRanges",
          "visibility": "public",
          "since": "1.24",
          "returnValue": {
            "type": "sap.ui.comp.valuehelpdialog.ValueHelpDialog",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sMaxIncludeRanges",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>maxIncludeRanges</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getMaxIncludeRanges maxIncludeRanges}.\n\nDefines the maximum number of include ranges.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>-1</code>."
        },
        {
          "name": "setRangeKeyFields",
          "visibility": "public",
          "since": "1.24",
          "parameters": [
            {
              "name": "aRangeKeyFields",
              "type": "object[]",
              "optional": false,
              "description": "An array of range KeyFields <code>[{key: \"CompanyCode\", label: \"ID\"}, {key:\"CompanyName\", label : \"Name\"}]</code>"
            }
          ],
          "description": "Sets a RangeKeyFields array. This method allows you to specify the KeyFields for the ranges. You can set an array of objects with Key and Label properties to define the key fields."
        },
        {
          "name": "setSupportMultiselect",
          "visibility": "public",
          "since": "1.24",
          "returnValue": {
            "type": "sap.ui.comp.valuehelpdialog.ValueHelpDialog",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bSupportMultiselect",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>supportMultiselect</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSupportMultiselect supportMultiselect}.\n\nEnables multi-selection in the table used.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setSupportRanges",
          "visibility": "public",
          "since": "1.24",
          "returnValue": {
            "type": "sap.ui.comp.valuehelpdialog.ValueHelpDialog",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bSupportRanges",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>supportRanges</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSupportRanges supportRanges}.\n\nEnables the ranges (conditions) feature in the dialog.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setSupportRangesOnly",
          "visibility": "public",
          "since": "1.24",
          "returnValue": {
            "type": "sap.ui.comp.valuehelpdialog.ValueHelpDialog",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bSupportRangesOnly",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>supportRangesOnly</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSupportRangesOnly supportRangesOnly}.\n\nIf this property is set to <code>true</code>, the value help dialog only supports the ranges (conditions) feature.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setTable",
          "visibility": "public",
          "since": "1.32",
          "parameters": [
            {
              "name": "oTable",
              "type": "object",
              "optional": false,
              "description": "The used table control instance"
            }
          ],
          "description": "Sets the table used in the value help dialog. If not used, the dialog creates a sap.ui.table.Table or sap.m.Table instance internally."
        },
        {
          "name": "setTokenDisplayBehaviour",
          "visibility": "public",
          "since": "1.24",
          "returnValue": {
            "type": "sap.ui.comp.valuehelpdialog.ValueHelpDialog",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sTokenDisplayBehaviour",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>tokenDisplayBehaviour</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getTokenDisplayBehaviour tokenDisplayBehaviour}.\n\nRepresents how the item token text should be displayed in ValueHelpDialog. Use one of the valid <code>sap.ui.comp.smartfilterbar.DisplayBehaviour</code> values.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "setTokens",
          "visibility": "public",
          "since": "1.24",
          "parameters": [
            {
              "name": "aTokens",
              "type": "sap.m.Token[]",
              "optional": false,
              "description": "An array of token controls"
            }
          ],
          "description": "Sets the array of tokens. The <code>sap.m.Tokens</code> are added to the dialog tokenizer Selected Items or Excluded Items. Normal tokens are added to the Selected Items tokenizer only and are selected in the table. <code> new sap.m.Token({key: \"0001\", text:\"SAP A.G. (0001)\"}); </code> Tokens with the extra data with value 'range' are handled as range tokens or exclude range tokens. <code> new sap.m.Token({key: \"i1\", text: \"ID: a..z\"}).data(\"range\", { \"exclude\": false, \"operation\": sap.ui.comp.valuehelpdialog.ValueHelpRangeOperation.BT, \"keyField\": \"CompanyCode\", \"value1\": \"a\", \"value2\": \"z\"}); </code> The selected items or range tokens are returned in the event parameters of the Ok event."
        },
        {
          "name": "update",
          "visibility": "public",
          "since": "1.24",
          "description": "Updates the selection of rows in the table. This function must be called after a first binding or binding update of the table. It will set a table row as selected if a token for this row exists."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.ui.comp.valuehelpdialog.ValueHelpRangeOperation",
      "basename": "ValueHelpRangeOperation",
      "resource": "sap/ui/comp/library.js",
      "module": "sap/ui/comp/library",
      "export": "valuehelpdialog.ValueHelpRangeOperation",
      "static": true,
      "visibility": "public",
      "description": "The range operations supported by the <code>ValueHelpDialog</code> control.",
      "properties": [
        {
          "name": "BT",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The Between operation for the ranges."
        },
        {
          "name": "Contains",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The Contains operation for the ranges."
        },
        {
          "name": "EndsWith",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The EndsWith operation for the ranges."
        },
        {
          "name": "EQ",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The Equals operation for the ranges."
        },
        {
          "name": "GE",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The Between or equals operation for the ranges."
        },
        {
          "name": "GT",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The Greater operation for the ranges."
        },
        {
          "name": "LE",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The Less or equals operation for the ranges."
        },
        {
          "name": "LT",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The Less operation for the ranges."
        },
        {
          "name": "StartsWith",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The StartsWith operation for the ranges."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.comp.variants.EditableVariantItem",
      "basename": "EditableVariantItem",
      "resource": "sap/ui/comp/variants/EditableVariantItem.js",
      "module": "sap/ui/comp/variants/EditableVariantItem",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.m.ColumnListItem",
      "description": "The EditableVariantItem class describes an editable variant list item for the Manage Variants popup.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "key",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.22.0",
            "description": "Key of the List Item",
            "methods": ["getKey", "setKey"]
          },
          {
            "name": "global",
            "type": "boolean",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.26.0",
            "description": "Indicator if a variant is visible for all users.",
            "methods": ["getGlobal", "setGlobal"]
          },
          {
            "name": "lifecyclePackage",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.26.0",
            "description": "ABAP Package the variant is assigned. Used for transport functionality",
            "methods": ["getLifecyclePackage", "setLifecyclePackage"]
          },
          {
            "name": "lifecycleTransportId",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.26.0",
            "description": "Identifier of the transport object the variant is assigned to.",
            "methods": ["getLifecycleTransportId", "setLifecycleTransportId"]
          },
          {
            "name": "namespace",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.26.0",
            "description": "Variant namespace",
            "methods": ["getNamespace", "setNamespace"]
          },
          {
            "name": "readOnly",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "since": "1.26.0",
            "description": "Indication if variant can be changed",
            "methods": ["getReadOnly", "setReadOnly"]
          },
          {
            "name": "accessOptions",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.26.0",
            "description": "Flags for a variant to indicate why it might be read-only",
            "deprecated": {
              "since": "1.28.0",
              "text": "Replaced by property <code>labelReadOnly</code>"
            },
            "methods": ["getAccessOptions", "setAccessOptions"]
          },
          {
            "name": "labelReadOnly",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "since": "1.28.0",
            "description": "Indicates if the variant label can be changed",
            "methods": ["getLabelReadOnly", "setLabelReadOnly"]
          },
          {
            "name": "author",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.38.0",
            "description": "Author of the variant",
            "methods": ["getAuthor", "setAuthor"]
          },
          {
            "name": "favorite",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "since": "1.50.0",
            "description": "Indicates if favorites can be created.",
            "methods": ["getFavorite", "setFavorite"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new variants/EditableVariantItem.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.comp.variants.EditableVariantItem with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.m.ColumnListItem.extend}."
        },
        {
          "name": "getAccessOptions",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>accessOptions</code>"
          },
          "description": "Gets current value of property {@link #getAccessOptions accessOptions}.\n\nFlags for a variant to indicate why it might be read-only",
          "deprecated": {
            "since": "1.28.0",
            "text": "Replaced by property <code>labelReadOnly</code>"
          }
        },
        {
          "name": "getAuthor",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>author</code>"
          },
          "description": "Gets current value of property {@link #getAuthor author}.\n\nAuthor of the variant"
        },
        {
          "name": "getFavorite",
          "visibility": "public",
          "since": "1.50.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>favorite</code>"
          },
          "description": "Gets current value of property {@link #getFavorite favorite}.\n\nIndicates if favorites can be created.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getGlobal",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>global</code>"
          },
          "description": "Gets current value of property {@link #getGlobal global}.\n\nIndicator if a variant is visible for all users."
        },
        {
          "name": "getKey",
          "visibility": "public",
          "since": "1.22.0",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>key</code>"
          },
          "description": "Gets current value of property {@link #getKey key}.\n\nKey of the List Item"
        },
        {
          "name": "getLabelReadOnly",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>labelReadOnly</code>"
          },
          "description": "Gets current value of property {@link #getLabelReadOnly labelReadOnly}.\n\nIndicates if the variant label can be changed\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getLifecyclePackage",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>lifecyclePackage</code>"
          },
          "description": "Gets current value of property {@link #getLifecyclePackage lifecyclePackage}.\n\nABAP Package the variant is assigned. Used for transport functionality"
        },
        {
          "name": "getLifecycleTransportId",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>lifecycleTransportId</code>"
          },
          "description": "Gets current value of property {@link #getLifecycleTransportId lifecycleTransportId}.\n\nIdentifier of the transport object the variant is assigned to."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.comp.variants.EditableVariantItem."
        },
        {
          "name": "getNamespace",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>namespace</code>"
          },
          "description": "Gets current value of property {@link #getNamespace namespace}.\n\nVariant namespace"
        },
        {
          "name": "getReadOnly",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>readOnly</code>"
          },
          "description": "Gets current value of property {@link #getReadOnly readOnly}.\n\nIndication if variant can be changed\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setAccessOptions",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "sap.ui.comp.variants.EditableVariantItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sAccessOptions",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>accessOptions</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getAccessOptions accessOptions}.\n\nFlags for a variant to indicate why it might be read-only\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.",
          "deprecated": {
            "since": "1.28.0",
            "text": "Replaced by property <code>labelReadOnly</code>"
          }
        },
        {
          "name": "setAuthor",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": {
            "type": "sap.ui.comp.variants.EditableVariantItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sAuthor",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>author</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getAuthor author}.\n\nAuthor of the variant\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setFavorite",
          "visibility": "public",
          "since": "1.50.0",
          "returnValue": {
            "type": "sap.ui.comp.variants.EditableVariantItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bFavorite",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>favorite</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getFavorite favorite}.\n\nIndicates if favorites can be created.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setGlobal",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "sap.ui.comp.variants.EditableVariantItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bGlobal",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>global</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getGlobal global}.\n\nIndicator if a variant is visible for all users.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setKey",
          "visibility": "public",
          "since": "1.22.0",
          "returnValue": {
            "type": "sap.ui.comp.variants.EditableVariantItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sKey",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>key</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getKey key}.\n\nKey of the List Item\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setLabelReadOnly",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.variants.EditableVariantItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bLabelReadOnly",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>labelReadOnly</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getLabelReadOnly labelReadOnly}.\n\nIndicates if the variant label can be changed\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setLifecyclePackage",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "sap.ui.comp.variants.EditableVariantItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sLifecyclePackage",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>lifecyclePackage</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getLifecyclePackage lifecyclePackage}.\n\nABAP Package the variant is assigned. Used for transport functionality\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setLifecycleTransportId",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "sap.ui.comp.variants.EditableVariantItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sLifecycleTransportId",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>lifecycleTransportId</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getLifecycleTransportId lifecycleTransportId}.\n\nIdentifier of the transport object the variant is assigned to.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setNamespace",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "sap.ui.comp.variants.EditableVariantItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sNamespace",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>namespace</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getNamespace namespace}.\n\nVariant namespace\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setReadOnly",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "sap.ui.comp.variants.EditableVariantItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bReadOnly",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>readOnly</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getReadOnly readOnly}.\n\nIndication if variant can be changed\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.comp.variants.VariantItem",
      "basename": "VariantItem",
      "resource": "sap/ui/comp/variants/VariantItem.js",
      "module": "sap/ui/comp/variants/VariantItem",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.core.Item",
      "description": "The VariantItem class describes a variant item.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "element",
        "properties": [
          {
            "name": "executeOnSelection",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "since": "1.26.0",
            "description": "Attribute for usage in <code>SmartFilterBar</code>",
            "methods": ["getExecuteOnSelection", "setExecuteOnSelection"]
          },
          {
            "name": "readOnly",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "since": "1.26.0",
            "description": "If set to <code>false</code>, the user is allowed to change the item's data",
            "methods": ["getReadOnly", "setReadOnly"]
          },
          {
            "name": "lifecycleTransportId",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.26.0",
            "description": "Identifier of the transport object the variant is assigned to.",
            "methods": ["getLifecycleTransportId", "setLifecycleTransportId"]
          },
          {
            "name": "global",
            "type": "boolean",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.26.0",
            "description": "Indicator if a variant is visible for all users.",
            "methods": ["getGlobal", "setGlobal"]
          },
          {
            "name": "lifecyclePackage",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.26.0",
            "description": "ABAP package the variant is assigned to. Used for transport functionality.",
            "methods": ["getLifecyclePackage", "setLifecyclePackage"]
          },
          {
            "name": "namespace",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.26.0",
            "description": "Variant namespace",
            "methods": ["getNamespace", "setNamespace"]
          },
          {
            "name": "accessOptions",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.26.0",
            "description": "Flags for a variant to indicate why it might be read-only.",
            "deprecated": {
              "since": "1.28.0",
              "text": "Replaced by property <code>labelReadOnly</code>"
            },
            "methods": ["getAccessOptions", "setAccessOptions"]
          },
          {
            "name": "labelReadOnly",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "since": "1.26.0",
            "description": "Indicates if the variant title can be changed.",
            "methods": ["getLabelReadOnly", "setLabelReadOnly"]
          },
          {
            "name": "author",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.38.0",
            "description": "Author of the variant",
            "methods": ["getAuthor", "setAuthor"]
          },
          {
            "name": "favorite",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "since": "1.50.0",
            "description": "Indicates if favorites can be created.",
            "methods": ["getFavorite", "setFavorite"]
          }
        ],
        "events": [
          {
            "name": "change",
            "visibility": "public",
            "description": "This event is fired when one of the properties is changed.",
            "parameters": {
              "propertyName": {
                "name": "propertyName",
                "type": "string",
                "description": "Name of the changed property"
              }
            },
            "methods": ["attachChange", "detachChange", "fireChange"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new variants/VariantItem.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "change",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "propertyName": {
                      "name": "propertyName",
                      "type": "string",
                      "optional": false,
                      "description": "Name of the changed property"
                    }
                  }
                }
              }
            }
          ],
          "description": "This event is fired when one of the properties is changed."
        }
      ],
      "methods": [
        {
          "name": "attachChange",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.variants.VariantItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.variants.VariantItem</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:change change} event of this <code>sap.ui.comp.variants.VariantItem</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.variants.VariantItem</code> itself.\n\nThis event is fired when one of the properties is changed."
        },
        {
          "name": "detachChange",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.comp.variants.VariantItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:change change} event of this <code>sap.ui.comp.variants.VariantItem</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.comp.variants.VariantItem with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Item.extend}."
        },
        {
          "name": "fireChange",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.comp.variants.VariantItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "propertyName": {
                  "name": "propertyName",
                  "type": "string",
                  "optional": true,
                  "description": "Name of the changed property"
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:change change} to attached listeners."
        },
        {
          "name": "getAccessOptions",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>accessOptions</code>"
          },
          "description": "Gets current value of property {@link #getAccessOptions accessOptions}.\n\nFlags for a variant to indicate why it might be read-only.",
          "deprecated": {
            "since": "1.28.0",
            "text": "Replaced by property <code>labelReadOnly</code>"
          }
        },
        {
          "name": "getAuthor",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>author</code>"
          },
          "description": "Gets current value of property {@link #getAuthor author}.\n\nAuthor of the variant"
        },
        {
          "name": "getExecuteOnSelection",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>executeOnSelection</code>"
          },
          "description": "Gets current value of property {@link #getExecuteOnSelection executeOnSelection}.\n\nAttribute for usage in <code>SmartFilterBar</code>\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getFavorite",
          "visibility": "public",
          "since": "1.50.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>favorite</code>"
          },
          "description": "Gets current value of property {@link #getFavorite favorite}.\n\nIndicates if favorites can be created.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getGlobal",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>global</code>"
          },
          "description": "Gets current value of property {@link #getGlobal global}.\n\nIndicator if a variant is visible for all users."
        },
        {
          "name": "getLabelReadOnly",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>labelReadOnly</code>"
          },
          "description": "Gets current value of property {@link #getLabelReadOnly labelReadOnly}.\n\nIndicates if the variant title can be changed.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getLifecyclePackage",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>lifecyclePackage</code>"
          },
          "description": "Gets current value of property {@link #getLifecyclePackage lifecyclePackage}.\n\nABAP package the variant is assigned to. Used for transport functionality."
        },
        {
          "name": "getLifecycleTransportId",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>lifecycleTransportId</code>"
          },
          "description": "Gets current value of property {@link #getLifecycleTransportId lifecycleTransportId}.\n\nIdentifier of the transport object the variant is assigned to."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.comp.variants.VariantItem."
        },
        {
          "name": "getNamespace",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>namespace</code>"
          },
          "description": "Gets current value of property {@link #getNamespace namespace}.\n\nVariant namespace"
        },
        {
          "name": "getReadOnly",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>readOnly</code>"
          },
          "description": "Gets current value of property {@link #getReadOnly readOnly}.\n\nIf set to <code>false</code>, the user is allowed to change the item's data\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setAccessOptions",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "sap.ui.comp.variants.VariantItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sAccessOptions",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>accessOptions</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getAccessOptions accessOptions}.\n\nFlags for a variant to indicate why it might be read-only.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.",
          "deprecated": {
            "since": "1.28.0",
            "text": "Replaced by property <code>labelReadOnly</code>"
          }
        },
        {
          "name": "setAuthor",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": {
            "type": "sap.ui.comp.variants.VariantItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sAuthor",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>author</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getAuthor author}.\n\nAuthor of the variant\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setExecuteOnSelection",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "sap.ui.comp.variants.VariantItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bExecuteOnSelection",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>executeOnSelection</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getExecuteOnSelection executeOnSelection}.\n\nAttribute for usage in <code>SmartFilterBar</code>\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setFavorite",
          "visibility": "public",
          "since": "1.50.0",
          "returnValue": {
            "type": "sap.ui.comp.variants.VariantItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bFavorite",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>favorite</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getFavorite favorite}.\n\nIndicates if favorites can be created.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setGlobal",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "sap.ui.comp.variants.VariantItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bGlobal",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>global</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getGlobal global}.\n\nIndicator if a variant is visible for all users.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setLabelReadOnly",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "sap.ui.comp.variants.VariantItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bLabelReadOnly",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>labelReadOnly</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getLabelReadOnly labelReadOnly}.\n\nIndicates if the variant title can be changed.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setLifecyclePackage",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "sap.ui.comp.variants.VariantItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sLifecyclePackage",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>lifecyclePackage</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getLifecyclePackage lifecyclePackage}.\n\nABAP package the variant is assigned to. Used for transport functionality.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setLifecycleTransportId",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "sap.ui.comp.variants.VariantItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sLifecycleTransportId",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>lifecycleTransportId</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getLifecycleTransportId lifecycleTransportId}.\n\nIdentifier of the transport object the variant is assigned to.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setNamespace",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "sap.ui.comp.variants.VariantItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sNamespace",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>namespace</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getNamespace namespace}.\n\nVariant namespace\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setReadOnly",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "sap.ui.comp.variants.VariantItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bReadOnly",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>readOnly</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getReadOnly readOnly}.\n\nIf set to <code>false</code>, the user is allowed to change the item's data\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setText",
          "visibility": "public",
          "parameters": [
            {
              "name": "bVisible",
              "type": "boolean",
              "optional": false,
              "description": "State of visibility"
            }
          ],
          "description": "Setter for visible property."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.comp.variants.VariantManagement",
      "basename": "VariantManagement",
      "resource": "sap/ui/comp/variants/VariantManagement.js",
      "module": "sap/ui/comp/variants/VariantManagement",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.core.Control",
      "implements": ["sap.m.IOverflowToolbarContent"],
      "description": "The VariantManagement control can be used to manage variants, such as filter bar variants or table variants.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "initialSelectionKey",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.22.0",
            "description": "Enables the setting of the initially selected variant.",
            "methods": ["getInitialSelectionKey", "setInitialSelectionKey"]
          },
          {
            "name": "enabled",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "since": "1.22.0",
            "description": "Can be set to true or false depending on whether you want to enable or disable the control.",
            "methods": ["getEnabled", "setEnabled"]
          },
          {
            "name": "defaultVariantKey",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.22.0",
            "description": "Provides a string value to set the default variant. Used for the save dialog. Has no effect on the selected variant.",
            "methods": ["getDefaultVariantKey", "setDefaultVariantKey"]
          },
          {
            "name": "selectionKey",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.24.0",
            "description": "The key of the currently selected item. Returns null if the default item list is selected.",
            "methods": ["getSelectionKey", "setSelectionKey"]
          },
          {
            "name": "showCreateTile",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "since": "1.26.0",
            "description": "Indicates that a Create Tile is visible in the Create dialog.",
            "methods": ["getShowCreateTile", "setShowCreateTile"]
          },
          {
            "name": "showExecuteOnSelection",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "since": "1.26.0",
            "description": "Indicates that Execute on Selection is visible in the Save Variant and the Manage Variants dialogs.",
            "methods": [
              "getShowExecuteOnSelection",
              "setShowExecuteOnSelection"
            ]
          },
          {
            "name": "showShare",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "since": "1.26.0",
            "description": "Indicates that the Public checkbox is visible in the Save View and the Manage Views dialogs. Selecting this checkbox allows you to share variants with other users.",
            "methods": ["getShowShare", "setShowShare"]
          },
          {
            "name": "showSetAsDefault",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "since": "1.44.0",
            "description": "Indicates that set as default is visible in the Save Variant and the Manage Variants dialogs.",
            "methods": ["getShowSetAsDefault", "setShowSetAsDefault"]
          },
          {
            "name": "lifecycleSupport",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "since": "1.26.0",
            "description": "Enables the lifecycle support. If set to true, the VariantManagement control handles the transport information for shared variants.",
            "methods": ["getLifecycleSupport", "setLifecycleSupport"]
          },
          {
            "name": "standardItemText",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.28.0",
            "description": "Overwrites the default Standard variant title.",
            "methods": ["getStandardItemText", "setStandardItemText"]
          },
          {
            "name": "useFavorites",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "since": "1.50.0",
            "description": "Indicates that the 'Favorites' feature is used. Only variants marked as favorites will be displayed in the variant list.",
            "methods": ["getUseFavorites", "setUseFavorites"]
          },
          {
            "name": "inErrorState",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "since": "1.52.0",
            "description": "Indicates that the control is in error state. If set to <code>true</code> error message will be displayed whenever the variant is opened.",
            "methods": ["getInErrorState", "setInErrorState"]
          }
        ],
        "aggregations": [
          {
            "name": "items",
            "singularName": "item",
            "type": "sap.ui.core.Item",
            "cardinality": "0..n",
            "visibility": "public",
            "since": "1.22.0",
            "description": "Items displayed by the <code>VariantManagement</code> control.",
            "deprecated": {
              "since": "1.26.0",
              "text": "Replaced by association <code>variantItems</code>"
            },
            "methods": [
              "getItems",
              "destroyItems",
              "insertItem",
              "addItem",
              "removeItem",
              "indexOfItem",
              "removeAllItems"
            ]
          },
          {
            "name": "variantItems",
            "singularName": "variantItem",
            "type": "sap.ui.comp.variants.VariantItem",
            "cardinality": "0..n",
            "visibility": "public",
            "since": "1.26.0",
            "description": "Variant items displayed by the <code>VariantManagement</code> control.",
            "methods": [
              "getVariantItems",
              "destroyVariantItems",
              "insertVariantItem",
              "addVariantItem",
              "removeVariantItem",
              "indexOfVariantItem",
              "removeAllVariantItems"
            ]
          }
        ],
        "defaultAggregation": "items",
        "events": [
          {
            "name": "save",
            "visibility": "public",
            "since": "1.22.0",
            "description": "This event is fired when the Save Variant dialog is closed with OK for a variant.",
            "parameters": {
              "name": {
                "name": "name",
                "type": "string",
                "description": "The variant title"
              },
              "overwrite": {
                "name": "overwrite",
                "type": "boolean",
                "description": "Indicates if an existing variant is overwritten or if a new variant is created"
              },
              "key": {
                "name": "key",
                "type": "string",
                "description": "The variant key"
              },
              "exe": {
                "name": "exe",
                "type": "boolean",
                "description": "The Execute on Selection indicator"
              },
              "def": {
                "name": "def",
                "type": "boolean",
                "description": "The default variant indicator"
              },
              "global": {
                "name": "global",
                "type": "boolean",
                "description": "The shared variant indicator"
              },
              "lifecyclePackage": {
                "name": "lifecyclePackage",
                "type": "string",
                "description": "The package name"
              },
              "lifecycleTransportId": {
                "name": "lifecycleTransportId",
                "type": "string",
                "description": "The transport ID"
              }
            },
            "methods": ["attachSave", "detachSave", "fireSave"]
          },
          {
            "name": "manage",
            "visibility": "public",
            "since": "1.22.0",
            "description": "This event is fired when users apply changes to variants in the Manage Variants dialog.",
            "parameters": {
              "renamed": {
                "name": "renamed",
                "type": "string[]",
                "description": "List of changed variant keys"
              },
              "deleted": {
                "name": "deleted",
                "type": "string[]",
                "description": "List of deleted variant keys"
              },
              "exe": {
                "name": "exe",
                "type": "object[]",
                "description": "List of variant keys and the associated Execute on Selection indicator"
              },
              "def": {
                "name": "def",
                "type": "boolean",
                "description": "The default variant key"
              }
            },
            "methods": ["attachManage", "detachManage", "fireManage"]
          },
          {
            "name": "select",
            "visibility": "public",
            "since": "1.22.0",
            "description": "This event is fired when a new variant is selected.",
            "parameters": {
              "key": {
                "name": "key",
                "type": "string",
                "description": "The variant key"
              }
            },
            "methods": ["attachSelect", "detachSelect", "fireSelect"]
          }
        ],
        "designtime": "sap/ui/comp/designtime/variants/VariantManagement.designtime"
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new VariantManagement.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "manage",
          "visibility": "public",
          "since": "1.22.0",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "renamed": {
                      "name": "renamed",
                      "type": "string[]",
                      "optional": false,
                      "description": "List of changed variant keys"
                    },
                    "deleted": {
                      "name": "deleted",
                      "type": "string[]",
                      "optional": false,
                      "description": "List of deleted variant keys"
                    },
                    "exe": {
                      "name": "exe",
                      "type": "object[]",
                      "optional": false,
                      "description": "List of variant keys and the associated Execute on Selection indicator"
                    },
                    "def": {
                      "name": "def",
                      "type": "boolean",
                      "optional": false,
                      "description": "The default variant key"
                    }
                  }
                }
              }
            }
          ],
          "description": "This event is fired when users apply changes to variants in the Manage Variants dialog."
        },
        {
          "name": "save",
          "visibility": "public",
          "since": "1.22.0",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "name": {
                      "name": "name",
                      "type": "string",
                      "optional": false,
                      "description": "The variant title"
                    },
                    "overwrite": {
                      "name": "overwrite",
                      "type": "boolean",
                      "optional": false,
                      "description": "Indicates if an existing variant is overwritten or if a new variant is created"
                    },
                    "key": {
                      "name": "key",
                      "type": "string",
                      "optional": false,
                      "description": "The variant key"
                    },
                    "exe": {
                      "name": "exe",
                      "type": "boolean",
                      "optional": false,
                      "description": "The Execute on Selection indicator"
                    },
                    "def": {
                      "name": "def",
                      "type": "boolean",
                      "optional": false,
                      "description": "The default variant indicator"
                    },
                    "global": {
                      "name": "global",
                      "type": "boolean",
                      "optional": false,
                      "description": "The shared variant indicator"
                    },
                    "lifecyclePackage": {
                      "name": "lifecyclePackage",
                      "type": "string",
                      "optional": false,
                      "description": "The package name"
                    },
                    "lifecycleTransportId": {
                      "name": "lifecycleTransportId",
                      "type": "string",
                      "optional": false,
                      "description": "The transport ID"
                    }
                  }
                }
              }
            }
          ],
          "description": "This event is fired when the Save Variant dialog is closed with OK for a variant."
        },
        {
          "name": "select",
          "visibility": "public",
          "since": "1.22.0",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "key": {
                      "name": "key",
                      "type": "string",
                      "optional": false,
                      "description": "The variant key"
                    }
                  }
                }
              }
            }
          ],
          "description": "This event is fired when a new variant is selected."
        }
      ],
      "methods": [
        {
          "name": "addItem",
          "visibility": "public",
          "since": "1.22.0",
          "returnValue": {
            "type": "sap.ui.comp.variants.VariantManagement",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oItem",
              "type": "sap.ui.core.Item",
              "optional": false,
              "description": "The item to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some item to the aggregation {@link #getItems items}.",
          "deprecated": {
            "since": "1.26.0",
            "text": "Replaced by association <code>variantItems</code>"
          }
        },
        {
          "name": "addVariantItem",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "sap.ui.comp.variants.VariantManagement",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oVariantItem",
              "type": "sap.ui.comp.variants.VariantItem",
              "optional": false,
              "description": "The variantItem to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some variantItem to the aggregation {@link #getVariantItems variantItems}."
        },
        {
          "name": "attachManage",
          "visibility": "public",
          "since": "1.22.0",
          "returnValue": {
            "type": "sap.ui.comp.variants.VariantManagement",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.variants.VariantManagement</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:manage manage} event of this <code>sap.ui.comp.variants.VariantManagement</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.variants.VariantManagement</code> itself.\n\nThis event is fired when users apply changes to variants in the Manage Variants dialog."
        },
        {
          "name": "attachSave",
          "visibility": "public",
          "since": "1.22.0",
          "returnValue": {
            "type": "sap.ui.comp.variants.VariantManagement",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.variants.VariantManagement</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:save save} event of this <code>sap.ui.comp.variants.VariantManagement</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.variants.VariantManagement</code> itself.\n\nThis event is fired when the Save Variant dialog is closed with OK for a variant."
        },
        {
          "name": "attachSelect",
          "visibility": "public",
          "since": "1.22.0",
          "returnValue": {
            "type": "sap.ui.comp.variants.VariantManagement",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.variants.VariantManagement</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:select select} event of this <code>sap.ui.comp.variants.VariantManagement</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.comp.variants.VariantManagement</code> itself.\n\nThis event is fired when a new variant is selected."
        },
        {
          "name": "clearVariantSelection",
          "visibility": "public",
          "since": "1.22.0",
          "ui5-metamodel": true,
          "description": "Removes the current variant selection and resets to default value."
        },
        {
          "name": "currentVariantGetModified",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "The dirty state of the current variant"
          },
          "description": "Gets the dirty flag of the current variant."
        },
        {
          "name": "currentVariantSetModified",
          "visibility": "public",
          "parameters": [
            {
              "name": "bFlag",
              "type": "boolean",
              "optional": false,
              "description": "The value indicating the dirty state of the current variant"
            }
          ],
          "description": "Sets the dirty flag of the current variant."
        },
        {
          "name": "destroyItems",
          "visibility": "public",
          "since": "1.22.0",
          "returnValue": {
            "type": "sap.ui.comp.variants.VariantManagement",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the items in the aggregation {@link #getItems items}.",
          "deprecated": {
            "since": "1.26.0",
            "text": "Replaced by association <code>variantItems</code>"
          }
        },
        {
          "name": "destroyVariantItems",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "sap.ui.comp.variants.VariantManagement",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the variantItems in the aggregation {@link #getVariantItems variantItems}."
        },
        {
          "name": "detachManage",
          "visibility": "public",
          "since": "1.22.0",
          "returnValue": {
            "type": "sap.ui.comp.variants.VariantManagement",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:manage manage} event of this <code>sap.ui.comp.variants.VariantManagement</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachSave",
          "visibility": "public",
          "since": "1.22.0",
          "returnValue": {
            "type": "sap.ui.comp.variants.VariantManagement",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:save save} event of this <code>sap.ui.comp.variants.VariantManagement</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachSelect",
          "visibility": "public",
          "since": "1.22.0",
          "returnValue": {
            "type": "sap.ui.comp.variants.VariantManagement",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:select select} event of this <code>sap.ui.comp.variants.VariantManagement</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.comp.variants.VariantManagement with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "fireManage",
          "visibility": "protected",
          "since": "1.22.0",
          "returnValue": {
            "type": "sap.ui.comp.variants.VariantManagement",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "renamed": {
                  "name": "renamed",
                  "type": "string[]",
                  "optional": true,
                  "description": "List of changed variant keys"
                },
                "deleted": {
                  "name": "deleted",
                  "type": "string[]",
                  "optional": true,
                  "description": "List of deleted variant keys"
                },
                "exe": {
                  "name": "exe",
                  "type": "object[]",
                  "optional": true,
                  "description": "List of variant keys and the associated Execute on Selection indicator"
                },
                "def": {
                  "name": "def",
                  "type": "boolean",
                  "optional": true,
                  "description": "The default variant key"
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:manage manage} to attached listeners."
        },
        {
          "name": "fireSave",
          "visibility": "protected",
          "since": "1.22.0",
          "returnValue": {
            "type": "sap.ui.comp.variants.VariantManagement",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "name": {
                  "name": "name",
                  "type": "string",
                  "optional": true,
                  "description": "The variant title"
                },
                "overwrite": {
                  "name": "overwrite",
                  "type": "boolean",
                  "optional": true,
                  "description": "Indicates if an existing variant is overwritten or if a new variant is created"
                },
                "key": {
                  "name": "key",
                  "type": "string",
                  "optional": true,
                  "description": "The variant key"
                },
                "exe": {
                  "name": "exe",
                  "type": "boolean",
                  "optional": true,
                  "description": "The Execute on Selection indicator"
                },
                "def": {
                  "name": "def",
                  "type": "boolean",
                  "optional": true,
                  "description": "The default variant indicator"
                },
                "global": {
                  "name": "global",
                  "type": "boolean",
                  "optional": true,
                  "description": "The shared variant indicator"
                },
                "lifecyclePackage": {
                  "name": "lifecyclePackage",
                  "type": "string",
                  "optional": true,
                  "description": "The package name"
                },
                "lifecycleTransportId": {
                  "name": "lifecycleTransportId",
                  "type": "string",
                  "optional": true,
                  "description": "The transport ID"
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:save save} to attached listeners."
        },
        {
          "name": "fireSelect",
          "visibility": "protected",
          "since": "1.22.0",
          "returnValue": {
            "type": "sap.ui.comp.variants.VariantManagement",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "key": {
                  "name": "key",
                  "type": "string",
                  "optional": true,
                  "description": "The variant key"
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:select select} to attached listeners."
        },
        {
          "name": "getDefaultVariantKey",
          "visibility": "public",
          "since": "1.22.0",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>defaultVariantKey</code>"
          },
          "description": "Gets current value of property {@link #getDefaultVariantKey defaultVariantKey}.\n\nProvides a string value to set the default variant. Used for the save dialog. Has no effect on the selected variant."
        },
        {
          "name": "getEnabled",
          "visibility": "public",
          "since": "1.22.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>enabled</code>"
          },
          "description": "Gets current value of property {@link #getEnabled enabled}.\n\nCan be set to true or false depending on whether you want to enable or disable the control.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getInErrorState",
          "visibility": "public",
          "since": "1.52.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>inErrorState</code>"
          },
          "description": "Gets current value of property {@link #getInErrorState inErrorState}.\n\nIndicates that the control is in error state. If set to <code>true</code> error message will be displayed whenever the variant is opened.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getInitialSelectionKey",
          "visibility": "public",
          "since": "1.22.0",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>initialSelectionKey</code>"
          },
          "description": "Gets current value of property {@link #getInitialSelectionKey initialSelectionKey}.\n\nEnables the setting of the initially selected variant."
        },
        {
          "name": "getItems",
          "visibility": "public",
          "since": "1.22.0",
          "returnValue": { "type": "sap.ui.core.Item[]" },
          "description": "Gets content of aggregation {@link #getItems items}.\n\nItems displayed by the <code>VariantManagement</code> control.",
          "deprecated": {
            "since": "1.26.0",
            "text": "Replaced by association <code>variantItems</code>"
          }
        },
        {
          "name": "getLifecycleSupport",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>lifecycleSupport</code>"
          },
          "description": "Gets current value of property {@link #getLifecycleSupport lifecycleSupport}.\n\nEnables the lifecycle support. If set to true, the VariantManagement control handles the transport information for shared variants.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.comp.variants.VariantManagement."
        },
        {
          "name": "getOverflowToolbarConfig",
          "visibility": "protected",
          "returnValue": {
            "type": "object",
            "description": "Configuration information for the <code>sap.m.IOverflowToolbarContent</code> interface."
          },
          "description": "Required by the {@link sap.m.IOverflowToolbarContent} interface. Registers invalidations event which is fired when width of the control is changed."
        },
        {
          "name": "getSelectionKey",
          "visibility": "public",
          "since": "1.24.0",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>selectionKey</code>"
          },
          "description": "Gets current value of property {@link #getSelectionKey selectionKey}.\n\nThe key of the currently selected item. Returns null if the default item list is selected."
        },
        {
          "name": "getShowCreateTile",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showCreateTile</code>"
          },
          "description": "Gets current value of property {@link #getShowCreateTile showCreateTile}.\n\nIndicates that a Create Tile is visible in the Create dialog.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getShowExecuteOnSelection",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showExecuteOnSelection</code>"
          },
          "description": "Gets current value of property {@link #getShowExecuteOnSelection showExecuteOnSelection}.\n\nIndicates that Execute on Selection is visible in the Save Variant and the Manage Variants dialogs.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getShowSetAsDefault",
          "visibility": "public",
          "since": "1.44.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showSetAsDefault</code>"
          },
          "description": "Gets current value of property {@link #getShowSetAsDefault showSetAsDefault}.\n\nIndicates that set as default is visible in the Save Variant and the Manage Variants dialogs.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getShowShare",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showShare</code>"
          },
          "description": "Gets current value of property {@link #getShowShare showShare}.\n\nIndicates that the Public checkbox is visible in the Save View and the Manage Views dialogs. Selecting this checkbox allows you to share variants with other users.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getStandardItemText",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>standardItemText</code>"
          },
          "description": "Gets current value of property {@link #getStandardItemText standardItemText}.\n\nOverwrites the default Standard variant title."
        },
        {
          "name": "getUseFavorites",
          "visibility": "public",
          "since": "1.50.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>useFavorites</code>"
          },
          "description": "Gets current value of property {@link #getUseFavorites useFavorites}.\n\nIndicates that the 'Favorites' feature is used. Only variants marked as favorites will be displayed in the variant list.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getVariantItems",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": { "type": "sap.ui.comp.variants.VariantItem[]" },
          "description": "Gets content of aggregation {@link #getVariantItems variantItems}.\n\nVariant items displayed by the <code>VariantManagement</code> control."
        },
        {
          "name": "indexOfItem",
          "visibility": "public",
          "since": "1.22.0",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oItem",
              "type": "sap.ui.core.Item",
              "optional": false,
              "description": "The item whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.ui.core.Item</code> in the aggregation {@link #getItems items}. and returns its index if found or -1 otherwise.",
          "deprecated": {
            "since": "1.26.0",
            "text": "Replaced by association <code>variantItems</code>"
          }
        },
        {
          "name": "indexOfVariantItem",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oVariantItem",
              "type": "sap.ui.comp.variants.VariantItem",
              "optional": false,
              "description": "The variantItem whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.ui.comp.variants.VariantItem</code> in the aggregation {@link #getVariantItems variantItems}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "insertItem",
          "visibility": "public",
          "since": "1.22.0",
          "returnValue": {
            "type": "sap.ui.comp.variants.VariantManagement",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oItem",
              "type": "sap.ui.core.Item",
              "optional": false,
              "description": "The item to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the item should be inserted at; for a negative value of <code>iIndex</code>, the item is inserted at position 0; for a value greater than the current size of the aggregation, the item is inserted at the last position"
            }
          ],
          "description": "Inserts a item into the aggregation {@link #getItems items}.",
          "deprecated": {
            "since": "1.26.0",
            "text": "Replaced by association <code>variantItems</code>"
          }
        },
        {
          "name": "insertVariantItem",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "sap.ui.comp.variants.VariantManagement",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oVariantItem",
              "type": "sap.ui.comp.variants.VariantItem",
              "optional": false,
              "description": "The variantItem to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the variantItem should be inserted at; for a negative value of <code>iIndex</code>, the variantItem is inserted at position 0; for a value greater than the current size of the aggregation, the variantItem is inserted at the last position"
            }
          ],
          "description": "Inserts a variantItem into the aggregation {@link #getVariantItems variantItems}."
        },
        {
          "name": "removeAllItems",
          "visibility": "public",
          "since": "1.22.0",
          "returnValue": {
            "type": "sap.ui.core.Item[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getItems items}.\n\nAdditionally, it unregisters them from the hosting UIArea.",
          "deprecated": {
            "since": "1.26.0",
            "text": "Replaced by association <code>variantItems</code>"
          }
        },
        {
          "name": "removeAllVariantItems",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "sap.ui.comp.variants.VariantItem[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getVariantItems variantItems}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeItem",
          "visibility": "public",
          "since": "1.22.0",
          "returnValue": {
            "type": "sap.ui.core.Item",
            "description": "The removed item or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vItem",
              "type": "int|string|sap.ui.core.Item",
              "optional": false,
              "description": "The item to remove or its index or id"
            }
          ],
          "description": "Removes a item from the aggregation {@link #getItems items}.",
          "deprecated": {
            "since": "1.26.0",
            "text": "Replaced by association <code>variantItems</code>"
          }
        },
        {
          "name": "removeVariantItem",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "sap.ui.comp.variants.VariantItem",
            "description": "The removed variantItem or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vVariantItem",
              "type": "int|string|sap.ui.comp.variants.VariantItem",
              "optional": false,
              "description": "The variantItem to remove or its index or id"
            }
          ],
          "description": "Removes a variantItem from the aggregation {@link #getVariantItems variantItems}."
        },
        {
          "name": "setBackwardCompatibility",
          "visibility": "public",
          "since": "1.48.0",
          "parameters": [
            {
              "name": "bFlag",
              "type": "boolean",
              "optional": false,
              "description": "defines the behavior: <code>true</code> new mode, otherwize 'old' mode."
            }
          ],
          "description": "Defines the internal mode. The VariantManagement is able to support two different modes:<br> 1. the mode with standard entry displayed as 'Default' and<br> 2. the mode with standard entry displayed as 'Standard'.<br> The 'Default* display is the initial mode.<br> <code>Note:</code> this method has to be executed, before any items are assigned to the VariantManagement control!"
        },
        {
          "name": "setDefaultVariantKey",
          "visibility": "public",
          "since": "1.22.0",
          "returnValue": {
            "type": "sap.ui.comp.variants.VariantManagement",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sDefaultVariantKey",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>defaultVariantKey</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getDefaultVariantKey defaultVariantKey}.\n\nProvides a string value to set the default variant. Used for the save dialog. Has no effect on the selected variant.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setEnabled",
          "visibility": "public",
          "since": "1.22.0",
          "returnValue": {
            "type": "sap.ui.comp.variants.VariantManagement",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bEnabled",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>enabled</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getEnabled enabled}.\n\nCan be set to true or false depending on whether you want to enable or disable the control.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setInErrorState",
          "visibility": "public",
          "since": "1.52.0",
          "returnValue": {
            "type": "sap.ui.comp.variants.VariantManagement",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bInErrorState",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>inErrorState</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getInErrorState inErrorState}.\n\nIndicates that the control is in error state. If set to <code>true</code> error message will be displayed whenever the variant is opened.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setInitialSelectionKey",
          "visibility": "public",
          "since": "1.22.0",
          "returnValue": {
            "type": "sap.ui.comp.variants.VariantManagement",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sInitialSelectionKey",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>initialSelectionKey</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getInitialSelectionKey initialSelectionKey}.\n\nEnables the setting of the initially selected variant.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setLifecycleSupport",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "sap.ui.comp.variants.VariantManagement",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bLifecycleSupport",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>lifecycleSupport</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getLifecycleSupport lifecycleSupport}.\n\nEnables the lifecycle support. If set to true, the VariantManagement control handles the transport information for shared variants.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setSelectionKey",
          "visibility": "public",
          "since": "1.24.0",
          "returnValue": {
            "type": "sap.ui.comp.variants.VariantManagement",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sSelectionKey",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>selectionKey</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSelectionKey selectionKey}.\n\nThe key of the currently selected item. Returns null if the default item list is selected.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setShowCreateTile",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "sap.ui.comp.variants.VariantManagement",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowCreateTile",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showCreateTile</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowCreateTile showCreateTile}.\n\nIndicates that a Create Tile is visible in the Create dialog.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setShowExecuteOnSelection",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "sap.ui.comp.variants.VariantManagement",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowExecuteOnSelection",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showExecuteOnSelection</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowExecuteOnSelection showExecuteOnSelection}.\n\nIndicates that Execute on Selection is visible in the Save Variant and the Manage Variants dialogs.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setShowSetAsDefault",
          "visibility": "public",
          "since": "1.44.0",
          "returnValue": {
            "type": "sap.ui.comp.variants.VariantManagement",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowSetAsDefault",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showSetAsDefault</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowSetAsDefault showSetAsDefault}.\n\nIndicates that set as default is visible in the Save Variant and the Manage Variants dialogs.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setShowShare",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "sap.ui.comp.variants.VariantManagement",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowShare",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showShare</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowShare showShare}.\n\nIndicates that the Public checkbox is visible in the Save View and the Manage Views dialogs. Selecting this checkbox allows you to share variants with other users.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setStandardItemText",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.comp.variants.VariantManagement",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sStandardItemText",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>standardItemText</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getStandardItemText standardItemText}.\n\nOverwrites the default Standard variant title.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setUseFavorites",
          "visibility": "public",
          "since": "1.50.0",
          "returnValue": {
            "type": "sap.ui.comp.variants.VariantManagement",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bUseFavorites",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>useFavorites</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getUseFavorites useFavorites}.\n\nIndicates that the 'Favorites' feature is used. Only variants marked as favorites will be displayed in the variant list.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        }
      ]
    }
  ]
}
