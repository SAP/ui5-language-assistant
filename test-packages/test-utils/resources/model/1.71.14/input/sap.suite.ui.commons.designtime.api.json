{
  "$schema-ref": "http://schemas.sap.com/sapui5/designtime/api.json/1.0",
  "version": "1.71.3",
  "library": "sap.suite.ui.commons",
  "symbols": [
    {
      "kind": "namespace",
      "name": "sap.suite.ui.commons",
      "basename": "commons",
      "resource": "sap/suite/ui/commons/library.js",
      "module": "sap/suite/ui/commons/library",
      "export": "",
      "static": true,
      "visibility": "public",
      "description": "SAP UI library: sap.suite.ui.commons"
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.AriaProperties",
      "basename": "AriaProperties",
      "resource": "sap/suite/ui/commons/AriaProperties.js",
      "module": "sap/suite/ui/commons/AriaProperties",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.65.0",
      "extends": "sap.ui.core.Element",
      "description": "<code>AriaProperties</code> provides ARIA-compliant properties for screen reader software that can be added to any control renderer.",
      "ui5-metadata": {
        "stereotype": "element",
        "properties": [
          {
            "name": "label",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Defines a string value that labels the current element. See the related <code>labelledBy</code> property.",
            "methods": ["getLabel", "setLabel"]
          },
          {
            "name": "labelledBy",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Identifies one or more elements that label the current element. See the related <code>label</code> and <code>describedBy</code> properties.",
            "methods": ["getLabelledBy", "setLabelledBy"]
          },
          {
            "name": "describedBy",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Identifies one or more elements that describe the object. See the related <code>labelledBy</code> property.",
            "methods": ["getDescribedBy", "setDescribedBy"]
          },
          {
            "name": "role",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Identifies the element role.",
            "methods": ["getRole", "setRole"]
          },
          {
            "name": "hasPopup",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Indicates that the element has a popup context menu or a submenu.",
            "methods": ["getHasPopup", "setHasPopup"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "description": "Constructor for a new AriaProperties.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.AriaProperties with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
        },
        {
          "name": "getDescribedBy",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>describedBy</code>"
          },
          "description": "Gets current value of property {@link #getDescribedBy describedBy}.\n\nIdentifies one or more elements that describe the object. See the related <code>labelledBy</code> property."
        },
        {
          "name": "getHasPopup",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>hasPopup</code>"
          },
          "description": "Gets current value of property {@link #getHasPopup hasPopup}.\n\nIndicates that the element has a popup context menu or a submenu."
        },
        {
          "name": "getLabel",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>label</code>"
          },
          "description": "Gets current value of property {@link #getLabel label}.\n\nDefines a string value that labels the current element. See the related <code>labelledBy</code> property."
        },
        {
          "name": "getLabelledBy",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>labelledBy</code>"
          },
          "description": "Gets current value of property {@link #getLabelledBy labelledBy}.\n\nIdentifies one or more elements that label the current element. See the related <code>label</code> and <code>describedBy</code> properties."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.AriaProperties."
        },
        {
          "name": "getRole",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>role</code>"
          },
          "description": "Gets current value of property {@link #getRole role}.\n\nIdentifies the element role."
        },
        {
          "name": "setDescribedBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.AriaProperties",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sDescribedBy",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>describedBy</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getDescribedBy describedBy}.\n\nIdentifies one or more elements that describe the object. See the related <code>labelledBy</code> property.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setHasPopup",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.AriaProperties",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sHasPopup",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>hasPopup</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getHasPopup hasPopup}.\n\nIndicates that the element has a popup context menu or a submenu.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setLabel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.AriaProperties",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sLabel",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>label</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getLabel label}.\n\nDefines a string value that labels the current element. See the related <code>labelledBy</code> property.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setLabelledBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.AriaProperties",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sLabelledBy",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>labelledBy</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getLabelledBy labelledBy}.\n\nIdentifies one or more elements that label the current element. See the related <code>label</code> and <code>describedBy</code> properties.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setRole",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.AriaProperties",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sRole",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>role</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getRole role}.\n\nIdentifies the element role.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "writeAriaProperties",
          "visibility": "public",
          "static": true,
          "parameters": [
            {
              "name": "oRm",
              "type": "sap.ui.core.RenderManager",
              "optional": false,
              "description": "The RenderManager that can be used for writing to the render output buffer"
            },
            {
              "name": "oDefaultProperties",
              "type": "object",
              "optional": false,
              "description": "Default ARIA-compliant properties of the control"
            },
            {
              "name": "oAriaProperties",
              "type": "sap.suite.ui.commons.AriaProperties",
              "optional": false,
              "description": "ARIA-compliant properties from data binding"
            }
          ],
          "description": "Adds the provided ARIA-compliant properties to a control."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.BulletChart",
      "basename": "BulletChart",
      "resource": "sap/suite/ui/commons/BulletChart.js",
      "module": "sap/suite/ui/commons/BulletChart",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.suite.ui.microchart.BulletMicroChart",
      "description": "Chart that displays an actual value as a horizontal bar in semantic color on the top of the background bar, the numeric value, the scaling factor, along with the thresholds, and a target value as vertical bars.",
      "deprecated": {
        "since": "1.34",
        "text": "this control is a mere wrapper for sap.suite.ui.microchart.BulletMicroChart."
      },
      "ui5-metamodel": true,
      "ui5-metadata": { "stereotype": "control" },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, automatically generated if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new BulletChart."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.BulletChart with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.suite.ui.microchart.BulletMicroChart.extend}."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.BulletChart."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.BulletChartData",
      "basename": "BulletChartData",
      "resource": "sap/suite/ui/commons/BulletChartData.js",
      "module": "sap/suite/ui/commons/BulletChartData",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.suite.ui.microchart.BulletMicroChartData",
      "description": "Thresholds data holder.",
      "deprecated": {
        "since": "1.34",
        "text": "this control is a mere wrapper for sap.suite.ui.microchart.BulletMicroChartData."
      },
      "ui5-metamodel": true,
      "ui5-metadata": { "stereotype": "element" },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, automatically generated if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new BulletChartData."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.BulletChartData with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.suite.ui.microchart.BulletMicroChartData.extend}."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.BulletChartData."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.suite.ui.commons.BulletChartMode",
      "basename": "BulletChartMode",
      "resource": "sap/suite/ui/commons/library.js",
      "module": "sap/suite/ui/commons/library",
      "export": "BulletChartMode",
      "static": true,
      "visibility": "public",
      "description": "Enumeration of possible BulletChart display modes.",
      "deprecated": {
        "since": "1.34",
        "text": "Deprecated. sap.suite.ui.microchart.BulletMicroChartModeType should be used."
      },
      "ui5-metamodel": true,
      "properties": [
        {
          "name": "Actual",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Displays the Actual value."
        },
        {
          "name": "Delta",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Displays delta between the Actual and Threshold values."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.BusinessCard",
      "basename": "BusinessCard",
      "resource": "sap/suite/ui/commons/BusinessCard.js",
      "module": "sap/suite/ui/commons/BusinessCard",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.core.Control",
      "description": "This control allows you to display business card information including an image, first title (either URL link or text), second title, and multiple text lines.",
      "deprecated": {
        "since": "1.32",
        "text": "Deprecated. Standard Fiori technology should be used."
      },
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "type",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Title of the BusinessCard that describes its type.",
            "methods": ["getType", "setType"]
          },
          {
            "name": "iconPath",
            "type": "sap.ui.core.URI",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "A path to the BusinessCard icon.",
            "methods": ["getIconPath", "setIconPath"]
          },
          {
            "name": "secondTitle",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "A short text line that describes this BusinessCard.",
            "methods": ["getSecondTitle", "setSecondTitle"]
          },
          {
            "name": "width",
            "type": "sap.ui.core.CSSSize",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Width of the BusinessCard. Alternatively, CSS size can be set in %, px, or em.",
            "methods": ["getWidth", "setWidth"]
          },
          {
            "name": "imageTooltip",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "A tooltip that is set for an image.",
            "methods": ["getImageTooltip", "setImageTooltip"]
          }
        ],
        "aggregations": [
          {
            "name": "content",
            "singularName": "content",
            "type": "sap.ui.core.Control",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "The content of the BusinessCard body must be provided by the application developer.",
            "methods": ["getContent", "destroyContent", "setContent"]
          },
          {
            "name": "firstTitle",
            "singularName": "firstTitle",
            "type": "sap.ui.core.Control",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "Any control that can display a title. Content of this control appears at the first position in BusinessCard. Recomended controls: sap.ui.commons.Label and sap.ui.commons.Link.",
            "methods": ["getFirstTitle", "destroyFirstTitle", "setFirstTitle"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new BusinessCard.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "destroyContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.BusinessCard",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the content in the aggregation {@link #getContent content}."
        },
        {
          "name": "destroyFirstTitle",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.BusinessCard",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the firstTitle in the aggregation {@link #getFirstTitle firstTitle}."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.BusinessCard with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "getContent",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.Control" },
          "description": "Gets content of aggregation {@link #getContent content}.\n\nThe content of the BusinessCard body must be provided by the application developer."
        },
        {
          "name": "getFirstTitle",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.Control" },
          "description": "Gets content of aggregation {@link #getFirstTitle firstTitle}.\n\nAny control that can display a title. Content of this control appears at the first position in BusinessCard. Recomended controls: sap.ui.commons.Label and sap.ui.commons.Link."
        },
        {
          "name": "getIconPath",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.URI",
            "description": "Value of property <code>iconPath</code>"
          },
          "description": "Gets current value of property {@link #getIconPath iconPath}.\n\nA path to the BusinessCard icon."
        },
        {
          "name": "getImageTooltip",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>imageTooltip</code>"
          },
          "description": "Gets current value of property {@link #getImageTooltip imageTooltip}.\n\nA tooltip that is set for an image."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.BusinessCard."
        },
        {
          "name": "getSecondTitle",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>secondTitle</code>"
          },
          "description": "Gets current value of property {@link #getSecondTitle secondTitle}.\n\nA short text line that describes this BusinessCard."
        },
        {
          "name": "getType",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>type</code>"
          },
          "description": "Gets current value of property {@link #getType type}.\n\nTitle of the BusinessCard that describes its type."
        },
        {
          "name": "getWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.CSSSize",
            "description": "Value of property <code>width</code>"
          },
          "description": "Gets current value of property {@link #getWidth width}.\n\nWidth of the BusinessCard. Alternatively, CSS size can be set in %, px, or em."
        },
        {
          "name": "setContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.BusinessCard",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oContent",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The content to set"
            }
          ],
          "description": "Sets the aggregated {@link #getContent content}."
        },
        {
          "name": "setFirstTitle",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.BusinessCard",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oFirstTitle",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The firstTitle to set"
            }
          ],
          "description": "Sets the aggregated {@link #getFirstTitle firstTitle}."
        },
        {
          "name": "setIconPath",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.BusinessCard",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sIconPath",
              "type": "sap.ui.core.URI",
              "optional": false,
              "description": "New value for property <code>iconPath</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getIconPath iconPath}.\n\nA path to the BusinessCard icon.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setImageTooltip",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.BusinessCard",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sImageTooltip",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>imageTooltip</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getImageTooltip imageTooltip}.\n\nA tooltip that is set for an image.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setSecondTitle",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.BusinessCard",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sSecondTitle",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>secondTitle</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSecondTitle secondTitle}.\n\nA short text line that describes this BusinessCard.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setType",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.BusinessCard",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sType",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>type</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getType type}.\n\nTitle of the BusinessCard that describes its type.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.BusinessCard",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sWidth",
              "type": "sap.ui.core.CSSSize",
              "optional": false,
              "description": "New value for property <code>width</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getWidth width}.\n\nWidth of the BusinessCard. Alternatively, CSS size can be set in %, px, or em.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.CalculationBuilder",
      "basename": "CalculationBuilder",
      "resource": "sap/suite/ui/commons/CalculationBuilder.js",
      "module": "sap/suite/ui/commons/CalculationBuilder",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.56.0",
      "extends": "sap.ui.core.Control",
      "description": "Calculation Builder allows you to perform arithmetic calculations on constants and variables using standard arithmetic operators as well as most common logical operators and functions.<br> You can customize the sets of variables and functions that are visible in the calculation builder and introduce your own custom functions, as needed.<br> Arithmetic expressions can be entered using a touch-friendly visual editor or a textual editor that provides autocomplete suggestions for variables and checks the expression syntax as you type.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "expression",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Holds the arithmetic expression.<br> Use either this property or aggregation <code>Items</code>. Not both.",
            "methods": ["getExpression", "setExpression"]
          },
          {
            "name": "title",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The title of the calculation builder element.",
            "methods": ["getTitle", "setTitle"]
          },
          {
            "name": "showToolbar",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "description": "Defines whether the toolbar is visible.",
            "methods": ["getShowToolbar", "setShowToolbar"]
          },
          {
            "name": "wrapItemsInExpression",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "description": "Defines whether the expression should be wrapped inside the calculation builder field.<br> If set to <code>false</code>, the expression is rearranged into a single scrollable row.",
            "methods": ["getWrapItemsInExpression", "setWrapItemsInExpression"]
          },
          {
            "name": "layoutType",
            "type": "string",
            "defaultValue": "Default",
            "group": "Misc",
            "visibility": "public",
            "description": "Defines the layout type used for the calculation builder.<br> The layout may include a visual editor, a text editor, or both. In addition, you can set the text editor to be read-only.",
            "methods": ["getLayoutType", "setLayoutType"]
          },
          {
            "name": "showInputToolbar",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "description": "Defines whether the input toolbar is visible.<br> The input toolbar contains operators and functions that can be used in the expression.",
            "methods": ["getShowInputToolbar", "setShowInputToolbar"]
          },
          {
            "name": "readOnly",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "description": "Defines whether the control is read-only.",
            "methods": ["getReadOnly", "setReadOnly"]
          },
          {
            "name": "allowComparisonOperators",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "description": "Defines whether comparison operators (<, >, <=, >=, =, !=) are allowed.",
            "methods": [
              "getAllowComparisonOperators",
              "setAllowComparisonOperators"
            ]
          },
          {
            "name": "allowLogicalOperators",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "description": "Defines whether logical operators (AND, OR, XOR, NOT) are allowed.",
            "methods": ["getAllowLogicalOperators", "setAllowLogicalOperators"]
          },
          {
            "name": "allowSuggestions",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "description": "Defines whether autocomplete suggestions are shown when you type. Available only for desktop devices.",
            "methods": ["getAllowSuggestions", "setAllowSuggestions"]
          },
          {
            "name": "allowStringConstants",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "description": "Defines whether string constants are allowed.<br> If set to <code>true</code>, the calculation builder doesn't validate custom strings as errors.",
            "methods": ["getAllowStringConstants", "setAllowStringConstants"]
          },
          {
            "name": "validationMode",
            "type": "sap.suite.ui.commons.CalculationBuilderValidationMode",
            "defaultValue": "LiveChange",
            "group": "Misc",
            "visibility": "public",
            "description": "Defines when the expression is validated.<br> <ul> <li>If set to <code>LiveChange</code>, the input is validated as you type.</li> <li>If set to <code>FocusOut</code>, the input is validated, once you press Enter or Tab.</li> </ul>",
            "methods": ["getValidationMode", "setValidationMode"]
          },
          {
            "name": "disabledDefaultTokens",
            "type": "string",
            "defaultValue": "",
            "group": "Misc",
            "visibility": "public",
            "description": "Default operators or functions that are disabled. Delimiter for multiple items is ';'.<br> Example of usage: +;-;sqrt",
            "methods": ["getDisabledDefaultTokens", "setDisabledDefaultTokens"]
          }
        ],
        "aggregations": [
          {
            "name": "items",
            "singularName": "item",
            "type": "sap.suite.ui.commons.CalculationBuilderItem",
            "cardinality": "0..n",
            "visibility": "public",
            "bindable": true,
            "description": "Holds the items (operators and operands) to be displayed in the calculation builder.",
            "methods": [
              "getItems",
              "destroyItems",
              "insertItem",
              "addItem",
              "removeItem",
              "indexOfItem",
              "removeAllItems",
              "bindItems",
              "unbindItems"
            ]
          },
          {
            "name": "variables",
            "singularName": "Variable",
            "type": "sap.suite.ui.commons.CalculationBuilderVariable",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Holds the variables that can be used in the calculation builder.",
            "methods": [
              "getVariables",
              "destroyVariables",
              "insertVariable",
              "addVariable",
              "removeVariable",
              "indexOfVariable",
              "removeAllVariables"
            ]
          },
          {
            "name": "functions",
            "singularName": "Function",
            "type": "sap.suite.ui.commons.CalculationBuilderFunction",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Holds the custom functions that can be used in the calculation builder.",
            "methods": [
              "getFunctions",
              "destroyFunctions",
              "insertFunction",
              "addFunction",
              "removeFunction",
              "indexOfFunction",
              "removeAllFunctions"
            ]
          },
          {
            "name": "operators",
            "singularName": "Operator",
            "type": "sap.ui.core.Item",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Holds additional operators defined by the application.<br>These operators are not validated.",
            "methods": [
              "getOperators",
              "destroyOperators",
              "insertOperator",
              "addOperator",
              "removeOperator",
              "indexOfOperator",
              "removeAllOperators"
            ]
          },
          {
            "name": "groups",
            "singularName": "Group",
            "type": "sap.suite.ui.commons.CalculationBuilderGroup",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Defines groups of variables.<br> Variables can be organized into multiple groups for better orientation among different types of variables.",
            "methods": [
              "getGroups",
              "destroyGroups",
              "insertGroup",
              "addGroup",
              "removeGroup",
              "indexOfGroup",
              "removeAllGroups"
            ]
          }
        ],
        "defaultAggregation": "items",
        "events": [
          {
            "name": "validateFunction",
            "visibility": "public",
            "description": "This event is fired for each custom function included in the expression.<br> Custom functions can be defined using {@link sap.suite.ui.commons.CalculationBuilderFunction} and validated using {@link sap.suite.ui.commons.CalculationBuilderValidationResult}.",
            "parameters": {
              "definition": { "name": "definition", "type": "object" },
              "customFunction": { "name": "customFunction", "type": "object" },
              "result": {
                "name": "result",
                "type": "sap.suite.ui.commons.CalculationBuilderValidationResult"
              }
            },
            "methods": [
              "attachValidateFunction",
              "detachValidateFunction",
              "fireValidateFunction"
            ]
          },
          {
            "name": "change",
            "visibility": "public",
            "description": "This event is fired when the order of items changes, or when some items are added or removed.",
            "methods": ["attachChange", "detachChange", "fireChange"]
          },
          {
            "name": "afterValidation",
            "visibility": "public",
            "description": "This event is fired after the expression is validated.",
            "methods": [
              "attachAfterValidation",
              "detachAfterValidation",
              "fireAfterValidation"
            ]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new calculation builder.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.",
        "references": [
          "{@link topic:1db504725155424a8dc9fabd4147dd28 Calculation Builder}"
        ]
      },
      "events": [
        {
          "name": "afterValidation",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "This event is fired after the expression is validated."
        },
        {
          "name": "change",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "This event is fired when the order of items changes, or when some items are added or removed."
        },
        {
          "name": "validateFunction",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "definition": {
                      "name": "definition",
                      "type": "object",
                      "optional": false
                    },
                    "customFunction": {
                      "name": "customFunction",
                      "type": "object",
                      "optional": false
                    },
                    "result": {
                      "name": "result",
                      "type": "sap.suite.ui.commons.CalculationBuilderValidationResult",
                      "optional": false
                    }
                  }
                }
              }
            }
          ],
          "description": "This event is fired for each custom function included in the expression.<br> Custom functions can be defined using {@link sap.suite.ui.commons.CalculationBuilderFunction} and validated using {@link sap.suite.ui.commons.CalculationBuilderValidationResult}."
        }
      ],
      "methods": [
        {
          "name": "addFunction",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilder",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oFunction",
              "type": "sap.suite.ui.commons.CalculationBuilderFunction",
              "optional": false,
              "description": "The Function to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some Function to the aggregation {@link #getFunctions functions}."
        },
        {
          "name": "addGroup",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilder",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oGroup",
              "type": "sap.suite.ui.commons.CalculationBuilderGroup",
              "optional": false,
              "description": "The Group to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some Group to the aggregation {@link #getGroups groups}."
        },
        {
          "name": "addItem",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilder",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oItem",
              "type": "sap.suite.ui.commons.CalculationBuilderItem",
              "optional": false,
              "description": "The item to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some item to the aggregation {@link #getItems items}."
        },
        {
          "name": "addOperator",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilder",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oOperator",
              "type": "sap.ui.core.Item",
              "optional": false,
              "description": "The Operator to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some Operator to the aggregation {@link #getOperators operators}."
        },
        {
          "name": "addVariable",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilder",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oVariable",
              "type": "sap.suite.ui.commons.CalculationBuilderVariable",
              "optional": false,
              "description": "The Variable to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some Variable to the aggregation {@link #getVariables variables}."
        },
        {
          "name": "allowFunction",
          "visibility": "public",
          "parameters": [
            {
              "name": "sFunction",
              "type": "sap.suite.ui.commons.CalculationBuilderFunctionType",
              "optional": false,
              "description": "Name of the function"
            },
            {
              "name": "bAllow",
              "type": "boolean",
              "optional": false,
              "description": "True if the function should be visible to the user"
            }
          ],
          "description": "Checks if the function is visible to the user."
        },
        {
          "name": "appendError",
          "visibility": "public",
          "parameters": [
            {
              "name": "oError",
              "type": "object",
              "optional": false,
              "parameterProperties": {
                "index": {
                  "name": "index",
                  "type": "object",
                  "optional": true,
                  "description": "Index of the item that contains errors"
                },
                "title": {
                  "name": "title",
                  "type": "number",
                  "optional": true,
                  "description": "Title of the error"
                }
              },
              "description": "Error object with contains following properties:"
            }
          ],
          "description": "Records a new error detected in the expression."
        },
        {
          "name": "attachAfterValidation",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilder",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.CalculationBuilder</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:afterValidation afterValidation} event of this <code>sap.suite.ui.commons.CalculationBuilder</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.CalculationBuilder</code> itself.\n\nThis event is fired after the expression is validated."
        },
        {
          "name": "attachChange",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilder",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.CalculationBuilder</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:change change} event of this <code>sap.suite.ui.commons.CalculationBuilder</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.CalculationBuilder</code> itself.\n\nThis event is fired when the order of items changes, or when some items are added or removed."
        },
        {
          "name": "attachValidateFunction",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilder",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.CalculationBuilder</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:validateFunction validateFunction} event of this <code>sap.suite.ui.commons.CalculationBuilder</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.CalculationBuilder</code> itself.\n\nThis event is fired for each custom function included in the expression.<br> Custom functions can be defined using {@link sap.suite.ui.commons.CalculationBuilderFunction} and validated using {@link sap.suite.ui.commons.CalculationBuilderValidationResult}."
        },
        {
          "name": "bindItems",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilder",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oBindingInfo",
              "type": "object",
              "optional": false,
              "description": "The binding information"
            }
          ],
          "description": "Binds aggregation {@link #getItems items} to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a detailed description of the possible properties of <code>oBindingInfo</code>."
        },
        {
          "name": "destroyFunctions",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilder",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the functions in the aggregation {@link #getFunctions functions}."
        },
        {
          "name": "destroyGroups",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilder",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the groups in the aggregation {@link #getGroups groups}."
        },
        {
          "name": "destroyItems",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilder",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the items in the aggregation {@link #getItems items}."
        },
        {
          "name": "destroyOperators",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilder",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the operators in the aggregation {@link #getOperators operators}."
        },
        {
          "name": "destroyVariables",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilder",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the variables in the aggregation {@link #getVariables variables}."
        },
        {
          "name": "detachAfterValidation",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilder",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:afterValidation afterValidation} event of this <code>sap.suite.ui.commons.CalculationBuilder</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachChange",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilder",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:change change} event of this <code>sap.suite.ui.commons.CalculationBuilder</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachValidateFunction",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilder",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:validateFunction validateFunction} event of this <code>sap.suite.ui.commons.CalculationBuilder</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.CalculationBuilder with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "fireAfterValidation",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilder",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:afterValidation afterValidation} to attached listeners."
        },
        {
          "name": "fireChange",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilder",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:change change} to attached listeners."
        },
        {
          "name": "fireValidateFunction",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilder",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "definition": {
                  "name": "definition",
                  "type": "object",
                  "optional": true
                },
                "customFunction": {
                  "name": "customFunction",
                  "type": "object",
                  "optional": true
                },
                "result": {
                  "name": "result",
                  "type": "sap.suite.ui.commons.CalculationBuilderValidationResult",
                  "optional": true
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:validateFunction validateFunction} to attached listeners."
        },
        {
          "name": "getAllowComparisonOperators",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>allowComparisonOperators</code>"
          },
          "description": "Gets current value of property {@link #getAllowComparisonOperators allowComparisonOperators}.\n\nDefines whether comparison operators (<, >, <=, >=, =, !=) are allowed.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getAllowLogicalOperators",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>allowLogicalOperators</code>"
          },
          "description": "Gets current value of property {@link #getAllowLogicalOperators allowLogicalOperators}.\n\nDefines whether logical operators (AND, OR, XOR, NOT) are allowed.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getAllowStringConstants",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>allowStringConstants</code>"
          },
          "description": "Gets current value of property {@link #getAllowStringConstants allowStringConstants}.\n\nDefines whether string constants are allowed.<br> If set to <code>true</code>, the calculation builder doesn't validate custom strings as errors.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getAllowSuggestions",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>allowSuggestions</code>"
          },
          "description": "Gets current value of property {@link #getAllowSuggestions allowSuggestions}.\n\nDefines whether autocomplete suggestions are shown when you type. Available only for desktop devices.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getDisabledDefaultTokens",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>disabledDefaultTokens</code>"
          },
          "description": "Gets current value of property {@link #getDisabledDefaultTokens disabledDefaultTokens}.\n\nDefault operators or functions that are disabled. Delimiter for multiple items is ';'.<br> Example of usage: +;-;sqrt\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "getErrors",
          "visibility": "public",
          "description": "Returns syntax errors."
        },
        {
          "name": "getExpression",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>expression</code>"
          },
          "description": "Gets current value of property {@link #getExpression expression}.\n\nHolds the arithmetic expression.<br> Use either this property or aggregation <code>Items</code>. Not both."
        },
        {
          "name": "getFunctions",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilderFunction[]"
          },
          "description": "Gets content of aggregation {@link #getFunctions functions}.\n\nHolds the custom functions that can be used in the calculation builder."
        },
        {
          "name": "getGroups",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilderGroup[]"
          },
          "description": "Gets content of aggregation {@link #getGroups groups}.\n\nDefines groups of variables.<br> Variables can be organized into multiple groups for better orientation among different types of variables."
        },
        {
          "name": "getInputToolbar",
          "visibility": "public",
          "returnValue": { "type": "Object", "description": "Input toolbar" },
          "description": "Returns the input toolbar of the calculation builder."
        },
        {
          "name": "getItems",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilderItem[]"
          },
          "description": "Gets content of aggregation {@link #getItems items}.\n\nHolds the items (operators and operands) to be displayed in the calculation builder."
        },
        {
          "name": "getLayoutType",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>layoutType</code>"
          },
          "description": "Gets current value of property {@link #getLayoutType layoutType}.\n\nDefines the layout type used for the calculation builder.<br> The layout may include a visual editor, a text editor, or both. In addition, you can set the text editor to be read-only.\n\nDefault value is <code>Default</code>."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.CalculationBuilder."
        },
        {
          "name": "getOperators",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.Item[]" },
          "description": "Gets content of aggregation {@link #getOperators operators}.\n\nHolds additional operators defined by the application.<br>These operators are not validated."
        },
        {
          "name": "getReadOnly",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>readOnly</code>"
          },
          "description": "Gets current value of property {@link #getReadOnly readOnly}.\n\nDefines whether the control is read-only.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getShowInputToolbar",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showInputToolbar</code>"
          },
          "description": "Gets current value of property {@link #getShowInputToolbar showInputToolbar}.\n\nDefines whether the input toolbar is visible.<br> The input toolbar contains operators and functions that can be used in the expression.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getShowToolbar",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showToolbar</code>"
          },
          "description": "Gets current value of property {@link #getShowToolbar showToolbar}.\n\nDefines whether the toolbar is visible.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getTitle",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>title</code>"
          },
          "description": "Gets current value of property {@link #getTitle title}.\n\nThe title of the calculation builder element."
        },
        {
          "name": "getToolbar",
          "visibility": "public",
          "returnValue": { "type": "Object", "description": "Toolbar" },
          "description": "Returns the toolbar of the calculation builder."
        },
        {
          "name": "getValidationMode",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilderValidationMode",
            "description": "Value of property <code>validationMode</code>"
          },
          "description": "Gets current value of property {@link #getValidationMode validationMode}.\n\nDefines when the expression is validated.<br> <ul> <li>If set to <code>LiveChange</code>, the input is validated as you type.</li> <li>If set to <code>FocusOut</code>, the input is validated, once you press Enter or Tab.</li> </ul>\n\nDefault value is <code>LiveChange</code>."
        },
        {
          "name": "getVariables",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilderVariable[]"
          },
          "description": "Gets content of aggregation {@link #getVariables variables}.\n\nHolds the variables that can be used in the calculation builder."
        },
        {
          "name": "getWrapItemsInExpression",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>wrapItemsInExpression</code>"
          },
          "description": "Gets current value of property {@link #getWrapItemsInExpression wrapItemsInExpression}.\n\nDefines whether the expression should be wrapped inside the calculation builder field.<br> If set to <code>false</code>, the expression is rearranged into a single scrollable row.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "indexOfFunction",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oFunction",
              "type": "sap.suite.ui.commons.CalculationBuilderFunction",
              "optional": false,
              "description": "The Function whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.suite.ui.commons.CalculationBuilderFunction</code> in the aggregation {@link #getFunctions functions}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "indexOfGroup",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oGroup",
              "type": "sap.suite.ui.commons.CalculationBuilderGroup",
              "optional": false,
              "description": "The Group whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.suite.ui.commons.CalculationBuilderGroup</code> in the aggregation {@link #getGroups groups}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "indexOfItem",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oItem",
              "type": "sap.suite.ui.commons.CalculationBuilderItem",
              "optional": false,
              "description": "The item whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.suite.ui.commons.CalculationBuilderItem</code> in the aggregation {@link #getItems items}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "indexOfOperator",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oOperator",
              "type": "sap.ui.core.Item",
              "optional": false,
              "description": "The Operator whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.ui.core.Item</code> in the aggregation {@link #getOperators operators}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "indexOfVariable",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oVariable",
              "type": "sap.suite.ui.commons.CalculationBuilderVariable",
              "optional": false,
              "description": "The Variable whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.suite.ui.commons.CalculationBuilderVariable</code> in the aggregation {@link #getVariables variables}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "insertFunction",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilder",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oFunction",
              "type": "sap.suite.ui.commons.CalculationBuilderFunction",
              "optional": false,
              "description": "The Function to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the Function should be inserted at; for a negative value of <code>iIndex</code>, the Function is inserted at position 0; for a value greater than the current size of the aggregation, the Function is inserted at the last position"
            }
          ],
          "description": "Inserts a Function into the aggregation {@link #getFunctions functions}."
        },
        {
          "name": "insertGroup",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilder",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oGroup",
              "type": "sap.suite.ui.commons.CalculationBuilderGroup",
              "optional": false,
              "description": "The Group to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the Group should be inserted at; for a negative value of <code>iIndex</code>, the Group is inserted at position 0; for a value greater than the current size of the aggregation, the Group is inserted at the last position"
            }
          ],
          "description": "Inserts a Group into the aggregation {@link #getGroups groups}."
        },
        {
          "name": "insertItem",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilder",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oItem",
              "type": "sap.suite.ui.commons.CalculationBuilderItem",
              "optional": false,
              "description": "The item to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the item should be inserted at; for a negative value of <code>iIndex</code>, the item is inserted at position 0; for a value greater than the current size of the aggregation, the item is inserted at the last position"
            }
          ],
          "description": "Inserts a item into the aggregation {@link #getItems items}."
        },
        {
          "name": "insertOperator",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilder",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oOperator",
              "type": "sap.ui.core.Item",
              "optional": false,
              "description": "The Operator to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the Operator should be inserted at; for a negative value of <code>iIndex</code>, the Operator is inserted at position 0; for a value greater than the current size of the aggregation, the Operator is inserted at the last position"
            }
          ],
          "description": "Inserts a Operator into the aggregation {@link #getOperators operators}."
        },
        {
          "name": "insertVariable",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilder",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oVariable",
              "type": "sap.suite.ui.commons.CalculationBuilderVariable",
              "optional": false,
              "description": "The Variable to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the Variable should be inserted at; for a negative value of <code>iIndex</code>, the Variable is inserted at position 0; for a value greater than the current size of the aggregation, the Variable is inserted at the last position"
            }
          ],
          "description": "Inserts a Variable into the aggregation {@link #getVariables variables}."
        },
        {
          "name": "removeAllFunctions",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilderFunction[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getFunctions functions}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeAllGroups",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilderGroup[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getGroups groups}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeAllItems",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilderItem[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getItems items}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeAllOperators",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.Item[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getOperators operators}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeAllVariables",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilderVariable[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getVariables variables}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeFunction",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilderFunction",
            "description": "The removed Function or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vFunction",
              "type": "int|string|sap.suite.ui.commons.CalculationBuilderFunction",
              "optional": false,
              "description": "The Function to remove or its index or id"
            }
          ],
          "description": "Removes a Function from the aggregation {@link #getFunctions functions}."
        },
        {
          "name": "removeGroup",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilderGroup",
            "description": "The removed Group or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vGroup",
              "type": "int|string|sap.suite.ui.commons.CalculationBuilderGroup",
              "optional": false,
              "description": "The Group to remove or its index or id"
            }
          ],
          "description": "Removes a Group from the aggregation {@link #getGroups groups}."
        },
        {
          "name": "removeItem",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilderItem",
            "description": "The removed item or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vItem",
              "type": "int|string|sap.suite.ui.commons.CalculationBuilderItem",
              "optional": false,
              "description": "The item to remove or its index or id"
            }
          ],
          "description": "Removes a item from the aggregation {@link #getItems items}."
        },
        {
          "name": "removeOperator",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.Item",
            "description": "The removed Operator or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vOperator",
              "type": "int|string|sap.ui.core.Item",
              "optional": false,
              "description": "The Operator to remove or its index or id"
            }
          ],
          "description": "Removes a Operator from the aggregation {@link #getOperators operators}."
        },
        {
          "name": "removeVariable",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilderVariable",
            "description": "The removed Variable or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vVariable",
              "type": "int|string|sap.suite.ui.commons.CalculationBuilderVariable",
              "optional": false,
              "description": "The Variable to remove or its index or id"
            }
          ],
          "description": "Removes a Variable from the aggregation {@link #getVariables variables}."
        },
        {
          "name": "setAllowComparisonOperators",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilder",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bAllowComparisonOperators",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>allowComparisonOperators</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getAllowComparisonOperators allowComparisonOperators}.\n\nDefines whether comparison operators (<, >, <=, >=, =, !=) are allowed.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setAllowLogicalOperators",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilder",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bAllowLogicalOperators",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>allowLogicalOperators</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getAllowLogicalOperators allowLogicalOperators}.\n\nDefines whether logical operators (AND, OR, XOR, NOT) are allowed.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setAllowStringConstants",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilder",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bAllowStringConstants",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>allowStringConstants</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getAllowStringConstants allowStringConstants}.\n\nDefines whether string constants are allowed.<br> If set to <code>true</code>, the calculation builder doesn't validate custom strings as errors.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setAllowSuggestions",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilder",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bAllowSuggestions",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>allowSuggestions</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getAllowSuggestions allowSuggestions}.\n\nDefines whether autocomplete suggestions are shown when you type. Available only for desktop devices.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setDisabledDefaultTokens",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilder",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sDisabledDefaultTokens",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>disabledDefaultTokens</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getDisabledDefaultTokens disabledDefaultTokens}.\n\nDefault operators or functions that are disabled. Delimiter for multiple items is ';'.<br> Example of usage: +;-;sqrt\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "setExpression",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilder",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sExpression",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>expression</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getExpression expression}.\n\nHolds the arithmetic expression.<br> Use either this property or aggregation <code>Items</code>. Not both.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setLayoutType",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilder",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sLayoutType",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>layoutType</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getLayoutType layoutType}.\n\nDefines the layout type used for the calculation builder.<br> The layout may include a visual editor, a text editor, or both. In addition, you can set the text editor to be read-only.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Default</code>."
        },
        {
          "name": "setReadOnly",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilder",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bReadOnly",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>readOnly</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getReadOnly readOnly}.\n\nDefines whether the control is read-only.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setShowInputToolbar",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilder",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowInputToolbar",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showInputToolbar</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowInputToolbar showInputToolbar}.\n\nDefines whether the input toolbar is visible.<br> The input toolbar contains operators and functions that can be used in the expression.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setShowToolbar",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilder",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowToolbar",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showToolbar</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowToolbar showToolbar}.\n\nDefines whether the toolbar is visible.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setTitle",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilder",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sTitle",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>title</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getTitle title}.\n\nThe title of the calculation builder element.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setValidationMode",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilder",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sValidationMode",
              "type": "sap.suite.ui.commons.CalculationBuilderValidationMode",
              "optional": false,
              "description": "New value for property <code>validationMode</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getValidationMode validationMode}.\n\nDefines when the expression is validated.<br> <ul> <li>If set to <code>LiveChange</code>, the input is validated as you type.</li> <li>If set to <code>FocusOut</code>, the input is validated, once you press Enter or Tab.</li> </ul>\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>LiveChange</code>."
        },
        {
          "name": "setWrapItemsInExpression",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilder",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bWrapItemsInExpression",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>wrapItemsInExpression</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getWrapItemsInExpression wrapItemsInExpression}.\n\nDefines whether the expression should be wrapped inside the calculation builder field.<br> If set to <code>false</code>, the expression is rearranged into a single scrollable row.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "unbindItems",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilder",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Unbinds aggregation {@link #getItems items} from model data."
        },
        {
          "name": "updateErrorsDisplay",
          "visibility": "public",
          "description": "Updates the list of displayed errors <br> You can call this method when you change errors outside default calculation builder events."
        },
        {
          "name": "updateOrCreateItem",
          "visibility": "public",
          "parameters": [
            {
              "name": "sKey",
              "type": "string",
              "optional": false,
              "description": "New key for current item (new or old)"
            }
          ],
          "description": "Creates or updates the currently selected item. <br> Call this function only when using the <code>customView</code> aggregation in the {@link sap.suite.ui.commons.CalculationBuilderGroup}."
        },
        {
          "name": "validate",
          "visibility": "public",
          "description": "Validates the current expression and displays errors."
        },
        {
          "name": "validateParts",
          "visibility": "public",
          "returnValue": {
            "type": "Array",
            "description": "aErrors Array of errors found."
          },
          "description": "Checks if the expression syntax is valid."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.suite.ui.commons.CalculationBuilderComparisonOperatorType",
      "basename": "CalculationBuilderComparisonOperatorType",
      "resource": "sap/suite/ui/commons/library.js",
      "module": "sap/suite/ui/commons/library",
      "export": "CalculationBuilderComparisonOperatorType",
      "static": true,
      "visibility": "public",
      "description": "Comparison operators supported by the calculation builder.",
      "properties": [
        {
          "name": "\"!=\"",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Not equal to."
        },
        {
          "name": "\"<\"",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Less than."
        },
        {
          "name": "\"<=\"",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Less than or equal to."
        },
        {
          "name": "\"=\"",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Equal to."
        },
        {
          "name": "\">\"",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Greater than."
        },
        {
          "name": "\">=\"",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Greater than or equal to."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.CalculationBuilderFunction",
      "basename": "CalculationBuilderFunction",
      "resource": "sap/suite/ui/commons/CalculationBuilderFunction.js",
      "module": "sap/suite/ui/commons/CalculationBuilderFunction",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.56.0",
      "extends": "sap.ui.core.Control",
      "description": "A custom function to be used in the calculation builder.<br> The default functions available for the calculation builder are defined in {@link sap.suite.ui.commons.CalculationBuilderFunctionType}.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "key",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "A key associated with the function. This property is mandatory.<br> The key is displayed in the text editor area of the calculation builder.",
            "methods": ["getKey", "setKey"]
          },
          {
            "name": "label",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Label for the function.<br> The label is displayed in the visual editor of the calculation builder and in the functions menu on the calculation builder's toolbar.",
            "methods": ["getLabel", "setLabel"]
          },
          {
            "name": "description",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Description of the function.<br> The description is displayed in the functions menu on the calculation builder's toolbar. If no description is specified, it is generated automatically based on the <code>key</code> property and the parameters defined in the <code>items</code> aggregation.",
            "methods": ["getDescription", "setDescription"]
          },
          {
            "name": "useDefaultValidation",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "description": "Defines whether default validation should be used.<br> Set this property to <code>false</code> to provide your own validation algorithm using {@link sap.suite.ui.commons.CalculationBuilderValidationResult}.<br> If you do not provide your own validation algorithm for this custom function, set this property to <code>true</code>, and the function will be validated by the calculation builder.",
            "methods": ["getUseDefaultValidation", "setUseDefaultValidation"]
          }
        ],
        "aggregations": [
          {
            "name": "items",
            "singularName": "item",
            "type": "sap.suite.ui.commons.CalculationBuilderItem",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Holds the parameters that can be passed to the function.<br> For example, if the function has two parameters, the <code>items</code> aggregation may consist of: <ol> <li>A {@link sap.suite.ui.commons.CalculationBuilderItem} with an empty key for the first argument entered by the user.</li> <li>A {@link sap.suite.ui.commons.CalculationBuilderItem} with a \"<code>,</code>\" (comma) key for the comma that separates the arguments.</li> <li>A {@link sap.suite.ui.commons.CalculationBuilderItem} with an empty key for the second argument entered by the user.</li> </ol>",
            "methods": [
              "getItems",
              "destroyItems",
              "insertItem",
              "addItem",
              "removeItem",
              "indexOfItem",
              "removeAllItems"
            ]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new custom function.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "addItem",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilderFunction",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oItem",
              "type": "sap.suite.ui.commons.CalculationBuilderItem",
              "optional": false,
              "description": "The item to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some item to the aggregation {@link #getItems items}."
        },
        {
          "name": "destroyItems",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilderFunction",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the items in the aggregation {@link #getItems items}."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.CalculationBuilderFunction with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "getDescription",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>description</code>"
          },
          "description": "Gets current value of property {@link #getDescription description}.\n\nDescription of the function.<br> The description is displayed in the functions menu on the calculation builder's toolbar. If no description is specified, it is generated automatically based on the <code>key</code> property and the parameters defined in the <code>items</code> aggregation."
        },
        {
          "name": "getItems",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilderItem[]"
          },
          "description": "Gets content of aggregation {@link #getItems items}.\n\nHolds the parameters that can be passed to the function.<br> For example, if the function has two parameters, the <code>items</code> aggregation may consist of: <ol> <li>A {@link sap.suite.ui.commons.CalculationBuilderItem} with an empty key for the first argument entered by the user.</li> <li>A {@link sap.suite.ui.commons.CalculationBuilderItem} with a \"<code>,</code>\" (comma) key for the comma that separates the arguments.</li> <li>A {@link sap.suite.ui.commons.CalculationBuilderItem} with an empty key for the second argument entered by the user.</li> </ol>"
        },
        {
          "name": "getKey",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>key</code>"
          },
          "description": "Gets current value of property {@link #getKey key}.\n\nA key associated with the function. This property is mandatory.<br> The key is displayed in the text editor area of the calculation builder."
        },
        {
          "name": "getLabel",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>label</code>"
          },
          "description": "Gets current value of property {@link #getLabel label}.\n\nLabel for the function.<br> The label is displayed in the visual editor of the calculation builder and in the functions menu on the calculation builder's toolbar."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.CalculationBuilderFunction."
        },
        {
          "name": "getUseDefaultValidation",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>useDefaultValidation</code>"
          },
          "description": "Gets current value of property {@link #getUseDefaultValidation useDefaultValidation}.\n\nDefines whether default validation should be used.<br> Set this property to <code>false</code> to provide your own validation algorithm using {@link sap.suite.ui.commons.CalculationBuilderValidationResult}.<br> If you do not provide your own validation algorithm for this custom function, set this property to <code>true</code>, and the function will be validated by the calculation builder.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "indexOfItem",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oItem",
              "type": "sap.suite.ui.commons.CalculationBuilderItem",
              "optional": false,
              "description": "The item whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.suite.ui.commons.CalculationBuilderItem</code> in the aggregation {@link #getItems items}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "insertItem",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilderFunction",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oItem",
              "type": "sap.suite.ui.commons.CalculationBuilderItem",
              "optional": false,
              "description": "The item to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the item should be inserted at; for a negative value of <code>iIndex</code>, the item is inserted at position 0; for a value greater than the current size of the aggregation, the item is inserted at the last position"
            }
          ],
          "description": "Inserts a item into the aggregation {@link #getItems items}."
        },
        {
          "name": "removeAllItems",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilderItem[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getItems items}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeItem",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilderItem",
            "description": "The removed item or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vItem",
              "type": "int|string|sap.suite.ui.commons.CalculationBuilderItem",
              "optional": false,
              "description": "The item to remove or its index or id"
            }
          ],
          "description": "Removes a item from the aggregation {@link #getItems items}."
        },
        {
          "name": "setDescription",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilderFunction",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sDescription",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>description</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getDescription description}.\n\nDescription of the function.<br> The description is displayed in the functions menu on the calculation builder's toolbar. If no description is specified, it is generated automatically based on the <code>key</code> property and the parameters defined in the <code>items</code> aggregation.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setKey",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilderFunction",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sKey",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>key</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getKey key}.\n\nA key associated with the function. This property is mandatory.<br> The key is displayed in the text editor area of the calculation builder.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setLabel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilderFunction",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sLabel",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>label</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getLabel label}.\n\nLabel for the function.<br> The label is displayed in the visual editor of the calculation builder and in the functions menu on the calculation builder's toolbar.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setUseDefaultValidation",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilderFunction",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bUseDefaultValidation",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>useDefaultValidation</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getUseDefaultValidation useDefaultValidation}.\n\nDefines whether default validation should be used.<br> Set this property to <code>false</code> to provide your own validation algorithm using {@link sap.suite.ui.commons.CalculationBuilderValidationResult}.<br> If you do not provide your own validation algorithm for this custom function, set this property to <code>true</code>, and the function will be validated by the calculation builder.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.suite.ui.commons.CalculationBuilderFunctionType",
      "basename": "CalculationBuilderFunctionType",
      "resource": "sap/suite/ui/commons/library.js",
      "module": "sap/suite/ui/commons/library",
      "export": "CalculationBuilderFunctionType",
      "static": true,
      "visibility": "public",
      "description": "Functions supported by the calculation builder.<br> To add a custom function, use {@link sap.suite.ui.commons.CalculationBuilderFunction}.",
      "properties": [
        {
          "name": "ABS",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "ABS."
        },
        {
          "name": "Case",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Case."
        },
        {
          "name": "NDIV0",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "NDIV0."
        },
        {
          "name": "NODIM",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "NODIM."
        },
        {
          "name": "Round",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Round."
        },
        {
          "name": "RoundDown",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Round Down."
        },
        {
          "name": "RoundUp",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Round Up."
        },
        {
          "name": "SQRT",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "SQRT."
        },
        {
          "name": "SUMCT",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "SUMCT."
        },
        {
          "name": "SUMGT",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "SUMGT."
        },
        {
          "name": "SUMRT",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "SUMRT."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.CalculationBuilderGroup",
      "basename": "CalculationBuilderGroup",
      "resource": "sap/suite/ui/commons/CalculationBuilderGroup.js",
      "module": "sap/suite/ui/commons/CalculationBuilderGroup",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.60.0",
      "extends": "sap.ui.core.Control",
      "description": "A variable group is used to organize the variables that the user can insert into the {@link sap.suite.ui.commons.CalculationBuilder} expression.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "key",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "A key associated with the group. This property is mandatory.<br> The key is displayed in the text editor area of the calculation builder.",
            "methods": ["getKey", "setKey"]
          },
          {
            "name": "title",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Label for the group.<br> The label is displayed in the visual editor of the calculation builder and in the variables menu on the calculation builder's toolbar.",
            "methods": ["getTitle", "setTitle"]
          },
          {
            "name": "description",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Additional description for the variable group.",
            "methods": ["getDescription", "setDescription"]
          },
          {
            "name": "icon",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Icon for the variable group. This icon is displayed in the Variables menu.",
            "methods": ["getIcon", "setIcon"]
          }
        ],
        "aggregations": [
          {
            "name": "customView",
            "singularName": "customView",
            "type": "sap.ui.core.Control",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "Holds the variables included in the variable group.",
            "methods": ["getCustomView", "destroyCustomView", "setCustomView"]
          }
        ],
        "events": [
          {
            "name": "setSelection",
            "visibility": "public",
            "description": "This event is fired when the user selects the variable group.",
            "parameters": { "key": { "name": "key", "type": "string" } },
            "methods": [
              "attachSetSelection",
              "detachSetSelection",
              "fireSetSelection"
            ]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new calculation builder variable group.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "setSelection",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "key": {
                      "name": "key",
                      "type": "string",
                      "optional": false
                    }
                  }
                }
              }
            }
          ],
          "description": "This event is fired when the user selects the variable group."
        }
      ],
      "methods": [
        {
          "name": "attachSetSelection",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilderGroup",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.CalculationBuilderGroup</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:setSelection setSelection} event of this <code>sap.suite.ui.commons.CalculationBuilderGroup</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.CalculationBuilderGroup</code> itself.\n\nThis event is fired when the user selects the variable group."
        },
        {
          "name": "destroyCustomView",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilderGroup",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the customView in the aggregation {@link #getCustomView customView}."
        },
        {
          "name": "detachSetSelection",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilderGroup",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:setSelection setSelection} event of this <code>sap.suite.ui.commons.CalculationBuilderGroup</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.CalculationBuilderGroup with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "fireSetSelection",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilderGroup",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "key": { "name": "key", "type": "string", "optional": true }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:setSelection setSelection} to attached listeners."
        },
        {
          "name": "getCustomView",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.Control" },
          "description": "Gets content of aggregation {@link #getCustomView customView}.\n\nHolds the variables included in the variable group."
        },
        {
          "name": "getDescription",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>description</code>"
          },
          "description": "Gets current value of property {@link #getDescription description}.\n\nAdditional description for the variable group."
        },
        {
          "name": "getIcon",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>icon</code>"
          },
          "description": "Gets current value of property {@link #getIcon icon}.\n\nIcon for the variable group. This icon is displayed in the Variables menu."
        },
        {
          "name": "getKey",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>key</code>"
          },
          "description": "Gets current value of property {@link #getKey key}.\n\nA key associated with the group. This property is mandatory.<br> The key is displayed in the text editor area of the calculation builder."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.CalculationBuilderGroup."
        },
        {
          "name": "getTitle",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>title</code>"
          },
          "description": "Gets current value of property {@link #getTitle title}.\n\nLabel for the group.<br> The label is displayed in the visual editor of the calculation builder and in the variables menu on the calculation builder's toolbar."
        },
        {
          "name": "setCustomView",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilderGroup",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oCustomView",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The customView to set"
            }
          ],
          "description": "Sets the aggregated {@link #getCustomView customView}."
        },
        {
          "name": "setDescription",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilderGroup",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sDescription",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>description</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getDescription description}.\n\nAdditional description for the variable group.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setIcon",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilderGroup",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sIcon",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>icon</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getIcon icon}.\n\nIcon for the variable group. This icon is displayed in the Variables menu.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setKey",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilderGroup",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sKey",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>key</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getKey key}.\n\nA key associated with the group. This property is mandatory.<br> The key is displayed in the text editor area of the calculation builder.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setTitle",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilderGroup",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sTitle",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>title</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getTitle title}.\n\nLabel for the group.<br> The label is displayed in the visual editor of the calculation builder and in the variables menu on the calculation builder's toolbar.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.CalculationBuilderItem",
      "basename": "CalculationBuilderItem",
      "resource": "sap/suite/ui/commons/CalculationBuilderItem.js",
      "module": "sap/suite/ui/commons/CalculationBuilderItem",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.56.0",
      "extends": "sap.ui.core.Control",
      "description": "Each of the items used as building blocks to create an arithmetic expression in the calculation builder.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "key",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "A key associated with the item. This property is mandatory.<br> The key is displayed in the text editor area of the calculation builder.",
            "methods": ["getKey", "setKey"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new item used in the expression.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.CalculationBuilderItem with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "getKey",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>key</code>"
          },
          "description": "Gets current value of property {@link #getKey key}.\n\nA key associated with the item. This property is mandatory.<br> The key is displayed in the text editor area of the calculation builder."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.CalculationBuilderItem."
        },
        {
          "name": "getType",
          "visibility": "public",
          "returnValue": {
            "type": "String",
            "description": "Type of the item"
          },
          "description": "Returns the type of the item.<br> Available item types are defined in {@link sap.suite.ui.commons.CalculationBuilderItemType}."
        },
        {
          "name": "getVariable",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilderVariable",
            "description": "Variable object paired with this item, if there is any."
          },
          "description": "Checks if there is a variable object related to this item."
        },
        {
          "name": "isExpandable",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "True if the item is expandable."
          },
          "description": "Checks if the item is expandable."
        },
        {
          "name": "setKey",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilderItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sKey",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>key</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getKey key}.\n\nA key associated with the item. This property is mandatory.<br> The key is displayed in the text editor area of the calculation builder.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.suite.ui.commons.CalculationBuilderItemType",
      "basename": "CalculationBuilderItemType",
      "resource": "sap/suite/ui/commons/library.js",
      "module": "sap/suite/ui/commons/library",
      "export": "CalculationBuilderItemType",
      "static": true,
      "visibility": "public",
      "description": "The types of items (operands) that can be used in a calculation builder expression.",
      "properties": [
        {
          "name": "Constant",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Constant."
        },
        {
          "name": "CustomFunction",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Custom Function.<br> Custom functions can be defined using {@link sap.suite.ui.commons.CalculationBuilderFunction}."
        },
        {
          "name": "CustomOperator",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Custom arithmetic operator defined by the application.<br>Custom operators are not validated by the {@link sap.suite.ui.commons.CalculationBuilder} control."
        },
        {
          "name": "Function",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Function.<br> Default functions are defined by {@link sap.suite.ui.commons.CalculationBuilderFunctionType}."
        },
        {
          "name": "Operator",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Operator."
        },
        {
          "name": "Variable",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Variable."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.suite.ui.commons.CalculationBuilderLayoutType",
      "basename": "CalculationBuilderLayoutType",
      "resource": "sap/suite/ui/commons/library.js",
      "module": "sap/suite/ui/commons/library",
      "export": "CalculationBuilderLayoutType",
      "static": true,
      "visibility": "public",
      "description": "Layout of the calculation builder.",
      "properties": [
        {
          "name": "Default",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Both the visual and text editors are displayed."
        },
        {
          "name": "TextualOnly",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Only the text editor is displayed."
        },
        {
          "name": "VisualOnly",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Only the visual editor is displayed."
        },
        {
          "name": "VisualTextualReadOnly",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Both the visual and text editors are displayed, but the text editor is read-only."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.suite.ui.commons.CalculationBuilderLogicalOperatorType",
      "basename": "CalculationBuilderLogicalOperatorType",
      "resource": "sap/suite/ui/commons/library.js",
      "module": "sap/suite/ui/commons/library",
      "export": "CalculationBuilderLogicalOperatorType",
      "static": true,
      "visibility": "public",
      "description": "Logical operators supported by the calculation builder.",
      "properties": [
        {
          "name": "AND",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Logical conjunction."
        },
        {
          "name": "NOT",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Negation."
        },
        {
          "name": "OR",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Logical disjunction."
        },
        {
          "name": "XOR",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Exclusive disjunction."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.suite.ui.commons.CalculationBuilderOperatorType",
      "basename": "CalculationBuilderOperatorType",
      "resource": "sap/suite/ui/commons/library.js",
      "module": "sap/suite/ui/commons/library",
      "export": "CalculationBuilderOperatorType",
      "static": true,
      "visibility": "public",
      "description": "Arithmetic operators supported by the calculation builder.",
      "properties": [
        {
          "name": "\"(\"",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Left bracket."
        },
        {
          "name": "\")\"",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Right bracket."
        },
        {
          "name": "\"*\"",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Multiplication."
        },
        {
          "name": "\"+\"",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Addition."
        },
        {
          "name": "\",\"",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Comma."
        },
        {
          "name": "\"-\"",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Subtraction."
        },
        {
          "name": "\"/\"",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Division."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.suite.ui.commons.CalculationBuilderValidationMode",
      "basename": "CalculationBuilderValidationMode",
      "resource": "sap/suite/ui/commons/library.js",
      "module": "sap/suite/ui/commons/library",
      "export": "CalculationBuilderValidationMode",
      "static": true,
      "visibility": "public",
      "description": "Types of expression validation that define when the expression entered into the {@link sap.suite.ui.commons.CalculationBuilder} is validated.",
      "ui5-metamodel": true
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.CalculationBuilderValidationResult",
      "basename": "CalculationBuilderValidationResult",
      "resource": "sap/suite/ui/commons/CalculationBuilderValidationResult.js",
      "module": "sap/suite/ui/commons/CalculationBuilderValidationResult",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.56.0",
      "extends": "sap.ui.base.Object",
      "description": "This control can be used for creating your own validation algorithm for custom functions.<br> Custom functions can be defined using {@link sap.suite.ui.commons.CalculationBuilderFunction}.",
      "ui5-metadata": { "stereotype": "object" },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "function",
            "type": "function",
            "optional": false,
            "description": "A function to be called on the custom function."
          }
        ],
        "description": "Constructor for a new validation result."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.CalculationBuilderValidationResult with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.CalculationBuilderValidationResult."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.CalculationBuilderVariable",
      "basename": "CalculationBuilderVariable",
      "resource": "sap/suite/ui/commons/CalculationBuilderVariable.js",
      "module": "sap/suite/ui/commons/CalculationBuilderVariable",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.56.0",
      "extends": "sap.ui.core.Control",
      "description": "A variable used in the expression entered into the calculation builder.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "key",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "A key associated with the variable. This property is mandatory.<br> The key is displayed in the text editor area of the calculation builder.",
            "methods": ["getKey", "setKey"]
          },
          {
            "name": "label",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Label for the variable.<br> The label is displayed in the visual editor of the calculation builder and in the variables menu on the calculation builder's toolbar.",
            "methods": ["getLabel", "setLabel"]
          },
          {
            "name": "group",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The group where this variable belongs.<br> To define variable groups, use {@link sap.suite.ui.commons.CalculationBuilderGroup}.",
            "methods": ["getGroup", "setGroup"]
          }
        ],
        "aggregations": [
          {
            "name": "items",
            "singularName": "Item",
            "type": "sap.suite.ui.commons.CalculationBuilderItem",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Holds the items included in the variable.",
            "methods": [
              "getItems",
              "destroyItems",
              "insertItem",
              "addItem",
              "removeItem",
              "indexOfItem",
              "removeAllItems"
            ]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new variable.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "addItem",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilderVariable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oItem",
              "type": "sap.suite.ui.commons.CalculationBuilderItem",
              "optional": false,
              "description": "The Item to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some Item to the aggregation {@link #getItems items}."
        },
        {
          "name": "destroyItems",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilderVariable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the items in the aggregation {@link #getItems items}."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.CalculationBuilderVariable with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "getGroup",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>group</code>"
          },
          "description": "Gets current value of property {@link #getGroup group}.\n\nThe group where this variable belongs.<br> To define variable groups, use {@link sap.suite.ui.commons.CalculationBuilderGroup}."
        },
        {
          "name": "getItems",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilderItem[]"
          },
          "description": "Gets content of aggregation {@link #getItems items}.\n\nHolds the items included in the variable."
        },
        {
          "name": "getKey",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>key</code>"
          },
          "description": "Gets current value of property {@link #getKey key}.\n\nA key associated with the variable. This property is mandatory.<br> The key is displayed in the text editor area of the calculation builder."
        },
        {
          "name": "getLabel",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>label</code>"
          },
          "description": "Gets current value of property {@link #getLabel label}.\n\nLabel for the variable.<br> The label is displayed in the visual editor of the calculation builder and in the variables menu on the calculation builder's toolbar."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.CalculationBuilderVariable."
        },
        {
          "name": "indexOfItem",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oItem",
              "type": "sap.suite.ui.commons.CalculationBuilderItem",
              "optional": false,
              "description": "The Item whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.suite.ui.commons.CalculationBuilderItem</code> in the aggregation {@link #getItems items}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "insertItem",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilderVariable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oItem",
              "type": "sap.suite.ui.commons.CalculationBuilderItem",
              "optional": false,
              "description": "The Item to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the Item should be inserted at; for a negative value of <code>iIndex</code>, the Item is inserted at position 0; for a value greater than the current size of the aggregation, the Item is inserted at the last position"
            }
          ],
          "description": "Inserts a Item into the aggregation {@link #getItems items}."
        },
        {
          "name": "removeAllItems",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilderItem[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getItems items}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeItem",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilderItem",
            "description": "The removed Item or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vItem",
              "type": "int|string|sap.suite.ui.commons.CalculationBuilderItem",
              "optional": false,
              "description": "The Item to remove or its index or id"
            }
          ],
          "description": "Removes a Item from the aggregation {@link #getItems items}."
        },
        {
          "name": "setGroup",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilderVariable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sGroup",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>group</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getGroup group}.\n\nThe group where this variable belongs.<br> To define variable groups, use {@link sap.suite.ui.commons.CalculationBuilderGroup}.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setKey",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilderVariable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sKey",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>key</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getKey key}.\n\nA key associated with the variable. This property is mandatory.<br> The key is displayed in the text editor area of the calculation builder.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setLabel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.CalculationBuilderVariable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sLabel",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>label</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getLabel label}.\n\nLabel for the variable.<br> The label is displayed in the visual editor of the calculation builder and in the variables menu on the calculation builder's toolbar.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.ChartContainer",
      "basename": "ChartContainer",
      "resource": "sap/suite/ui/commons/ChartContainer.js",
      "module": "sap/suite/ui/commons/ChartContainer",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.core.Control",
      "description": "Provides a toolbar with generic functions for tables and charts based on the VizFrame control like zoom, display in fullscreen mode, toggle the legend, switch between chart types, and changes of the chart dimension. The controls of the content aggregation are positioned below the toolbar. Additional functions can be added to the toolbar with the customIcons aggregation.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "showPersonalization",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "description": "Set to true to display the personalization icon. Set to false to hide it.",
            "methods": ["getShowPersonalization", "setShowPersonalization"]
          },
          {
            "name": "showFullScreen",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "description": "Set to true to display the full screen icon. Set to false to hide it.",
            "methods": ["getShowFullScreen", "setShowFullScreen"]
          },
          {
            "name": "fullScreen",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "description": "Display the chart and the toolbar in full screen or normal mode.",
            "methods": ["getFullScreen", "setFullScreen"]
          },
          {
            "name": "showLegend",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "description": "Set to true to display the charts' legends. Set to false to hide them. See also showLegendButton.",
            "methods": ["getShowLegend", "setShowLegend"]
          },
          {
            "name": "title",
            "type": "string",
            "defaultValue": "",
            "group": "Misc",
            "visibility": "public",
            "description": "String shown if there are no dimensions to display.",
            "methods": ["getTitle", "setTitle"]
          },
          {
            "name": "selectorGroupLabel",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Custom Label for Selectors Group.",
            "deprecated": {
              "since": "1.32.0",
              "text": "Obsolete property as sap.m.Toolbar is replaced by sap.m.OverflowToolbar."
            },
            "methods": ["getSelectorGroupLabel", "setSelectorGroupLabel"]
          },
          {
            "name": "autoAdjustHeight",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "description": "Determine whether to stretch the chart height to the maximum possible height of ChartContainer's parent container. As a prerequisite, the parent container needs to have a fixed value height or be able to determine height from its parent.",
            "methods": ["getAutoAdjustHeight", "setAutoAdjustHeight"]
          },
          {
            "name": "showZoom",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "description": "Set to true to display zoom icons. Set to false to hide them.",
            "methods": ["getShowZoom", "setShowZoom"]
          },
          {
            "name": "showLegendButton",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "description": "Set to true or false to display or hide a button for controlling the visbility of the chart's legend. Please be aware that setting this property to true indirectly is setting showLegend to false. If you need to hide the button but to show the legend, you need to set showLegend at a later point in time (onBeforeRendering). The execution order of the combined properties is not guaranteed by the control.",
            "methods": ["getShowLegendButton", "setShowLegendButton"]
          },
          {
            "name": "showSelectionDetails",
            "type": "boolean",
            "defaultValue": false,
            "group": "Behavior",
            "visibility": "public",
            "since": "1.48.0",
            "description": "Set to true to display the 'Details' button that opens a popup dialog with details about the selected data from the VizFrame based chart.",
            "methods": ["getShowSelectionDetails", "setShowSelectionDetails"]
          },
          {
            "name": "wrapLabels",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "since": "1.58.0",
            "description": "Set to true to wrap text labels in the dialog that opens when the user clicks or taps the 'Details' button.",
            "methods": ["getWrapLabels", "setWrapLabels"]
          },
          {
            "name": "enableScroll",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "description": "If set to <code>true</code>, the Container control has its own scroll bar, with the scrolling taking place within the Container control itself.",
            "methods": ["getEnableScroll", "setEnableScroll"]
          }
        ],
        "aggregations": [
          {
            "name": "dimensionSelectors",
            "singularName": "dimensionSelector",
            "type": "sap.ui.core.Control",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Dimension Selects.",
            "methods": [
              "getDimensionSelectors",
              "destroyDimensionSelectors",
              "insertDimensionSelector",
              "addDimensionSelector",
              "removeDimensionSelector",
              "indexOfDimensionSelector",
              "removeAllDimensionSelectors"
            ]
          },
          {
            "name": "content",
            "singularName": "content",
            "type": "sap.suite.ui.commons.ChartContainerContent",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "ChartToolBar Content aggregation. Only sap.viz.ui5.controls.VizFrame, sap.m.Table and sap.ui.table.Table can be embedded. If not specified explicitly, the rendering order of the charts is determined by the sequence of contents provided by the application via this aggregation. This means, per default the first chart of the aggregation will be rendered within the container.",
            "methods": [
              "getContent",
              "destroyContent",
              "insertContent",
              "addContent",
              "removeContent",
              "indexOfContent",
              "removeAllContent"
            ]
          },
          {
            "name": "toolbar",
            "singularName": "toolbar",
            "type": "sap.m.OverflowToolbar",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "Overflow ToolBar. If an external toolbar is used, it will be integrated with the embedded toolbar via a placeholder. This placeholder is mandatory, and it needs to be of type 'sap.suite.ui.commons.ChartContainerToolbarPlaceholder'.",
            "methods": ["getToolbar", "destroyToolbar", "setToolbar"]
          },
          {
            "name": "customIcons",
            "singularName": "customIcon",
            "type": "sap.ui.core.Icon",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "This aggregation contains the custom icons that should be displayed additionally on the toolbar. It is not guaranteed that the same instance of the sap.ui.core.Icon control will be used within the toolbar, but the toolbar will contain a sap.m.OverflowToolbarButton with an icon property equal to the src property of the sap.ui.core.Icon provided in the aggregation. If a press event is triggered by the icon displayed on the toolbar, then the press handler of the original sap.ui.core.Icon control is used. The instance of the control, that has triggered the press event, can be accessed using the \"controlReference\" parameter of the event object.",
            "methods": [
              "getCustomIcons",
              "destroyCustomIcons",
              "insertCustomIcon",
              "addCustomIcon",
              "removeCustomIcon",
              "indexOfCustomIcon",
              "removeAllCustomIcons"
            ]
          }
        ],
        "defaultAggregation": "content",
        "events": [
          {
            "name": "personalizationPress",
            "visibility": "public",
            "description": "Event fired when a user clicks on the personalization icon.",
            "methods": [
              "attachPersonalizationPress",
              "detachPersonalizationPress",
              "firePersonalizationPress"
            ]
          },
          {
            "name": "contentChange",
            "visibility": "public",
            "description": "Event fired when a user changes the displayed content.",
            "parameters": {
              "selectedItemId": {
                "name": "selectedItemId",
                "type": "string",
                "description": "Id of the selected item."
              }
            },
            "methods": [
              "attachContentChange",
              "detachContentChange",
              "fireContentChange"
            ]
          },
          {
            "name": "customZoomInPress",
            "visibility": "public",
            "description": "Custom event for zoom in.",
            "methods": [
              "attachCustomZoomInPress",
              "detachCustomZoomInPress",
              "fireCustomZoomInPress"
            ]
          },
          {
            "name": "customZoomOutPress",
            "visibility": "public",
            "description": "Custom event for zoom out.",
            "methods": [
              "attachCustomZoomOutPress",
              "detachCustomZoomOutPress",
              "fireCustomZoomOutPress"
            ]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new ChartContainer.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "contentChange",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "selectedItemId": {
                      "name": "selectedItemId",
                      "type": "string",
                      "optional": false,
                      "description": "Id of the selected item."
                    }
                  }
                }
              }
            }
          ],
          "description": "Event fired when a user changes the displayed content."
        },
        {
          "name": "customZoomInPress",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "Custom event for zoom in."
        },
        {
          "name": "customZoomOutPress",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "Custom event for zoom out."
        },
        {
          "name": "personalizationPress",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "Event fired when a user clicks on the personalization icon."
        }
      ],
      "methods": [
        {
          "name": "addContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ChartContainer",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oContent",
              "type": "sap.suite.ui.commons.ChartContainerContent",
              "optional": false,
              "description": "The content to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some content to the aggregation {@link #getContent content}."
        },
        {
          "name": "addCustomIcon",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ChartContainer",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oCustomIcon",
              "type": "sap.ui.core.Icon",
              "optional": false,
              "description": "The customIcon to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some customIcon to the aggregation {@link #getCustomIcons customIcons}."
        },
        {
          "name": "addDimensionSelector",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ChartContainer",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oDimensionSelector",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The dimensionSelector to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some dimensionSelector to the aggregation {@link #getDimensionSelectors dimensionSelectors}."
        },
        {
          "name": "attachContentChange",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ChartContainer",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.ChartContainer</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:contentChange contentChange} event of this <code>sap.suite.ui.commons.ChartContainer</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.ChartContainer</code> itself.\n\nEvent fired when a user changes the displayed content."
        },
        {
          "name": "attachCustomZoomInPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ChartContainer",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.ChartContainer</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:customZoomInPress customZoomInPress} event of this <code>sap.suite.ui.commons.ChartContainer</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.ChartContainer</code> itself.\n\nCustom event for zoom in."
        },
        {
          "name": "attachCustomZoomOutPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ChartContainer",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.ChartContainer</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:customZoomOutPress customZoomOutPress} event of this <code>sap.suite.ui.commons.ChartContainer</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.ChartContainer</code> itself.\n\nCustom event for zoom out."
        },
        {
          "name": "attachPersonalizationPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ChartContainer",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.ChartContainer</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:personalizationPress personalizationPress} event of this <code>sap.suite.ui.commons.ChartContainer</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.ChartContainer</code> itself.\n\nEvent fired when a user clicks on the personalization icon."
        },
        {
          "name": "destroyContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ChartContainer",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the content in the aggregation {@link #getContent content}."
        },
        {
          "name": "destroyCustomIcons",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ChartContainer",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the customIcons in the aggregation {@link #getCustomIcons customIcons}."
        },
        {
          "name": "destroyDimensionSelectors",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ChartContainer",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the dimensionSelectors in the aggregation {@link #getDimensionSelectors dimensionSelectors}."
        },
        {
          "name": "destroyToolbar",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ChartContainer",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the toolbar in the aggregation {@link #getToolbar toolbar}."
        },
        {
          "name": "detachContentChange",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ChartContainer",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:contentChange contentChange} event of this <code>sap.suite.ui.commons.ChartContainer</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachCustomZoomInPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ChartContainer",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:customZoomInPress customZoomInPress} event of this <code>sap.suite.ui.commons.ChartContainer</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachCustomZoomOutPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ChartContainer",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:customZoomOutPress customZoomOutPress} event of this <code>sap.suite.ui.commons.ChartContainer</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachPersonalizationPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ChartContainer",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:personalizationPress personalizationPress} event of this <code>sap.suite.ui.commons.ChartContainer</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.ChartContainer with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "fireContentChange",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.ChartContainer",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "selectedItemId": {
                  "name": "selectedItemId",
                  "type": "string",
                  "optional": true,
                  "description": "Id of the selected item."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:contentChange contentChange} to attached listeners."
        },
        {
          "name": "fireCustomZoomInPress",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.ChartContainer",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:customZoomInPress customZoomInPress} to attached listeners."
        },
        {
          "name": "fireCustomZoomOutPress",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.ChartContainer",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:customZoomOutPress customZoomOutPress} to attached listeners."
        },
        {
          "name": "firePersonalizationPress",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.ChartContainer",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:personalizationPress personalizationPress} to attached listeners."
        },
        {
          "name": "getAutoAdjustHeight",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>autoAdjustHeight</code>"
          },
          "description": "Gets current value of property {@link #getAutoAdjustHeight autoAdjustHeight}.\n\nDetermine whether to stretch the chart height to the maximum possible height of ChartContainer's parent container. As a prerequisite, the parent container needs to have a fixed value height or be able to determine height from its parent.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ChartContainerContent[]"
          },
          "description": "Gets content of aggregation {@link #getContent content}.\n\nChartToolBar Content aggregation. Only sap.viz.ui5.controls.VizFrame, sap.m.Table and sap.ui.table.Table can be embedded. If not specified explicitly, the rendering order of the charts is determined by the sequence of contents provided by the application via this aggregation. This means, per default the first chart of the aggregation will be rendered within the container."
        },
        {
          "name": "getCustomIcons",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.Icon[]" },
          "description": "Gets content of aggregation {@link #getCustomIcons customIcons}.\n\nThis aggregation contains the custom icons that should be displayed additionally on the toolbar. It is not guaranteed that the same instance of the sap.ui.core.Icon control will be used within the toolbar, but the toolbar will contain a sap.m.OverflowToolbarButton with an icon property equal to the src property of the sap.ui.core.Icon provided in the aggregation. If a press event is triggered by the icon displayed on the toolbar, then the press handler of the original sap.ui.core.Icon control is used. The instance of the control, that has triggered the press event, can be accessed using the \"controlReference\" parameter of the event object."
        },
        {
          "name": "getDimensionSelectors",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.Control[]" },
          "description": "Gets content of aggregation {@link #getDimensionSelectors dimensionSelectors}.\n\nDimension Selects."
        },
        {
          "name": "getEnableScroll",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>enableScroll</code>"
          },
          "description": "Gets current value of property {@link #getEnableScroll enableScroll}.\n\nIf set to <code>true</code>, the Container control has its own scroll bar, with the scrolling taking place within the Container control itself.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getFullScreen",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>fullScreen</code>"
          },
          "description": "Gets current value of property {@link #getFullScreen fullScreen}.\n\nDisplay the chart and the toolbar in full screen or normal mode.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.ChartContainer."
        },
        {
          "name": "getScrollDelegate",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.core.delegate.ScrollEnablement",
            "description": "The current instance of the delegate"
          },
          "description": "Returns the current instance of the delegate to other controls."
        },
        {
          "name": "getSelectedContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.Control",
            "description": "The currently selected content"
          },
          "description": "Returns the currently selected content control."
        },
        {
          "name": "getSelectorGroupLabel",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>selectorGroupLabel</code>"
          },
          "description": "Gets current value of property {@link #getSelectorGroupLabel selectorGroupLabel}.\n\nCustom Label for Selectors Group.",
          "deprecated": {
            "since": "1.32.0",
            "text": "Obsolete property as sap.m.Toolbar is replaced by sap.m.OverflowToolbar."
          }
        },
        {
          "name": "getShowFullScreen",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showFullScreen</code>"
          },
          "description": "Gets current value of property {@link #getShowFullScreen showFullScreen}.\n\nSet to true to display the full screen icon. Set to false to hide it.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getShowLegend",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showLegend</code>"
          },
          "description": "Gets current value of property {@link #getShowLegend showLegend}.\n\nSet to true to display the charts' legends. Set to false to hide them. See also showLegendButton.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getShowLegendButton",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showLegendButton</code>"
          },
          "description": "Gets current value of property {@link #getShowLegendButton showLegendButton}.\n\nSet to true or false to display or hide a button for controlling the visbility of the chart's legend. Please be aware that setting this property to true indirectly is setting showLegend to false. If you need to hide the button but to show the legend, you need to set showLegend at a later point in time (onBeforeRendering). The execution order of the combined properties is not guaranteed by the control.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getShowPersonalization",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showPersonalization</code>"
          },
          "description": "Gets current value of property {@link #getShowPersonalization showPersonalization}.\n\nSet to true to display the personalization icon. Set to false to hide it.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getShowSelectionDetails",
          "visibility": "public",
          "since": "1.48.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showSelectionDetails</code>"
          },
          "description": "Gets current value of property {@link #getShowSelectionDetails showSelectionDetails}.\n\nSet to true to display the 'Details' button that opens a popup dialog with details about the selected data from the VizFrame based chart.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getShowZoom",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showZoom</code>"
          },
          "description": "Gets current value of property {@link #getShowZoom showZoom}.\n\nSet to true to display zoom icons. Set to false to hide them.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getTitle",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>title</code>"
          },
          "description": "Gets current value of property {@link #getTitle title}.\n\nString shown if there are no dimensions to display.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "getToolbar",
          "visibility": "public",
          "returnValue": { "type": "sap.m.OverflowToolbar" },
          "description": "Gets content of aggregation {@link #getToolbar toolbar}.\n\nOverflow ToolBar. If an external toolbar is used, it will be integrated with the embedded toolbar via a placeholder. This placeholder is mandatory, and it needs to be of type 'sap.suite.ui.commons.ChartContainerToolbarPlaceholder'."
        },
        {
          "name": "getWrapLabels",
          "visibility": "public",
          "since": "1.58.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>wrapLabels</code>"
          },
          "description": "Gets current value of property {@link #getWrapLabels wrapLabels}.\n\nSet to true to wrap text labels in the dialog that opens when the user clicks or taps the 'Details' button.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "indexOfContent",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oContent",
              "type": "sap.suite.ui.commons.ChartContainerContent",
              "optional": false,
              "description": "The content whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.suite.ui.commons.ChartContainerContent</code> in the aggregation {@link #getContent content}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "indexOfCustomIcon",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oCustomIcon",
              "type": "sap.ui.core.Icon",
              "optional": false,
              "description": "The customIcon whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.ui.core.Icon</code> in the aggregation {@link #getCustomIcons customIcons}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "indexOfDimensionSelector",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oDimensionSelector",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The dimensionSelector whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.ui.core.Control</code> in the aggregation {@link #getDimensionSelectors dimensionSelectors}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "insertContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ChartContainer",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oContent",
              "type": "sap.suite.ui.commons.ChartContainerContent",
              "optional": false,
              "description": "The content to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the content should be inserted at; for a negative value of <code>iIndex</code>, the content is inserted at position 0; for a value greater than the current size of the aggregation, the content is inserted at the last position"
            }
          ],
          "description": "Inserts a content into the aggregation {@link #getContent content}."
        },
        {
          "name": "insertCustomIcon",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ChartContainer",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oCustomIcon",
              "type": "sap.ui.core.Icon",
              "optional": false,
              "description": "The customIcon to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the customIcon should be inserted at; for a negative value of <code>iIndex</code>, the customIcon is inserted at position 0; for a value greater than the current size of the aggregation, the customIcon is inserted at the last position"
            }
          ],
          "description": "Inserts a customIcon into the aggregation {@link #getCustomIcons customIcons}."
        },
        {
          "name": "insertDimensionSelector",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ChartContainer",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oDimensionSelector",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The dimensionSelector to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the dimensionSelector should be inserted at; for a negative value of <code>iIndex</code>, the dimensionSelector is inserted at position 0; for a value greater than the current size of the aggregation, the dimensionSelector is inserted at the last position"
            }
          ],
          "description": "Inserts a dimensionSelector into the aggregation {@link #getDimensionSelectors dimensionSelectors}."
        },
        {
          "name": "removeAllContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ChartContainerContent[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getContent content}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeAllCustomIcons",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.Icon[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getCustomIcons customIcons}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeAllDimensionSelectors",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.Control[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getDimensionSelectors dimensionSelectors}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ChartContainerContent",
            "description": "The removed content or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vContent",
              "type": "int|string|sap.suite.ui.commons.ChartContainerContent",
              "optional": false,
              "description": "The content to remove or its index or id"
            }
          ],
          "description": "Removes a content from the aggregation {@link #getContent content}."
        },
        {
          "name": "removeCustomIcon",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.Icon",
            "description": "The removed customIcon or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vCustomIcon",
              "type": "int|string|sap.ui.core.Icon",
              "optional": false,
              "description": "The customIcon to remove or its index or id"
            }
          ],
          "description": "Removes a customIcon from the aggregation {@link #getCustomIcons customIcons}."
        },
        {
          "name": "removeDimensionSelector",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.Control",
            "description": "The removed dimensionSelector or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vDimensionSelector",
              "type": "int|string|sap.ui.core.Control",
              "optional": false,
              "description": "The dimensionSelector to remove or its index or id"
            }
          ],
          "description": "Removes a dimensionSelector from the aggregation {@link #getDimensionSelectors dimensionSelectors}."
        },
        {
          "name": "setAutoAdjustHeight",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ChartContainer",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bAutoAdjustHeight",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>autoAdjustHeight</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getAutoAdjustHeight autoAdjustHeight}.\n\nDetermine whether to stretch the chart height to the maximum possible height of ChartContainer's parent container. As a prerequisite, the parent container needs to have a fixed value height or be able to determine height from its parent.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setEnableScroll",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ChartContainer",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bEnableScroll",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>enableScroll</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getEnableScroll enableScroll}.\n\nIf set to <code>true</code>, the Container control has its own scroll bar, with the scrolling taking place within the Container control itself.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setFullScreen",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ChartContainer",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bFullScreen",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>fullScreen</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getFullScreen fullScreen}.\n\nDisplay the chart and the toolbar in full screen or normal mode.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setShowFullScreen",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ChartContainer",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowFullScreen",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showFullScreen</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowFullScreen showFullScreen}.\n\nSet to true to display the full screen icon. Set to false to hide it.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setShowLegend",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ChartContainer",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowLegend",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showLegend</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowLegend showLegend}.\n\nSet to true to display the charts' legends. Set to false to hide them. See also showLegendButton.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setShowLegendButton",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ChartContainer",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowLegendButton",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showLegendButton</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowLegendButton showLegendButton}.\n\nSet to true or false to display or hide a button for controlling the visbility of the chart's legend. Please be aware that setting this property to true indirectly is setting showLegend to false. If you need to hide the button but to show the legend, you need to set showLegend at a later point in time (onBeforeRendering). The execution order of the combined properties is not guaranteed by the control.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setShowPersonalization",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ChartContainer",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowPersonalization",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showPersonalization</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowPersonalization showPersonalization}.\n\nSet to true to display the personalization icon. Set to false to hide it.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setShowSelectionDetails",
          "visibility": "public",
          "since": "1.48.0",
          "returnValue": {
            "type": "sap.suite.ui.commons.ChartContainer",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowSelectionDetails",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showSelectionDetails</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowSelectionDetails showSelectionDetails}.\n\nSet to true to display the 'Details' button that opens a popup dialog with details about the selected data from the VizFrame based chart.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setShowZoom",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ChartContainer",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowZoom",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showZoom</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowZoom showZoom}.\n\nSet to true to display zoom icons. Set to false to hide them.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setTitle",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ChartContainer",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sTitle",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>title</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getTitle title}.\n\nString shown if there are no dimensions to display.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "setToolbar",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ChartContainer",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oToolbar",
              "type": "sap.m.OverflowToolbar",
              "optional": false,
              "description": "The toolbar to set"
            }
          ],
          "description": "Sets the aggregated {@link #getToolbar toolbar}."
        },
        {
          "name": "setWrapLabels",
          "visibility": "public",
          "since": "1.58.0",
          "returnValue": {
            "type": "sap.suite.ui.commons.ChartContainer",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bWrapLabels",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>wrapLabels</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getWrapLabels wrapLabels}.\n\nSet to true to wrap text labels in the dialog that opens when the user clicks or taps the 'Details' button.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "switchChart",
          "visibility": "public",
          "parameters": [
            {
              "name": "chart",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The new content (Chart or Table) to be displayed"
            }
          ],
          "description": "Switches the currently viewed content (triggers re-rendering)."
        },
        {
          "name": "updateChartContainer",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ChartContainer",
            "description": "Reference to this in order to allow method chaining"
          },
          "description": "Updates ChartContainer and re-renders all its contents."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.ChartContainerContent",
      "basename": "ChartContainerContent",
      "resource": "sap/suite/ui/commons/ChartContainerContent.js",
      "module": "sap/suite/ui/commons/ChartContainerContent",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.core.Control",
      "description": "Content aggregation for ChartContainer.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "icon",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Icon of the Chart.",
            "methods": ["getIcon", "setIcon"]
          },
          {
            "name": "title",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Title of the Chart/Table",
            "methods": ["getTitle", "setTitle"]
          }
        ],
        "aggregations": [
          {
            "name": "content",
            "singularName": "content",
            "type": "sap.ui.core.Control",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "Chart or Table as content of the ChartToolBar. Supported Types: sap.viz.ui5.controls.VizFrame, sap.m.Table, sap.ui.table.Table",
            "methods": ["getContent", "destroyContent", "setContent"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new ChartContainerContent.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "destroyContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ChartContainerContent",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the content in the aggregation {@link #getContent content}."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.ChartContainerContent with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "getContent",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.Control" },
          "description": "Gets content of aggregation {@link #getContent content}.\n\nChart or Table as content of the ChartToolBar. Supported Types: sap.viz.ui5.controls.VizFrame, sap.m.Table, sap.ui.table.Table"
        },
        {
          "name": "getIcon",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>icon</code>"
          },
          "description": "Gets current value of property {@link #getIcon icon}.\n\nIcon of the Chart."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.ChartContainerContent."
        },
        {
          "name": "getSelectionDetails",
          "visibility": "public",
          "since": "1.48",
          "returnValue": {
            "type": "sap.m.SelectionDetailsFacade",
            "description": "The reduced Selection Details facade for outer framework usages."
          },
          "description": "Getter for the Selection Details facade."
        },
        {
          "name": "getTitle",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>title</code>"
          },
          "description": "Gets current value of property {@link #getTitle title}.\n\nTitle of the Chart/Table"
        },
        {
          "name": "setContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ChartContainerContent",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oContent",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The content to set"
            }
          ],
          "description": "Sets the aggregated {@link #getContent content}."
        },
        {
          "name": "setIcon",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ChartContainerContent",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sIcon",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>icon</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getIcon icon}.\n\nIcon of the Chart.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setTitle",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ChartContainerContent",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sTitle",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>title</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getTitle title}.\n\nTitle of the Chart/Table\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.ChartContainerToolbarPlaceholder",
      "basename": "ChartContainerToolbarPlaceholder",
      "resource": "sap/suite/ui/commons/ChartContainerToolbarPlaceholder.js",
      "module": "sap/suite/ui/commons/ChartContainerToolbarPlaceholder",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.core.Control",
      "description": "Provides a placeholder for the embedded chart container toolbar.",
      "ui5-metamodel": true,
      "ui5-metadata": { "stereotype": "control" },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new ChartContainerToolbarPlaceholder.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control} can be used."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.ChartContainerToolbarPlaceholder with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.ChartContainerToolbarPlaceholder."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.ChartTile",
      "basename": "ChartTile",
      "resource": "sap/suite/ui/commons/ChartTile.js",
      "module": "sap/suite/ui/commons/ChartTile",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.suite.ui.commons.InfoTile",
      "description": "This control is the implementation of the InfoTile to show a comparison or bullet chart.",
      "deprecated": {
        "since": "1.25",
        "text": "This control has been deprecated in favor of new sap.suite.ui.commons.GenericTile."
      },
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "unit",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The percent sign, the currency symbol, or the unit of measure.",
            "methods": ["getUnit", "setUnit"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new ChartTile.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.ChartTile with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.suite.ui.commons.InfoTile.extend}."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.ChartTile."
        },
        {
          "name": "getUnit",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>unit</code>"
          },
          "description": "Gets current value of property {@link #getUnit unit}.\n\nThe percent sign, the currency symbol, or the unit of measure."
        },
        {
          "name": "setUnit",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ChartTile",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sUnit",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>unit</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getUnit unit}.\n\nThe percent sign, the currency symbol, or the unit of measure.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.ColumnData",
      "basename": "ColumnData",
      "resource": "sap/suite/ui/commons/ColumnData.js",
      "module": "sap/suite/ui/commons/ColumnData",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.suite.ui.microchart.ColumnMicroChartData",
      "description": "Column data holder.",
      "deprecated": {
        "since": "1.34",
        "text": "this control is a mere wrapper for sap.suite.ui.microchart.ColumnMicroChartData."
      },
      "ui5-metamodel": true,
      "ui5-metadata": { "stereotype": "element" },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, automatically generated if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new ColumnData."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.ColumnData with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.suite.ui.microchart.ColumnMicroChartData.extend}."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.ColumnData."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.ColumnMicroChart",
      "basename": "ColumnMicroChart",
      "resource": "sap/suite/ui/commons/ColumnMicroChart.js",
      "module": "sap/suite/ui/commons/ColumnMicroChart",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.suite.ui.microchart.ColumnMicroChart",
      "description": "This control shows a column chart.",
      "deprecated": {
        "since": "1.34",
        "text": "this control is a mere wrapper for sap.suite.ui.microchart.ColumnMicroChart."
      },
      "ui5-metamodel": true,
      "ui5-metadata": { "stereotype": "control" },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, automatically generated if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new ColumnMicroChart."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.ColumnMicroChart with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.suite.ui.microchart.ColumnMicroChart.extend}."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.ColumnMicroChart."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.ColumnMicroChartLabel",
      "basename": "ColumnMicroChartLabel",
      "resource": "sap/suite/ui/commons/ColumnMicroChartLabel.js",
      "module": "sap/suite/ui/commons/ColumnMicroChartLabel",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.suite.ui.microchart.ColumnMicroChartLabel",
      "description": "This element contains data for a label in ColumnMicroChart control.",
      "deprecated": {
        "since": "1.34",
        "text": "this control is a mere wrapper for sap.suite.ui.microchart.ColumnMicroChartLabel."
      },
      "ui5-metamodel": true,
      "ui5-metadata": { "stereotype": "element" },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, automatically generated if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new ColumnMicroChartLabel."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.ColumnMicroChartLabel with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.suite.ui.microchart.ColumnMicroChartLabel.extend}."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.ColumnMicroChartLabel."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.suite.ui.commons.CommonBackground",
      "basename": "CommonBackground",
      "resource": "sap/suite/ui/commons/library.js",
      "module": "sap/suite/ui/commons/library",
      "export": "CommonBackground",
      "static": true,
      "visibility": "public",
      "description": "Enumeration of possible theme specific background colors.",
      "deprecated": {
        "since": "1.34",
        "text": "Deprecated. Moved to sapui5.runtime."
      },
      "ui5-metamodel": true,
      "properties": [
        {
          "name": "Dark",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Dark background color."
        },
        {
          "name": "Darkest",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The darkest background color."
        },
        {
          "name": "ExtraDark",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Extra dark background color."
        },
        {
          "name": "ExtraLight",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Extra light background color."
        },
        {
          "name": "Light",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Light background color."
        },
        {
          "name": "Lightest",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The lightest background color."
        },
        {
          "name": "Medium",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Medium background color."
        },
        {
          "name": "MediumLight",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Medium light background color."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.ComparisonChart",
      "basename": "ComparisonChart",
      "resource": "sap/suite/ui/commons/ComparisonChart.js",
      "module": "sap/suite/ui/commons/ComparisonChart",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.suite.ui.microchart.ComparisonMicroChart",
      "description": "This control shows a comparison chart.",
      "deprecated": {
        "since": "1.34",
        "text": "this control is a mere wrapper for sap.suite.ui.microchart.ComparisonMicroChart."
      },
      "ui5-metamodel": true,
      "ui5-metadata": { "stereotype": "control" },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, automatically generated if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new ComparisonChart."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.ComparisonChart with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.suite.ui.microchart.ComparisonMicroChart.extend}."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.ComparisonChart."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.suite.ui.commons.ComparisonChartView",
      "basename": "ComparisonChartView",
      "resource": "sap/suite/ui/commons/library.js",
      "module": "sap/suite/ui/commons/library",
      "export": "ComparisonChartView",
      "static": true,
      "visibility": "public",
      "description": "The view of the ComparisonChart.",
      "deprecated": {
        "since": "1.34",
        "text": "Deprecated. sap.suite.ui.microchart.ComparisonMicroChartViewType should be used."
      },
      "ui5-metamodel": true,
      "properties": [
        {
          "name": "Normal",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Titles and values are displayed above the bars."
        },
        {
          "name": "Wide",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Titles and values are displayed in the same line with the bars."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.ComparisonData",
      "basename": "ComparisonData",
      "resource": "sap/suite/ui/commons/ComparisonData.js",
      "module": "sap/suite/ui/commons/ComparisonData",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.suite.ui.microchart.ComparisonMicroChartData",
      "description": "Comparison tile value holder.",
      "deprecated": {
        "since": "1.34",
        "text": "this control is a mere wrapper for sap.suite.ui.microchart.ComparisonMicroChartData."
      },
      "ui5-metamodel": true,
      "ui5-metadata": { "stereotype": "element" },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, automatically generated if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new ComparisonData."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.ComparisonData with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.suite.ui.microchart.ComparisonMicroChartData.extend}."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.ComparisonData."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.DateRangeScroller",
      "basename": "DateRangeScroller",
      "resource": "sap/suite/ui/commons/DateRangeScroller.js",
      "module": "sap/suite/ui/commons/DateRangeScroller",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.core.Control",
      "description": "The DateRangeScroller provides a method to scroll through a series of time periods, each of which is represented by a starting date and an ending date, known as the date range. The user may scroll to the previous or next date range. Several predefined ranges are supported such as day, week, work week, month, and year.",
      "deprecated": { "since": "1.34", "text": "Deprecated. Not Fiori." },
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "associations": [
          {
            "name": "ariaDescribedBy",
            "singularName": "ariaDescribedBy",
            "type": "sap.ui.core.Control",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Association to controls / ids which describe this control (see WAI-ARIA attribute aria-describedby).",
            "methods": [
              "getAriaDescribedBy",
              "addAriaDescribedBy",
              "removeAriaDescribedBy",
              "removeAllAriaDescribedBy"
            ]
          },
          {
            "name": "ariaLabelledBy",
            "singularName": "ariaLabelledBy",
            "type": "sap.ui.core.Control",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby).",
            "methods": [
              "getAriaLabelledBy",
              "addAriaLabelledBy",
              "removeAriaLabelledBy",
              "removeAllAriaLabelledBy"
            ]
          }
        ],
        "events": [
          {
            "name": "change",
            "visibility": "public",
            "description": "This event is fired whenever the date range is changed.",
            "parameters": {
              "dateRange": {
                "name": "dateRange",
                "type": "any",
                "description": "Object containing startDate and endDate Date properties signifying the start and ending dates of the currently selected range."
              }
            },
            "methods": ["attachChange", "detachChange", "fireChange"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new DateRangeScroller.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "change",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "dateRange": {
                      "name": "dateRange",
                      "type": "any",
                      "optional": false,
                      "description": "Object containing startDate and endDate Date properties signifying the start and ending dates of the currently selected range."
                    }
                  }
                }
              }
            }
          ],
          "description": "This event is fired whenever the date range is changed."
        }
      ],
      "methods": [
        {
          "name": "addAriaDescribedBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.DateRangeScroller",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "vAriaDescribedBy",
              "type": "sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaDescribedBy to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some ariaDescribedBy into the association {@link #getAriaDescribedBy ariaDescribedBy}."
        },
        {
          "name": "addAriaLabelledBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.DateRangeScroller",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "vAriaLabelledBy",
              "type": "sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaLabelledBy to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "attachChange",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.DateRangeScroller",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.DateRangeScroller</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:change change} event of this <code>sap.suite.ui.commons.DateRangeScroller</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.DateRangeScroller</code> itself.\n\nThis event is fired whenever the date range is changed."
        },
        {
          "name": "decrementDateRange",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.DateRangeScroller",
            "description": "<code>this</code> to allow method chaining"
          },
          "description": "Decrement the date range by a time period increment according to the the date range type and fire the dateChange event."
        },
        {
          "name": "detachChange",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.DateRangeScroller",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:change change} event of this <code>sap.suite.ui.commons.DateRangeScroller</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.DateRangeScroller with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "fireChange",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.DateRangeScroller",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "dateRange": {
                  "name": "dateRange",
                  "type": "any",
                  "optional": true,
                  "description": "Object containing startDate and endDate Date properties signifying the start and ending dates of the currently selected range."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:change change} to attached listeners."
        },
        {
          "name": "getAriaDescribedBy",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.ID[]" },
          "description": "Returns array of IDs of the elements which are the current targets of the association {@link #getAriaDescribedBy ariaDescribedBy}."
        },
        {
          "name": "getAriaLabelledBy",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.ID[]" },
          "description": "Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "getDateRange",
          "visibility": "public",
          "returnValue": {
            "type": "Object",
            "description": "The date range containing start and end Date."
          },
          "description": "Returns an object containing startDate and endDate set to the current start and end Date objects."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.DateRangeScroller."
        },
        {
          "name": "incrementDateRange",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.DateRangeScroller",
            "description": "<code>this</code> to allow method chaining."
          },
          "description": "Increment the date range by a time period increment according to the the date range type and fire the dateChange event."
        },
        {
          "name": "removeAllAriaDescribedBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.ID[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls in the association named {@link #getAriaDescribedBy ariaDescribedBy}."
        },
        {
          "name": "removeAllAriaLabelledBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.ID[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "removeAriaDescribedBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.ID",
            "description": "The removed ariaDescribedBy or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vAriaDescribedBy",
              "type": "int|sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaDescribedBy to be removed or its index or ID"
            }
          ],
          "description": "Removes an ariaDescribedBy from the association named {@link #getAriaDescribedBy ariaDescribedBy}."
        },
        {
          "name": "removeAriaLabelledBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.ID",
            "description": "The removed ariaLabelledBy or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vAriaLabelledBy",
              "type": "int|sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaLabelledBy to be removed or its index or ID"
            }
          ],
          "description": "Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "setDateFormat",
          "visibility": "public",
          "parameters": [
            {
              "name": "oDateFormat",
              "type": "sap.ui.core.format.DateFormat",
              "optional": false,
              "description": "Date format which should be used"
            }
          ],
          "description": "Setter for dateFormat which is used for formating the dates If passed object is null or is of incorrect type, control's default formatting will be used."
        },
        {
          "name": "setDateRangeCustom",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.DateRangeScroller",
            "description": "<code>this</code> to allow method chaining."
          },
          "parameters": [
            {
              "name": "dInitialDate",
              "type": "Date",
              "optional": false,
              "description": "The initial date for the custom range."
            },
            {
              "name": "iDuration",
              "type": "int",
              "optional": true,
              "defaultValue": "current custom duration",
              "description": "The number of days in the custom range, including the start date."
            }
          ],
          "description": "Set a custom date range beginning with the specified start date that increments/decrements <code>iDuration</code> days at a time."
        },
        {
          "name": "setDateRangeDay",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.DateRangeScroller",
            "description": "<code>this</code> to allow method chaining."
          },
          "parameters": [
            {
              "name": "dInitialDate",
              "type": "Date",
              "optional": false,
              "description": "The initial date."
            }
          ],
          "description": "Set a date range equal to a single day, starting with the given initial date."
        },
        {
          "name": "setDateRangeMonth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.DateRangeScroller",
            "description": "<code>this</code> to allow method chaining."
          },
          "parameters": [
            {
              "name": "dInitialDate",
              "type": "Date",
              "optional": false,
              "description": "Any date that falls within the desired month."
            }
          ],
          "description": "Set a date range that increments/decrements one calendar month at a time. The month date range begins on the first day of the month (beginning of the day) and ends on the last day of the month (end of the day)."
        },
        {
          "name": "setDateRangeWeek",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.DateRangeScroller",
            "description": "<code>this</code> to allow method chaining."
          },
          "parameters": [
            {
              "name": "dInitialDate",
              "type": "Date",
              "optional": false,
              "description": "Any date that falls on the desired week. Start/end dates will be adjusted according to the first day of the week."
            },
            {
              "name": "oSettings",
              "type": "Object",
              "optional": true,
              "parameterProperties": {
                "duration": {
                  "name": "duration",
                  "type": "int",
                  "optional": true,
                  "defaultValue": 7,
                  "description": "The number of days in the range with a minimum of 1 and maximum of 7."
                },
                "iFirstDayOfWeek": {
                  "name": "iFirstDayOfWeek",
                  "type": "int",
                  "optional": true,
                  "defaultValue": 1,
                  "description": "The starting day for the range. Valid values are 0-6, with 0=Sunday and 6=Saturday."
                }
              },
              "description": "Settings for the object"
            }
          ],
          "description": "Set a date range that steps one week at a time. The starting date is set according to the first day of the week (default is Monday) and the initial date. For example, if the first day of the week is set to Tuesday and the initial date is Wednesday, January 9, 2013, then the starting date will be Tuesday, January 8, 2013.\n\nThe last day of the range is calculated by adding (duration - 1) days to the starting date."
        },
        {
          "name": "setDateRangeYear",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.DateRangeScroller",
            "description": "<code>this</code> to allow method chaining."
          },
          "parameters": [
            {
              "name": "dInitialDate",
              "type": "Date",
              "optional": false,
              "description": "Any date that falls within the desired year."
            }
          ],
          "description": "Set a date range that increments/decrements one calendar year at a time. The year date range begins on the first day of the year (beginning of the day) and ends on the last day of the year (end of the day)."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.DateRangeSlider",
      "basename": "DateRangeSlider",
      "resource": "sap/suite/ui/commons/DateRangeSlider.js",
      "module": "sap/suite/ui/commons/DateRangeSlider",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.core.Control",
      "description": "The Date Range Slider provides the user with a Range Slider control that is optimized for use with Dates.",
      "deprecated": { "since": "1.34", "text": "Deprecated. Not Fiori." },
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "width",
            "type": "sap.ui.core.CSSSize",
            "defaultValue": "100%",
            "group": "Dimension",
            "visibility": "public",
            "description": "Width of the horizontal date range slider.",
            "methods": ["getWidth", "setWidth"]
          },
          {
            "name": "enabled",
            "type": "boolean",
            "defaultValue": true,
            "group": "Appearance",
            "visibility": "public",
            "description": "This property switches the enabled state of the control. Disabled fields have different colors, and can not be focused.",
            "methods": ["getEnabled", "setEnabled"]
          },
          {
            "name": "editable",
            "type": "boolean",
            "defaultValue": true,
            "group": "Behavior",
            "visibility": "public",
            "description": "This property switches the enabled state of the control. Using the date range slider interactively requires this property to be true.",
            "methods": ["getEditable", "setEditable"]
          },
          {
            "name": "visible",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "description": "This property switches the visible state of the control. Invisible date range slider are not rendered.",
            "methods": ["getVisible", "setVisible"]
          },
          {
            "name": "showBubbles",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "description": "Property to show or hide bubbles. Default is true.",
            "methods": ["getShowBubbles", "setShowBubbles"]
          },
          {
            "name": "smallStepWidth",
            "type": "float",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "description": "The grips of the control can only be moved in steps of this width.",
            "methods": ["getSmallStepWidth", "setSmallStepWidth"]
          },
          {
            "name": "totalUnits",
            "type": "int",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "description": "Number of units between ticks.",
            "methods": ["getTotalUnits", "setTotalUnits"]
          },
          {
            "name": "stepLabels",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "description": "Display a date label above each tick.",
            "methods": ["getStepLabels", "setStepLabels"]
          },
          {
            "name": "labels",
            "type": "string[]",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Labels to be displayed instead of dates.",
            "methods": ["getLabels", "setLabels"]
          },
          {
            "name": "min",
            "type": "object",
            "defaultValue": null,
            "group": "Behavior",
            "visibility": "public",
            "description": "Minimum date for the slider.",
            "methods": ["getMin", "setMin"]
          },
          {
            "name": "max",
            "type": "object",
            "defaultValue": null,
            "group": "Behavior",
            "visibility": "public",
            "description": "Maximum date for the slider.",
            "methods": ["getMax", "setMax"]
          },
          {
            "name": "value",
            "type": "object",
            "defaultValue": null,
            "group": "Behavior",
            "visibility": "public",
            "description": "Date value of the left grip.",
            "methods": ["getValue", "setValue"]
          },
          {
            "name": "value2",
            "type": "object",
            "defaultValue": null,
            "group": "Behavior",
            "visibility": "public",
            "description": "Date value of the right grip.",
            "methods": ["getValue2", "setValue2"]
          },
          {
            "name": "pinGrip",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "description": "Pin the left grip so that user cannot move it with the keyboard or mouse.",
            "methods": ["getPinGrip", "setPinGrip"]
          },
          {
            "name": "pinGrip2",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "description": "Pin the right grip so that user cannot move it with the keyboard or mouse.",
            "methods": ["getPinGrip2", "setPinGrip2"]
          }
        ],
        "events": [
          {
            "name": "change",
            "visibility": "public",
            "description": "This event is fired when user changes completes the selection of a new date using a grip. It contains the Date object value of each grip such that the left grip value is held by the value property and the right grip value is held by the value2 property.",
            "methods": ["attachChange", "detachChange", "fireChange"]
          },
          {
            "name": "liveChange",
            "visibility": "public",
            "description": "This live event is fired as the user slides a grip with the mouse. It contains the Date object value of each grip such that the left grip value is held by the value property and the right grip value is held by the value2 property.",
            "methods": [
              "attachLiveChange",
              "detachLiveChange",
              "fireLiveChange"
            ]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new DateRangeSlider.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "change",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "This event is fired when user changes completes the selection of a new date using a grip. It contains the Date object value of each grip such that the left grip value is held by the value property and the right grip value is held by the value2 property."
        },
        {
          "name": "liveChange",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "This live event is fired as the user slides a grip with the mouse. It contains the Date object value of each grip such that the left grip value is held by the value property and the right grip value is held by the value2 property."
        }
      ],
      "methods": [
        {
          "name": "attachChange",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.DateRangeSlider",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.DateRangeSlider</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:change change} event of this <code>sap.suite.ui.commons.DateRangeSlider</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.DateRangeSlider</code> itself.\n\nThis event is fired when user changes completes the selection of a new date using a grip. It contains the Date object value of each grip such that the left grip value is held by the value property and the right grip value is held by the value2 property."
        },
        {
          "name": "attachLiveChange",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.DateRangeSlider",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.DateRangeSlider</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:liveChange liveChange} event of this <code>sap.suite.ui.commons.DateRangeSlider</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.DateRangeSlider</code> itself.\n\nThis live event is fired as the user slides a grip with the mouse. It contains the Date object value of each grip such that the left grip value is held by the value property and the right grip value is held by the value2 property."
        },
        {
          "name": "detachChange",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.DateRangeSlider",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:change change} event of this <code>sap.suite.ui.commons.DateRangeSlider</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachLiveChange",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.DateRangeSlider",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:liveChange liveChange} event of this <code>sap.suite.ui.commons.DateRangeSlider</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.DateRangeSlider with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "fireChange",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.DateRangeSlider",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:change change} to attached listeners."
        },
        {
          "name": "fireLiveChange",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.DateRangeSlider",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:liveChange liveChange} to attached listeners."
        },
        {
          "name": "getEditable",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>editable</code>"
          },
          "description": "Gets current value of property {@link #getEditable editable}.\n\nThis property switches the enabled state of the control. Using the date range slider interactively requires this property to be true.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getEnabled",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>enabled</code>"
          },
          "description": "Gets current value of property {@link #getEnabled enabled}.\n\nThis property switches the enabled state of the control. Disabled fields have different colors, and can not be focused.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getLabels",
          "visibility": "public",
          "returnValue": {
            "type": "string[]",
            "description": "Value of property <code>labels</code>"
          },
          "description": "Gets current value of property {@link #getLabels labels}.\n\nLabels to be displayed instead of dates."
        },
        {
          "name": "getMax",
          "visibility": "public",
          "returnValue": {
            "type": "object",
            "description": "Value of property <code>max</code>"
          },
          "description": "Gets current value of property {@link #getMax max}.\n\nMaximum date for the slider."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.DateRangeSlider."
        },
        {
          "name": "getMin",
          "visibility": "public",
          "returnValue": {
            "type": "object",
            "description": "Value of property <code>min</code>"
          },
          "description": "Gets current value of property {@link #getMin min}.\n\nMinimum date for the slider."
        },
        {
          "name": "getPinGrip",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>pinGrip</code>"
          },
          "description": "Gets current value of property {@link #getPinGrip pinGrip}.\n\nPin the left grip so that user cannot move it with the keyboard or mouse.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getPinGrip2",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>pinGrip2</code>"
          },
          "description": "Gets current value of property {@link #getPinGrip2 pinGrip2}.\n\nPin the right grip so that user cannot move it with the keyboard or mouse.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getShowBubbles",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showBubbles</code>"
          },
          "description": "Gets current value of property {@link #getShowBubbles showBubbles}.\n\nProperty to show or hide bubbles. Default is true.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getSmallStepWidth",
          "visibility": "public",
          "returnValue": {
            "type": "float",
            "description": "Value of property <code>smallStepWidth</code>"
          },
          "description": "Gets current value of property {@link #getSmallStepWidth smallStepWidth}.\n\nThe grips of the control can only be moved in steps of this width."
        },
        {
          "name": "getStepLabels",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>stepLabels</code>"
          },
          "description": "Gets current value of property {@link #getStepLabels stepLabels}.\n\nDisplay a date label above each tick.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getTotalUnits",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>totalUnits</code>"
          },
          "description": "Gets current value of property {@link #getTotalUnits totalUnits}.\n\nNumber of units between ticks."
        },
        {
          "name": "getValue",
          "visibility": "public",
          "returnValue": {
            "type": "object",
            "description": "Value of property <code>value</code>"
          },
          "description": "Gets current value of property {@link #getValue value}.\n\nDate value of the left grip."
        },
        {
          "name": "getValue2",
          "visibility": "public",
          "returnValue": {
            "type": "object",
            "description": "Value of property <code>value2</code>"
          },
          "description": "Gets current value of property {@link #getValue2 value2}.\n\nDate value of the right grip."
        },
        {
          "name": "getVisible",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>visible</code>"
          },
          "description": "Gets current value of property {@link #getVisible visible}.\n\nThis property switches the visible state of the control. Invisible date range slider are not rendered.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.CSSSize",
            "description": "Value of property <code>width</code>"
          },
          "description": "Gets current value of property {@link #getWidth width}.\n\nWidth of the horizontal date range slider.\n\nDefault value is <code>100%</code>."
        },
        {
          "name": "setDateFormat",
          "visibility": "public",
          "parameters": [
            {
              "name": "oDateFormat",
              "type": "sap.ui.core.format.DateFormat",
              "optional": false,
              "description": "Date format which is used to format the dates."
            }
          ],
          "description": "Setter for dateFormat which is used to format the dates for Labels, bubble texts, and tool tips. If passed object is null or is of incorrect type, _oDateRangeSliderInternal's default formatting will be used."
        },
        {
          "name": "setDayGranularity",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.DateRangeSlider",
            "description": "<code>this</code> to allow method chaining."
          },
          "description": "Set Date Range Slider Granularity to Day"
        },
        {
          "name": "setEditable",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.DateRangeSlider",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bEditable",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>editable</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getEditable editable}.\n\nThis property switches the enabled state of the control. Using the date range slider interactively requires this property to be true.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setEnabled",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.DateRangeSlider",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bEnabled",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>enabled</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getEnabled enabled}.\n\nThis property switches the enabled state of the control. Disabled fields have different colors, and can not be focused.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setLabels",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.DateRangeSlider",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sLabels",
              "type": "string[]",
              "optional": false,
              "description": "New value for property <code>labels</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getLabels labels}.\n\nLabels to be displayed instead of dates.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setMax",
          "visibility": "public",
          "parameters": [
            {
              "name": "dMax",
              "type": "Date",
              "optional": false,
              "description": "The max date."
            }
          ],
          "description": "Set max property for the DateRangeSlider. This sets the maximum date for the slider."
        },
        {
          "name": "setMin",
          "visibility": "public",
          "parameters": [
            {
              "name": "dMin",
              "type": "Date",
              "optional": false,
              "description": "The min date."
            }
          ],
          "description": "Set min property for the DateRangeSlider. This sets the minimum date for the slider."
        },
        {
          "name": "setMonthGranularity",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.DateRangeSlider",
            "description": "<code>this</code> to allow method chaining."
          },
          "description": "Set Date Range Slider Granularity to Month"
        },
        {
          "name": "setPinGrip",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.DateRangeSlider",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bPinGrip",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>pinGrip</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getPinGrip pinGrip}.\n\nPin the left grip so that user cannot move it with the keyboard or mouse.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setPinGrip2",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.DateRangeSlider",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bPinGrip2",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>pinGrip2</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getPinGrip2 pinGrip2}.\n\nPin the right grip so that user cannot move it with the keyboard or mouse.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setShowBubbles",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.DateRangeSlider",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowBubbles",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showBubbles</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowBubbles showBubbles}.\n\nProperty to show or hide bubbles. Default is true.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setSmallStepWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.DateRangeSlider",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fSmallStepWidth",
              "type": "float",
              "optional": false,
              "description": "New value for property <code>smallStepWidth</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSmallStepWidth smallStepWidth}.\n\nThe grips of the control can only be moved in steps of this width.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setStepLabels",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.DateRangeSlider",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bStepLabels",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>stepLabels</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getStepLabels stepLabels}.\n\nDisplay a date label above each tick.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setTotalUnits",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.DateRangeSlider",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iTotalUnits",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>totalUnits</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getTotalUnits totalUnits}.\n\nNumber of units between ticks.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setValue",
          "visibility": "public",
          "parameters": [
            {
              "name": "dValue",
              "type": "Date",
              "optional": false,
              "description": "The value date."
            }
          ],
          "description": "Set value property for the DateRangeSlider. This sets the value date for the slider."
        },
        {
          "name": "setValue2",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.DateRangeSlider",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oValue2",
              "type": "object",
              "optional": false,
              "description": "New value for property <code>value2</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getValue2 value2}.\n\nDate value of the right grip.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setVisible",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.DateRangeSlider",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bVisible",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>visible</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getVisible visible}.\n\nThis property switches the visible state of the control. Invisible date range slider are not rendered.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.DateRangeSlider",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sWidth",
              "type": "sap.ui.core.CSSSize",
              "optional": false,
              "description": "New value for property <code>width</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getWidth width}.\n\nWidth of the horizontal date range slider.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>100%</code>."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.DateRangeSliderInternal",
      "basename": "DateRangeSliderInternal",
      "resource": "sap/suite/ui/commons/DateRangeSliderInternal.js",
      "module": "sap/suite/ui/commons/DateRangeSliderInternal",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.commons.RangeSlider",
      "description": "The Date Range Slider provides the user with a Range Slider control that is optimized for use with Dates.",
      "deprecated": { "since": "1.34", "text": "Deprecated. Not Fiori." },
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "showBubbles",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "description": "Property to show or hide bubbles. Default is true.",
            "methods": ["getShowBubbles", "setShowBubbles"]
          },
          {
            "name": "pinGrip",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "description": "Property to pin Grip (left grip) of the slider so that user cannot move it with key or mouse clicks.",
            "methods": ["getPinGrip", "setPinGrip"]
          },
          {
            "name": "pinGrip2",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "description": "Property to pin Grip2 (right grip) of the slider so that user cannot move it with key or mouse clicks.",
            "methods": ["getPinGrip2", "setPinGrip2"]
          }
        ],
        "events": [
          {
            "name": "change",
            "visibility": "public",
            "description": "This event is fired when user changes the positions of the grips of the control. It contains value as Date object and value2 as Date object which are based on the positions of two grips.",
            "methods": ["attachChange", "detachChange", "fireChange"]
          },
          {
            "name": "liveChange",
            "visibility": "public",
            "description": "This live event is fired when user changes the positions of the grips of the control. It contains value as Date object and value2 as Date object which are based on the positions of two grips.",
            "methods": [
              "attachLiveChange",
              "detachLiveChange",
              "fireLiveChange"
            ]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new DateRangeSliderInternal.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "change",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "This event is fired when user changes the positions of the grips of the control. It contains value as Date object and value2 as Date object which are based on the positions of two grips."
        },
        {
          "name": "liveChange",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "This live event is fired when user changes the positions of the grips of the control. It contains value as Date object and value2 as Date object which are based on the positions of two grips."
        }
      ],
      "methods": [
        {
          "name": "attachChange",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.DateRangeSliderInternal",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.DateRangeSliderInternal</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:change change} event of this <code>sap.suite.ui.commons.DateRangeSliderInternal</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.DateRangeSliderInternal</code> itself.\n\nThis event is fired when user changes the positions of the grips of the control. It contains value as Date object and value2 as Date object which are based on the positions of two grips."
        },
        {
          "name": "attachLiveChange",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.DateRangeSliderInternal",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.DateRangeSliderInternal</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:liveChange liveChange} event of this <code>sap.suite.ui.commons.DateRangeSliderInternal</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.DateRangeSliderInternal</code> itself.\n\nThis live event is fired when user changes the positions of the grips of the control. It contains value as Date object and value2 as Date object which are based on the positions of two grips."
        },
        {
          "name": "detachChange",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.DateRangeSliderInternal",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:change change} event of this <code>sap.suite.ui.commons.DateRangeSliderInternal</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachLiveChange",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.DateRangeSliderInternal",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:liveChange liveChange} event of this <code>sap.suite.ui.commons.DateRangeSliderInternal</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.DateRangeSliderInternal with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.commons.RangeSlider.extend}."
        },
        {
          "name": "fireChange",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.DateRangeSliderInternal",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:change change} to attached listeners."
        },
        {
          "name": "fireLiveChange",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.DateRangeSliderInternal",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:liveChange liveChange} to attached listeners."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.DateRangeSliderInternal."
        },
        {
          "name": "getPinGrip",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>pinGrip</code>"
          },
          "description": "Gets current value of property {@link #getPinGrip pinGrip}.\n\nProperty to pin Grip (left grip) of the slider so that user cannot move it with key or mouse clicks.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getPinGrip2",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>pinGrip2</code>"
          },
          "description": "Gets current value of property {@link #getPinGrip2 pinGrip2}.\n\nProperty to pin Grip2 (right grip) of the slider so that user cannot move it with key or mouse clicks.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getShowBubbles",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showBubbles</code>"
          },
          "description": "Gets current value of property {@link #getShowBubbles showBubbles}.\n\nProperty to show or hide bubbles. Default is true.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setPinGrip",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.DateRangeSliderInternal",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bPinGrip",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>pinGrip</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getPinGrip pinGrip}.\n\nProperty to pin Grip (left grip) of the slider so that user cannot move it with key or mouse clicks.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setPinGrip2",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.DateRangeSliderInternal",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bPinGrip2",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>pinGrip2</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getPinGrip2 pinGrip2}.\n\nProperty to pin Grip2 (right grip) of the slider so that user cannot move it with key or mouse clicks.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setShowBubbles",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.DateRangeSliderInternal",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowBubbles",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showBubbles</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowBubbles showBubbles}.\n\nProperty to show or hide bubbles. Default is true.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.DeltaMicroChart",
      "basename": "DeltaMicroChart",
      "resource": "sap/suite/ui/commons/DeltaMicroChart.js",
      "module": "sap/suite/ui/commons/DeltaMicroChart",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.suite.ui.microchart.DeltaMicroChart",
      "description": "This control displays a delta of two values as a chart.",
      "deprecated": {
        "since": "1.34",
        "text": "Deprecated. sap.suite.ui.microchart.DeltaMicroChart should be used."
      },
      "ui5-metamodel": true,
      "ui5-metadata": { "stereotype": "control" },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new DeltaMicroChart."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.DeltaMicroChart with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.suite.ui.microchart.DeltaMicroChart.extend}."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.DeltaMicroChart."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.suite.ui.commons.DeviationIndicator",
      "basename": "DeviationIndicator",
      "resource": "sap/suite/ui/commons/library.js",
      "module": "sap/suite/ui/commons/library",
      "export": "DeviationIndicator",
      "static": true,
      "visibility": "public",
      "description": "The marker for the deviation trend.",
      "deprecated": {
        "since": "1.34",
        "text": "Deprecated. Moved to sapui5.runtime."
      },
      "ui5-metamodel": true,
      "properties": [
        {
          "name": "Down",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The actual value is less than the target value."
        },
        {
          "name": "None",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "No value."
        },
        {
          "name": "Up",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The actual value is more than the target value."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.DynamicContainer",
      "basename": "DynamicContainer",
      "resource": "sap/suite/ui/commons/DynamicContainer.js",
      "module": "sap/suite/ui/commons/DynamicContainer",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.m.SlideTile",
      "description": "The control that displays multiple GenericTile controls as changing slides.",
      "deprecated": {
        "since": "1.34",
        "text": "Deprecated. Moved to openui5."
      },
      "ui5-metamodel": true,
      "ui5-metadata": { "stereotype": "control" },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new DynamicContainer."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.DynamicContainer with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.m.SlideTile.extend}."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.DynamicContainer."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.FacetOverview",
      "basename": "FacetOverview",
      "resource": "sap/suite/ui/commons/FacetOverview.js",
      "module": "sap/suite/ui/commons/FacetOverview",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.core.Control",
      "description": "This control is used in UnifiedThingInspector to display the preview of the facet content.",
      "deprecated": {
        "since": "1.32",
        "text": "Deprecated. Object page should be used instead."
      },
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "title",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "This property is shown in the upper left part of control.",
            "methods": ["getTitle", "setTitle"]
          },
          {
            "name": "quantity",
            "type": "int",
            "defaultValue": -1,
            "group": "Misc",
            "visibility": "public",
            "description": "Displays a label with the number of items in the right part of the control.",
            "methods": ["getQuantity", "setQuantity"]
          },
          {
            "name": "width",
            "type": "sap.ui.core.CSSSize",
            "defaultValue": "auto",
            "group": "Misc",
            "visibility": "public",
            "description": "Defines the width of the control. By default, the value is empty and the control inhertis the size from its content.",
            "methods": ["getWidth", "setWidth"]
          },
          {
            "name": "height",
            "type": "sap.ui.core.CSSSize",
            "defaultValue": "10rem",
            "group": "Misc",
            "visibility": "public",
            "description": "Defines the height of the control only if the heightType prperty is set to None. Must be set in rems for the correct work in the UnifiedThingInspector.",
            "deprecated": {
              "since": "1.17.1",
              "text": "This property was replaced by heightType property."
            },
            "methods": ["getHeight", "setHeight"]
          },
          {
            "name": "rowSpan",
            "type": "int",
            "defaultValue": 1,
            "group": "Misc",
            "visibility": "public",
            "description": "Defines the number of rows that the control represents in an external layout.",
            "deprecated": {
              "since": "1.17.1",
              "text": "It is not used any more for the laoyut calculations in UnifiedThingInspector."
            },
            "methods": ["getRowSpan", "setRowSpan"]
          },
          {
            "name": "heightType",
            "type": "sap.suite.ui.commons.FacetOverviewHeight",
            "defaultValue": "None",
            "group": "Misc",
            "visibility": "public",
            "description": "Indicates the height of the control in the predifened values. If set to None, then the height is defined by the depricated height property.",
            "methods": ["getHeightType", "setHeightType"]
          }
        ],
        "aggregations": [
          {
            "name": "content",
            "singularName": "content",
            "type": "sap.ui.core.Control",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "The content that appears in the left part of the control.",
            "methods": ["getContent", "destroyContent", "setContent"]
          }
        ],
        "events": [
          {
            "name": "press",
            "visibility": "public",
            "description": "The event is fired when the user chooses the control. Provides an event with parameter id, the ID of the chosen control.",
            "parameters": {
              "id": {
                "name": "id",
                "type": "string",
                "description": "The control ID."
              }
            },
            "methods": ["attachPress", "detachPress", "firePress"]
          },
          {
            "name": "heightChange",
            "visibility": "public",
            "description": "This event is fired when a new value to the heightType or height property is set.",
            "methods": [
              "attachHeightChange",
              "detachHeightChange",
              "fireHeightChange"
            ]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new FacetOverview.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "heightChange",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "This event is fired when a new value to the heightType or height property is set."
        },
        {
          "name": "press",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "optional": false,
                      "description": "The control ID."
                    }
                  }
                }
              }
            }
          ],
          "description": "The event is fired when the user chooses the control. Provides an event with parameter id, the ID of the chosen control."
        }
      ],
      "methods": [
        {
          "name": "attachHeightChange",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.FacetOverview",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.FacetOverview</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:heightChange heightChange} event of this <code>sap.suite.ui.commons.FacetOverview</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.FacetOverview</code> itself.\n\nThis event is fired when a new value to the heightType or height property is set."
        },
        {
          "name": "attachPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.FacetOverview",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.FacetOverview</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:press press} event of this <code>sap.suite.ui.commons.FacetOverview</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.FacetOverview</code> itself.\n\nThe event is fired when the user chooses the control. Provides an event with parameter id, the ID of the chosen control."
        },
        {
          "name": "destroyContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.FacetOverview",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the content in the aggregation {@link #getContent content}."
        },
        {
          "name": "detachHeightChange",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.FacetOverview",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:heightChange heightChange} event of this <code>sap.suite.ui.commons.FacetOverview</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.FacetOverview",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:press press} event of this <code>sap.suite.ui.commons.FacetOverview</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.FacetOverview with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "fireHeightChange",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.FacetOverview",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:heightChange heightChange} to attached listeners."
        },
        {
          "name": "firePress",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.FacetOverview",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "id": {
                  "name": "id",
                  "type": "string",
                  "optional": true,
                  "description": "The control ID."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:press press} to attached listeners."
        },
        {
          "name": "getContent",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.Control" },
          "description": "Gets content of aggregation {@link #getContent content}.\n\nThe content that appears in the left part of the control."
        },
        {
          "name": "getHeight",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.CSSSize",
            "description": "Value of property <code>height</code>"
          },
          "description": "Gets current value of property {@link #getHeight height}.\n\nDefines the height of the control only if the heightType prperty is set to None. Must be set in rems for the correct work in the UnifiedThingInspector.\n\nDefault value is <code>10rem</code>.",
          "deprecated": {
            "since": "1.17.1",
            "text": "This property was replaced by heightType property."
          }
        },
        {
          "name": "getHeightType",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.FacetOverviewHeight",
            "description": "Value of property <code>heightType</code>"
          },
          "description": "Gets current value of property {@link #getHeightType heightType}.\n\nIndicates the height of the control in the predifened values. If set to None, then the height is defined by the depricated height property.\n\nDefault value is <code>None</code>."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.FacetOverview."
        },
        {
          "name": "getQuantity",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>quantity</code>"
          },
          "description": "Gets current value of property {@link #getQuantity quantity}.\n\nDisplays a label with the number of items in the right part of the control.\n\nDefault value is <code>-1</code>."
        },
        {
          "name": "getRowSpan",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>rowSpan</code>"
          },
          "description": "Gets current value of property {@link #getRowSpan rowSpan}.\n\nDefines the number of rows that the control represents in an external layout.\n\nDefault value is <code>1</code>.",
          "deprecated": {
            "since": "1.17.1",
            "text": "It is not used any more for the laoyut calculations in UnifiedThingInspector."
          }
        },
        {
          "name": "getTitle",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>title</code>"
          },
          "description": "Gets current value of property {@link #getTitle title}.\n\nThis property is shown in the upper left part of control."
        },
        {
          "name": "getWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.CSSSize",
            "description": "Value of property <code>width</code>"
          },
          "description": "Gets current value of property {@link #getWidth width}.\n\nDefines the width of the control. By default, the value is empty and the control inhertis the size from its content.\n\nDefault value is <code>auto</code>."
        },
        {
          "name": "setContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.FacetOverview",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oContent",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The content to set"
            }
          ],
          "description": "Sets the aggregated {@link #getContent content}."
        },
        {
          "name": "setHeight",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.FacetOverview",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sHeight",
              "type": "sap.ui.core.CSSSize",
              "optional": false,
              "description": "New value for property <code>height</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getHeight height}.\n\nDefines the height of the control only if the heightType prperty is set to None. Must be set in rems for the correct work in the UnifiedThingInspector.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>10rem</code>.",
          "deprecated": {
            "since": "1.17.1",
            "text": "This property was replaced by heightType property."
          }
        },
        {
          "name": "setHeightType",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.FacetOverview",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sHeightType",
              "type": "sap.suite.ui.commons.FacetOverviewHeight",
              "optional": false,
              "description": "New value for property <code>heightType</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getHeightType heightType}.\n\nIndicates the height of the control in the predifened values. If set to None, then the height is defined by the depricated height property.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>None</code>."
        },
        {
          "name": "setQuantity",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.FacetOverview",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iQuantity",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>quantity</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getQuantity quantity}.\n\nDisplays a label with the number of items in the right part of the control.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>-1</code>."
        },
        {
          "name": "setRowSpan",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.FacetOverview",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iRowSpan",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>rowSpan</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getRowSpan rowSpan}.\n\nDefines the number of rows that the control represents in an external layout.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>1</code>.",
          "deprecated": {
            "since": "1.17.1",
            "text": "It is not used any more for the laoyut calculations in UnifiedThingInspector."
          }
        },
        {
          "name": "setTitle",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.FacetOverview",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sTitle",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>title</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getTitle title}.\n\nThis property is shown in the upper left part of control.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.FacetOverview",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sWidth",
              "type": "sap.ui.core.CSSSize",
              "optional": false,
              "description": "New value for property <code>width</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getWidth width}.\n\nDefines the width of the control. By default, the value is empty and the control inhertis the size from its content.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>auto</code>."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.suite.ui.commons.FacetOverviewHeight",
      "basename": "FacetOverviewHeight",
      "resource": "sap/suite/ui/commons/library.js",
      "module": "sap/suite/ui/commons/library",
      "export": "FacetOverviewHeight",
      "static": true,
      "visibility": "public",
      "description": "Enumeration of possible FacetOverview height settings.",
      "deprecated": {
        "since": "1.32",
        "text": "Deprecated. Object page should be used instead."
      },
      "ui5-metamodel": true,
      "properties": [
        {
          "name": "Auto",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Content based height"
        },
        {
          "name": "L",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Large height"
        },
        {
          "name": "M",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Medium height"
        },
        {
          "name": "None",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "No value. The height of the control is defined by depricated height property."
        },
        {
          "name": "S",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Small height"
        },
        {
          "name": "XL",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Extra Large height"
        },
        {
          "name": "XS",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Extra small height"
        },
        {
          "name": "XXL",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Extra extra large height"
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.FeedItem",
      "basename": "FeedItem",
      "resource": "sap/suite/ui/commons/FeedItem.js",
      "module": "sap/suite/ui/commons/FeedItem",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.core.Element",
      "description": "This element represents a news feed item.",
      "deprecated": {
        "since": "1.32",
        "text": "Deprecated. Generic Tile should be used instead."
      },
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "element",
        "properties": [
          {
            "name": "title",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The title of the feed item.",
            "methods": ["getTitle", "setTitle"]
          },
          {
            "name": "image",
            "type": "sap.ui.core.URI",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The background image for the feed item.",
            "methods": ["getImage", "setImage"]
          },
          {
            "name": "link",
            "type": "sap.ui.core.URI",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The target location of the feed item.",
            "methods": ["getLink", "setLink"]
          },
          {
            "name": "source",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The source of the feed item.",
            "methods": ["getSource", "setSource"]
          },
          {
            "name": "publicationDate",
            "type": "object",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The date the feed was published.",
            "methods": ["getPublicationDate", "setPublicationDate"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new FeedItem.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.FeedItem with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
        },
        {
          "name": "getImage",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.URI",
            "description": "Value of property <code>image</code>"
          },
          "description": "Gets current value of property {@link #getImage image}.\n\nThe background image for the feed item."
        },
        {
          "name": "getLink",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.URI",
            "description": "Value of property <code>link</code>"
          },
          "description": "Gets current value of property {@link #getLink link}.\n\nThe target location of the feed item."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.FeedItem."
        },
        {
          "name": "getPublicationDate",
          "visibility": "public",
          "returnValue": {
            "type": "object",
            "description": "Value of property <code>publicationDate</code>"
          },
          "description": "Gets current value of property {@link #getPublicationDate publicationDate}.\n\nThe date the feed was published."
        },
        {
          "name": "getSource",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>source</code>"
          },
          "description": "Gets current value of property {@link #getSource source}.\n\nThe source of the feed item."
        },
        {
          "name": "getTitle",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>title</code>"
          },
          "description": "Gets current value of property {@link #getTitle title}.\n\nThe title of the feed item."
        },
        {
          "name": "setImage",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.FeedItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sImage",
              "type": "sap.ui.core.URI",
              "optional": false,
              "description": "New value for property <code>image</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getImage image}.\n\nThe background image for the feed item.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setLink",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.FeedItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sLink",
              "type": "sap.ui.core.URI",
              "optional": false,
              "description": "New value for property <code>link</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getLink link}.\n\nThe target location of the feed item.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setPublicationDate",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.FeedItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oPublicationDate",
              "type": "object",
              "optional": false,
              "description": "New value for property <code>publicationDate</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getPublicationDate publicationDate}.\n\nThe date the feed was published.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setSource",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.FeedItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sSource",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>source</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSource source}.\n\nThe source of the feed item.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setTitle",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.FeedItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sTitle",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>title</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getTitle title}.\n\nThe title of the feed item.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.FeedItemHeader",
      "basename": "FeedItemHeader",
      "resource": "sap/suite/ui/commons/FeedItemHeader.js",
      "module": "sap/suite/ui/commons/FeedItemHeader",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.m.ListItemBase",
      "description": "This control displays feed item header information.",
      "deprecated": {
        "since": "1.25",
        "text": "This control has been deprecated in favor of new sap.suite.ui.commons.GenericTile."
      },
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "title",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The title of the feed item.",
            "methods": ["getTitle", "setTitle"]
          },
          {
            "name": "image",
            "type": "sap.ui.core.URI",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The image associated with the feed item.",
            "methods": ["getImage", "setImage"]
          },
          {
            "name": "link",
            "type": "sap.ui.core.URI",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The target location of the feed item.",
            "methods": ["getLink", "setLink"]
          },
          {
            "name": "source",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The source of the feed item.",
            "methods": ["getSource", "setSource"]
          },
          {
            "name": "publicationDate",
            "type": "object",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The date the feed item was published.",
            "methods": ["getPublicationDate", "setPublicationDate"]
          },
          {
            "name": "description",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The description of the feed item.",
            "methods": ["getDescription", "setDescription"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new FeedItemHeader.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.FeedItemHeader with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.m.ListItemBase.extend}."
        },
        {
          "name": "getDescription",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>description</code>"
          },
          "description": "Gets current value of property {@link #getDescription description}.\n\nThe description of the feed item."
        },
        {
          "name": "getImage",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.URI",
            "description": "Value of property <code>image</code>"
          },
          "description": "Gets current value of property {@link #getImage image}.\n\nThe image associated with the feed item."
        },
        {
          "name": "getLink",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.URI",
            "description": "Value of property <code>link</code>"
          },
          "description": "Gets current value of property {@link #getLink link}.\n\nThe target location of the feed item."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.FeedItemHeader."
        },
        {
          "name": "getPublicationDate",
          "visibility": "public",
          "returnValue": {
            "type": "object",
            "description": "Value of property <code>publicationDate</code>"
          },
          "description": "Gets current value of property {@link #getPublicationDate publicationDate}.\n\nThe date the feed item was published."
        },
        {
          "name": "getSource",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>source</code>"
          },
          "description": "Gets current value of property {@link #getSource source}.\n\nThe source of the feed item."
        },
        {
          "name": "getTitle",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>title</code>"
          },
          "description": "Gets current value of property {@link #getTitle title}.\n\nThe title of the feed item."
        },
        {
          "name": "setDescription",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.FeedItemHeader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sDescription",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>description</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getDescription description}.\n\nThe description of the feed item.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setImage",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.FeedItemHeader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sImage",
              "type": "sap.ui.core.URI",
              "optional": false,
              "description": "New value for property <code>image</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getImage image}.\n\nThe image associated with the feed item.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setLink",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.FeedItemHeader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sLink",
              "type": "sap.ui.core.URI",
              "optional": false,
              "description": "New value for property <code>link</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getLink link}.\n\nThe target location of the feed item.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setPublicationDate",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.FeedItemHeader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oPublicationDate",
              "type": "object",
              "optional": false,
              "description": "New value for property <code>publicationDate</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getPublicationDate publicationDate}.\n\nThe date the feed item was published.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setSource",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.FeedItemHeader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sSource",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>source</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSource source}.\n\nThe source of the feed item.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setTitle",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.FeedItemHeader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sTitle",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>title</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getTitle title}.\n\nThe title of the feed item.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.FeedTile",
      "basename": "FeedTile",
      "resource": "sap/suite/ui/commons/FeedTile.js",
      "module": "sap/suite/ui/commons/FeedTile",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.core.Control",
      "description": "This control displays news feeds.",
      "deprecated": {
        "since": "1.25",
        "text": "This control has been deprecated in favor of new sap.suite.ui.commons.GenericTile."
      },
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "displayDuration",
            "type": "int",
            "defaultValue": 5,
            "group": "Misc",
            "visibility": "public",
            "description": "The length of time in seconds the control displays each feed item. Default value is 5 seconds.",
            "methods": ["getDisplayDuration", "setDisplayDuration"]
          },
          {
            "name": "displayArticleImage",
            "type": "boolean",
            "defaultValue": true,
            "group": "Behavior",
            "visibility": "public",
            "description": "To display article Image or not. If it is true, the article Image will be displayed based on precedence. If it is false, the default image will be displayed.",
            "methods": ["getDisplayArticleImage", "setDisplayArticleImage"]
          },
          {
            "name": "source",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The source of the feed item.",
            "methods": ["getSource", "setSource"]
          },
          {
            "name": "defaultImages",
            "type": "sap.ui.core.URI[]",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "A list of default images that is cycled by the control when no image is available for a feed item or when no feed items exist. After a random image is displayed first time, control cycles through this list of images.",
            "methods": ["getDefaultImages", "setDefaultImages"]
          }
        ],
        "aggregations": [
          {
            "name": "items",
            "singularName": "item",
            "type": "sap.suite.ui.commons.FeedItem",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "The feed items the control cycles through.",
            "methods": [
              "getItems",
              "destroyItems",
              "insertItem",
              "addItem",
              "removeItem",
              "indexOfItem",
              "removeAllItems"
            ]
          }
        ],
        "events": [
          {
            "name": "press",
            "visibility": "public",
            "description": "The event fired when the user clicks on the control.",
            "methods": ["attachPress", "detachPress", "firePress"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new FeedTile.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "press",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "The event fired when the user clicks on the control."
        }
      ],
      "methods": [
        {
          "name": "addItem",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.FeedTile",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oItem",
              "type": "sap.suite.ui.commons.FeedItem",
              "optional": false,
              "description": "The item to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some item to the aggregation {@link #getItems items}."
        },
        {
          "name": "attachPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.FeedTile",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.FeedTile</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:press press} event of this <code>sap.suite.ui.commons.FeedTile</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.FeedTile</code> itself.\n\nThe event fired when the user clicks on the control."
        },
        {
          "name": "destroyItems",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.FeedTile",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the items in the aggregation {@link #getItems items}."
        },
        {
          "name": "detachPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.FeedTile",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:press press} event of this <code>sap.suite.ui.commons.FeedTile</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.FeedTile with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "firePress",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.FeedTile",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:press press} to attached listeners."
        },
        {
          "name": "getDefaultImages",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.URI[]",
            "description": "Value of property <code>defaultImages</code>"
          },
          "description": "Gets current value of property {@link #getDefaultImages defaultImages}.\n\nA list of default images that is cycled by the control when no image is available for a feed item or when no feed items exist. After a random image is displayed first time, control cycles through this list of images."
        },
        {
          "name": "getDisplayArticleImage",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>displayArticleImage</code>"
          },
          "description": "Gets current value of property {@link #getDisplayArticleImage displayArticleImage}.\n\nTo display article Image or not. If it is true, the article Image will be displayed based on precedence. If it is false, the default image will be displayed.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getDisplayDuration",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>displayDuration</code>"
          },
          "description": "Gets current value of property {@link #getDisplayDuration displayDuration}.\n\nThe length of time in seconds the control displays each feed item. Default value is 5 seconds.\n\nDefault value is <code>5</code>."
        },
        {
          "name": "getItems",
          "visibility": "public",
          "returnValue": { "type": "sap.suite.ui.commons.FeedItem[]" },
          "description": "Gets content of aggregation {@link #getItems items}.\n\nThe feed items the control cycles through."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.FeedTile."
        },
        {
          "name": "getSource",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>source</code>"
          },
          "description": "Gets current value of property {@link #getSource source}.\n\nThe source of the feed item."
        },
        {
          "name": "indexOfItem",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oItem",
              "type": "sap.suite.ui.commons.FeedItem",
              "optional": false,
              "description": "The item whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.suite.ui.commons.FeedItem</code> in the aggregation {@link #getItems items}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "insertItem",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.FeedTile",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oItem",
              "type": "sap.suite.ui.commons.FeedItem",
              "optional": false,
              "description": "The item to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the item should be inserted at; for a negative value of <code>iIndex</code>, the item is inserted at position 0; for a value greater than the current size of the aggregation, the item is inserted at the last position"
            }
          ],
          "description": "Inserts a item into the aggregation {@link #getItems items}."
        },
        {
          "name": "removeAllItems",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.FeedItem[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getItems items}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeItem",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.FeedItem",
            "description": "The removed item or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vItem",
              "type": "int|string|sap.suite.ui.commons.FeedItem",
              "optional": false,
              "description": "The item to remove or its index or id"
            }
          ],
          "description": "Removes a item from the aggregation {@link #getItems items}."
        },
        {
          "name": "setDefaultImages",
          "visibility": "public",
          "parameters": [
            {
              "name": "oDefaultImages",
              "type": "sap.ui.core.URI[]",
              "optional": false,
              "description": "Default image URIs"
            }
          ],
          "description": "Validate the array of URI first and then set the defaultImages property"
        },
        {
          "name": "setDisplayArticleImage",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.FeedTile",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bDisplayArticleImage",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>displayArticleImage</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getDisplayArticleImage displayArticleImage}.\n\nTo display article Image or not. If it is true, the article Image will be displayed based on precedence. If it is false, the default image will be displayed.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setDisplayDuration",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.FeedTile",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iDisplayDuration",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>displayDuration</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getDisplayDuration displayDuration}.\n\nThe length of time in seconds the control displays each feed item. Default value is 5 seconds.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>5</code>."
        },
        {
          "name": "setSource",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.FeedTile",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sSource",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>source</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSource source}.\n\nThe source of the feed item.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "stageModel",
          "visibility": "public",
          "parameters": [
            {
              "name": "oModel",
              "type": "sap.ui.model.Model",
              "optional": false,
              "description": "Model of new feed items."
            }
          ],
          "description": "Set a new model of feed items, such as when a feed aggregator has collected the latest feed items. This model is staged (not immediately set on the control) to avoid re-rendering before the currently displayed article is faded out. Therefore a smooth transition between the display of feed items is always maintained."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.suite.ui.commons.FrameType",
      "basename": "FrameType",
      "resource": "sap/suite/ui/commons/library.js",
      "module": "sap/suite/ui/commons/library",
      "export": "FrameType",
      "static": true,
      "visibility": "public",
      "description": "Enumeration of possible frame types.",
      "deprecated": {
        "since": "1.34",
        "text": "Deprecated. Moved to openUI5."
      },
      "ui5-metamodel": true,
      "properties": [
        {
          "name": "Auto",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The Auto frame type that adjusts the size of the control to the content."
        },
        {
          "name": "OneByOne",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The 1x1 frame type."
        },
        {
          "name": "TwoByOne",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The 2x1 frame type."
        },
        {
          "name": "TwoThirds",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The 2/3 frame type."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.GenericTile",
      "basename": "GenericTile",
      "resource": "sap/suite/ui/commons/GenericTile.js",
      "module": "sap/suite/ui/commons/GenericTile",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.m.GenericTile",
      "description": "The tile control that displays the title, description, and customizable main area.",
      "deprecated": {
        "since": "1.34",
        "text": "Deprecated. Moved to openui5."
      },
      "ui5-metamodel": true,
      "ui5-metadata": { "stereotype": "control" },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new GenericTile."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.GenericTile with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.m.GenericTile.extend}."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.GenericTile."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.GenericTile2X2",
      "basename": "GenericTile2X2",
      "resource": "sap/suite/ui/commons/GenericTile2X2.js",
      "module": "sap/suite/ui/commons/GenericTile2X2",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.core.Control",
      "description": "The tile control that displays the title, description, and customizable main area.",
      "deprecated": { "since": "1.34", "text": "Deprecated." },
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "header",
            "type": "string",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "description": "The header of the tile.",
            "methods": ["getHeader", "setHeader"]
          },
          {
            "name": "subheader",
            "type": "string",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "description": "The subheader of the tile.",
            "methods": ["getSubheader", "setSubheader"]
          },
          {
            "name": "failedText",
            "type": "string",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "description": "The message that appears when the control is in the Failed state.",
            "methods": ["getFailedText", "setFailedText"]
          },
          {
            "name": "size",
            "type": "sap.suite.ui.commons.InfoTileSize",
            "defaultValue": "Auto",
            "group": "Misc",
            "visibility": "public",
            "description": "The size of the tile. If not set, then the default size is applied based on the device tile.",
            "methods": ["getSize", "setSize"]
          },
          {
            "name": "backgroundImage",
            "type": "sap.ui.core.URI",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The URI of the background image.",
            "methods": ["getBackgroundImage", "setBackgroundImage"]
          },
          {
            "name": "headerImage",
            "type": "sap.ui.core.URI",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The image to be displayed as a graphical element within the header. This can be an image or an icon from the icon font.",
            "methods": ["getHeaderImage", "setHeaderImage"]
          },
          {
            "name": "frameType",
            "type": "sap.suite.ui.commons.FrameType",
            "defaultValue": "OneByOne",
            "group": "Misc",
            "visibility": "public",
            "description": "The frame type: 1x1 or 2x1.",
            "methods": ["getFrameType", "setFrameType"]
          },
          {
            "name": "state",
            "type": "sap.suite.ui.commons.LoadState",
            "defaultValue": "Loaded",
            "group": "Misc",
            "visibility": "public",
            "description": "The load status.",
            "methods": ["getState", "setState"]
          },
          {
            "name": "imageDescription",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Description of a header image that is used in the tooltip.",
            "methods": ["getImageDescription", "setImageDescription"]
          }
        ],
        "aggregations": [
          {
            "name": "tileContent",
            "singularName": "tileContent",
            "type": "sap.suite.ui.commons.TileContent2X2",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "The switchable view that depends on the tile type.",
            "methods": [
              "getTileContent",
              "destroyTileContent",
              "insertTileContent",
              "addTileContent",
              "removeTileContent",
              "indexOfTileContent",
              "removeAllTileContent"
            ]
          },
          {
            "name": "icon",
            "singularName": "icon",
            "type": "sap.ui.core.Control",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "An icon or image to be displayed in the control.",
            "methods": ["getIcon", "destroyIcon", "setIcon"]
          },
          {
            "name": "titleText",
            "singularName": "titleText",
            "type": "sap.m.Text",
            "cardinality": "0..1",
            "visibility": "hidden",
            "description": "The hidden aggregation for the title.",
            "methods": ["getTitleText", "destroyTitleText", "setTitleText"]
          },
          {
            "name": "failedMessageText",
            "singularName": "failedMessageText",
            "type": "sap.m.Text",
            "cardinality": "0..1",
            "visibility": "hidden",
            "description": "The hidden aggregation for the message in the failed state.",
            "methods": [
              "getFailedMessageText",
              "destroyFailedMessageText",
              "setFailedMessageText"
            ]
          }
        ],
        "events": [
          {
            "name": "press",
            "visibility": "public",
            "description": "The event is fired when the user chooses the tile.",
            "methods": ["attachPress", "detachPress", "firePress"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new GenericTile2X2.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "press",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "The event is fired when the user chooses the tile."
        }
      ],
      "methods": [
        {
          "name": "addTileContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.GenericTile2X2",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oTileContent",
              "type": "sap.suite.ui.commons.TileContent2X2",
              "optional": false,
              "description": "The tileContent to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some tileContent to the aggregation {@link #getTileContent tileContent}."
        },
        {
          "name": "attachPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.GenericTile2X2",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.GenericTile2X2</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:press press} event of this <code>sap.suite.ui.commons.GenericTile2X2</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.GenericTile2X2</code> itself.\n\nThe event is fired when the user chooses the tile."
        },
        {
          "name": "destroyIcon",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.GenericTile2X2",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the icon in the aggregation {@link #getIcon icon}."
        },
        {
          "name": "destroyTileContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.GenericTile2X2",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the tileContent in the aggregation {@link #getTileContent tileContent}."
        },
        {
          "name": "detachPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.GenericTile2X2",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:press press} event of this <code>sap.suite.ui.commons.GenericTile2X2</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.GenericTile2X2 with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "firePress",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.GenericTile2X2",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:press press} to attached listeners."
        },
        {
          "name": "getBackgroundImage",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.URI",
            "description": "Value of property <code>backgroundImage</code>"
          },
          "description": "Gets current value of property {@link #getBackgroundImage backgroundImage}.\n\nThe URI of the background image."
        },
        {
          "name": "getFailedText",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>failedText</code>"
          },
          "description": "Gets current value of property {@link #getFailedText failedText}.\n\nThe message that appears when the control is in the Failed state."
        },
        {
          "name": "getFrameType",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.FrameType",
            "description": "Value of property <code>frameType</code>"
          },
          "description": "Gets current value of property {@link #getFrameType frameType}.\n\nThe frame type: 1x1 or 2x1.\n\nDefault value is <code>OneByOne</code>."
        },
        {
          "name": "getHeader",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>header</code>"
          },
          "description": "Gets current value of property {@link #getHeader header}.\n\nThe header of the tile."
        },
        {
          "name": "getHeaderImage",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.URI",
            "description": "Value of property <code>headerImage</code>"
          },
          "description": "Gets current value of property {@link #getHeaderImage headerImage}.\n\nThe image to be displayed as a graphical element within the header. This can be an image or an icon from the icon font."
        },
        {
          "name": "getIcon",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.Control" },
          "description": "Gets content of aggregation {@link #getIcon icon}.\n\nAn icon or image to be displayed in the control."
        },
        {
          "name": "getImageDescription",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>imageDescription</code>"
          },
          "description": "Gets current value of property {@link #getImageDescription imageDescription}.\n\nDescription of a header image that is used in the tooltip."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.GenericTile2X2."
        },
        {
          "name": "getSize",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.InfoTileSize",
            "description": "Value of property <code>size</code>"
          },
          "description": "Gets current value of property {@link #getSize size}.\n\nThe size of the tile. If not set, then the default size is applied based on the device tile.\n\nDefault value is <code>Auto</code>."
        },
        {
          "name": "getState",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.LoadState",
            "description": "Value of property <code>state</code>"
          },
          "description": "Gets current value of property {@link #getState state}.\n\nThe load status.\n\nDefault value is <code>Loaded</code>."
        },
        {
          "name": "getSubheader",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>subheader</code>"
          },
          "description": "Gets current value of property {@link #getSubheader subheader}.\n\nThe subheader of the tile."
        },
        {
          "name": "getTileContent",
          "visibility": "public",
          "returnValue": { "type": "sap.suite.ui.commons.TileContent2X2[]" },
          "description": "Gets content of aggregation {@link #getTileContent tileContent}.\n\nThe switchable view that depends on the tile type."
        },
        {
          "name": "indexOfTileContent",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oTileContent",
              "type": "sap.suite.ui.commons.TileContent2X2",
              "optional": false,
              "description": "The tileContent whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.suite.ui.commons.TileContent2X2</code> in the aggregation {@link #getTileContent tileContent}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "insertTileContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.GenericTile2X2",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oTileContent",
              "type": "sap.suite.ui.commons.TileContent2X2",
              "optional": false,
              "description": "The tileContent to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the tileContent should be inserted at; for a negative value of <code>iIndex</code>, the tileContent is inserted at position 0; for a value greater than the current size of the aggregation, the tileContent is inserted at the last position"
            }
          ],
          "description": "Inserts a tileContent into the aggregation {@link #getTileContent tileContent}."
        },
        {
          "name": "removeAllTileContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.TileContent2X2[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getTileContent tileContent}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeTileContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.TileContent2X2",
            "description": "The removed tileContent or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vTileContent",
              "type": "int|string|sap.suite.ui.commons.TileContent2X2",
              "optional": false,
              "description": "The tileContent to remove or its index or id"
            }
          ],
          "description": "Removes a tileContent from the aggregation {@link #getTileContent tileContent}."
        },
        {
          "name": "setBackgroundImage",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.GenericTile2X2",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sBackgroundImage",
              "type": "sap.ui.core.URI",
              "optional": false,
              "description": "New value for property <code>backgroundImage</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getBackgroundImage backgroundImage}.\n\nThe URI of the background image.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setFailedText",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.GenericTile2X2",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sFailedText",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>failedText</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getFailedText failedText}.\n\nThe message that appears when the control is in the Failed state.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setFrameType",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.GenericTile2X2",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sFrameType",
              "type": "sap.suite.ui.commons.FrameType",
              "optional": false,
              "description": "New value for property <code>frameType</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getFrameType frameType}.\n\nThe frame type: 1x1 or 2x1.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>OneByOne</code>."
        },
        {
          "name": "setHeader",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.GenericTile2X2",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sHeader",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>header</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getHeader header}.\n\nThe header of the tile.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setHeaderImage",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.GenericTile2X2",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sHeaderImage",
              "type": "sap.ui.core.URI",
              "optional": false,
              "description": "New value for property <code>headerImage</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getHeaderImage headerImage}.\n\nThe image to be displayed as a graphical element within the header. This can be an image or an icon from the icon font.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setIcon",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.GenericTile2X2",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oIcon",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The icon to set"
            }
          ],
          "description": "Sets the aggregated {@link #getIcon icon}."
        },
        {
          "name": "setImageDescription",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.GenericTile2X2",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sImageDescription",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>imageDescription</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getImageDescription imageDescription}.\n\nDescription of a header image that is used in the tooltip.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setSize",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.GenericTile2X2",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sSize",
              "type": "sap.suite.ui.commons.InfoTileSize",
              "optional": false,
              "description": "New value for property <code>size</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSize size}.\n\nThe size of the tile. If not set, then the default size is applied based on the device tile.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Auto</code>."
        },
        {
          "name": "setState",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.GenericTile2X2",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sState",
              "type": "sap.suite.ui.commons.LoadState",
              "optional": false,
              "description": "New value for property <code>state</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getState state}.\n\nThe load status.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Loaded</code>."
        },
        {
          "name": "setSubheader",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.GenericTile2X2",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sSubheader",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>subheader</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSubheader subheader}.\n\nThe subheader of the tile.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.HarveyBallMicroChart",
      "basename": "HarveyBallMicroChart",
      "resource": "sap/suite/ui/commons/HarveyBallMicroChart.js",
      "module": "sap/suite/ui/commons/HarveyBallMicroChart",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.suite.ui.microchart.HarveyBallMicroChart",
      "description": "This chart shows the part comparative to total.",
      "deprecated": {
        "since": "1.34",
        "text": "this control is a mere wrapper for sap.suite.ui.microchart.HarveyBallMicroChart."
      },
      "ui5-metamodel": true,
      "ui5-metadata": { "stereotype": "control" },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, automatically generated if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new HarveyBallMicroChart."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.HarveyBallMicroChart with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.suite.ui.microchart.HarveyBallMicroChart.extend}."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.HarveyBallMicroChart."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.HarveyBallMicroChartItem",
      "basename": "HarveyBallMicroChartItem",
      "resource": "sap/suite/ui/commons/HarveyBallMicroChartItem.js",
      "module": "sap/suite/ui/commons/HarveyBallMicroChartItem",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.suite.ui.microchart.HarveyBallMicroChartItem",
      "description": "The configuration of the slice on the pie chart.",
      "deprecated": {
        "since": "1.34",
        "text": "this control is a mere wrapper for sap.suite.ui.microchart.HarveyBallMicroChartItem."
      },
      "ui5-metamodel": true,
      "ui5-metadata": { "stereotype": "element" },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, automatically generated if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new HarveyBallMicroChartItem."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.HarveyBallMicroChartItem with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.suite.ui.microchart.HarveyBallMicroChartItem.extend}."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.HarveyBallMicroChartItem."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.HeaderCell",
      "basename": "HeaderCell",
      "resource": "sap/suite/ui/commons/HeaderCell.js",
      "module": "sap/suite/ui/commons/HeaderCell",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.core.Control",
      "description": "This control contains 4 cells (West, North, East, South). It can display one or more controls in different layouts. Each aggregation must contain only one instance of HeaderCellItem.",
      "deprecated": {
        "since": "1.44.0",
        "text": "HeaderCell control is no longer used. Please use other container controls instead (like sap.m.VBox or sap.m.HBox)."
      },
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "heigth",
            "type": "sap.ui.core.CSSSize",
            "defaultValue": "100px",
            "group": "Misc",
            "visibility": "public",
            "description": "Height of the HeaderCell control.",
            "deprecated": { "since": "1.20.2", "text": "Wrong property name" },
            "methods": ["getHeigth", "setHeigth"]
          },
          {
            "name": "height",
            "type": "sap.ui.core.CSSSize",
            "defaultValue": "106px",
            "group": "Misc",
            "visibility": "public",
            "description": "Height of the HeaderCell control.",
            "methods": ["getHeight", "setHeight"]
          }
        ],
        "aggregations": [
          {
            "name": "west",
            "singularName": "west",
            "type": "sap.suite.ui.commons.HeaderCellItem",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "Object that contains control to render in west area of the HeaderCell.",
            "methods": ["getWest", "destroyWest", "setWest"]
          },
          {
            "name": "north",
            "singularName": "north",
            "type": "sap.suite.ui.commons.HeaderCellItem",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "Object that contains control to render in north area of the HeaderCell.",
            "methods": ["getNorth", "destroyNorth", "setNorth"]
          },
          {
            "name": "east",
            "singularName": "east",
            "type": "sap.suite.ui.commons.HeaderCellItem",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "Object that contains control to render in east area of the HeaderCell.",
            "methods": ["getEast", "destroyEast", "setEast"]
          },
          {
            "name": "south",
            "singularName": "south",
            "type": "sap.suite.ui.commons.HeaderCellItem",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "Object that contains control to render in south area of the HeaderCell.",
            "methods": ["getSouth", "destroySouth", "setSouth"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new HeaderCell.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "destroyEast",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.HeaderCell",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the east in the aggregation {@link #getEast east}."
        },
        {
          "name": "destroyNorth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.HeaderCell",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the north in the aggregation {@link #getNorth north}."
        },
        {
          "name": "destroySouth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.HeaderCell",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the south in the aggregation {@link #getSouth south}."
        },
        {
          "name": "destroyWest",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.HeaderCell",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the west in the aggregation {@link #getWest west}."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.HeaderCell with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "getEast",
          "visibility": "public",
          "returnValue": { "type": "sap.suite.ui.commons.HeaderCellItem" },
          "description": "Gets content of aggregation {@link #getEast east}.\n\nObject that contains control to render in east area of the HeaderCell."
        },
        {
          "name": "getHeight",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.CSSSize",
            "description": "Value of property <code>height</code>"
          },
          "description": "Gets current value of property {@link #getHeight height}.\n\nHeight of the HeaderCell control.\n\nDefault value is <code>106px</code>."
        },
        {
          "name": "getHeigth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.CSSSize",
            "description": "Value of property <code>heigth</code>"
          },
          "description": "Gets current value of property {@link #getHeigth heigth}.\n\nHeight of the HeaderCell control.\n\nDefault value is <code>100px</code>.",
          "deprecated": { "since": "1.20.2", "text": "Wrong property name" }
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.HeaderCell."
        },
        {
          "name": "getNorth",
          "visibility": "public",
          "returnValue": { "type": "sap.suite.ui.commons.HeaderCellItem" },
          "description": "Gets content of aggregation {@link #getNorth north}.\n\nObject that contains control to render in north area of the HeaderCell."
        },
        {
          "name": "getSouth",
          "visibility": "public",
          "returnValue": { "type": "sap.suite.ui.commons.HeaderCellItem" },
          "description": "Gets content of aggregation {@link #getSouth south}.\n\nObject that contains control to render in south area of the HeaderCell."
        },
        {
          "name": "getWest",
          "visibility": "public",
          "returnValue": { "type": "sap.suite.ui.commons.HeaderCellItem" },
          "description": "Gets content of aggregation {@link #getWest west}.\n\nObject that contains control to render in west area of the HeaderCell."
        },
        {
          "name": "setEast",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.HeaderCell",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oEast",
              "type": "sap.suite.ui.commons.HeaderCellItem",
              "optional": false,
              "description": "The east to set"
            }
          ],
          "description": "Sets the aggregated {@link #getEast east}."
        },
        {
          "name": "setHeight",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.HeaderCell",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sHeight",
              "type": "sap.ui.core.CSSSize",
              "optional": false,
              "description": "New value for property <code>height</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getHeight height}.\n\nHeight of the HeaderCell control.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>106px</code>."
        },
        {
          "name": "setHeigth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.HeaderCell",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sHeigth",
              "type": "sap.ui.core.CSSSize",
              "optional": false,
              "description": "New value for property <code>heigth</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getHeigth heigth}.\n\nHeight of the HeaderCell control.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>100px</code>.",
          "deprecated": { "since": "1.20.2", "text": "Wrong property name" }
        },
        {
          "name": "setNorth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.HeaderCell",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oNorth",
              "type": "sap.suite.ui.commons.HeaderCellItem",
              "optional": false,
              "description": "The north to set"
            }
          ],
          "description": "Sets the aggregated {@link #getNorth north}."
        },
        {
          "name": "setSouth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.HeaderCell",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oSouth",
              "type": "sap.suite.ui.commons.HeaderCellItem",
              "optional": false,
              "description": "The south to set"
            }
          ],
          "description": "Sets the aggregated {@link #getSouth south}."
        },
        {
          "name": "setWest",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.HeaderCell",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oWest",
              "type": "sap.suite.ui.commons.HeaderCellItem",
              "optional": false,
              "description": "The west to set"
            }
          ],
          "description": "Sets the aggregated {@link #getWest west}."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.HeaderCellItem",
      "basename": "HeaderCellItem",
      "resource": "sap/suite/ui/commons/HeaderCellItem.js",
      "module": "sap/suite/ui/commons/HeaderCellItem",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.core.Element",
      "description": "Object that contains instance of control and information about height. It should be used inside sap.suite.ui.commons.HeaderCell",
      "deprecated": {
        "since": "1.44.0",
        "text": "The HeaderCellItem was deprecated because of the deprecation of HeaderCell. Please see HeaderCell for replacement advice."
      },
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "element",
        "properties": [
          {
            "name": "height",
            "type": "sap.ui.core.CSSSize",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Height of area to occupy by control.",
            "methods": ["getHeight", "setHeight"]
          }
        ],
        "aggregations": [
          {
            "name": "content",
            "singularName": "content",
            "type": "sap.ui.core.Control",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "Instance of UI5 Control that is used as content.",
            "methods": ["getContent", "destroyContent", "setContent"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new HeaderCellItem.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "destroyContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.HeaderCellItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the content in the aggregation {@link #getContent content}."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.HeaderCellItem with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
        },
        {
          "name": "getContent",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.Control" },
          "description": "Gets content of aggregation {@link #getContent content}.\n\nInstance of UI5 Control that is used as content."
        },
        {
          "name": "getHeight",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.CSSSize",
            "description": "Value of property <code>height</code>"
          },
          "description": "Gets current value of property {@link #getHeight height}.\n\nHeight of area to occupy by control."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.HeaderCellItem."
        },
        {
          "name": "setContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.HeaderCellItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oContent",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The content to set"
            }
          ],
          "description": "Sets the aggregated {@link #getContent content}."
        },
        {
          "name": "setHeight",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.HeaderCellItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sHeight",
              "type": "sap.ui.core.CSSSize",
              "optional": false,
              "description": "New value for property <code>height</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getHeight height}.\n\nHeight of area to occupy by control.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.HeaderContainer",
      "basename": "HeaderContainer",
      "resource": "sap/suite/ui/commons/HeaderContainer.js",
      "module": "sap/suite/ui/commons/HeaderContainer",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.core.Control",
      "implements": ["sap.m.ObjectHeaderContainer"],
      "description": "The container that provides a horizontal layout. It provides a horizontal scroll on the tablet and phone. On the desktop, it provides scroll left and scroll right buttons. This control supports keyboard navigation. You can use left and right arrow keys to navigate through the inner content. The Home key puts focus on the first control and the End key puts focus on the last control. Use Enter or Space to choose the control.",
      "deprecated": {
        "since": "1.44",
        "text": "This control is deprecated in this library since 1.44 and moved to sap.m library that is also part of openUI5."
      },
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "scrollStep",
            "type": "int",
            "defaultValue": 300,
            "group": "Misc",
            "visibility": "public",
            "description": "Number of pixels to scroll when the user chooses Next or Previous buttons. Relevant only for desktop.",
            "methods": ["getScrollStep", "setScrollStep"]
          },
          {
            "name": "scrollTime",
            "type": "int",
            "defaultValue": 500,
            "group": "Misc",
            "visibility": "public",
            "description": "Scroll animation time in milliseconds.",
            "methods": ["getScrollTime", "setScrollTime"]
          },
          {
            "name": "showDividers",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "since": "1.25",
            "description": "If set to true, shows dividers between scrollable items.",
            "methods": ["getShowDividers", "setShowDividers"]
          },
          {
            "name": "view",
            "type": "sap.suite.ui.commons.HeaderContainerView",
            "defaultValue": "Horizontal",
            "group": "Misc",
            "visibility": "public",
            "since": "1.25",
            "description": "The view of the HeaderContainer. There are two view modes: horizontal and vertical. In horizontal mode the content controls are displayed next to each other, in vertical mode the content controls are displayed on top of each other.",
            "methods": ["getView", "setView"]
          },
          {
            "name": "backgroundDesign",
            "type": "sap.m.BackgroundDesign",
            "defaultValue": "Transparent",
            "group": "Misc",
            "visibility": "public",
            "since": "1.38",
            "description": "Specifies the background color of the content. The visualization of the different options depends on the used theme.",
            "methods": ["getBackgroundDesign", "setBackgroundDesign"]
          }
        ],
        "aggregations": [
          {
            "name": "scrollContainer",
            "singularName": "scrollContainer",
            "type": "sap.ui.core.Control",
            "cardinality": "0..1",
            "visibility": "hidden",
            "description": "Scroll container for smooth scrolling on different platforms.",
            "methods": [
              "getScrollContainer",
              "destroyScrollContainer",
              "setScrollContainer"
            ]
          },
          {
            "name": "items",
            "singularName": "item",
            "type": "sap.ui.core.Control",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Items to add to HeaderContainer.",
            "methods": [
              "getItems",
              "destroyItems",
              "insertItem",
              "addItem",
              "removeItem",
              "indexOfItem",
              "removeAllItems"
            ]
          },
          {
            "name": "buttonPrev",
            "singularName": "buttonPrev",
            "type": "sap.ui.core.Control",
            "cardinality": "0..1",
            "visibility": "hidden",
            "description": "Button that allows to scroll to previous section.",
            "methods": ["getButtonPrev", "destroyButtonPrev", "setButtonPrev"]
          },
          {
            "name": "buttonNext",
            "singularName": "buttonNext",
            "type": "sap.ui.core.Control",
            "cardinality": "0..1",
            "visibility": "hidden",
            "description": "Button that allows to scroll to next section.",
            "methods": ["getButtonNext", "destroyButtonNext", "setButtonNext"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new HeaderContainer.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "addItem",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.HeaderContainer",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oItem",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The item to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some item to the aggregation {@link #getItems items}."
        },
        {
          "name": "destroyItems",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.HeaderContainer",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the items in the aggregation {@link #getItems items}."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.HeaderContainer with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "getBackgroundDesign",
          "visibility": "public",
          "since": "1.38",
          "returnValue": {
            "type": "sap.m.BackgroundDesign",
            "description": "Value of property <code>backgroundDesign</code>"
          },
          "description": "Gets current value of property {@link #getBackgroundDesign backgroundDesign}.\n\nSpecifies the background color of the content. The visualization of the different options depends on the used theme.\n\nDefault value is <code>Transparent</code>."
        },
        {
          "name": "getItems",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.Control[]" },
          "description": "Gets content of aggregation {@link #getItems items}.\n\nItems to add to HeaderContainer."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.HeaderContainer."
        },
        {
          "name": "getScrollStep",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>scrollStep</code>"
          },
          "description": "Gets current value of property {@link #getScrollStep scrollStep}.\n\nNumber of pixels to scroll when the user chooses Next or Previous buttons. Relevant only for desktop.\n\nDefault value is <code>300</code>."
        },
        {
          "name": "getScrollTime",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>scrollTime</code>"
          },
          "description": "Gets current value of property {@link #getScrollTime scrollTime}.\n\nScroll animation time in milliseconds.\n\nDefault value is <code>500</code>."
        },
        {
          "name": "getShowDividers",
          "visibility": "public",
          "since": "1.25",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showDividers</code>"
          },
          "description": "Gets current value of property {@link #getShowDividers showDividers}.\n\nIf set to true, shows dividers between scrollable items.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getView",
          "visibility": "public",
          "since": "1.25",
          "returnValue": {
            "type": "sap.suite.ui.commons.HeaderContainerView",
            "description": "Value of property <code>view</code>"
          },
          "description": "Gets current value of property {@link #getView view}.\n\nThe view of the HeaderContainer. There are two view modes: horizontal and vertical. In horizontal mode the content controls are displayed next to each other, in vertical mode the content controls are displayed on top of each other.\n\nDefault value is <code>Horizontal</code>."
        },
        {
          "name": "indexOfItem",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oItem",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The item whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.ui.core.Control</code> in the aggregation {@link #getItems items}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "insertItem",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.HeaderContainer",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oItem",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The item to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the item should be inserted at; for a negative value of <code>iIndex</code>, the item is inserted at position 0; for a value greater than the current size of the aggregation, the item is inserted at the last position"
            }
          ],
          "description": "Inserts a item into the aggregation {@link #getItems items}."
        },
        {
          "name": "removeAllItems",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.Control[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getItems items}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeItem",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.Control",
            "description": "The removed item or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vItem",
              "type": "int|string|sap.ui.core.Control",
              "optional": false,
              "description": "The item to remove or its index or id"
            }
          ],
          "description": "Removes a item from the aggregation {@link #getItems items}."
        },
        {
          "name": "setBackgroundDesign",
          "visibility": "public",
          "since": "1.38",
          "returnValue": {
            "type": "sap.suite.ui.commons.HeaderContainer",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sBackgroundDesign",
              "type": "sap.m.BackgroundDesign",
              "optional": false,
              "description": "New value for property <code>backgroundDesign</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getBackgroundDesign backgroundDesign}.\n\nSpecifies the background color of the content. The visualization of the different options depends on the used theme.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Transparent</code>."
        },
        {
          "name": "setScrollStep",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.HeaderContainer",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iScrollStep",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>scrollStep</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getScrollStep scrollStep}.\n\nNumber of pixels to scroll when the user chooses Next or Previous buttons. Relevant only for desktop.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>300</code>."
        },
        {
          "name": "setScrollTime",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.HeaderContainer",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iScrollTime",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>scrollTime</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getScrollTime scrollTime}.\n\nScroll animation time in milliseconds.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>500</code>."
        },
        {
          "name": "setShowDividers",
          "visibility": "public",
          "since": "1.25",
          "returnValue": {
            "type": "sap.suite.ui.commons.HeaderContainer",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowDividers",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showDividers</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowDividers showDividers}.\n\nIf set to true, shows dividers between scrollable items.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setView",
          "visibility": "public",
          "since": "1.25",
          "returnValue": {
            "type": "sap.suite.ui.commons.HeaderContainer",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sView",
              "type": "sap.suite.ui.commons.HeaderContainerView",
              "optional": false,
              "description": "New value for property <code>view</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getView view}.\n\nThe view of the HeaderContainer. There are two view modes: horizontal and vertical. In horizontal mode the content controls are displayed next to each other, in vertical mode the content controls are displayed on top of each other.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Horizontal</code>."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.suite.ui.commons.HeaderContainerView",
      "basename": "HeaderContainerView",
      "resource": "sap/suite/ui/commons/library.js",
      "module": "sap/suite/ui/commons/library",
      "export": "HeaderContainerView",
      "static": true,
      "visibility": "public",
      "description": "The list of possible HeaderContainer views.",
      "deprecated": {
        "since": "1.48",
        "text": "This control is deprecated since 1.48. Please use the equivalent sap.ui.core.Orientation."
      },
      "ui5-metamodel": true,
      "properties": [
        {
          "name": "Horizontal",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The horizontal orientation of the control."
        },
        {
          "name": "Vertical",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The vertical orientation of the control."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.imageeditor.CropCustomShapeHistoryItem",
      "basename": "CropCustomShapeHistoryItem",
      "resource": "sap/suite/ui/commons/imageeditor/CropCustomShapeHistoryItem.js",
      "module": "sap/suite/ui/commons/imageeditor/CropCustomShapeHistoryItem",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.67.0",
      "extends": "sap.suite.ui.commons.imageeditor.HistoryItem",
      "description": "Holds information about an {@link sap.suite.ui.commons.imageeditor.ImageEditor} action history item that was created by the {@link sap.suite.ui.commons.imageeditor.ImageEditor#rectangleCrop} method.",
      "ui5-metadata": { "stereotype": "object" },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "mProperties",
            "type": "object",
            "optional": false,
            "parameterProperties": {
              "x": {
                "name": "x",
                "type": "int",
                "optional": false,
                "description": "X value"
              },
              "y": {
                "name": "y",
                "type": "int",
                "optional": false,
                "description": "Y value"
              },
              "width": {
                "name": "width",
                "type": "int",
                "optional": false,
                "description": "Width of the rectangle"
              },
              "height": {
                "name": "height",
                "type": "int",
                "optional": false,
                "description": "Height of the rectangle"
              },
              "oldWidth": {
                "name": "oldWidth",
                "type": "int",
                "optional": false,
                "description": "Previous width of the rectangle"
              },
              "oldHeight": {
                "name": "oldHeight",
                "type": "int",
                "optional": false,
                "description": "Previous height of the rectangle"
              }
            },
            "description": "Property bag"
          }
        ],
        "description": "Constructor for a new CropCustomShapeHistoryItem."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.imageeditor.CropCustomShapeHistoryItem with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.suite.ui.commons.imageeditor.HistoryItem.extend}."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.imageeditor.CropCustomShapeHistoryItem."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.imageeditor.CropEllipseHistoryItem",
      "basename": "CropEllipseHistoryItem",
      "resource": "sap/suite/ui/commons/imageeditor/CropEllipseHistoryItem.js",
      "module": "sap/suite/ui/commons/imageeditor/CropEllipseHistoryItem",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.66.0",
      "extends": "sap.suite.ui.commons.imageeditor.HistoryItem",
      "description": "Holds information about an {@link sap.suite.ui.commons.imageeditor.ImageEditor} action history item that was created by the {@link sap.suite.ui.commons.imageeditor.ImageEditor#ellipseCrop} method.",
      "ui5-metadata": { "stereotype": "object" },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "mProperties",
            "type": "object",
            "optional": false,
            "parameterProperties": {
              "x": {
                "name": "x",
                "type": "int",
                "optional": false,
                "description": "X value"
              },
              "y": {
                "name": "y",
                "type": "int",
                "optional": false,
                "description": "Y value"
              },
              "rx": {
                "name": "rx",
                "type": "int",
                "optional": false,
                "description": "X radius value"
              },
              "ry": {
                "name": "ry",
                "type": "int",
                "optional": false,
                "description": "Y radius value"
              },
              "width": {
                "name": "width",
                "type": "int",
                "optional": false,
                "description": "Width of the ellipse"
              },
              "height": {
                "name": "height",
                "type": "int",
                "optional": false,
                "description": "Height of the ellipse"
              },
              "oldWidth": {
                "name": "oldWidth",
                "type": "int",
                "optional": false,
                "description": "Previous width of the ellipse"
              },
              "oldHeight": {
                "name": "oldHeight",
                "type": "int",
                "optional": false,
                "description": "Previous height of the ellipse"
              }
            },
            "description": "Property bag"
          }
        ],
        "description": "Constructor for a new CropEllipseHistoryItem."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.imageeditor.CropEllipseHistoryItem with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.suite.ui.commons.imageeditor.HistoryItem.extend}."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.imageeditor.CropEllipseHistoryItem."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.imageeditor.CropRectangleHistoryItem",
      "basename": "CropRectangleHistoryItem",
      "resource": "sap/suite/ui/commons/imageeditor/CropRectangleHistoryItem.js",
      "module": "sap/suite/ui/commons/imageeditor/CropRectangleHistoryItem",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.66.0",
      "extends": "sap.suite.ui.commons.imageeditor.HistoryItem",
      "description": "Holds information about an {@link sap.suite.ui.commons.imageeditor.ImageEditor} action history item that was created by the {@link sap.suite.ui.commons.imageeditor.ImageEditor#rectangleCrop} method.",
      "ui5-metadata": { "stereotype": "object" },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "mProperties",
            "type": "object",
            "optional": false,
            "parameterProperties": {
              "x": {
                "name": "x",
                "type": "int",
                "optional": false,
                "description": "X value"
              },
              "y": {
                "name": "y",
                "type": "int",
                "optional": false,
                "description": "Y value"
              },
              "width": {
                "name": "width",
                "type": "int",
                "optional": false,
                "description": "Width of the rectangle"
              },
              "height": {
                "name": "height",
                "type": "int",
                "optional": false,
                "description": "Height of the rectangle"
              },
              "oldWidth": {
                "name": "oldWidth",
                "type": "int",
                "optional": false,
                "description": "Previous width of the rectangle"
              },
              "oldHeight": {
                "name": "oldHeight",
                "type": "int",
                "optional": false,
                "description": "Previous height of the rectangle"
              }
            },
            "description": "Property bag"
          }
        ],
        "description": "Constructor for a new CropRectangleHistoryItem."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.imageeditor.CropRectangleHistoryItem with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.suite.ui.commons.imageeditor.HistoryItem.extend}."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.imageeditor.CropRectangleHistoryItem."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.imageeditor.CustomSizeItem",
      "basename": "CustomSizeItem",
      "resource": "sap/suite/ui/commons/imageeditor/CustomSizeItem.js",
      "module": "sap/suite/ui/commons/imageeditor/CustomSizeItem",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.66.0",
      "extends": "sap.ui.core.Element",
      "description": "A <code>CustomSizeItem</code> can be used in the {@link sap.suite.ui.commons.imageeditor.ImageEditorContainer} aggregations to define custom items on the Resize, Crop Rectangle, and Crop Ellipse panels.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "element",
        "properties": [
          {
            "name": "width",
            "type": "float",
            "defaultValue": 0,
            "group": "Misc",
            "visibility": "public",
            "description": "Defines the width of the <code>CustomSizeItem</code>. <br>This property is mandatory and must be greater than 0.",
            "methods": ["getWidth", "setWidth"]
          },
          {
            "name": "height",
            "type": "float",
            "defaultValue": 0,
            "group": "Misc",
            "visibility": "public",
            "description": "* Defines the height of the <code>CustomSizeItem</code>. <br>This property is mandatory and must be greater than 0.",
            "methods": ["getHeight", "setHeight"]
          },
          {
            "name": "label",
            "type": "string",
            "defaultValue": "",
            "group": "Misc",
            "visibility": "public",
            "description": "Defines the label of the <code>CustomSizeItem</code>.",
            "methods": ["getLabel", "setLabel"]
          },
          {
            "name": "icon",
            "type": "sap.ui.core.URI",
            "defaultValue": "",
            "group": "Misc",
            "visibility": "public",
            "description": "Defines the icon to be displayed in the <code>CustomSizeItem</code>. <br>If no icon is specified, the default image is used, which is derived from the set width and height.",
            "methods": ["getIcon", "setIcon"]
          },
          {
            "name": "relative",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "description": "Specifies whether the <code>width</code> and <code>height</code> properties use relative values (<code>true</code>) or absolute values (<code>false</code>). <br>When used in the <code>customResizeItems</code> aggregation of an {@link sap.suite.ui.commons.imageeditor.ImageEditorContainer}, width and height are multiplied by the <code>width</code> and <code>height</code> properties of the <code>CustomSizeItem</code>. <br>When used in the <code>customRectangleCropItems</code> or <code>customEllipseCropItems</code> aggregations of an {@link sap.suite.ui.commons.imageeditor.ImageEditorContainer}, aspect ratio is set to the <code>width</code> and <code>height</code> properties of the <code>CustomSizeItem</code>.",
            "methods": ["getRelative", "setRelative"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new CustomSizeItem.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.imageeditor.CustomSizeItem with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
        },
        {
          "name": "getHeight",
          "visibility": "public",
          "returnValue": {
            "type": "float",
            "description": "Value of property <code>height</code>"
          },
          "description": "Gets current value of property {@link #getHeight height}.\n\n* Defines the height of the <code>CustomSizeItem</code>. <br>This property is mandatory and must be greater than 0.\n\nDefault value is <code>0</code>."
        },
        {
          "name": "getIcon",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.URI",
            "description": "Value of property <code>icon</code>"
          },
          "description": "Gets current value of property {@link #getIcon icon}.\n\nDefines the icon to be displayed in the <code>CustomSizeItem</code>. <br>If no icon is specified, the default image is used, which is derived from the set width and height.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "getLabel",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>label</code>"
          },
          "description": "Gets current value of property {@link #getLabel label}.\n\nDefines the label of the <code>CustomSizeItem</code>.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.imageeditor.CustomSizeItem."
        },
        {
          "name": "getRelative",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>relative</code>"
          },
          "description": "Gets current value of property {@link #getRelative relative}.\n\nSpecifies whether the <code>width</code> and <code>height</code> properties use relative values (<code>true</code>) or absolute values (<code>false</code>). <br>When used in the <code>customResizeItems</code> aggregation of an {@link sap.suite.ui.commons.imageeditor.ImageEditorContainer}, width and height are multiplied by the <code>width</code> and <code>height</code> properties of the <code>CustomSizeItem</code>. <br>When used in the <code>customRectangleCropItems</code> or <code>customEllipseCropItems</code> aggregations of an {@link sap.suite.ui.commons.imageeditor.ImageEditorContainer}, aspect ratio is set to the <code>width</code> and <code>height</code> properties of the <code>CustomSizeItem</code>.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getWidth",
          "visibility": "public",
          "returnValue": {
            "type": "float",
            "description": "Value of property <code>width</code>"
          },
          "description": "Gets current value of property {@link #getWidth width}.\n\nDefines the width of the <code>CustomSizeItem</code>. <br>This property is mandatory and must be greater than 0.\n\nDefault value is <code>0</code>."
        },
        {
          "name": "setHeight",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.imageeditor.CustomSizeItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fHeight",
              "type": "float",
              "optional": false,
              "description": "New value for property <code>height</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getHeight height}.\n\n* Defines the height of the <code>CustomSizeItem</code>. <br>This property is mandatory and must be greater than 0.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>0</code>."
        },
        {
          "name": "setIcon",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.imageeditor.CustomSizeItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sIcon",
              "type": "sap.ui.core.URI",
              "optional": false,
              "description": "New value for property <code>icon</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getIcon icon}.\n\nDefines the icon to be displayed in the <code>CustomSizeItem</code>. <br>If no icon is specified, the default image is used, which is derived from the set width and height.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "setLabel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.imageeditor.CustomSizeItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sLabel",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>label</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getLabel label}.\n\nDefines the label of the <code>CustomSizeItem</code>.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "setRelative",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.imageeditor.CustomSizeItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bRelative",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>relative</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getRelative relative}.\n\nSpecifies whether the <code>width</code> and <code>height</code> properties use relative values (<code>true</code>) or absolute values (<code>false</code>). <br>When used in the <code>customResizeItems</code> aggregation of an {@link sap.suite.ui.commons.imageeditor.ImageEditorContainer}, width and height are multiplied by the <code>width</code> and <code>height</code> properties of the <code>CustomSizeItem</code>. <br>When used in the <code>customRectangleCropItems</code> or <code>customEllipseCropItems</code> aggregations of an {@link sap.suite.ui.commons.imageeditor.ImageEditorContainer}, aspect ratio is set to the <code>width</code> and <code>height</code> properties of the <code>CustomSizeItem</code>.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.imageeditor.CustomSizeItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fWidth",
              "type": "float",
              "optional": false,
              "description": "New value for property <code>width</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getWidth width}.\n\nDefines the width of the <code>CustomSizeItem</code>. <br>This property is mandatory and must be greater than 0.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>0</code>."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.imageeditor.FilterHistoryItem",
      "basename": "FilterHistoryItem",
      "resource": "sap/suite/ui/commons/imageeditor/FilterHistoryItem.js",
      "module": "sap/suite/ui/commons/imageeditor/FilterHistoryItem",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.66.0",
      "extends": "sap.suite.ui.commons.imageeditor.HistoryItem",
      "description": "Holds information about an {@link sap.suite.ui.commons.imageeditor.ImageEditor} action history item that was created by one of the methods that apply filters to the image, such as {@link sap.suite.ui.commons.imageeditor.ImageEditor#sepia}, {@link sap.suite.ui.commons.imageeditor.ImageEditor#grayscale}, {@link sap.suite.ui.commons.imageeditor.ImageEditor#saturate}, {@link sap.suite.ui.commons.imageeditor.ImageEditor#invert}, {@link sap.suite.ui.commons.imageeditor.ImageEditor#brightness}, and {@link sap.suite.ui.commons.imageeditor.ImageEditor#contrast}.",
      "ui5-metadata": { "stereotype": "object" },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "mProperties",
            "type": "object",
            "optional": false,
            "parameterProperties": {
              "type": {
                "name": "type",
                "type": "string",
                "optional": false,
                "description": "Filter type"
              },
              "value": {
                "name": "value",
                "type": "int",
                "optional": false,
                "description": "Filter value"
              },
              "unit": {
                "name": "unit",
                "type": "string",
                "optional": false,
                "description": "Filter unit"
              }
            },
            "description": "Property bag"
          }
        ],
        "description": "Constructor for a new FilterHistoryItem."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.imageeditor.FilterHistoryItem with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.suite.ui.commons.imageeditor.HistoryItem.extend}."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.imageeditor.FilterHistoryItem."
        },
        {
          "name": "getType",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Type of the filter"
          },
          "description": "Gets the type of the filter applied."
        },
        {
          "name": "getUnit",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Unit of the filter"
          },
          "description": "Gets the units of the filter value."
        },
        {
          "name": "getValue",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of the filter"
          },
          "description": "Gets the filter value (its intensity)."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.imageeditor.FlipHistoryItem",
      "basename": "FlipHistoryItem",
      "resource": "sap/suite/ui/commons/imageeditor/FlipHistoryItem.js",
      "module": "sap/suite/ui/commons/imageeditor/FlipHistoryItem",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.66.0",
      "extends": "sap.suite.ui.commons.imageeditor.HistoryItem",
      "description": "Holds information about an {@link sap.suite.ui.commons.imageeditor.ImageEditor} action history item that was created by one of the flip methods, such as {@link sap.suite.ui.commons.imageeditor.ImageEditor#flipVertical}, {@link sap.suite.ui.commons.imageeditor.ImageEditor#flipHorizontal}, and {@link sap.suite.ui.commons.imageeditor.ImageEditor#flip}.",
      "ui5-metadata": { "stereotype": "object" },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "mProperties",
            "type": "object",
            "optional": false,
            "parameterProperties": {
              "vertical": {
                "name": "vertical",
                "type": "boolean",
                "optional": false,
                "description": "Whether vertical flip has been performed"
              },
              "horizontal": {
                "name": "horizontal",
                "type": "boolean",
                "optional": false,
                "description": "Whether horizontal flip has been performed"
              }
            },
            "description": "Property bag"
          }
        ],
        "description": "Constructor for a new FlipHistoryItem."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.imageeditor.FlipHistoryItem with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.suite.ui.commons.imageeditor.HistoryItem.extend}."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.imageeditor.FlipHistoryItem."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.imageeditor.HistoryItem",
      "basename": "HistoryItem",
      "resource": "sap/suite/ui/commons/imageeditor/HistoryItem.js",
      "module": "sap/suite/ui/commons/imageeditor/HistoryItem",
      "export": "",
      "abstract": true,
      "static": true,
      "visibility": "public",
      "since": "1.66.0",
      "extends": "sap.ui.base.Object",
      "description": "Abstract base class for all {@link sap.suite.ui.commons.imageeditor.ImageEditor} action history items.",
      "ui5-metadata": { "stereotype": "object" },
      "constructor": { "visibility": "public" },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.imageeditor.HistoryItem with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.imageeditor.HistoryItem."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.imageeditor.ImageEditor",
      "basename": "ImageEditor",
      "resource": "sap/suite/ui/commons/imageeditor/ImageEditor.js",
      "module": "sap/suite/ui/commons/imageeditor/ImageEditor",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.66.0",
      "extends": "sap.ui.core.Control",
      "description": "Image editor displays an image and provides API and visual controls to edit it.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "src",
            "type": "any",
            "defaultValue": "",
            "group": "Misc",
            "visibility": "public",
            "description": "Image source. <br>Can be a file or Blob object, a URL address of the image, a Base64 data URL string, or any other source supported by the &lt;img> HTML tag.",
            "methods": ["getSrc", "setSrc"]
          },
          {
            "name": "customShapeSrc",
            "type": "any",
            "defaultValue": "",
            "group": "Misc",
            "visibility": "public",
            "description": "Image source for the custom shape used in custom shape cropping. <br>Can be a file or Blob object, a URL address of the image, a Base64 data URL string, or any other source supported by the &lt;img> HTML tag. <br><b>Note:</b> In Internet Explorer, <code>customShape</code> doesn't support SVG files and will throw and exception if SVG files are used.",
            "methods": ["getCustomShapeSrc", "setCustomShapeSrc"]
          },
          {
            "name": "mode",
            "type": "sap.suite.ui.commons.ImageEditorMode",
            "defaultValue": "Default",
            "group": "Misc",
            "visibility": "public",
            "description": "Image editor mode. <br>Four modes are available: resize mode, crop to rectangle mode, crop to circle mode, and display image mode (default).<br>The default mode displays the image to be edited.",
            "methods": ["getMode", "setMode"]
          },
          {
            "name": "keepCropAspectRatio",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "description": "Defines whether aspect ratio should be kept when the crop area is expanded or shrunk in the <code>CropRectangle</code> or <code>CropEllipse</code> modes ({@link sap.suite.ui.commons.ImageEditorMode}).",
            "methods": ["getKeepCropAspectRatio", "setKeepCropAspectRatio"]
          },
          {
            "name": "keepResizeAspectRatio",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "description": "Defines whether aspect ratio should be kept when the image is resized in the <code>Resize</code> mode ({@link sap.suite.ui.commons.ImageEditorMode}) or using the {@link #setWidth} or {@link #setHeight} methods.",
            "methods": ["getKeepResizeAspectRatio", "setKeepResizeAspectRatio"]
          },
          {
            "name": "scaleCropArea",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "description": "Defines the behavior of the crop area when zooming in or out. <br>If set to <code>true</code>, the crop area is scaled up or down when the zoom level is changed. <br>If set to <code>false</code>, the crop area remains unchanged and keeps its size.",
            "methods": ["getScaleCropArea", "setScaleCropArea"]
          }
        ],
        "events": [
          {
            "name": "loaded",
            "visibility": "public",
            "description": "This event is fired after the image specified in the <code>src</code> property is successfully loaded.",
            "methods": ["attachLoaded", "detachLoaded", "fireLoaded"]
          },
          {
            "name": "error",
            "visibility": "public",
            "description": "This event is fired if there is an error loading the image specified in the <code>src</code> property, for example, when the URL is unreachable.",
            "methods": ["attachError", "detachError", "fireError"]
          },
          {
            "name": "customShapeLoaded",
            "visibility": "public",
            "description": "This event is fired after the image specified in the <code>customShapeSrc</code> property is successfully loaded.",
            "methods": [
              "attachCustomShapeLoaded",
              "detachCustomShapeLoaded",
              "fireCustomShapeLoaded"
            ]
          },
          {
            "name": "customShapeError",
            "visibility": "public",
            "description": "This event is fired if there is an error loading the image specified in the <code>customShapeSrc</code> property, for example, when the URL is unreachable.",
            "methods": [
              "attachCustomShapeError",
              "detachCustomShapeError",
              "fireCustomShapeError"
            ]
          },
          {
            "name": "sizeChanged",
            "visibility": "public",
            "description": "This event is fired when the size of the image is changed by the user while in the <code>Resize</code> mode ({@link sap.suite.ui.commons.ImageEditorMode}).",
            "parameters": {
              "width": { "name": "width", "type": "int" },
              "height": { "name": "height", "type": "int" },
              "originalWidth": { "name": "originalWidth", "type": "int" },
              "originalHeight": { "name": "originalHeight", "type": "int" }
            },
            "methods": [
              "attachSizeChanged",
              "detachSizeChanged",
              "fireSizeChanged"
            ]
          },
          {
            "name": "cropAreaChanged",
            "visibility": "public",
            "description": "This event is fired when the size of the crop area is changed by the user while in the <code>CropRectangle</code> or <code>CropEllipse</code> mode ({@link sap.suite.ui.commons.ImageEditorMode}).",
            "parameters": {
              "cropArea": { "name": "cropArea", "type": "object" },
              "originalCropArea": {
                "name": "originalCropArea",
                "type": "object"
              }
            },
            "methods": [
              "attachCropAreaChanged",
              "detachCropAreaChanged",
              "fireCropAreaChanged"
            ]
          },
          {
            "name": "zoomChanged",
            "visibility": "public",
            "description": "This event is fired when the zoom level is changed by the user interaction.",
            "parameters": { "zoom": { "name": "zoom", "type": "int" } },
            "methods": [
              "attachZoomChanged",
              "detachZoomChanged",
              "fireZoomChanged"
            ]
          },
          {
            "name": "historyChanged",
            "visibility": "public",
            "description": "This event is fired each time there is a change in the history of recent actions or in the recent actions history index. <br>This may happen either when an action is performed on the image or when the {@link #undo}, {@link #redo}, or {@link #jumpToHistory} methods are called.",
            "methods": [
              "attachHistoryChanged",
              "detachHistoryChanged",
              "fireHistoryChanged"
            ]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new ImageEditor.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "cropAreaChanged",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "cropArea": {
                      "name": "cropArea",
                      "type": "object",
                      "optional": false
                    },
                    "originalCropArea": {
                      "name": "originalCropArea",
                      "type": "object",
                      "optional": false
                    }
                  }
                }
              }
            }
          ],
          "description": "This event is fired when the size of the crop area is changed by the user while in the <code>CropRectangle</code> or <code>CropEllipse</code> mode ({@link sap.suite.ui.commons.ImageEditorMode})."
        },
        {
          "name": "customShapeError",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "This event is fired if there is an error loading the image specified in the <code>customShapeSrc</code> property, for example, when the URL is unreachable."
        },
        {
          "name": "customShapeLoaded",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "This event is fired after the image specified in the <code>customShapeSrc</code> property is successfully loaded."
        },
        {
          "name": "error",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "This event is fired if there is an error loading the image specified in the <code>src</code> property, for example, when the URL is unreachable."
        },
        {
          "name": "historyChanged",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "This event is fired each time there is a change in the history of recent actions or in the recent actions history index. <br>This may happen either when an action is performed on the image or when the {@link #undo}, {@link #redo}, or {@link #jumpToHistory} methods are called."
        },
        {
          "name": "loaded",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "This event is fired after the image specified in the <code>src</code> property is successfully loaded."
        },
        {
          "name": "sizeChanged",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "width": {
                      "name": "width",
                      "type": "int",
                      "optional": false
                    },
                    "height": {
                      "name": "height",
                      "type": "int",
                      "optional": false
                    },
                    "originalWidth": {
                      "name": "originalWidth",
                      "type": "int",
                      "optional": false
                    },
                    "originalHeight": {
                      "name": "originalHeight",
                      "type": "int",
                      "optional": false
                    }
                  }
                }
              }
            }
          ],
          "description": "This event is fired when the size of the image is changed by the user while in the <code>Resize</code> mode ({@link sap.suite.ui.commons.ImageEditorMode})."
        },
        {
          "name": "zoomChanged",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "zoom": { "name": "zoom", "type": "int", "optional": false }
                  }
                }
              }
            }
          ],
          "description": "This event is fired when the zoom level is changed by the user interaction."
        }
      ],
      "methods": [
        {
          "name": "applyPreview",
          "visibility": "public",
          "description": "Saves current preview to action history, if there is any."
        },
        {
          "name": "applyVisibleCrop",
          "visibility": "public",
          "parameters": [
            {
              "name": "bPreview",
              "type": "boolean",
              "optional": false,
              "description": "Indicates whether to show this action in preview only (<code>true</code>) or record it in action history as well (<code>false</code>)"
            }
          ],
          "description": "Crops the image based on the currently shown crop area. <br>This method works only when the {@link sap.suite.ui.commons.ImageEditorMode} is set to <code>CropRectangle</code> or <code>CropEllipse</code>."
        },
        {
          "name": "attachCropAreaChanged",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.imageeditor.ImageEditor",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.imageeditor.ImageEditor</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:cropAreaChanged cropAreaChanged} event of this <code>sap.suite.ui.commons.imageeditor.ImageEditor</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.imageeditor.ImageEditor</code> itself.\n\nThis event is fired when the size of the crop area is changed by the user while in the <code>CropRectangle</code> or <code>CropEllipse</code> mode ({@link sap.suite.ui.commons.ImageEditorMode})."
        },
        {
          "name": "attachCustomShapeError",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.imageeditor.ImageEditor",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.imageeditor.ImageEditor</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:customShapeError customShapeError} event of this <code>sap.suite.ui.commons.imageeditor.ImageEditor</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.imageeditor.ImageEditor</code> itself.\n\nThis event is fired if there is an error loading the image specified in the <code>customShapeSrc</code> property, for example, when the URL is unreachable."
        },
        {
          "name": "attachCustomShapeLoaded",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.imageeditor.ImageEditor",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.imageeditor.ImageEditor</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:customShapeLoaded customShapeLoaded} event of this <code>sap.suite.ui.commons.imageeditor.ImageEditor</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.imageeditor.ImageEditor</code> itself.\n\nThis event is fired after the image specified in the <code>customShapeSrc</code> property is successfully loaded."
        },
        {
          "name": "attachError",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.imageeditor.ImageEditor",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.imageeditor.ImageEditor</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:error error} event of this <code>sap.suite.ui.commons.imageeditor.ImageEditor</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.imageeditor.ImageEditor</code> itself.\n\nThis event is fired if there is an error loading the image specified in the <code>src</code> property, for example, when the URL is unreachable."
        },
        {
          "name": "attachHistoryChanged",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.imageeditor.ImageEditor",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.imageeditor.ImageEditor</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:historyChanged historyChanged} event of this <code>sap.suite.ui.commons.imageeditor.ImageEditor</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.imageeditor.ImageEditor</code> itself.\n\nThis event is fired each time there is a change in the history of recent actions or in the recent actions history index. <br>This may happen either when an action is performed on the image or when the {@link #undo}, {@link #redo}, or {@link #jumpToHistory} methods are called."
        },
        {
          "name": "attachLoaded",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.imageeditor.ImageEditor",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.imageeditor.ImageEditor</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:loaded loaded} event of this <code>sap.suite.ui.commons.imageeditor.ImageEditor</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.imageeditor.ImageEditor</code> itself.\n\nThis event is fired after the image specified in the <code>src</code> property is successfully loaded."
        },
        {
          "name": "attachSizeChanged",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.imageeditor.ImageEditor",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.imageeditor.ImageEditor</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:sizeChanged sizeChanged} event of this <code>sap.suite.ui.commons.imageeditor.ImageEditor</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.imageeditor.ImageEditor</code> itself.\n\nThis event is fired when the size of the image is changed by the user while in the <code>Resize</code> mode ({@link sap.suite.ui.commons.ImageEditorMode})."
        },
        {
          "name": "attachZoomChanged",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.imageeditor.ImageEditor",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.imageeditor.ImageEditor</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:zoomChanged zoomChanged} event of this <code>sap.suite.ui.commons.imageeditor.ImageEditor</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.imageeditor.ImageEditor</code> itself.\n\nThis event is fired when the zoom level is changed by the user interaction."
        },
        {
          "name": "brightness",
          "visibility": "public",
          "parameters": [
            {
              "name": "iValue",
              "type": "int",
              "optional": false,
              "description": "Filter strength. Applicable range of values is from 0 to 500"
            },
            {
              "name": "bPreview",
              "type": "boolean",
              "optional": false,
              "description": "Indicates whether to show this action in preview only (<code>true</code>) or record it in action history as well (<code>false</code>)"
            }
          ],
          "description": "Applies the brightness filter to the image."
        },
        {
          "name": "cancelPreview",
          "visibility": "public",
          "description": "Cancels the current preview and restores the image to its last recorded state."
        },
        {
          "name": "contrast",
          "visibility": "public",
          "parameters": [
            {
              "name": "iValue",
              "type": "int",
              "optional": false,
              "description": "Amount of the filter strength. Applicable range of values is from 0 to 500"
            },
            {
              "name": "bPreview",
              "type": "boolean",
              "optional": false,
              "description": "Indicates whether to show this action in preview only (<code>true</code>) or record it in action history as well (<code>false</code>)"
            }
          ],
          "description": "Applies the contrast filter to the image."
        },
        {
          "name": "customShapeCrop",
          "visibility": "public",
          "parameters": [
            {
              "name": "iX",
              "type": "int",
              "optional": false,
              "description": "X coordinate of the top left corner of the crop area"
            },
            {
              "name": "iY",
              "type": "int",
              "optional": false,
              "description": "Y coordinate of the top left corner of the crop area"
            },
            {
              "name": "iWidth",
              "type": "int",
              "optional": false,
              "description": "Width of the crop area"
            },
            {
              "name": "iHeight",
              "type": "int",
              "optional": false,
              "description": "Height of the crop area"
            },
            {
              "name": "bPreview",
              "type": "boolean",
              "optional": false,
              "description": "Indicates whether to show this action in preview only (<code>true</code>) or record it in action history as well (<code>false</code>)"
            }
          ],
          "description": "Crops the image to a new shape based on the loaded custom shape and the specified pixel parameters."
        },
        {
          "name": "detachCropAreaChanged",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.imageeditor.ImageEditor",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:cropAreaChanged cropAreaChanged} event of this <code>sap.suite.ui.commons.imageeditor.ImageEditor</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachCustomShapeError",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.imageeditor.ImageEditor",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:customShapeError customShapeError} event of this <code>sap.suite.ui.commons.imageeditor.ImageEditor</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachCustomShapeLoaded",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.imageeditor.ImageEditor",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:customShapeLoaded customShapeLoaded} event of this <code>sap.suite.ui.commons.imageeditor.ImageEditor</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachError",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.imageeditor.ImageEditor",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:error error} event of this <code>sap.suite.ui.commons.imageeditor.ImageEditor</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachHistoryChanged",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.imageeditor.ImageEditor",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:historyChanged historyChanged} event of this <code>sap.suite.ui.commons.imageeditor.ImageEditor</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachLoaded",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.imageeditor.ImageEditor",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:loaded loaded} event of this <code>sap.suite.ui.commons.imageeditor.ImageEditor</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachSizeChanged",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.imageeditor.ImageEditor",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:sizeChanged sizeChanged} event of this <code>sap.suite.ui.commons.imageeditor.ImageEditor</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachZoomChanged",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.imageeditor.ImageEditor",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:zoomChanged zoomChanged} event of this <code>sap.suite.ui.commons.imageeditor.ImageEditor</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "ellipseCrop",
          "visibility": "public",
          "parameters": [
            {
              "name": "iX",
              "type": "int",
              "optional": false,
              "description": "X coordinate of the center of the crop area"
            },
            {
              "name": "iY",
              "type": "int",
              "optional": false,
              "description": "Y coordinate of the center of the crop area"
            },
            {
              "name": "iXRadius",
              "type": "int",
              "optional": false,
              "description": "X radius of the crop area"
            },
            {
              "name": "iYRadius",
              "type": "int",
              "optional": false,
              "description": "Y radius of the crop area"
            },
            {
              "name": "bPreview",
              "type": "boolean",
              "optional": false,
              "description": "Indicates whether to show this action in preview only (<code>true</code>) or record it in action history as well (<code>false</code>)"
            }
          ],
          "description": "Crops the image to a new circular or oval shape based on the specified pixel parameters."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.imageeditor.ImageEditor with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "fireCropAreaChanged",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.imageeditor.ImageEditor",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "cropArea": {
                  "name": "cropArea",
                  "type": "object",
                  "optional": true
                },
                "originalCropArea": {
                  "name": "originalCropArea",
                  "type": "object",
                  "optional": true
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:cropAreaChanged cropAreaChanged} to attached listeners."
        },
        {
          "name": "fireCustomShapeError",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.imageeditor.ImageEditor",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:customShapeError customShapeError} to attached listeners."
        },
        {
          "name": "fireCustomShapeLoaded",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.imageeditor.ImageEditor",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:customShapeLoaded customShapeLoaded} to attached listeners."
        },
        {
          "name": "fireError",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.imageeditor.ImageEditor",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:error error} to attached listeners."
        },
        {
          "name": "fireHistoryChanged",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.imageeditor.ImageEditor",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:historyChanged historyChanged} to attached listeners."
        },
        {
          "name": "fireLoaded",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.imageeditor.ImageEditor",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:loaded loaded} to attached listeners."
        },
        {
          "name": "fireSizeChanged",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.imageeditor.ImageEditor",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "width": { "name": "width", "type": "int", "optional": true },
                "height": { "name": "height", "type": "int", "optional": true },
                "originalWidth": {
                  "name": "originalWidth",
                  "type": "int",
                  "optional": true
                },
                "originalHeight": {
                  "name": "originalHeight",
                  "type": "int",
                  "optional": true
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:sizeChanged sizeChanged} to attached listeners."
        },
        {
          "name": "fireZoomChanged",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.imageeditor.ImageEditor",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "zoom": { "name": "zoom", "type": "int", "optional": true }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:zoomChanged zoomChanged} to attached listeners."
        },
        {
          "name": "flip",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.imageeditor.ImageEditor",
            "description": "instance of the ImageEditor for method chaining"
          },
          "parameters": [
            {
              "name": "bVertical",
              "type": "boolean",
              "optional": false,
              "description": "Whether to flip the image vertically"
            },
            {
              "name": "bHorizontal",
              "type": "boolean",
              "optional": false,
              "description": "Whether to flip the image horizontally"
            },
            {
              "name": "bPreview",
              "type": "boolean",
              "optional": false,
              "description": "Indicates whether to show this action in preview only (<code>true</code>) or record it in action history as well (<code>false</code>)"
            }
          ],
          "description": "Flips the image based on the specified parameters."
        },
        {
          "name": "flipHorizontal",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.imageeditor.ImageEditor",
            "description": "instance of the ImageEditor for method chaining"
          },
          "parameters": [
            {
              "name": "bPreview",
              "type": "boolean",
              "optional": false,
              "description": "Indicates whether to show this action in preview only (<code>true</code>) or record it in action history as well (<code>false</code>)"
            }
          ],
          "description": "Flips the whole image horizontally."
        },
        {
          "name": "flipVertical",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.imageeditor.ImageEditor",
            "description": "instance of the ImageEditor for method chaining"
          },
          "parameters": [
            {
              "name": "bPreview",
              "type": "boolean",
              "optional": false,
              "description": "Indicates whether to show this action in preview only (<code>true</code>) or record it in action history as well (<code>false</code>)"
            }
          ],
          "description": "Flips the whole image vertically."
        },
        {
          "name": "getCropArea",
          "visibility": "public",
          "returnValue": {
            "type": "Object",
            "description": "Crop area with properties x, y, width, and height"
          },
          "description": "Gets the current crop area position and size."
        },
        {
          "name": "getCustomShapeLoaded",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Whether the image is loaded or not"
          },
          "description": "Returns <code>true</code> when the <code>src</code> property is set and the specified image has been successfuly loaded."
        },
        {
          "name": "getCustomShapeSrc",
          "visibility": "public",
          "returnValue": {
            "type": "any",
            "description": "Value of property <code>customShapeSrc</code>"
          },
          "description": "Gets current value of property {@link #getCustomShapeSrc customShapeSrc}.\n\nImage source for the custom shape used in custom shape cropping. <br>Can be a file or Blob object, a URL address of the image, a Base64 data URL string, or any other source supported by the &lt;img> HTML tag. <br><b>Note:</b> In Internet Explorer, <code>customShape</code> doesn't support SVG files and will throw and exception if SVG files are used.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "getFileName",
          "visibility": "public",
          "returnValue": { "type": "string", "description": "File name" },
          "description": "Returns the name of the image file if a file was specified in the<code>src</code> property and its name is available. Otherwise returns an empty string."
        },
        {
          "name": "getHeight",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "height of the last non-preview image"
          },
          "description": "Returns the height of the image."
        },
        {
          "name": "getHistory",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.imageeditor.HistoryItem[]",
            "description": "Array of action history items"
          },
          "description": "Returns an array of all action history items."
        },
        {
          "name": "getImageAsBlob",
          "visibility": "public",
          "returnValue": {
            "type": "Promise",
            "description": "Promise that resolves into the Blob object"
          },
          "parameters": [
            {
              "name": "sFormat",
              "type": "sap.suite.ui.commons.ImageFormat",
              "optional": true,
              "description": "File format of the returned image Blob. If the selected format is not suppoirted by the browser's <code>canvas.toDataURL</code> method, PNG is returned instead."
            },
            {
              "name": "fQuality",
              "type": "float",
              "optional": true,
              "description": "Only applied when JPEG format is used. Quality of the returned image, ranging from 0 to 1. 0 means highly compressed image, 1 means uncompressed image. When no value is provided, canvas default compression level is used."
            }
          ],
          "description": "Returns Blob object containing the image in the specified format. If the format is not specified, either the original format of the image is used or PNG, if the original format is not supported by the browser's <code>canvas.toDataURL</code> method."
        },
        {
          "name": "getImageDataURL",
          "visibility": "public",
          "returnValue": { "type": "string", "description": "Base64 Data URL" },
          "parameters": [
            {
              "name": "sFormat",
              "type": "sap.suite.ui.commons.ImageFormat",
              "optional": true,
              "description": "File format of the returned Data URL. If the selected format is not suppoirted by the browser's <code>canvas.toDataURL</code> method, PNG is returned instead."
            },
            {
              "name": "fQuality",
              "type": "float",
              "optional": true,
              "description": "Only applied when JPEG format is used. Quality of the returned image, ranging from 0 to 1. 0 means highly compressed image, 1 means uncompressed image. When no value is provided, canvas default compression level is used."
            }
          ],
          "description": "Returns Base64 Data URL of the image in the specified format. If the format is not specified, either the original format of the image is used or PNG, if the original format is not supported by the browser's <code>canvas.toDataURL</code> method."
        },
        {
          "name": "getImageJpegDataURL",
          "visibility": "public",
          "returnValue": { "type": "string", "description": "Base64 Data URL" },
          "parameters": [
            {
              "name": "fQuality",
              "type": "float",
              "optional": true,
              "description": "Quality of the returned image, ranging from 0 to 1. 0 means highly compressed image, 1 means uncompressed image. When no value is provided, canvas default compression level is used."
            }
          ],
          "description": "Returns Base64 Data URL of the image in JPEG format."
        },
        {
          "name": "getImagePngDataURL",
          "visibility": "public",
          "returnValue": { "type": "string", "description": "Base64 Data URL" },
          "description": "Returns Base64 Data URL of the image in PNG format."
        },
        {
          "name": "getKeepCropAspectRatio",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>keepCropAspectRatio</code>"
          },
          "description": "Gets current value of property {@link #getKeepCropAspectRatio keepCropAspectRatio}.\n\nDefines whether aspect ratio should be kept when the crop area is expanded or shrunk in the <code>CropRectangle</code> or <code>CropEllipse</code> modes ({@link sap.suite.ui.commons.ImageEditorMode}).\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getKeepResizeAspectRatio",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>keepResizeAspectRatio</code>"
          },
          "description": "Gets current value of property {@link #getKeepResizeAspectRatio keepResizeAspectRatio}.\n\nDefines whether aspect ratio should be kept when the image is resized in the <code>Resize</code> mode ({@link sap.suite.ui.commons.ImageEditorMode}) or using the {@link #setWidth} or {@link #setHeight} methods.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getLoaded",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Whether the image is loaded or not"
          },
          "description": "Returns <code>true</code> when the <code>customShapeSrc</code> property is set and the specified image has been successfuly loaded."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.imageeditor.ImageEditor."
        },
        {
          "name": "getMode",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ImageEditorMode",
            "description": "Value of property <code>mode</code>"
          },
          "description": "Gets current value of property {@link #getMode mode}.\n\nImage editor mode. <br>Four modes are available: resize mode, crop to rectangle mode, crop to circle mode, and display image mode (default).<br>The default mode displays the image to be edited.\n\nDefault value is <code>Default</code>."
        },
        {
          "name": "getPreviewHeight",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "height of the current image, even in preview state"
          },
          "description": "Returns the height of the currently shown image, even if it is in preview state."
        },
        {
          "name": "getPreviewWidth",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "width of the current image, even when in preview state"
          },
          "description": "Gets the width of the currently shown image, even if it is in preview state."
        },
        {
          "name": "getScaleCropArea",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>scaleCropArea</code>"
          },
          "description": "Gets current value of property {@link #getScaleCropArea scaleCropArea}.\n\nDefines the behavior of the crop area when zooming in or out. <br>If set to <code>true</code>, the crop area is scaled up or down when the zoom level is changed. <br>If set to <code>false</code>, the crop area remains unchanged and keeps its size.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getSrc",
          "visibility": "public",
          "returnValue": {
            "type": "any",
            "description": "Value of property <code>src</code>"
          },
          "description": "Gets current value of property {@link #getSrc src}.\n\nImage source. <br>Can be a file or Blob object, a URL address of the image, a Base64 data URL string, or any other source supported by the &lt;img> HTML tag.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "getWidth",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "width of the last non-preview image"
          },
          "description": "Gets the width of the image."
        },
        {
          "name": "getZoomLevel",
          "visibility": "public",
          "returnValue": { "type": "int", "description": "Current zoom level" },
          "description": "Returns the current zoom level."
        },
        {
          "name": "grayscale",
          "visibility": "public",
          "parameters": [
            {
              "name": "iValue",
              "type": "int",
              "optional": false,
              "description": "Filter strength. Applicable range of values is from 0 to 100"
            },
            {
              "name": "bPreview",
              "type": "boolean",
              "optional": false,
              "description": "Indicates whether to show this action in preview only (<code>true</code>) or record it in action history as well (<code>false</code>)"
            }
          ],
          "description": "Applies the grayscale filter to the image."
        },
        {
          "name": "invert",
          "visibility": "public",
          "parameters": [
            {
              "name": "iValue",
              "type": "int",
              "optional": false,
              "description": "Filter strength. Applicable range of values is from 0 to 100"
            },
            {
              "name": "bPreview",
              "type": "boolean",
              "optional": false,
              "description": "Indicates whether to show this action in preview only (<code>true</code>) or record it in action history as well (<code>false</code>)"
            }
          ],
          "description": "Inverts the colors of the image."
        },
        {
          "name": "jumpToHistory",
          "visibility": "public",
          "parameters": [
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "Index of the history item. Newest state has the index of 0, the most recent change has the index of 1. The index increases with each preceding action."
            }
          ],
          "description": "Changes the state to an action history item at the given index."
        },
        {
          "name": "openSaveDialog",
          "visibility": "public",
          "parameters": [
            {
              "name": "sFileName",
              "type": "string",
              "optional": true,
              "description": "File name prefilled in the the save as dialog. Default name is \"image\"."
            },
            {
              "name": "sFormat",
              "type": "sap.suite.ui.commons.ImageFormat",
              "optional": true,
              "description": "File format of the returned image Blob. If the format is not specified, either the original format of the image is used or PNG, if the original format is not supported by the browser's <code>canvas.toDataURL</code> method."
            },
            {
              "name": "fQuality",
              "type": "float",
              "optional": true,
              "description": "Only applied when JPEG format is used. Quality of the returned image, ranging from 0 to 1. 0 means highly compressed image, 1 means uncompressed image. When no value is provided, canvas default compression level is used."
            }
          ],
          "description": "Opens Save As dialog in browser."
        },
        {
          "name": "rectangleCrop",
          "visibility": "public",
          "parameters": [
            {
              "name": "iX",
              "type": "int",
              "optional": false,
              "description": "X coordinate of the top left corner of the crop area"
            },
            {
              "name": "iY",
              "type": "int",
              "optional": false,
              "description": "Y coordinate of the top left corner of the crop area"
            },
            {
              "name": "iWidth",
              "type": "int",
              "optional": false,
              "description": "Width of the crop area"
            },
            {
              "name": "iHeight",
              "type": "int",
              "optional": false,
              "description": "Height of the crop area"
            },
            {
              "name": "bPreview",
              "type": "boolean",
              "optional": false,
              "description": "Indicates whether to show this action in preview only (<code>true</code>) or record it in action history as well (<code>false</code>)"
            }
          ],
          "description": "Crops the image to a new rectangle-shaped image based on the specified pixel parameters."
        },
        {
          "name": "redo",
          "visibility": "public",
          "description": "Goes one action forward in the action history, if possible."
        },
        {
          "name": "rotate",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.imageeditor.ImageEditor",
            "description": "instance of the ImageEditor for method chaining"
          },
          "parameters": [
            {
              "name": "iDegrees",
              "type": "int",
              "optional": false,
              "description": "Number of degrees to rotate the image. Applicable range of values is from -360 to 360"
            },
            {
              "name": "bPreview",
              "type": "boolean",
              "optional": false,
              "description": "Indicates whether to show this action in preview only (<code>true</code>) or record it in action history as well (<code>false</code>)"
            }
          ],
          "description": "Rotates the image to the specified angle, ranging from -360 to 360 degrees. <br>Use a positive value for clockwise rotation and a negative value for counterclockwise rotation."
        },
        {
          "name": "saturate",
          "visibility": "public",
          "parameters": [
            {
              "name": "iValue",
              "type": "int",
              "optional": false,
              "description": "Amount of the filter strength. Applicable range of values is from 0 to 500"
            },
            {
              "name": "bPreview",
              "type": "boolean",
              "optional": false,
              "description": "Indicates whether to show this action in preview only (<code>true</code>) or record it in action history as well (<code>false</code>)"
            }
          ],
          "description": "Applies the saturation filter to the image."
        },
        {
          "name": "sepia",
          "visibility": "public",
          "parameters": [
            {
              "name": "iValue",
              "type": "int",
              "optional": false,
              "description": "Filter strength. Applicable range of values is from 0 to 100"
            },
            {
              "name": "bPreview",
              "type": "boolean",
              "optional": false,
              "description": "Indicates whether to show this action in preview only (<code>true</code>) or record it in action history as well (<code>false</code>)"
            }
          ],
          "description": "Applies the sepia filter to the image."
        },
        {
          "name": "setCropArea",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.imageeditor.ImageEditor",
            "description": "instance of the ImageEditor for method chaining"
          },
          "parameters": [
            {
              "name": "iX",
              "type": "int",
              "optional": false,
              "description": "X coordinate of the top left corner of the crop area"
            },
            {
              "name": "iY",
              "type": "int",
              "optional": false,
              "description": "Y coordinate of the top left corner of the crop area"
            },
            {
              "name": "iWidth",
              "type": "int",
              "optional": false,
              "description": "Width of the crop area"
            },
            {
              "name": "iHeight",
              "type": "int",
              "optional": false,
              "description": "Height of the crop area"
            }
          ],
          "description": "Sets the crop area to the position and size. <br>The size is expected to be in pixel values corresponding to the actual size of the image. <br>Crop area is automatically constrained, so that it doesn't overflow the edges of the image."
        },
        {
          "name": "setCropAreaByRatio",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.imageeditor.ImageEditor",
            "description": "instance of the ImageEditor for method chaining"
          },
          "parameters": [
            {
              "name": "iWidth",
              "type": "int",
              "optional": false,
              "description": "Ratio width"
            },
            {
              "name": "iHeight",
              "type": "int",
              "optional": false,
              "description": "Ratio height"
            }
          ],
          "description": "Sets the size of the crop area to comply with the specified aspect ratio. <br>Centers the crop area, so that there is always some space from the edges of the image."
        },
        {
          "name": "setCropAreaBySize",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.imageeditor.ImageEditor",
            "description": "instance of the ImageEditor for method chaining"
          },
          "parameters": [
            {
              "name": "iWidth",
              "type": "int",
              "optional": false,
              "description": "Width of the cropping area"
            },
            {
              "name": "iHeight",
              "type": "int",
              "optional": false,
              "description": "Height of the cropping area"
            }
          ],
          "description": "Resizes the crop area to the specified height and width. <br>The size is expected to be in pixel values corresponding to the actual size of the image. <br>Crop area is automatically constrained, so that it doesn't overflow the edges of the image."
        },
        {
          "name": "setCustomShapeCropAreaRatio",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.imageeditor.ImageEditor",
            "description": "instance of the ImageEditor for method chaining"
          },
          "description": "Sets the size of the crop area to comply with the aspect ratio of the loaded custom shape. <br>Centers the crop area, so that there is always some space from the edges of the image."
        },
        {
          "name": "setCustomShapeSrc",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.imageeditor.ImageEditor",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oCustomShapeSrc",
              "type": "any",
              "optional": false,
              "description": "New value for property <code>customShapeSrc</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getCustomShapeSrc customShapeSrc}.\n\nImage source for the custom shape used in custom shape cropping. <br>Can be a file or Blob object, a URL address of the image, a Base64 data URL string, or any other source supported by the &lt;img> HTML tag. <br><b>Note:</b> In Internet Explorer, <code>customShape</code> doesn't support SVG files and will throw and exception if SVG files are used.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "setHeight",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.imageeditor.ImageEditor",
            "description": "instance of the ImageEditor for method chaining"
          },
          "parameters": [
            {
              "name": "iHeight",
              "type": "int",
              "optional": false,
              "description": "New height of the image in pixels"
            },
            {
              "name": "bPreview",
              "type": "boolean",
              "optional": false,
              "description": "Indicates whether to show this action in preview only (<code>true</code>) or record it in action history as well (<code>false</code>)"
            }
          ],
          "description": "Sets the height of the image in pixels. <br>If the property <code>keepResizeAspectRatio</code> is set to <code>true</code>, changes the current width as well (even in the preview mode)."
        },
        {
          "name": "setKeepCropAspectRatio",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.imageeditor.ImageEditor",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bKeepCropAspectRatio",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>keepCropAspectRatio</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getKeepCropAspectRatio keepCropAspectRatio}.\n\nDefines whether aspect ratio should be kept when the crop area is expanded or shrunk in the <code>CropRectangle</code> or <code>CropEllipse</code> modes ({@link sap.suite.ui.commons.ImageEditorMode}).\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setKeepResizeAspectRatio",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.imageeditor.ImageEditor",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bKeepResizeAspectRatio",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>keepResizeAspectRatio</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getKeepResizeAspectRatio keepResizeAspectRatio}.\n\nDefines whether aspect ratio should be kept when the image is resized in the <code>Resize</code> mode ({@link sap.suite.ui.commons.ImageEditorMode}) or using the {@link #setWidth} or {@link #setHeight} methods.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setMode",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.imageeditor.ImageEditor",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sMode",
              "type": "sap.suite.ui.commons.ImageEditorMode",
              "optional": false,
              "description": "New value for property <code>mode</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getMode mode}.\n\nImage editor mode. <br>Four modes are available: resize mode, crop to rectangle mode, crop to circle mode, and display image mode (default).<br>The default mode displays the image to be edited.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Default</code>."
        },
        {
          "name": "setScaleCropArea",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.imageeditor.ImageEditor",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bScaleCropArea",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>scaleCropArea</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getScaleCropArea scaleCropArea}.\n\nDefines the behavior of the crop area when zooming in or out. <br>If set to <code>true</code>, the crop area is scaled up or down when the zoom level is changed. <br>If set to <code>false</code>, the crop area remains unchanged and keeps its size.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setSize",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.imageeditor.ImageEditor",
            "description": "Instance of the ImageEditor for method chaining"
          },
          "parameters": [
            {
              "name": "iWidth",
              "type": "int",
              "optional": false,
              "description": "New width of the image"
            },
            {
              "name": "iHeight",
              "type": "int",
              "optional": false,
              "description": "New height of the image"
            },
            {
              "name": "bPreview",
              "type": "boolean",
              "optional": false,
              "description": "Indicates whether to show this action in preview only (<code>true</code>) or record it in action history as well (<code>false</code>)"
            }
          ],
          "description": "Sets the size of the image in pixels."
        },
        {
          "name": "setSrc",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.imageeditor.ImageEditor",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oSrc",
              "type": "any",
              "optional": false,
              "description": "New value for property <code>src</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSrc src}.\n\nImage source. <br>Can be a file or Blob object, a URL address of the image, a Base64 data URL string, or any other source supported by the &lt;img> HTML tag.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "setWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.imageeditor.ImageEditor",
            "description": "instance of the ImageEditor for method chaining"
          },
          "parameters": [
            {
              "name": "iWidth",
              "type": "int",
              "optional": false,
              "description": "New width of the image in pixels"
            },
            {
              "name": "bPreview",
              "type": "boolean",
              "optional": false,
              "description": "Indicates whether to show this action in preview only (<code>true</code>) or record it in action history as well (<code>false</code>)"
            }
          ],
          "description": "Sets the width of the image in pixels. <br>If the property <code>keepResizeAspectRatio</code> is set to <code>true</code>, changes the current image height as well (even in preview state)."
        },
        {
          "name": "undo",
          "visibility": "public",
          "description": "Goes one action back in the action history, if possible."
        },
        {
          "name": "zoom",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.imageeditor.ImageEditor",
            "description": "instance of the ImageEditor for method chaining"
          },
          "parameters": [
            {
              "name": "fZoom",
              "type": "float",
              "optional": false,
              "description": "Level of zoom"
            },
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "x": {
                  "name": "x",
                  "type": "number",
                  "optional": true,
                  "defaultValue": "position in image corresponding to current middle of view port width",
                  "description": "x position in the image from/to which the zoom should happen"
                },
                "y": {
                  "name": "y",
                  "type": "number",
                  "optional": true,
                  "defaultValue": "position in image corresponding to current middle of view port width",
                  "description": "y position in the image from/to which the zoom should happen"
                }
              },
              "description": "Map which contains following parameters properties:"
            }
          ],
          "description": "Zooms in or out to the specified zoom level."
        },
        {
          "name": "zoomIn",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.imageeditor.ImageEditor",
            "description": "instance of the ImageEditor for method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "x": {
                  "name": "x",
                  "type": "number",
                  "optional": true,
                  "defaultValue": "middle of image width",
                  "description": "x position from/to which the zoom should happen"
                },
                "y": {
                  "name": "y",
                  "type": "number",
                  "optional": true,
                  "defaultValue": "middle of image height",
                  "description": "y position from/to which the zoom should happen"
                }
              },
              "description": "Map that contains following parameters properties:"
            }
          ],
          "description": "Zooms in one step closer."
        },
        {
          "name": "zoomOut",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.imageeditor.ImageEditor",
            "description": "instance of the ImageEditor for method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "x": {
                  "name": "x",
                  "type": "number",
                  "optional": true,
                  "defaultValue": "middle of image width",
                  "description": "x position from/to which the zoom should happen"
                },
                "y": {
                  "name": "y",
                  "type": "number",
                  "optional": true,
                  "defaultValue": "middle of image height",
                  "description": "y position from/to which the zoom should happen"
                }
              },
              "description": "Map that contains following parameters properties:"
            }
          ],
          "description": "Zooms out one step further."
        },
        {
          "name": "zoomToFit",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.imageeditor.ImageEditor",
            "description": "instance of the ImageEditor for method chaining"
          },
          "description": "Fits the image into the currently visible area. This method can only be called after the image is loaded and rendered."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.imageeditor.ImageEditorContainer",
      "basename": "ImageEditorContainer",
      "resource": "sap/suite/ui/commons/imageeditor/ImageEditorContainer.js",
      "module": "sap/suite/ui/commons/imageeditor/ImageEditorContainer",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.66.0",
      "extends": "sap.ui.core.Control",
      "description": "This control acts as a wrapper around the {@link sap.suite.ui.commons.imageeditor.ImageEditor} control. It provides additional image editing capabilities for the convenience of your users.\n\n<h3>Toolbar Customization</h3> There are two ways to customize the toolbar, but they cannot be used together: <ul> <li>Use <code>enabledButtons<code> property to select the order and visibility of the buttons provided by the <code>ImageEditorContainer</code> control. You can use the <code>customToolbarControls</code> aggregation to add custom controls that will be rendered in the toolbar.</li> <li>Use the {@link #getToolbar} method together with the {@link #getToolbarIds} method to customize the toolbar as you need. <br>The changes made to the toolbar will be kept unless some of the methods from previous approach are used. The previous approach involves rerendering of the toolbar, which causes all changes to be lost. <b>Note:</b> If you use this approach, make sure that you make your changes to the mobile toolbars as well, so that your application can be used on mobile devices. <br>There are three mobile toolbars available: <ul> <li>The header toolbar that can be customized using the method {@link #getMobileHeaderToolbar} and is intended for custom buttons.</li> <li>The zoom toolbar contains zoom functionality that can be customized using the methods {@link #getMobileZoomToolbar} and {@link #getMobileZoomToolbarIds}.</li> <li>The footer toolbar that usually includes the <code>ImageEditorContainer</code> buttons and can be customized using the methods {@link #getMobileFooterToolbar} and {@link #getMobileFooterToolbarIds}.</li> </ul></li> </ul>",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "mode",
            "type": "sap.suite.ui.commons.ImageEditorContainerMode",
            "defaultValue": "Filter",
            "group": "Misc",
            "visibility": "public",
            "description": "Image editor container mode. <br>Three modes are available: transform mode, crop mode, and filter mode (default). <br>The default mode provides filters for image editing: brightness, contrast, saturation, sepia grayscale, and others.",
            "methods": ["getMode", "setMode"]
          },
          {
            "name": "enabledButtons",
            "type": "sap.suite.ui.commons.ImageEditorContainerButton[]",
            "defaultValue": ["Filter", "Transform", "Crop"],
            "group": "Misc",
            "visibility": "public",
            "description": "Controls order and availability of the buttons in the header panel of ImageEditorContainer.",
            "methods": ["getEnabledButtons", "setEnabledButtons"]
          }
        ],
        "aggregations": [
          {
            "name": "imageEditor",
            "singularName": "imageEditor",
            "type": "sap.suite.ui.commons.imageeditor.ImageEditor",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "{@link sap.suite.ui.commons.imageeditor.ImageEditor} containing the image for editing. <br>If no {@link sap.suite.ui.commons.imageeditor.ImageEditor} is specified, the <code>ImageEditorContainer</code> has no effect.",
            "methods": [
              "getImageEditor",
              "destroyImageEditor",
              "setImageEditor"
            ]
          },
          {
            "name": "customToolbarControls",
            "singularName": "customToolbarControl",
            "type": "sap.ui.core.Control",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Custom controls that are added into the toolbar of <code>ImageEditorContainer</code>. Only use controls that are supported by {@link sap.m.OverflowToolbar}.",
            "methods": [
              "getCustomToolbarControls",
              "destroyCustomToolbarControls",
              "insertCustomToolbarControl",
              "addCustomToolbarControl",
              "removeCustomToolbarControl",
              "indexOfCustomToolbarControl",
              "removeAllCustomToolbarControls"
            ]
          },
          {
            "name": "customResizeItems",
            "singularName": "customResizeItem",
            "type": "sap.suite.ui.commons.imageeditor.CustomSizeItem",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Custom items for Resize option panel.",
            "methods": [
              "getCustomResizeItems",
              "destroyCustomResizeItems",
              "insertCustomResizeItem",
              "addCustomResizeItem",
              "removeCustomResizeItem",
              "indexOfCustomResizeItem",
              "removeAllCustomResizeItems"
            ]
          },
          {
            "name": "customRectangleCropItems",
            "singularName": "customRectangleCropItem",
            "type": "sap.suite.ui.commons.imageeditor.CustomSizeItem",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Custom items for Rectangle Crop option panel.",
            "methods": [
              "getCustomRectangleCropItems",
              "destroyCustomRectangleCropItems",
              "insertCustomRectangleCropItem",
              "addCustomRectangleCropItem",
              "removeCustomRectangleCropItem",
              "indexOfCustomRectangleCropItem",
              "removeAllCustomRectangleCropItems"
            ]
          },
          {
            "name": "customEllipseCropItems",
            "singularName": "customEllipseCropItem",
            "type": "sap.suite.ui.commons.imageeditor.CustomSizeItem",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Custom items for Ellipse Crop option panel.",
            "methods": [
              "getCustomEllipseCropItems",
              "destroyCustomEllipseCropItems",
              "insertCustomEllipseCropItem",
              "addCustomEllipseCropItem",
              "removeCustomEllipseCropItem",
              "indexOfCustomEllipseCropItem",
              "removeAllCustomEllipseCropItems"
            ]
          }
        ],
        "defaultAggregation": "imageEditor"
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new ImageEditorContainer.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "addCustomEllipseCropItem",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.imageeditor.ImageEditorContainer",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oCustomEllipseCropItem",
              "type": "sap.suite.ui.commons.imageeditor.CustomSizeItem",
              "optional": false,
              "description": "The customEllipseCropItem to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some customEllipseCropItem to the aggregation {@link #getCustomEllipseCropItems customEllipseCropItems}."
        },
        {
          "name": "addCustomRectangleCropItem",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.imageeditor.ImageEditorContainer",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oCustomRectangleCropItem",
              "type": "sap.suite.ui.commons.imageeditor.CustomSizeItem",
              "optional": false,
              "description": "The customRectangleCropItem to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some customRectangleCropItem to the aggregation {@link #getCustomRectangleCropItems customRectangleCropItems}."
        },
        {
          "name": "addCustomResizeItem",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.imageeditor.ImageEditorContainer",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oCustomResizeItem",
              "type": "sap.suite.ui.commons.imageeditor.CustomSizeItem",
              "optional": false,
              "description": "The customResizeItem to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some customResizeItem to the aggregation {@link #getCustomResizeItems customResizeItems}."
        },
        {
          "name": "addCustomToolbarControl",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.imageeditor.ImageEditorContainer",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oCustomToolbarControl",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The customToolbarControl to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some customToolbarControl to the aggregation {@link #getCustomToolbarControls customToolbarControls}."
        },
        {
          "name": "destroyCustomEllipseCropItems",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.imageeditor.ImageEditorContainer",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the customEllipseCropItems in the aggregation {@link #getCustomEllipseCropItems customEllipseCropItems}."
        },
        {
          "name": "destroyCustomRectangleCropItems",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.imageeditor.ImageEditorContainer",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the customRectangleCropItems in the aggregation {@link #getCustomRectangleCropItems customRectangleCropItems}."
        },
        {
          "name": "destroyCustomResizeItems",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.imageeditor.ImageEditorContainer",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the customResizeItems in the aggregation {@link #getCustomResizeItems customResizeItems}."
        },
        {
          "name": "destroyCustomToolbarControls",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.imageeditor.ImageEditorContainer",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the customToolbarControls in the aggregation {@link #getCustomToolbarControls customToolbarControls}."
        },
        {
          "name": "destroyImageEditor",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.imageeditor.ImageEditorContainer",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the imageEditor in the aggregation {@link #getImageEditor imageEditor}."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.imageeditor.ImageEditorContainer with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "getCustomEllipseCropItems",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.imageeditor.CustomSizeItem[]"
          },
          "description": "Gets content of aggregation {@link #getCustomEllipseCropItems customEllipseCropItems}.\n\nCustom items for Ellipse Crop option panel."
        },
        {
          "name": "getCustomRectangleCropItems",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.imageeditor.CustomSizeItem[]"
          },
          "description": "Gets content of aggregation {@link #getCustomRectangleCropItems customRectangleCropItems}.\n\nCustom items for Rectangle Crop option panel."
        },
        {
          "name": "getCustomResizeItems",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.imageeditor.CustomSizeItem[]"
          },
          "description": "Gets content of aggregation {@link #getCustomResizeItems customResizeItems}.\n\nCustom items for Resize option panel."
        },
        {
          "name": "getCustomToolbarControls",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.Control[]" },
          "description": "Gets content of aggregation {@link #getCustomToolbarControls customToolbarControls}.\n\nCustom controls that are added into the toolbar of <code>ImageEditorContainer</code>. Only use controls that are supported by {@link sap.m.OverflowToolbar}."
        },
        {
          "name": "getEnabledButtons",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ImageEditorContainerButton[]",
            "description": "Value of property <code>enabledButtons</code>"
          },
          "description": "Gets current value of property {@link #getEnabledButtons enabledButtons}.\n\nControls order and availability of the buttons in the header panel of ImageEditorContainer.\n\nDefault value is <code>Filter,Transform,Crop</code>."
        },
        {
          "name": "getImageEditor",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.imageeditor.ImageEditor"
          },
          "description": "Gets content of aggregation {@link #getImageEditor imageEditor}.\n\n{@link sap.suite.ui.commons.imageeditor.ImageEditor} containing the image for editing. <br>If no {@link sap.suite.ui.commons.imageeditor.ImageEditor} is specified, the <code>ImageEditorContainer</code> has no effect."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.imageeditor.ImageEditorContainer."
        },
        {
          "name": "getMobileFooterToolbar",
          "visibility": "public",
          "returnValue": {
            "type": "sap.m.OverflowToolbar",
            "description": "Mobile footer toolbar"
          },
          "description": "Returns the mobile footer toolbar of the <code>ImageEditorContainer</code> for customization of its content."
        },
        {
          "name": "getMobileFooterToolbarIds",
          "visibility": "public",
          "returnValue": {
            "type": "Object",
            "description": "IDs of the default items in the header toolbar"
          },
          "description": "Returns IDs of the default items in the mobile footer toolbar. Can be used for toolbar customization."
        },
        {
          "name": "getMobileHeaderToolbar",
          "visibility": "public",
          "returnValue": {
            "type": "sap.m.OverflowToolbar",
            "description": "Mobile header toolbar"
          },
          "description": "Returns the mobile header toolbar of the <code>ImageEditorContainer</code> for customization of its content."
        },
        {
          "name": "getMobileZoomToolbar",
          "visibility": "public",
          "since": "1.68",
          "returnValue": {
            "type": "sap.m.OverflowToolbar",
            "description": "Mobile zoom toolbar"
          },
          "description": "Returns the mobile zoom toolbar of the <code>ImageEditorContainer</code> for customization of its content."
        },
        {
          "name": "getMobileZoomToolbarIds",
          "visibility": "public",
          "since": "1.68",
          "returnValue": {
            "type": "Object",
            "description": "IDs of the default items in the header toolbar"
          },
          "description": "Returns IDs of the default items in the mobile zoom toolbar. Can be used for toolbar customization."
        },
        {
          "name": "getMode",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ImageEditorContainerMode",
            "description": "Value of property <code>mode</code>"
          },
          "description": "Gets current value of property {@link #getMode mode}.\n\nImage editor container mode. <br>Three modes are available: transform mode, crop mode, and filter mode (default). <br>The default mode provides filters for image editing: brightness, contrast, saturation, sepia grayscale, and others.\n\nDefault value is <code>Filter</code>."
        },
        {
          "name": "getToolbar",
          "visibility": "public",
          "returnValue": {
            "type": "sap.m.OverflowToolbar",
            "description": "Header toolbar"
          },
          "description": "Returns the header toolbar of the <code>ImageEditorContainer</code> for customization of its content."
        },
        {
          "name": "getToolbarIds",
          "visibility": "public",
          "returnValue": {
            "type": "Object",
            "description": "Ids of the default items in the header toolbar"
          },
          "description": "Returns IDs of the default items in the header toolbar. Can be used for toolbar customization."
        },
        {
          "name": "indexOfCustomEllipseCropItem",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oCustomEllipseCropItem",
              "type": "sap.suite.ui.commons.imageeditor.CustomSizeItem",
              "optional": false,
              "description": "The customEllipseCropItem whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.suite.ui.commons.imageeditor.CustomSizeItem</code> in the aggregation {@link #getCustomEllipseCropItems customEllipseCropItems}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "indexOfCustomRectangleCropItem",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oCustomRectangleCropItem",
              "type": "sap.suite.ui.commons.imageeditor.CustomSizeItem",
              "optional": false,
              "description": "The customRectangleCropItem whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.suite.ui.commons.imageeditor.CustomSizeItem</code> in the aggregation {@link #getCustomRectangleCropItems customRectangleCropItems}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "indexOfCustomResizeItem",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oCustomResizeItem",
              "type": "sap.suite.ui.commons.imageeditor.CustomSizeItem",
              "optional": false,
              "description": "The customResizeItem whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.suite.ui.commons.imageeditor.CustomSizeItem</code> in the aggregation {@link #getCustomResizeItems customResizeItems}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "indexOfCustomToolbarControl",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oCustomToolbarControl",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The customToolbarControl whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.ui.core.Control</code> in the aggregation {@link #getCustomToolbarControls customToolbarControls}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "insertCustomEllipseCropItem",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.imageeditor.ImageEditorContainer",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oCustomEllipseCropItem",
              "type": "sap.suite.ui.commons.imageeditor.CustomSizeItem",
              "optional": false,
              "description": "The customEllipseCropItem to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the customEllipseCropItem should be inserted at; for a negative value of <code>iIndex</code>, the customEllipseCropItem is inserted at position 0; for a value greater than the current size of the aggregation, the customEllipseCropItem is inserted at the last position"
            }
          ],
          "description": "Inserts a customEllipseCropItem into the aggregation {@link #getCustomEllipseCropItems customEllipseCropItems}."
        },
        {
          "name": "insertCustomRectangleCropItem",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.imageeditor.ImageEditorContainer",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oCustomRectangleCropItem",
              "type": "sap.suite.ui.commons.imageeditor.CustomSizeItem",
              "optional": false,
              "description": "The customRectangleCropItem to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the customRectangleCropItem should be inserted at; for a negative value of <code>iIndex</code>, the customRectangleCropItem is inserted at position 0; for a value greater than the current size of the aggregation, the customRectangleCropItem is inserted at the last position"
            }
          ],
          "description": "Inserts a customRectangleCropItem into the aggregation {@link #getCustomRectangleCropItems customRectangleCropItems}."
        },
        {
          "name": "insertCustomResizeItem",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.imageeditor.ImageEditorContainer",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oCustomResizeItem",
              "type": "sap.suite.ui.commons.imageeditor.CustomSizeItem",
              "optional": false,
              "description": "The customResizeItem to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the customResizeItem should be inserted at; for a negative value of <code>iIndex</code>, the customResizeItem is inserted at position 0; for a value greater than the current size of the aggregation, the customResizeItem is inserted at the last position"
            }
          ],
          "description": "Inserts a customResizeItem into the aggregation {@link #getCustomResizeItems customResizeItems}."
        },
        {
          "name": "insertCustomToolbarControl",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.imageeditor.ImageEditorContainer",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oCustomToolbarControl",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The customToolbarControl to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the customToolbarControl should be inserted at; for a negative value of <code>iIndex</code>, the customToolbarControl is inserted at position 0; for a value greater than the current size of the aggregation, the customToolbarControl is inserted at the last position"
            }
          ],
          "description": "Inserts a customToolbarControl into the aggregation {@link #getCustomToolbarControls customToolbarControls}."
        },
        {
          "name": "removeAllCustomEllipseCropItems",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.imageeditor.CustomSizeItem[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getCustomEllipseCropItems customEllipseCropItems}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeAllCustomRectangleCropItems",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.imageeditor.CustomSizeItem[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getCustomRectangleCropItems customRectangleCropItems}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeAllCustomResizeItems",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.imageeditor.CustomSizeItem[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getCustomResizeItems customResizeItems}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeAllCustomToolbarControls",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.Control[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getCustomToolbarControls customToolbarControls}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeCustomEllipseCropItem",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.imageeditor.CustomSizeItem",
            "description": "The removed customEllipseCropItem or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vCustomEllipseCropItem",
              "type": "int|string|sap.suite.ui.commons.imageeditor.CustomSizeItem",
              "optional": false,
              "description": "The customEllipseCropItem to remove or its index or id"
            }
          ],
          "description": "Removes a customEllipseCropItem from the aggregation {@link #getCustomEllipseCropItems customEllipseCropItems}."
        },
        {
          "name": "removeCustomRectangleCropItem",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.imageeditor.CustomSizeItem",
            "description": "The removed customRectangleCropItem or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vCustomRectangleCropItem",
              "type": "int|string|sap.suite.ui.commons.imageeditor.CustomSizeItem",
              "optional": false,
              "description": "The customRectangleCropItem to remove or its index or id"
            }
          ],
          "description": "Removes a customRectangleCropItem from the aggregation {@link #getCustomRectangleCropItems customRectangleCropItems}."
        },
        {
          "name": "removeCustomResizeItem",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.imageeditor.CustomSizeItem",
            "description": "The removed customResizeItem or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vCustomResizeItem",
              "type": "int|string|sap.suite.ui.commons.imageeditor.CustomSizeItem",
              "optional": false,
              "description": "The customResizeItem to remove or its index or id"
            }
          ],
          "description": "Removes a customResizeItem from the aggregation {@link #getCustomResizeItems customResizeItems}."
        },
        {
          "name": "removeCustomToolbarControl",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.Control",
            "description": "The removed customToolbarControl or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vCustomToolbarControl",
              "type": "int|string|sap.ui.core.Control",
              "optional": false,
              "description": "The customToolbarControl to remove or its index or id"
            }
          ],
          "description": "Removes a customToolbarControl from the aggregation {@link #getCustomToolbarControls customToolbarControls}."
        },
        {
          "name": "setEnabledButtons",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.imageeditor.ImageEditorContainer",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sEnabledButtons",
              "type": "sap.suite.ui.commons.ImageEditorContainerButton[]",
              "optional": false,
              "description": "New value for property <code>enabledButtons</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getEnabledButtons enabledButtons}.\n\nControls order and availability of the buttons in the header panel of ImageEditorContainer.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Filter,Transform,Crop</code>."
        },
        {
          "name": "setImageEditor",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.imageeditor.ImageEditorContainer",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oImageEditor",
              "type": "sap.suite.ui.commons.imageeditor.ImageEditor",
              "optional": false,
              "description": "The imageEditor to set"
            }
          ],
          "description": "Sets the aggregated {@link #getImageEditor imageEditor}."
        },
        {
          "name": "setMode",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.imageeditor.ImageEditorContainer",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sMode",
              "type": "sap.suite.ui.commons.ImageEditorContainerMode",
              "optional": false,
              "description": "New value for property <code>mode</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getMode mode}.\n\nImage editor container mode. <br>Three modes are available: transform mode, crop mode, and filter mode (default). <br>The default mode provides filters for image editing: brightness, contrast, saturation, sepia grayscale, and others.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Filter</code>."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.imageeditor.ImageEditorResponsiveContainer",
      "basename": "ImageEditorResponsiveContainer",
      "resource": "sap/suite/ui/commons/imageeditor/ImageEditorResponsiveContainer.js",
      "module": "sap/suite/ui/commons/imageeditor/ImageEditorResponsiveContainer",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.68.0",
      "extends": "sap.suite.ui.commons.imageeditor.ImageEditorContainer",
      "description": "This control acts as a wrapper around the {@link sap.suite.ui.commons.imageeditor.ImageEditor} control. It provides additional image editing capabilities for the convenience of your users. <br>This container is responsive and is rendered as a button on mobile devices.",
      "ui5-metamodel": true,
      "ui5-metadata": { "stereotype": "control" },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new ImageEditorResponsiveContainer."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.imageeditor.ImageEditorResponsiveContainer with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.suite.ui.commons.imageeditor.ImageEditorContainer.extend}."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.imageeditor.ImageEditorResponsiveContainer."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.imageeditor.ResizeHistoryItem",
      "basename": "ResizeHistoryItem",
      "resource": "sap/suite/ui/commons/imageeditor/ResizeHistoryItem.js",
      "module": "sap/suite/ui/commons/imageeditor/ResizeHistoryItem",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.66.0",
      "extends": "sap.suite.ui.commons.imageeditor.HistoryItem",
      "description": "Holds information about an {@link sap.suite.ui.commons.imageeditor.ImageEditor} action history item that was created by one of the methods that change the size of the image, such as {@link sap.suite.ui.commons.imageeditor.ImageEditor#setSize}, {@link sap.suite.ui.commons.imageeditor.ImageEditor#setWidth}, and {@link sap.suite.ui.commons.imageeditor.ImageEditor#setHeight}.",
      "ui5-metadata": { "stereotype": "object" },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "mProperties",
            "type": "object",
            "optional": false,
            "parameterProperties": {
              "width": {
                "name": "width",
                "type": "int",
                "optional": false,
                "description": "Width of the image"
              },
              "height": {
                "name": "height",
                "type": "int",
                "optional": false,
                "description": "Height of the image"
              },
              "oldWidth": {
                "name": "oldWidth",
                "type": "int",
                "optional": false,
                "description": "Previous width of the image"
              },
              "oldHeight": {
                "name": "oldHeight",
                "type": "int",
                "optional": false,
                "description": "Previous height of the image"
              }
            },
            "description": "Property bag"
          }
        ],
        "description": "Constructor for a new ResizeHistoryItem."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.imageeditor.ResizeHistoryItem with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.suite.ui.commons.imageeditor.HistoryItem.extend}."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.imageeditor.ResizeHistoryItem."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.imageeditor.RotateHistoryItem",
      "basename": "RotateHistoryItem",
      "resource": "sap/suite/ui/commons/imageeditor/RotateHistoryItem.js",
      "module": "sap/suite/ui/commons/imageeditor/RotateHistoryItem",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.66.0",
      "extends": "sap.suite.ui.commons.imageeditor.HistoryItem",
      "description": "Holds information about an {@link sap.suite.ui.commons.imageeditor.ImageEditor} action history item that was created by the {@link sap.suite.ui.commons.imageeditor.ImageEditor#rotate} method.",
      "ui5-metadata": { "stereotype": "object" },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "mProperties",
            "type": "object",
            "optional": false,
            "parameterProperties": {
              "degrees": {
                "name": "degrees",
                "type": "int",
                "optional": false,
                "description": "Number of deegress"
              }
            },
            "description": "Property bag"
          }
        ],
        "description": "Constructor for a new RotateHistoryItem."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.imageeditor.RotateHistoryItem with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.suite.ui.commons.imageeditor.HistoryItem.extend}."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.imageeditor.RotateHistoryItem."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.suite.ui.commons.ImageEditorContainerButton",
      "basename": "ImageEditorContainerButton",
      "resource": "sap/suite/ui/commons/library.js",
      "module": "sap/suite/ui/commons/library",
      "export": "ImageEditorContainerButton",
      "static": true,
      "visibility": "public",
      "description": "Action buttons for the {@link sap.suite.ui.commons.imageeditor.ImageEditorContainer}.",
      "properties": [
        {
          "name": "Crop",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Crop button."
        },
        {
          "name": "Filter",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Filter button."
        },
        {
          "name": "Transform",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Transform button."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.suite.ui.commons.ImageEditorContainerMode",
      "basename": "ImageEditorContainerMode",
      "resource": "sap/suite/ui/commons/library.js",
      "module": "sap/suite/ui/commons/library",
      "export": "ImageEditorContainerMode",
      "static": true,
      "visibility": "public",
      "description": "Mode types for {@link sap.suite.ui.commons.imageeditor.ImageEditorContainer}.",
      "ui5-metamodel": true,
      "properties": [
        {
          "name": "Crop",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Mode with rectangular and circular/oval crop options."
        },
        {
          "name": "Filter",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Mode with filter options, including grayscale, sepia, brightness, contrast, saturation, and some other."
        },
        {
          "name": "Transform",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Mode with resize, rotate, and flip options."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.suite.ui.commons.ImageEditorMode",
      "basename": "ImageEditorMode",
      "resource": "sap/suite/ui/commons/library.js",
      "module": "sap/suite/ui/commons/library",
      "export": "ImageEditorMode",
      "static": true,
      "visibility": "public",
      "description": "Mode types for {@link sap.suite.ui.commons.imageeditor.ImageEditor}.",
      "ui5-metamodel": true,
      "properties": [
        {
          "name": "CropCustomShape",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Image editor mode with custom shape crop area."
        },
        {
          "name": "CropEllipse",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Image editor mode with ellipse crop area."
        },
        {
          "name": "CropRectangle",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Image editor mode with rectangle crop area."
        },
        {
          "name": "Default",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Image editor mode that shows just the source image. <br>This mode is used by default."
        },
        {
          "name": "Resize",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Image editor mode with resize handlers."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.suite.ui.commons.ImageFormat",
      "basename": "ImageFormat",
      "resource": "sap/suite/ui/commons/library.js",
      "module": "sap/suite/ui/commons/library",
      "export": "ImageFormat",
      "static": true,
      "visibility": "public",
      "description": "Image file format.",
      "ui5-metamodel": true,
      "properties": [
        {
          "name": "Jpeg",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "JPEG file format."
        },
        {
          "name": "Png",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "PNG file format."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.InfoTile",
      "basename": "InfoTile",
      "resource": "sap/suite/ui/commons/InfoTile.js",
      "module": "sap/suite/ui/commons/InfoTile",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.core.Control",
      "description": "The tile control that displays the title, description, footer, and customizable main area.",
      "deprecated": {
        "since": "1.25",
        "text": "This control has been deprecated in favor of new sap.suite.ui.commons.GenericTile."
      },
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "description",
            "type": "string",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "description": "Shows the description of the selected tile.",
            "methods": ["getDescription", "setDescription"]
          },
          {
            "name": "title",
            "type": "string",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "description": "The title of the tile.",
            "methods": ["getTitle", "setTitle"]
          },
          {
            "name": "footer",
            "type": "string",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "description": "The footer text of the tile.",
            "methods": ["getFooter", "setFooter"]
          },
          {
            "name": "size",
            "type": "sap.suite.ui.commons.InfoTileSize",
            "defaultValue": "Auto",
            "group": "Misc",
            "visibility": "public",
            "description": "Updates the size of the tile. If not set then the default size is applied based on the device tile.",
            "methods": ["getSize", "setSize"]
          },
          {
            "name": "state",
            "type": "sap.suite.ui.commons.LoadState",
            "defaultValue": "Loading",
            "group": "Misc",
            "visibility": "public",
            "description": "Indicates the load status.",
            "methods": ["getState", "setState"]
          }
        ],
        "aggregations": [
          {
            "name": "content",
            "singularName": "content",
            "type": "sap.ui.core.Control",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "The switchable view that depends on the tile type.",
            "methods": ["getContent", "destroyContent", "setContent"]
          },
          {
            "name": "titleText",
            "singularName": "titleText",
            "type": "sap.m.Text",
            "cardinality": "0..1",
            "visibility": "hidden",
            "description": "The hidden aggregation for the title.",
            "methods": ["getTitleText", "destroyTitleText", "setTitleText"]
          }
        ],
        "events": [
          {
            "name": "press",
            "visibility": "public",
            "description": "The event is fired when the user chooses the tile.",
            "methods": ["attachPress", "detachPress", "firePress"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new InfoTile.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "press",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "The event is fired when the user chooses the tile."
        }
      ],
      "methods": [
        {
          "name": "attachPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.InfoTile",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.InfoTile</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:press press} event of this <code>sap.suite.ui.commons.InfoTile</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.InfoTile</code> itself.\n\nThe event is fired when the user chooses the tile."
        },
        {
          "name": "destroyContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.InfoTile",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the content in the aggregation {@link #getContent content}."
        },
        {
          "name": "detachPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.InfoTile",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:press press} event of this <code>sap.suite.ui.commons.InfoTile</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.InfoTile with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "firePress",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.InfoTile",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:press press} to attached listeners."
        },
        {
          "name": "getContent",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.Control" },
          "description": "Gets content of aggregation {@link #getContent content}.\n\nThe switchable view that depends on the tile type."
        },
        {
          "name": "getDescription",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>description</code>"
          },
          "description": "Gets current value of property {@link #getDescription description}.\n\nShows the description of the selected tile."
        },
        {
          "name": "getFooter",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>footer</code>"
          },
          "description": "Gets current value of property {@link #getFooter footer}.\n\nThe footer text of the tile."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.InfoTile."
        },
        {
          "name": "getSize",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.InfoTileSize",
            "description": "Value of property <code>size</code>"
          },
          "description": "Gets current value of property {@link #getSize size}.\n\nUpdates the size of the tile. If not set then the default size is applied based on the device tile.\n\nDefault value is <code>Auto</code>."
        },
        {
          "name": "getState",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.LoadState",
            "description": "Value of property <code>state</code>"
          },
          "description": "Gets current value of property {@link #getState state}.\n\nIndicates the load status.\n\nDefault value is <code>Loading</code>."
        },
        {
          "name": "getTitle",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>title</code>"
          },
          "description": "Gets current value of property {@link #getTitle title}.\n\nThe title of the tile."
        },
        {
          "name": "setContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.InfoTile",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oContent",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The content to set"
            }
          ],
          "description": "Sets the aggregated {@link #getContent content}."
        },
        {
          "name": "setDescription",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.InfoTile",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sDescription",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>description</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getDescription description}.\n\nShows the description of the selected tile.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setFooter",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.InfoTile",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sFooter",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>footer</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getFooter footer}.\n\nThe footer text of the tile.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setSize",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.InfoTile",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sSize",
              "type": "sap.suite.ui.commons.InfoTileSize",
              "optional": false,
              "description": "New value for property <code>size</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSize size}.\n\nUpdates the size of the tile. If not set then the default size is applied based on the device tile.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Auto</code>."
        },
        {
          "name": "setState",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.InfoTile",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sState",
              "type": "sap.suite.ui.commons.LoadState",
              "optional": false,
              "description": "New value for property <code>state</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getState state}.\n\nIndicates the load status.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Loading</code>."
        },
        {
          "name": "setTitle",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.InfoTile",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sTitle",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>title</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getTitle title}.\n\nThe title of the tile.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.suite.ui.commons.InfoTileSize",
      "basename": "InfoTileSize",
      "resource": "sap/suite/ui/commons/library.js",
      "module": "sap/suite/ui/commons/library",
      "export": "InfoTileSize",
      "static": true,
      "visibility": "public",
      "description": "Enumeration of possible PointTile size settings.",
      "deprecated": {
        "since": "1.34",
        "text": "Deprecated. sap.m.InfoTileSize should be used."
      },
      "ui5-metamodel": true,
      "properties": [
        {
          "name": "Auto",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The size of the tile depends on the device it is running on. It is large on desktop, medium on tablet and small on phone."
        },
        {
          "name": "L",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Large size."
        },
        {
          "name": "M",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Medium size."
        },
        {
          "name": "S",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Small size."
        },
        {
          "name": "XS",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Extra small size."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.suite.ui.commons.InfoTileTextColor",
      "basename": "InfoTileTextColor",
      "resource": "sap/suite/ui/commons/library.js",
      "module": "sap/suite/ui/commons/library",
      "export": "InfoTileTextColor",
      "static": true,
      "visibility": "public",
      "description": "Enumeration of possible InfoTile text color settings.",
      "deprecated": {
        "since": "1.34",
        "text": "Deprecated. sap.m.InfoTileTextColor should be used."
      },
      "ui5-metamodel": true,
      "properties": [
        {
          "name": "Critical",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Critical InfoTile text color."
        },
        {
          "name": "Negative",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Negative InfoTile text color."
        },
        {
          "name": "Positive",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Positive InfoTile text color."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.suite.ui.commons.InfoTileValueColor",
      "basename": "InfoTileValueColor",
      "resource": "sap/suite/ui/commons/library.js",
      "module": "sap/suite/ui/commons/library",
      "export": "InfoTileValueColor",
      "static": true,
      "visibility": "public",
      "description": "Enumeration of possible InfoTile value color settings.",
      "deprecated": {
        "since": "1.34",
        "text": "Deprecated. sap.m.InfoTileValueColor should be used."
      },
      "ui5-metamodel": true,
      "properties": [
        {
          "name": "Critical",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Critical InfoTile value color."
        },
        {
          "name": "Error",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Error InfoTile value color."
        },
        {
          "name": "Good",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Good InfoTile value color."
        },
        {
          "name": "Neutral",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Neutral InfoTile value color."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.JamContent",
      "basename": "JamContent",
      "resource": "sap/suite/ui/commons/JamContent.js",
      "module": "sap/suite/ui/commons/JamContent",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.m.FeedContent",
      "description": "This control displays the jam content text, subheader, and numeric value in a tile.",
      "deprecated": {
        "since": "1.34",
        "text": "this control is a mere wrapper for sap.m.FeedContent."
      },
      "ui5-metamodel": true,
      "ui5-metadata": { "stereotype": "control" },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, automatically generated if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new JamContent."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.JamContent with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.m.FeedContent.extend}."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.JamContent."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.KpiTile",
      "basename": "KpiTile",
      "resource": "sap/suite/ui/commons/KpiTile.js",
      "module": "sap/suite/ui/commons/KpiTile",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.core.Control",
      "description": "This control is used in UnifiedThingInspector to display object-related KPIs in a factsheet.",
      "deprecated": {
        "since": "1.32",
        "text": "Deprecated. Numeric content or any other standard Fiori control should be used instead."
      },
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "value",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The Value field.",
            "methods": ["getValue", "setValue"]
          },
          {
            "name": "description",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The Description field.",
            "methods": ["getDescription", "setDescription"]
          },
          {
            "name": "doubleFontSize",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "description": "If true, the value text will have 2 rem, if false - 1 rem.",
            "methods": ["getDoubleFontSize", "setDoubleFontSize"]
          },
          {
            "name": "valueUnit",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The percent sign, currency symbol, or unit for a value.",
            "methods": ["getValueUnit", "setValueUnit"]
          },
          {
            "name": "valueScale",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The scale of a value.",
            "methods": ["getValueScale", "setValueScale"]
          },
          {
            "name": "valueStatus",
            "type": "sap.suite.ui.commons.ValueStatus",
            "defaultValue": "Neutral",
            "group": "Misc",
            "visibility": "public",
            "description": "The status color of the value. Depending on the status the tile is displayed in different colors.",
            "methods": ["getValueStatus", "setValueStatus"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new KpiTile.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.KpiTile with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "getDescription",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>description</code>"
          },
          "description": "Gets current value of property {@link #getDescription description}.\n\nThe Description field."
        },
        {
          "name": "getDoubleFontSize",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>doubleFontSize</code>"
          },
          "description": "Gets current value of property {@link #getDoubleFontSize doubleFontSize}.\n\nIf true, the value text will have 2 rem, if false - 1 rem.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.KpiTile."
        },
        {
          "name": "getValue",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>value</code>"
          },
          "description": "Gets current value of property {@link #getValue value}.\n\nThe Value field."
        },
        {
          "name": "getValueScale",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>valueScale</code>"
          },
          "description": "Gets current value of property {@link #getValueScale valueScale}.\n\nThe scale of a value."
        },
        {
          "name": "getValueStatus",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ValueStatus",
            "description": "Value of property <code>valueStatus</code>"
          },
          "description": "Gets current value of property {@link #getValueStatus valueStatus}.\n\nThe status color of the value. Depending on the status the tile is displayed in different colors.\n\nDefault value is <code>Neutral</code>."
        },
        {
          "name": "getValueUnit",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>valueUnit</code>"
          },
          "description": "Gets current value of property {@link #getValueUnit valueUnit}.\n\nThe percent sign, currency symbol, or unit for a value."
        },
        {
          "name": "setDescription",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.KpiTile",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sDescription",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>description</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getDescription description}.\n\nThe Description field.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setDoubleFontSize",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.KpiTile",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bDoubleFontSize",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>doubleFontSize</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getDoubleFontSize doubleFontSize}.\n\nIf true, the value text will have 2 rem, if false - 1 rem.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setValue",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.KpiTile",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sValue",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>value</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getValue value}.\n\nThe Value field.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setValueScale",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.KpiTile",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sValueScale",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>valueScale</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getValueScale valueScale}.\n\nThe scale of a value.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setValueStatus",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.KpiTile",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sValueStatus",
              "type": "sap.suite.ui.commons.ValueStatus",
              "optional": false,
              "description": "New value for property <code>valueStatus</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getValueStatus valueStatus}.\n\nThe status color of the value. Depending on the status the tile is displayed in different colors.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Neutral</code>."
        },
        {
          "name": "setValueUnit",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.KpiTile",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sValueUnit",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>valueUnit</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getValueUnit valueUnit}.\n\nThe percent sign, currency symbol, or unit for a value.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.LaunchTile",
      "basename": "LaunchTile",
      "resource": "sap/suite/ui/commons/LaunchTile.js",
      "module": "sap/suite/ui/commons/LaunchTile",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.core.Control",
      "description": "This control launches a URL.",
      "deprecated": { "since": "1.25", "text": "Deprecated." },
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "title",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Descriptive title of the launch destination.",
            "methods": ["getTitle", "setTitle"]
          },
          {
            "name": "icon",
            "type": "sap.ui.core.URI",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Icon associated with the launch destination.",
            "methods": ["getIcon", "setIcon"]
          },
          {
            "name": "link",
            "type": "sap.ui.core.URI",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The launch destination.",
            "methods": ["getLink", "setLink"]
          }
        ],
        "events": [
          {
            "name": "press",
            "visibility": "public",
            "description": "The event fired when the user clicks on the control.",
            "methods": ["attachPress", "detachPress", "firePress"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new LaunchTile.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "press",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "The event fired when the user clicks on the control."
        }
      ],
      "methods": [
        {
          "name": "attachPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.LaunchTile",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.LaunchTile</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:press press} event of this <code>sap.suite.ui.commons.LaunchTile</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.LaunchTile</code> itself.\n\nThe event fired when the user clicks on the control."
        },
        {
          "name": "detachPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.LaunchTile",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:press press} event of this <code>sap.suite.ui.commons.LaunchTile</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.LaunchTile with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "firePress",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.LaunchTile",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:press press} to attached listeners."
        },
        {
          "name": "getIcon",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.URI",
            "description": "Value of property <code>icon</code>"
          },
          "description": "Gets current value of property {@link #getIcon icon}.\n\nIcon associated with the launch destination."
        },
        {
          "name": "getLink",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.URI",
            "description": "Value of property <code>link</code>"
          },
          "description": "Gets current value of property {@link #getLink link}.\n\nThe launch destination."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.LaunchTile."
        },
        {
          "name": "getTitle",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>title</code>"
          },
          "description": "Gets current value of property {@link #getTitle title}.\n\nDescriptive title of the launch destination."
        },
        {
          "name": "setIcon",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.LaunchTile",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sIcon",
              "type": "sap.ui.core.URI",
              "optional": false,
              "description": "New value for property <code>icon</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getIcon icon}.\n\nIcon associated with the launch destination.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setLink",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.LaunchTile",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sLink",
              "type": "sap.ui.core.URI",
              "optional": false,
              "description": "New value for property <code>link</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getLink link}.\n\nThe launch destination.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setTitle",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.LaunchTile",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sTitle",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>title</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getTitle title}.\n\nDescriptive title of the launch destination.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.LinkActionSheet",
      "basename": "LinkActionSheet",
      "resource": "sap/suite/ui/commons/LinkActionSheet.js",
      "module": "sap/suite/ui/commons/LinkActionSheet",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.m.ActionSheet",
      "description": "This control contains one or more sap.m.Button controls or sap.ui.commons.Link controls. The LinkActionSheet control is closed if the user chooses one of the buttons or links. It looks similar to sap.m.Dialog in iPhone and Android, and to sap.m.Popover in iPad.",
      "deprecated": {
        "since": "1.32",
        "text": "Deprecated. Object page should be used instead."
      },
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "aggregations": [
          {
            "name": "items",
            "singularName": "item",
            "type": "sap.ui.core.Control",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "These buttons or links are added to the content area in the LinkActionSheet control. If the user chooses a button or a link, the LinkActionSheet is closed before the event listener is called.",
            "methods": [
              "getItems",
              "destroyItems",
              "insertItem",
              "addItem",
              "removeItem",
              "indexOfItem",
              "removeAllItems"
            ]
          }
        ],
        "events": [
          {
            "name": "itemPress",
            "visibility": "public",
            "description": "The event is fired when the user chooses any item.",
            "parameters": {
              "item": {
                "name": "item",
                "type": "sap.ui.core.Control",
                "description": "The object that initiated the event."
              }
            },
            "methods": ["attachItemPress", "detachItemPress", "fireItemPress"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new LinkActionSheet.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "itemPress",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "item": {
                      "name": "item",
                      "type": "sap.ui.core.Control",
                      "optional": false,
                      "description": "The object that initiated the event."
                    }
                  }
                }
              }
            }
          ],
          "description": "The event is fired when the user chooses any item."
        }
      ],
      "methods": [
        {
          "name": "addItem",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.LinkActionSheet",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oItem",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The item to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some item to the aggregation {@link #getItems items}."
        },
        {
          "name": "attachItemPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.LinkActionSheet",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.LinkActionSheet</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:itemPress itemPress} event of this <code>sap.suite.ui.commons.LinkActionSheet</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.LinkActionSheet</code> itself.\n\nThe event is fired when the user chooses any item."
        },
        {
          "name": "destroyItems",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.LinkActionSheet",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the items in the aggregation {@link #getItems items}."
        },
        {
          "name": "detachItemPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.LinkActionSheet",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:itemPress itemPress} event of this <code>sap.suite.ui.commons.LinkActionSheet</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.LinkActionSheet with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.m.ActionSheet.extend}."
        },
        {
          "name": "fireItemPress",
          "visibility": "protected",
          "returnValue": {
            "type": "boolean",
            "description": "Whether or not to prevent the default action"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "item": {
                  "name": "item",
                  "type": "sap.ui.core.Control",
                  "optional": true,
                  "description": "The object that initiated the event."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:itemPress itemPress} to attached listeners.\n\nListeners may prevent the default action of this event by using the <code>preventDefault</code>-method on the event object."
        },
        {
          "name": "getItems",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.Control[]" },
          "description": "Gets content of aggregation {@link #getItems items}.\n\nThese buttons or links are added to the content area in the LinkActionSheet control. If the user chooses a button or a link, the LinkActionSheet is closed before the event listener is called."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.LinkActionSheet."
        },
        {
          "name": "indexOfItem",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oItem",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The item whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.ui.core.Control</code> in the aggregation {@link #getItems items}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "insertItem",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.LinkActionSheet",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oItem",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The item to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the item should be inserted at; for a negative value of <code>iIndex</code>, the item is inserted at position 0; for a value greater than the current size of the aggregation, the item is inserted at the last position"
            }
          ],
          "description": "Inserts a item into the aggregation {@link #getItems items}."
        },
        {
          "name": "removeAllItems",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.Control[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getItems items}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeItem",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.Control",
            "description": "The removed item or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vItem",
              "type": "int|string|sap.ui.core.Control",
              "optional": false,
              "description": "The item to remove or its index or id"
            }
          ],
          "description": "Removes a item from the aggregation {@link #getItems items}."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.suite.ui.commons.LoadState",
      "basename": "LoadState",
      "resource": "sap/suite/ui/commons/library.js",
      "module": "sap/suite/ui/commons/library",
      "export": "LoadState",
      "static": true,
      "visibility": "public",
      "description": "Enumeration of possible load states for LoadableView.",
      "deprecated": {
        "since": "1.34",
        "text": "Deprecated. sap.m.LoadState should be used."
      },
      "ui5-metamodel": true,
      "properties": [
        {
          "name": "Disabled",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "LoadableView disabled to load the control."
        },
        {
          "name": "Failed",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "LoadableView failed to load the control."
        },
        {
          "name": "Loaded",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "LoadableView has loaded the control."
        },
        {
          "name": "Loading",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "LoadableView is loading the control."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.MicroAreaChart",
      "basename": "MicroAreaChart",
      "resource": "sap/suite/ui/commons/MicroAreaChart.js",
      "module": "sap/suite/ui/commons/MicroAreaChart",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.suite.ui.microchart.AreaMicroChart",
      "description": "This control displays the history of values as a line mini chart or an area mini chart.",
      "deprecated": {
        "since": "1.34",
        "text": "this control is a mere wrapper for sap.suite.ui.microchart.AreaMicroChart."
      },
      "ui5-metamodel": true,
      "ui5-metadata": { "stereotype": "control" },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, automatically generated if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new MicroAreaChart."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.MicroAreaChart with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.suite.ui.microchart.AreaMicroChart.extend}."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.MicroAreaChart."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.MicroAreaChartItem",
      "basename": "MicroAreaChartItem",
      "resource": "sap/suite/ui/commons/MicroAreaChartItem.js",
      "module": "sap/suite/ui/commons/MicroAreaChartItem",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.suite.ui.microchart.AreaMicroChartItem",
      "description": "The configuration of the graphic element on the chart.",
      "deprecated": {
        "since": "1.34",
        "text": "this control is a mere wrapper for sap.suite.ui.microchart.AreaMicroChartItem."
      },
      "ui5-metamodel": true,
      "ui5-metadata": { "stereotype": "element" },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, automatically generated if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new MicroAreaChartItem."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.MicroAreaChartItem with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.suite.ui.microchart.AreaMicroChartItem.extend}."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.MicroAreaChartItem."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.MicroAreaChartLabel",
      "basename": "MicroAreaChartLabel",
      "resource": "sap/suite/ui/commons/MicroAreaChartLabel.js",
      "module": "sap/suite/ui/commons/MicroAreaChartLabel",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.suite.ui.microchart.AreaMicroChartLabel",
      "description": "This element contains data for a label in MicroAreaChart control.",
      "deprecated": {
        "since": "1.34",
        "text": "this control is a mere wrapper for sap.suite.ui.microchart.AreaMicroChartLabel."
      },
      "ui5-metamodel": true,
      "ui5-metadata": { "stereotype": "element" },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, automatically generated if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new MicroAreaChartLabel."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.MicroAreaChartLabel with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.suite.ui.microchart.AreaMicroChartLabel.extend}."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.MicroAreaChartLabel."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.MicroAreaChartPoint",
      "basename": "MicroAreaChartPoint",
      "resource": "sap/suite/ui/commons/MicroAreaChartPoint.js",
      "module": "sap/suite/ui/commons/MicroAreaChartPoint",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.suite.ui.microchart.AreaMicroChartPoint",
      "description": "This control contains data for the point.",
      "deprecated": {
        "since": "1.34",
        "text": "this control is a mere wrapper for sap.suite.ui.microchart.AreaMicroChartPoint."
      },
      "ui5-metamodel": true,
      "ui5-metadata": { "stereotype": "element" },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, automatically generated if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new MicroAreaChartPoint."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.MicroAreaChartPoint with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.suite.ui.microchart.AreaMicroChartPoint.extend}."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.MicroAreaChartPoint."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.suite.ui.commons.MicroAreaChartView",
      "basename": "MicroAreaChartView",
      "resource": "sap/suite/ui/commons/library.js",
      "module": "sap/suite/ui/commons/library",
      "export": "MicroAreaChartView",
      "static": true,
      "visibility": "public",
      "description": "The list of possible MicroAreaChart views.",
      "deprecated": {
        "since": "1.34",
        "text": "Deprecated. sap.suite.ui.microchart.AreaMicroChartViewType should be used."
      },
      "ui5-metamodel": true,
      "properties": [
        {
          "name": "Normal",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The view with labels on the top and bottom."
        },
        {
          "name": "Wide",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The view with labels on the left and right."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.MicroProcessFlow",
      "basename": "MicroProcessFlow",
      "resource": "sap/suite/ui/commons/MicroProcessFlow.js",
      "module": "sap/suite/ui/commons/MicroProcessFlow",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.core.Control",
      "description": "The MicroProcessFlow control can be used to track the progress of a process.<br> It is best used for linear processes, such as document, order, and approval flows, and can be embedded in tiles, tables, and other containers.<br> <br> To display more complex processes and workflows, use {@link sap.suite.ui.commons.ProcessFlow} instead.",
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "ariaLabel",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "ARIA label for this control to be used by screen reader software.",
            "methods": ["getAriaLabel", "setAriaLabel"]
          },
          {
            "name": "renderType",
            "type": "sap.suite.ui.commons.MicroProcessFlowRenderType",
            "defaultValue": "Wrap",
            "group": "Misc",
            "visibility": "public",
            "description": "Determines how the micro process flow should be rendered inside its parent container. <br>When the width of the parent container does not allow for all nodes in the micro process flow to be displayed, you can wrap it inside the parent container or add scrolling icons.",
            "methods": ["getRenderType", "setRenderType"]
          },
          {
            "name": "width",
            "type": "sap.ui.core.CSSSize",
            "defaultValue": "",
            "group": "Misc",
            "visibility": "public",
            "description": "The width of the micro process flow.",
            "methods": ["getWidth", "setWidth"]
          }
        ],
        "aggregations": [
          {
            "name": "content",
            "singularName": "content",
            "type": "sap.suite.ui.commons.MicroProcessFlowItem",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Holds the nodes and other content diplayed in the micro process flow.",
            "methods": [
              "getContent",
              "destroyContent",
              "insertContent",
              "addContent",
              "removeContent",
              "indexOfContent",
              "removeAllContent"
            ]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "description": "Constructor for a new MicroProcessFlow.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "addContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.MicroProcessFlow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oContent",
              "type": "sap.suite.ui.commons.MicroProcessFlowItem",
              "optional": false,
              "description": "The content to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some content to the aggregation {@link #getContent content}."
        },
        {
          "name": "destroyContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.MicroProcessFlow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the content in the aggregation {@link #getContent content}."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.MicroProcessFlow with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "getAriaLabel",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>ariaLabel</code>"
          },
          "description": "Gets current value of property {@link #getAriaLabel ariaLabel}.\n\nARIA label for this control to be used by screen reader software."
        },
        {
          "name": "getContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.MicroProcessFlowItem[]"
          },
          "description": "Gets content of aggregation {@link #getContent content}.\n\nHolds the nodes and other content diplayed in the micro process flow."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.MicroProcessFlow."
        },
        {
          "name": "getRenderType",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.MicroProcessFlowRenderType",
            "description": "Value of property <code>renderType</code>"
          },
          "description": "Gets current value of property {@link #getRenderType renderType}.\n\nDetermines how the micro process flow should be rendered inside its parent container. <br>When the width of the parent container does not allow for all nodes in the micro process flow to be displayed, you can wrap it inside the parent container or add scrolling icons.\n\nDefault value is <code>Wrap</code>."
        },
        {
          "name": "getWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.CSSSize",
            "description": "Value of property <code>width</code>"
          },
          "description": "Gets current value of property {@link #getWidth width}.\n\nThe width of the micro process flow.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "indexOfContent",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oContent",
              "type": "sap.suite.ui.commons.MicroProcessFlowItem",
              "optional": false,
              "description": "The content whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.suite.ui.commons.MicroProcessFlowItem</code> in the aggregation {@link #getContent content}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "insertContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.MicroProcessFlow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oContent",
              "type": "sap.suite.ui.commons.MicroProcessFlowItem",
              "optional": false,
              "description": "The content to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the content should be inserted at; for a negative value of <code>iIndex</code>, the content is inserted at position 0; for a value greater than the current size of the aggregation, the content is inserted at the last position"
            }
          ],
          "description": "Inserts a content into the aggregation {@link #getContent content}."
        },
        {
          "name": "removeAllContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.MicroProcessFlowItem[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getContent content}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.MicroProcessFlowItem",
            "description": "The removed content or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vContent",
              "type": "int|string|sap.suite.ui.commons.MicroProcessFlowItem",
              "optional": false,
              "description": "The content to remove or its index or id"
            }
          ],
          "description": "Removes a content from the aggregation {@link #getContent content}."
        },
        {
          "name": "setAriaLabel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.MicroProcessFlow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sAriaLabel",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>ariaLabel</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getAriaLabel ariaLabel}.\n\nARIA label for this control to be used by screen reader software.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setRenderType",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.MicroProcessFlow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sRenderType",
              "type": "sap.suite.ui.commons.MicroProcessFlowRenderType",
              "optional": false,
              "description": "New value for property <code>renderType</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getRenderType renderType}.\n\nDetermines how the micro process flow should be rendered inside its parent container. <br>When the width of the parent container does not allow for all nodes in the micro process flow to be displayed, you can wrap it inside the parent container or add scrolling icons.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Wrap</code>."
        },
        {
          "name": "setWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.MicroProcessFlow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sWidth",
              "type": "sap.ui.core.CSSSize",
              "optional": false,
              "description": "New value for property <code>width</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getWidth width}.\n\nThe width of the micro process flow.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>empty string</code>."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.MicroProcessFlowItem",
      "basename": "MicroProcessFlowItem",
      "resource": "sap/suite/ui/commons/MicroProcessFlowItem.js",
      "module": "sap/suite/ui/commons/MicroProcessFlowItem",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.core.Control",
      "description": "Holds information about one node in the micro process flow.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "key",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Key of the node.",
            "methods": ["getKey", "setKey"]
          },
          {
            "name": "icon",
            "type": "string",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "description": "Icon that is displayed inside the node. <br>By default, an icon that corresponds to the node's <code>state</code> is used.",
            "methods": ["getIcon", "setIcon"]
          },
          {
            "name": "title",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Title associated with this node. <br>The title is displayed as a tooltip when the user hovers over the node. This title can also be used by screen reader software.",
            "methods": ["getTitle", "setTitle"]
          },
          {
            "name": "state",
            "type": "sap.ui.core.ValueState",
            "defaultValue": "Standard",
            "group": "Appearance",
            "visibility": "public",
            "description": "State associated with this node.<br>The state defines the semantic color applied to the node. Available states include <code>Standard</code> (neutral), <code>Error</code> (negative), <code>Success</code> (positive), and <code>Warning</code> (critical).",
            "methods": ["getState", "setState"]
          },
          {
            "name": "showIntermediary",
            "type": "boolean",
            "defaultValue": false,
            "group": "Appearance",
            "visibility": "public",
            "description": "Defines whether an object should be displayed between this node and the following node. <br>When set to <code>true</code>, a vertical red bar is displayed by default. To define custom objects, use the <code>intermediary</code> aggregation.",
            "methods": ["getShowIntermediary", "setShowIntermediary"]
          },
          {
            "name": "stepWidth",
            "type": "sap.ui.core.CSSSize",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "description": "Distance between this node and the following node.<br>When set to a percentage value, the distance is calculated based on the height of the parent container.",
            "methods": ["getStepWidth", "setStepWidth"]
          },
          {
            "name": "showSeparator",
            "type": "boolean",
            "defaultValue": true,
            "group": "Appearance",
            "visibility": "public",
            "description": "Defines whether a connector line should be displayed between this node and the node that follows it.",
            "methods": ["getShowSeparator", "setShowSeparator"]
          }
        ],
        "aggregations": [
          {
            "name": "customControl",
            "singularName": "customControl",
            "type": "sap.ui.core.Control",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "Holds custom controls to be used as process flow nodes.",
            "methods": [
              "getCustomControl",
              "destroyCustomControl",
              "setCustomControl"
            ]
          },
          {
            "name": "intermediary",
            "singularName": "intermediary",
            "type": "sap.ui.core.Control",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "Holds objects to be displayed between the process flow nodes.",
            "methods": [
              "getIntermediary",
              "destroyIntermediary",
              "setIntermediary"
            ]
          }
        ],
        "events": [
          {
            "name": "press",
            "visibility": "public",
            "description": "This event is fired when the user clicks or taps a node.",
            "parameters": { "item": { "name": "item", "type": "object" } },
            "methods": ["attachPress", "detachPress", "firePress"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new MicroProcessFlowItem.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "press",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "item": {
                      "name": "item",
                      "type": "object",
                      "optional": false
                    }
                  }
                }
              }
            }
          ],
          "description": "This event is fired when the user clicks or taps a node."
        }
      ],
      "methods": [
        {
          "name": "attachPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.MicroProcessFlowItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.MicroProcessFlowItem</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:press press} event of this <code>sap.suite.ui.commons.MicroProcessFlowItem</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.MicroProcessFlowItem</code> itself.\n\nThis event is fired when the user clicks or taps a node."
        },
        {
          "name": "destroyCustomControl",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.MicroProcessFlowItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the customControl in the aggregation {@link #getCustomControl customControl}."
        },
        {
          "name": "destroyIntermediary",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.MicroProcessFlowItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the intermediary in the aggregation {@link #getIntermediary intermediary}."
        },
        {
          "name": "detachPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.MicroProcessFlowItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:press press} event of this <code>sap.suite.ui.commons.MicroProcessFlowItem</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.MicroProcessFlowItem with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "firePress",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.MicroProcessFlowItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "item": { "name": "item", "type": "object", "optional": true }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:press press} to attached listeners."
        },
        {
          "name": "getCustomControl",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.Control" },
          "description": "Gets content of aggregation {@link #getCustomControl customControl}.\n\nHolds custom controls to be used as process flow nodes."
        },
        {
          "name": "getIcon",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>icon</code>"
          },
          "description": "Gets current value of property {@link #getIcon icon}.\n\nIcon that is displayed inside the node. <br>By default, an icon that corresponds to the node's <code>state</code> is used."
        },
        {
          "name": "getIntermediary",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.Control" },
          "description": "Gets content of aggregation {@link #getIntermediary intermediary}.\n\nHolds objects to be displayed between the process flow nodes."
        },
        {
          "name": "getKey",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>key</code>"
          },
          "description": "Gets current value of property {@link #getKey key}.\n\nKey of the node."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.MicroProcessFlowItem."
        },
        {
          "name": "getShowIntermediary",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showIntermediary</code>"
          },
          "description": "Gets current value of property {@link #getShowIntermediary showIntermediary}.\n\nDefines whether an object should be displayed between this node and the following node. <br>When set to <code>true</code>, a vertical red bar is displayed by default. To define custom objects, use the <code>intermediary</code> aggregation.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getShowSeparator",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showSeparator</code>"
          },
          "description": "Gets current value of property {@link #getShowSeparator showSeparator}.\n\nDefines whether a connector line should be displayed between this node and the node that follows it.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getState",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.ValueState",
            "description": "Value of property <code>state</code>"
          },
          "description": "Gets current value of property {@link #getState state}.\n\nState associated with this node.<br>The state defines the semantic color applied to the node. Available states include <code>Standard</code> (neutral), <code>Error</code> (negative), <code>Success</code> (positive), and <code>Warning</code> (critical).\n\nDefault value is <code>Standard</code>."
        },
        {
          "name": "getStepWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.CSSSize",
            "description": "Value of property <code>stepWidth</code>"
          },
          "description": "Gets current value of property {@link #getStepWidth stepWidth}.\n\nDistance between this node and the following node.<br>When set to a percentage value, the distance is calculated based on the height of the parent container."
        },
        {
          "name": "getTitle",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>title</code>"
          },
          "description": "Gets current value of property {@link #getTitle title}.\n\nTitle associated with this node. <br>The title is displayed as a tooltip when the user hovers over the node. This title can also be used by screen reader software."
        },
        {
          "name": "setCustomControl",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.MicroProcessFlowItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oCustomControl",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The customControl to set"
            }
          ],
          "description": "Sets the aggregated {@link #getCustomControl customControl}."
        },
        {
          "name": "setIcon",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.MicroProcessFlowItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sIcon",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>icon</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getIcon icon}.\n\nIcon that is displayed inside the node. <br>By default, an icon that corresponds to the node's <code>state</code> is used.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setIntermediary",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.MicroProcessFlowItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oIntermediary",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The intermediary to set"
            }
          ],
          "description": "Sets the aggregated {@link #getIntermediary intermediary}."
        },
        {
          "name": "setKey",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.MicroProcessFlowItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sKey",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>key</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getKey key}.\n\nKey of the node.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setShowIntermediary",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.MicroProcessFlowItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowIntermediary",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showIntermediary</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowIntermediary showIntermediary}.\n\nDefines whether an object should be displayed between this node and the following node. <br>When set to <code>true</code>, a vertical red bar is displayed by default. To define custom objects, use the <code>intermediary</code> aggregation.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setShowSeparator",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.MicroProcessFlowItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowSeparator",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showSeparator</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowSeparator showSeparator}.\n\nDefines whether a connector line should be displayed between this node and the node that follows it.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setState",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.MicroProcessFlowItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sState",
              "type": "sap.ui.core.ValueState",
              "optional": false,
              "description": "New value for property <code>state</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getState state}.\n\nState associated with this node.<br>The state defines the semantic color applied to the node. Available states include <code>Standard</code> (neutral), <code>Error</code> (negative), <code>Success</code> (positive), and <code>Warning</code> (critical).\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Standard</code>."
        },
        {
          "name": "setStepWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.MicroProcessFlowItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sStepWidth",
              "type": "sap.ui.core.CSSSize",
              "optional": false,
              "description": "New value for property <code>stepWidth</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getStepWidth stepWidth}.\n\nDistance between this node and the following node.<br>When set to a percentage value, the distance is calculated based on the height of the parent container.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setTitle",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.MicroProcessFlowItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sTitle",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>title</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getTitle title}.\n\nTitle associated with this node. <br>The title is displayed as a tooltip when the user hovers over the node. This title can also be used by screen reader software.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.suite.ui.commons.MicroProcessFlowRenderType",
      "basename": "MicroProcessFlowRenderType",
      "resource": "sap/suite/ui/commons/library.js",
      "module": "sap/suite/ui/commons/library",
      "export": "MicroProcessFlowRenderType",
      "static": true,
      "visibility": "public",
      "description": "Options that define how the micro process flow should be rendered inside its parent container. <br>These options can be useful when the width of the parent container does not allow for all nodes in the micro process flow to be displayed on the same line.",
      "properties": [
        {
          "name": "NoWrap",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The micro process flow nodes are not wrapped inside the parent container. <br>The nodes that do not fit into the width of the parent container are not displayed."
        },
        {
          "name": "Scrolling",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Two scrolling icons are added to the parent container, which allows navigation by scrolling through the micro process flow. <br>Please note that the numbers displayed next to the scrolling icons are not recalculated dynamically when you resize the browser window. If you want them to be recalculated, consider using the <code>ScrollingWithResizer</code> render type instead."
        },
        {
          "name": "ScrollingWithResizer",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Two scrolling icons are added to the parent container, with the number indicators updated automatically when you resize the browser window. <br>This option allows scrolling through the micro process flow, just as the <code>Scrolling</code> option does, but may slightly affect the performance. If using this render type affects your application's performance, consider using the <code>Scrolling</code> render type instead."
        },
        {
          "name": "Wrap",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The micro process flow nodes are wrapped inside the parent container."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.MonitoringContent",
      "basename": "MonitoringContent",
      "resource": "sap/suite/ui/commons/MonitoringContent.js",
      "module": "sap/suite/ui/commons/MonitoringContent",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.core.Control",
      "description": "This control is used in a tile or any other place to display numeric values and an icon.",
      "deprecated": {
        "since": "1.25",
        "text": "This control has been deprecated in favor of new sap.suite.ui.commons.NumericContent."
      },
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "value",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The actual value.",
            "methods": ["getValue", "setValue"]
          },
          {
            "name": "iconSrc",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "This property is set by the return value of sap.ui.core.IconPool.getIconURI that is called with an icon name parameter and optional collection parameter. The collection parameter is required when the application extended icons are used.",
            "methods": ["getIconSrc", "setIconSrc"]
          },
          {
            "name": "size",
            "type": "sap.suite.ui.commons.InfoTileSize",
            "defaultValue": "Auto",
            "group": "Misc",
            "visibility": "public",
            "description": "Updates the size of the chart. If not set then the default size is applied based on the device tile.",
            "methods": ["getSize", "setSize"]
          },
          {
            "name": "state",
            "type": "sap.suite.ui.commons.LoadState",
            "defaultValue": "Loaded",
            "group": "Misc",
            "visibility": "public",
            "description": "Indicates the load status.",
            "methods": ["getState", "setState"]
          },
          {
            "name": "animateTextChange",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "description": "If set to true, changing of the value is animated.",
            "methods": ["getAnimateTextChange", "setAnimateTextChange"]
          }
        ],
        "aggregations": [
          {
            "name": "icon",
            "singularName": "icon",
            "type": "sap.ui.core.Icon",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "The icon that is displayed in the content.",
            "methods": ["getIcon", "destroyIcon", "setIcon"]
          }
        ],
        "events": [
          {
            "name": "press",
            "visibility": "public",
            "description": "The event is fired when the user chooses the monitoring content.",
            "methods": ["attachPress", "detachPress", "firePress"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new MonitoringContent.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "press",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "The event is fired when the user chooses the monitoring content."
        }
      ],
      "methods": [
        {
          "name": "attachPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.MonitoringContent",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.MonitoringContent</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:press press} event of this <code>sap.suite.ui.commons.MonitoringContent</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.MonitoringContent</code> itself.\n\nThe event is fired when the user chooses the monitoring content."
        },
        {
          "name": "destroyIcon",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.MonitoringContent",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the icon in the aggregation {@link #getIcon icon}."
        },
        {
          "name": "detachPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.MonitoringContent",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:press press} event of this <code>sap.suite.ui.commons.MonitoringContent</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.MonitoringContent with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "firePress",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.MonitoringContent",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:press press} to attached listeners."
        },
        {
          "name": "getAnimateTextChange",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>animateTextChange</code>"
          },
          "description": "Gets current value of property {@link #getAnimateTextChange animateTextChange}.\n\nIf set to true, changing of the value is animated.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getIcon",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.Icon" },
          "description": "Gets content of aggregation {@link #getIcon icon}.\n\nThe icon that is displayed in the content."
        },
        {
          "name": "getIconSrc",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>iconSrc</code>"
          },
          "description": "Gets current value of property {@link #getIconSrc iconSrc}.\n\nThis property is set by the return value of sap.ui.core.IconPool.getIconURI that is called with an icon name parameter and optional collection parameter. The collection parameter is required when the application extended icons are used."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.MonitoringContent."
        },
        {
          "name": "getSize",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.InfoTileSize",
            "description": "Value of property <code>size</code>"
          },
          "description": "Gets current value of property {@link #getSize size}.\n\nUpdates the size of the chart. If not set then the default size is applied based on the device tile.\n\nDefault value is <code>Auto</code>."
        },
        {
          "name": "getState",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.LoadState",
            "description": "Value of property <code>state</code>"
          },
          "description": "Gets current value of property {@link #getState state}.\n\nIndicates the load status.\n\nDefault value is <code>Loaded</code>."
        },
        {
          "name": "getValue",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>value</code>"
          },
          "description": "Gets current value of property {@link #getValue value}.\n\nThe actual value."
        },
        {
          "name": "setAnimateTextChange",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.MonitoringContent",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bAnimateTextChange",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>animateTextChange</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getAnimateTextChange animateTextChange}.\n\nIf set to true, changing of the value is animated.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setIcon",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.MonitoringContent",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oIcon",
              "type": "sap.ui.core.Icon",
              "optional": false,
              "description": "The icon to set"
            }
          ],
          "description": "Sets the aggregated {@link #getIcon icon}."
        },
        {
          "name": "setIconSrc",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.MonitoringContent",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sIconSrc",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>iconSrc</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getIconSrc iconSrc}.\n\nThis property is set by the return value of sap.ui.core.IconPool.getIconURI that is called with an icon name parameter and optional collection parameter. The collection parameter is required when the application extended icons are used.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setSize",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.MonitoringContent",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sSize",
              "type": "sap.suite.ui.commons.InfoTileSize",
              "optional": false,
              "description": "New value for property <code>size</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSize size}.\n\nUpdates the size of the chart. If not set then the default size is applied based on the device tile.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Auto</code>."
        },
        {
          "name": "setState",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.MonitoringContent",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sState",
              "type": "sap.suite.ui.commons.LoadState",
              "optional": false,
              "description": "New value for property <code>state</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getState state}.\n\nIndicates the load status.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Loaded</code>."
        },
        {
          "name": "setValue",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.MonitoringContent",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sValue",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>value</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getValue value}.\n\nThe actual value.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.MonitoringTile",
      "basename": "MonitoringTile",
      "resource": "sap/suite/ui/commons/MonitoringTile.js",
      "module": "sap/suite/ui/commons/MonitoringTile",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.suite.ui.commons.InfoTile",
      "description": "This control is the implementation of the InfoTile to show a numeric value and an icon.",
      "deprecated": {
        "since": "1.25",
        "text": "This control has been deprecated in favor of new sap.suite.ui.commons.GenericTile."
      },
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "value",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The actual value.",
            "methods": ["getValue", "setValue"]
          },
          {
            "name": "iconSrc",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "This property is set by the return value of sap.ui.core.IconPool.getIconURI that is called with an icon name parameter and optional collection parameter. The collection parameter is required when the application extended icons are used.",
            "methods": ["getIconSrc", "setIconSrc"]
          },
          {
            "name": "footerColor",
            "type": "sap.suite.ui.commons.InfoTileTextColor",
            "defaultValue": "Positive",
            "group": "Misc",
            "visibility": "public",
            "description": "The color of the tile footer text.",
            "methods": ["getFooterColor", "setFooterColor"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new MonitoringTile.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.MonitoringTile with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.suite.ui.commons.InfoTile.extend}."
        },
        {
          "name": "getFooterColor",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.InfoTileTextColor",
            "description": "Value of property <code>footerColor</code>"
          },
          "description": "Gets current value of property {@link #getFooterColor footerColor}.\n\nThe color of the tile footer text.\n\nDefault value is <code>Positive</code>."
        },
        {
          "name": "getIconSrc",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>iconSrc</code>"
          },
          "description": "Gets current value of property {@link #getIconSrc iconSrc}.\n\nThis property is set by the return value of sap.ui.core.IconPool.getIconURI that is called with an icon name parameter and optional collection parameter. The collection parameter is required when the application extended icons are used."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.MonitoringTile."
        },
        {
          "name": "getValue",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>value</code>"
          },
          "description": "Gets current value of property {@link #getValue value}.\n\nThe actual value."
        },
        {
          "name": "setFooterColor",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.MonitoringTile",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sFooterColor",
              "type": "sap.suite.ui.commons.InfoTileTextColor",
              "optional": false,
              "description": "New value for property <code>footerColor</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getFooterColor footerColor}.\n\nThe color of the tile footer text.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Positive</code>."
        },
        {
          "name": "setIconSrc",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.MonitoringTile",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sIconSrc",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>iconSrc</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getIconSrc iconSrc}.\n\nThis property is set by the return value of sap.ui.core.IconPool.getIconURI that is called with an icon name parameter and optional collection parameter. The collection parameter is required when the application extended icons are used.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setValue",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.MonitoringTile",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sValue",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>value</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getValue value}.\n\nThe actual value.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.networkgraph.ActionButton",
      "basename": "ActionButton",
      "resource": "sap/suite/ui/commons/networkgraph/ActionButton.js",
      "module": "sap/suite/ui/commons/networkgraph/ActionButton",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.50",
      "extends": "sap.ui.core.Element",
      "description": "Holds information about one custom action button.",
      "ui5-metadata": {
        "stereotype": "element",
        "properties": [
          {
            "name": "icon",
            "type": "string",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "description": "The icon to be used for the custom action button.",
            "methods": ["getIcon", "setIcon"]
          },
          {
            "name": "title",
            "type": "string",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "description": "Tooltip title for custom action button.",
            "methods": ["getTitle", "setTitle"]
          },
          {
            "name": "enabled",
            "type": "boolean",
            "defaultValue": true,
            "group": "Appearance",
            "visibility": "public",
            "description": "Indicates whether the action button is enabled.",
            "methods": ["getEnabled", "setEnabled"]
          },
          {
            "name": "position",
            "type": "sap.suite.ui.commons.networkgraph.ActionButtonPosition",
            "defaultValue": "Right",
            "group": "Appearance",
            "visibility": "public",
            "description": "Position of the action button. Available only for nodes.",
            "methods": ["getPosition", "setPosition"]
          }
        ],
        "events": [
          {
            "name": "press",
            "visibility": "public",
            "description": "This event is fired when the action button is clicked or tapped.",
            "parameters": {
              "buttonElement": { "name": "buttonElement", "type": "object" }
            },
            "methods": ["attachPress", "detachPress", "firePress"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "description": "Constructor for a new ActionButton.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "press",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "buttonElement": {
                      "name": "buttonElement",
                      "type": "object",
                      "optional": false
                    }
                  }
                }
              }
            }
          ],
          "description": "This event is fired when the action button is clicked or tapped."
        }
      ],
      "methods": [
        {
          "name": "attachPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.ActionButton",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.networkgraph.ActionButton</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:press press} event of this <code>sap.suite.ui.commons.networkgraph.ActionButton</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.networkgraph.ActionButton</code> itself.\n\nThis event is fired when the action button is clicked or tapped."
        },
        {
          "name": "detachPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.ActionButton",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:press press} event of this <code>sap.suite.ui.commons.networkgraph.ActionButton</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.networkgraph.ActionButton with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
        },
        {
          "name": "firePress",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.ActionButton",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "buttonElement": {
                  "name": "buttonElement",
                  "type": "object",
                  "optional": true
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:press press} to attached listeners."
        },
        {
          "name": "getEnabled",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>enabled</code>"
          },
          "description": "Gets current value of property {@link #getEnabled enabled}.\n\nIndicates whether the action button is enabled.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getIcon",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>icon</code>"
          },
          "description": "Gets current value of property {@link #getIcon icon}.\n\nThe icon to be used for the custom action button."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.networkgraph.ActionButton."
        },
        {
          "name": "getPosition",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.ActionButtonPosition",
            "description": "Value of property <code>position</code>"
          },
          "description": "Gets current value of property {@link #getPosition position}.\n\nPosition of the action button. Available only for nodes.\n\nDefault value is <code>Right</code>."
        },
        {
          "name": "getTitle",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>title</code>"
          },
          "description": "Gets current value of property {@link #getTitle title}.\n\nTooltip title for custom action button."
        },
        {
          "name": "setEnabled",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.ActionButton",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bEnabled",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>enabled</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getEnabled enabled}.\n\nIndicates whether the action button is enabled.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setIcon",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.ActionButton",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sIcon",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>icon</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getIcon icon}.\n\nThe icon to be used for the custom action button.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setPosition",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.ActionButton",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sPosition",
              "type": "sap.suite.ui.commons.networkgraph.ActionButtonPosition",
              "optional": false,
              "description": "New value for property <code>position</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getPosition position}.\n\nPosition of the action button. Available only for nodes.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Right</code>."
        },
        {
          "name": "setTitle",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.ActionButton",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sTitle",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>title</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getTitle title}.\n\nTooltip title for custom action button.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.suite.ui.commons.networkgraph.ActionButtonPosition",
      "basename": "ActionButtonPosition",
      "resource": "sap/suite/ui/commons/library.js",
      "module": "sap/suite/ui/commons/library",
      "export": "networkgraph.ActionButtonPosition",
      "static": true,
      "visibility": "public",
      "description": "Position of a custom action button.",
      "properties": [
        {
          "name": "Left",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The action button is aligned to the left."
        },
        {
          "name": "Right",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The action button is aligned to the right."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.suite.ui.commons.networkgraph.BackgroundColor",
      "basename": "BackgroundColor",
      "resource": "sap/suite/ui/commons/library.js",
      "module": "sap/suite/ui/commons/library",
      "export": "networkgraph.BackgroundColor",
      "static": true,
      "visibility": "public",
      "description": "Background color for the network graph.",
      "properties": [
        {
          "name": "Default",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The default color of the parent container is used."
        },
        {
          "name": "White",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "White."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.networkgraph.Coordinate",
      "basename": "Coordinate",
      "resource": "sap/suite/ui/commons/networkgraph/Coordinate.js",
      "module": "sap/suite/ui/commons/networkgraph/Coordinate",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.50",
      "extends": "sap.ui.core.Element",
      "description": "Holds information about coordinates on a two-dimensional Cartesian plane.",
      "ui5-metadata": {
        "stereotype": "element",
        "properties": [
          {
            "name": "x",
            "type": "float",
            "group": "Misc",
            "visibility": "public",
            "description": "The value of the x coordinate.",
            "methods": ["getX", "setX"]
          },
          {
            "name": "y",
            "type": "float",
            "group": "Misc",
            "visibility": "public",
            "description": "The value of the y coordinate.",
            "methods": ["getY", "setY"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "description": "Constructor for a new Coordinate.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.networkgraph.Coordinate with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.networkgraph.Coordinate."
        },
        {
          "name": "getX",
          "visibility": "public",
          "returnValue": {
            "type": "float",
            "description": "Value of property <code>x</code>"
          },
          "description": "Gets current value of property {@link #getX x}.\n\nThe value of the x coordinate.\n\nDefault value is <code>undefined</code>."
        },
        {
          "name": "getY",
          "visibility": "public",
          "returnValue": {
            "type": "float",
            "description": "Value of property <code>y</code>"
          },
          "description": "Gets current value of property {@link #getY y}.\n\nThe value of the y coordinate.\n\nDefault value is <code>undefined</code>."
        },
        {
          "name": "setX",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Coordinate",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fX",
              "type": "float",
              "optional": false,
              "description": "New value for property <code>x</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getX x}.\n\nThe value of the x coordinate.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>undefined</code>."
        },
        {
          "name": "setY",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Coordinate",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fY",
              "type": "float",
              "optional": false,
              "description": "New value for property <code>y</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getY y}.\n\nThe value of the y coordinate.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>undefined</code>."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.networkgraph.ElementAttribute",
      "basename": "ElementAttribute",
      "resource": "sap/suite/ui/commons/networkgraph/ElementAttribute.js",
      "module": "sap/suite/ui/commons/networkgraph/ElementAttribute",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.50",
      "extends": "sap.ui.core.Element",
      "description": "Holds details of an attribute used in the graph.",
      "ui5-metadata": {
        "stereotype": "element",
        "properties": [
          {
            "name": "label",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Label of the attribute. If set to null, the label is not displayed.",
            "methods": ["getLabel", "setLabel"]
          },
          {
            "name": "value",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Value of the attribute. If set to null, the value is not displayed.",
            "methods": ["getValue", "setValue"]
          },
          {
            "name": "labelStatus",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Name of custom status that can change the color of the label. Note that only contentColor, selectedContentColor and hoverContentColor are relevant to this attribute.",
            "methods": ["getLabelStatus", "setLabelStatus"]
          },
          {
            "name": "valueStatus",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Name of custom status that can change the color of the value. Note that only contentColor, selectedContentColor and hoverContentColor are relevant to this attribute.",
            "methods": ["getValueStatus", "setValueStatus"]
          },
          {
            "name": "visible",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "description": "Defines whether the attribute is visible. This option is used for rectangular nodes. Visible attributes are displayed right inside the rectangular node. The node's details popup shows all attributes, including the invisible ones.",
            "methods": ["getVisible", "setVisible"]
          },
          {
            "name": "icon",
            "type": "string",
            "defaultValue": "",
            "group": "Misc",
            "visibility": "public",
            "description": "Icon assigned to the attribute.",
            "methods": ["getIcon", "setIcon"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "description": "Constructor for a new ElementAttribute.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.networkgraph.ElementAttribute with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
        },
        {
          "name": "getIcon",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>icon</code>"
          },
          "description": "Gets current value of property {@link #getIcon icon}.\n\nIcon assigned to the attribute.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "getLabel",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>label</code>"
          },
          "description": "Gets current value of property {@link #getLabel label}.\n\nLabel of the attribute. If set to null, the label is not displayed."
        },
        {
          "name": "getLabelStatus",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>labelStatus</code>"
          },
          "description": "Gets current value of property {@link #getLabelStatus labelStatus}.\n\nName of custom status that can change the color of the label. Note that only contentColor, selectedContentColor and hoverContentColor are relevant to this attribute."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.networkgraph.ElementAttribute."
        },
        {
          "name": "getValue",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>value</code>"
          },
          "description": "Gets current value of property {@link #getValue value}.\n\nValue of the attribute. If set to null, the value is not displayed."
        },
        {
          "name": "getValueStatus",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>valueStatus</code>"
          },
          "description": "Gets current value of property {@link #getValueStatus valueStatus}.\n\nName of custom status that can change the color of the value. Note that only contentColor, selectedContentColor and hoverContentColor are relevant to this attribute."
        },
        {
          "name": "getVisible",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>visible</code>"
          },
          "description": "Gets current value of property {@link #getVisible visible}.\n\nDefines whether the attribute is visible. This option is used for rectangular nodes. Visible attributes are displayed right inside the rectangular node. The node's details popup shows all attributes, including the invisible ones.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setIcon",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.ElementAttribute",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sIcon",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>icon</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getIcon icon}.\n\nIcon assigned to the attribute.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "setLabel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.ElementAttribute",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sLabel",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>label</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getLabel label}.\n\nLabel of the attribute. If set to null, the label is not displayed.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setLabelStatus",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.ElementAttribute",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sLabelStatus",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>labelStatus</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getLabelStatus labelStatus}.\n\nName of custom status that can change the color of the label. Note that only contentColor, selectedContentColor and hoverContentColor are relevant to this attribute.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setValue",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.ElementAttribute",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sValue",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>value</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getValue value}.\n\nValue of the attribute. If set to null, the value is not displayed.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setValueStatus",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.ElementAttribute",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sValueStatus",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>valueStatus</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getValueStatus valueStatus}.\n\nName of custom status that can change the color of the value. Note that only contentColor, selectedContentColor and hoverContentColor are relevant to this attribute.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setVisible",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.ElementAttribute",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bVisible",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>visible</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getVisible visible}.\n\nDefines whether the attribute is visible. This option is used for rectangular nodes. Visible attributes are displayed right inside the rectangular node. The node's details popup shows all attributes, including the invisible ones.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.networkgraph.ElementBase",
      "basename": "ElementBase",
      "resource": "sap/suite/ui/commons/networkgraph/ElementBase.js",
      "module": "sap/suite/ui/commons/networkgraph/ElementBase",
      "export": "",
      "abstract": true,
      "static": true,
      "visibility": "public",
      "since": "1.50",
      "extends": "sap.suite.ui.commons.networkgraph.SvgBase",
      "description": "ElementBase class",
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "title",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "A title associated with the element.",
            "methods": ["getTitle", "setTitle"]
          },
          {
            "name": "description",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Description.",
            "methods": ["getDescription", "setDescription"]
          },
          {
            "name": "status",
            "type": "string",
            "defaultValue": "sap.suite.ui.commons.networkgraph.ElementStatus.Standard",
            "group": "Appearance",
            "visibility": "public",
            "description": "Status associated with this element. You can use any of the custom statuses defined by the <code>statuses</code> aggregation in the {@link sap.suite.ui.commons.networkgraph.Graph} or use the default statuses provided by {@link sap.suite.ui.commons.networkgraph.ElementStatus}.",
            "methods": ["getStatus", "setStatus"]
          }
        ],
        "aggregations": [
          {
            "name": "attributes",
            "singularName": "attribute",
            "type": "sap.suite.ui.commons.networkgraph.ElementAttribute",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Attributes associated with the element.",
            "methods": [
              "getAttributes",
              "destroyAttributes",
              "insertAttribute",
              "addAttribute",
              "removeAttribute",
              "indexOfAttribute",
              "removeAllAttributes"
            ]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "description": "Constructor for a new ElementBase.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "addAttribute",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.ElementBase",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oAttribute",
              "type": "sap.suite.ui.commons.networkgraph.ElementAttribute",
              "optional": false,
              "description": "The attribute to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some attribute to the aggregation {@link #getAttributes attributes}."
        },
        {
          "name": "destroyAttributes",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.ElementBase",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the attributes in the aggregation {@link #getAttributes attributes}."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.networkgraph.ElementBase with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.suite.ui.commons.networkgraph.SvgBase.extend}."
        },
        {
          "name": "getAttributes",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.ElementAttribute[]"
          },
          "description": "Gets content of aggregation {@link #getAttributes attributes}.\n\nAttributes associated with the element."
        },
        {
          "name": "getDescription",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>description</code>"
          },
          "description": "Gets current value of property {@link #getDescription description}.\n\nDescription."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.networkgraph.ElementBase."
        },
        {
          "name": "getStatus",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>status</code>"
          },
          "description": "Gets current value of property {@link #getStatus status}.\n\nStatus associated with this element. You can use any of the custom statuses defined by the <code>statuses</code> aggregation in the {@link sap.suite.ui.commons.networkgraph.Graph} or use the default statuses provided by {@link sap.suite.ui.commons.networkgraph.ElementStatus}.\n\nDefault value is <code>sap.suite.ui.commons.networkgraph.ElementStatus.Standard</code>."
        },
        {
          "name": "getTitle",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>title</code>"
          },
          "description": "Gets current value of property {@link #getTitle title}.\n\nA title associated with the element."
        },
        {
          "name": "indexOfAttribute",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oAttribute",
              "type": "sap.suite.ui.commons.networkgraph.ElementAttribute",
              "optional": false,
              "description": "The attribute whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.suite.ui.commons.networkgraph.ElementAttribute</code> in the aggregation {@link #getAttributes attributes}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "insertAttribute",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.ElementBase",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oAttribute",
              "type": "sap.suite.ui.commons.networkgraph.ElementAttribute",
              "optional": false,
              "description": "The attribute to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the attribute should be inserted at; for a negative value of <code>iIndex</code>, the attribute is inserted at position 0; for a value greater than the current size of the aggregation, the attribute is inserted at the last position"
            }
          ],
          "description": "Inserts a attribute into the aggregation {@link #getAttributes attributes}."
        },
        {
          "name": "removeAllAttributes",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.ElementAttribute[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getAttributes attributes}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeAttribute",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.ElementAttribute",
            "description": "The removed attribute or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vAttribute",
              "type": "int|string|sap.suite.ui.commons.networkgraph.ElementAttribute",
              "optional": false,
              "description": "The attribute to remove or its index or id"
            }
          ],
          "description": "Removes a attribute from the aggregation {@link #getAttributes attributes}."
        },
        {
          "name": "scrollToElement",
          "visibility": "public",
          "description": "Scrolls the view port to show this element"
        },
        {
          "name": "setDescription",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.ElementBase",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sDescription",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>description</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getDescription description}.\n\nDescription.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setStatus",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.ElementBase",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sStatus",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>status</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getStatus status}.\n\nStatus associated with this element. You can use any of the custom statuses defined by the <code>statuses</code> aggregation in the {@link sap.suite.ui.commons.networkgraph.Graph} or use the default statuses provided by {@link sap.suite.ui.commons.networkgraph.ElementStatus}.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>sap.suite.ui.commons.networkgraph.ElementStatus.Standard</code>."
        },
        {
          "name": "setTitle",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.ElementBase",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sTitle",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>title</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getTitle title}.\n\nA title associated with the element.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.suite.ui.commons.networkgraph.ElementStatus",
      "basename": "ElementStatus",
      "resource": "sap/suite/ui/commons/library.js",
      "module": "sap/suite/ui/commons/library",
      "export": "networkgraph.ElementStatus",
      "static": true,
      "visibility": "public",
      "description": "Semantic type of the node status.",
      "properties": [
        {
          "name": "Error",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "A node type that communicates an error."
        },
        {
          "name": "Information",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "A node type that communicates information."
        },
        {
          "name": "Standard",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "A standard node"
        },
        {
          "name": "Success",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "A node type that communicates success."
        },
        {
          "name": "Warning",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "A node type that communicates a warning."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.networkgraph.Graph",
      "basename": "Graph",
      "resource": "sap/suite/ui/commons/networkgraph/Graph.js",
      "module": "sap/suite/ui/commons/networkgraph/Graph",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.50",
      "extends": "sap.suite.ui.commons.networkgraph.SvgBase",
      "description": "The network graph control allows you to display data as a network of nodes connected by lines. The nodes can be circular or rectangular and can be joined into groups. You can define custom attributes for nodes and groups of nodes as well as apply layout algorithms that define the graph's appearance.",
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "height",
            "type": "sap.ui.core.CSSSize",
            "defaultValue": "100%",
            "group": "Appearance",
            "visibility": "public",
            "description": "The height of the graph. If this property is set to 'auto', the network graph will be resized to fit the height of its content, regardless of the height of the parent control.",
            "methods": ["getHeight", "setHeight"]
          },
          {
            "name": "width",
            "type": "sap.ui.core.CSSSize",
            "defaultValue": "100%",
            "group": "Appearance",
            "visibility": "public",
            "description": "The width of the graph. If this property is set to 'auto', the network graph will be resized to fit the width of its content, regardless of the width of the parent control.",
            "methods": ["getWidth", "setWidth"]
          },
          {
            "name": "orientation",
            "type": "sap.suite.ui.commons.networkgraph.Orientation",
            "defaultValue": "LeftRight",
            "group": "Behavior",
            "visibility": "public",
            "description": "Orientation of the graph flow. This property is used by layout algorithms.",
            "methods": ["getOrientation", "setOrientation"]
          },
          {
            "name": "enableZoom",
            "type": "boolean",
            "defaultValue": true,
            "group": "Behavior",
            "visibility": "public",
            "description": "If this property is set to <code>false</code>, zoom buttons are hidden, and the mouse wheel can be used for scrolling only.",
            "methods": ["getEnableZoom", "setEnableZoom"]
          },
          {
            "name": "enableWheelZoom",
            "type": "boolean",
            "defaultValue": true,
            "group": "Behavior",
            "visibility": "public",
            "description": "If this property is set to <code>false</code>, zooming in or out using the mouse wheel is available only when the Ctrl key is pressed.",
            "methods": ["getEnableWheelZoom", "setEnableWheelZoom"]
          },
          {
            "name": "backgroundImage",
            "type": "sap.ui.core.URI",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "description": "An image to be rendered on the background.",
            "methods": ["getBackgroundImage", "setBackgroundImage"]
          },
          {
            "name": "backgroundColor",
            "type": "sap.suite.ui.commons.networkgraph.BackgroundColor",
            "defaultValue": "White",
            "group": "Appearance",
            "visibility": "public",
            "description": "Background color.",
            "methods": ["getBackgroundColor", "setBackgroundColor"]
          },
          {
            "name": "renderType",
            "type": "sap.suite.ui.commons.networkgraph.RenderType",
            "defaultValue": "Html",
            "group": "Appearance",
            "visibility": "public",
            "description": "Nodes rendering type. For optimal performance and usability, it is recommended that you use HTML whenever possible.",
            "methods": ["getRenderType", "setRenderType"]
          },
          {
            "name": "noData",
            "type": "boolean",
            "defaultValue": false,
            "group": "Behavior",
            "visibility": "public",
            "description": "Set this property to <code>true</code> if you want to notify the user that no data has been loaded. <br> There is no internal check for data received, so we recommend that you make sure you set it correctly when there is no data received, not just when the application is waiting for data to be retrieved.",
            "methods": ["getNoData", "setNoData"]
          },
          {
            "name": "noDataText",
            "type": "string",
            "defaultValue": "",
            "group": "Behavior",
            "visibility": "public",
            "description": "Text displayed when no data is set. <br> This property takes effect only when the <code>noData</code> property is set to <code>true</code>.",
            "methods": ["getNoDataText", "setNoDataText"]
          }
        ],
        "aggregations": [
          {
            "name": "lines",
            "singularName": "line",
            "type": "sap.suite.ui.commons.networkgraph.Line",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Holds the lines to be displayed in the graph.",
            "methods": [
              "getLines",
              "destroyLines",
              "insertLine",
              "addLine",
              "removeLine",
              "indexOfLine",
              "removeAllLines"
            ]
          },
          {
            "name": "nodes",
            "singularName": "node",
            "type": "sap.suite.ui.commons.networkgraph.Node",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Holds the nodes to be displayed in the graph.",
            "methods": [
              "getNodes",
              "destroyNodes",
              "insertNode",
              "addNode",
              "removeNode",
              "indexOfNode",
              "removeAllNodes"
            ]
          },
          {
            "name": "groups",
            "singularName": "group",
            "type": "sap.suite.ui.commons.networkgraph.Group",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Holds a list of groups used in the graph.",
            "methods": [
              "getGroups",
              "destroyGroups",
              "insertGroup",
              "addGroup",
              "removeGroup",
              "indexOfGroup",
              "removeAllGroups"
            ]
          },
          {
            "name": "legend",
            "singularName": "legend",
            "type": "sap.ui.core.Control",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "A custom legend to be rendered instead of the autogenerated one.",
            "methods": ["getLegend", "destroyLegend", "setLegend"]
          },
          {
            "name": "layoutAlgorithm",
            "singularName": "layoutAlgorithm",
            "type": "sap.suite.ui.commons.networkgraph.layout.LayoutAlgorithm",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "Defines the layout algorithm to be used. If not defined, {@link sap.suite.ui.commons.networkgraph.layout.LayeredLayout} is used.",
            "methods": [
              "getLayoutAlgorithm",
              "destroyLayoutAlgorithm",
              "setLayoutAlgorithm"
            ]
          },
          {
            "name": "statuses",
            "singularName": "status",
            "type": "sap.suite.ui.commons.networkgraph.Status",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Holds a collection of custom statuses that can be used to assign custom colors to nodes, lines, and groups of nodes, based on their status.",
            "methods": [
              "getStatuses",
              "destroyStatuses",
              "insertStatus",
              "addStatus",
              "removeStatus",
              "indexOfStatus",
              "removeAllStatuses"
            ]
          }
        ],
        "associations": [
          {
            "name": "ariaDescribedBy",
            "singularName": "ariaDescribedBy",
            "type": "sap.ui.core.Control",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Controls or IDs that describe this control. This association is used by screen reader software.",
            "methods": [
              "getAriaDescribedBy",
              "addAriaDescribedBy",
              "removeAriaDescribedBy",
              "removeAllAriaDescribedBy"
            ]
          },
          {
            "name": "ariaLabelledBy",
            "singularName": "ariaLabelledBy",
            "type": "sap.ui.core.Control",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Controls or IDs that label this control. This association is used by screen reader software.",
            "methods": [
              "getAriaLabelledBy",
              "addAriaLabelledBy",
              "removeAriaLabelledBy",
              "removeAllAriaLabelledBy"
            ]
          }
        ],
        "events": [
          {
            "name": "graphReady",
            "visibility": "public",
            "description": "This event is fired when the graph is fully rendered.",
            "methods": [
              "attachGraphReady",
              "detachGraphReady",
              "fireGraphReady"
            ]
          },
          {
            "name": "afterLayouting",
            "visibility": "public",
            "description": "This event is fired when the layouting algorithm has finished arranging the graph and SVG rendering starts.",
            "methods": [
              "attachAfterLayouting",
              "detachAfterLayouting",
              "fireAfterLayouting"
            ]
          },
          {
            "name": "beforeLayouting",
            "visibility": "public",
            "description": "This event is fired just before the layout computation begins.",
            "methods": [
              "attachBeforeLayouting",
              "detachBeforeLayouting",
              "fireBeforeLayouting"
            ]
          },
          {
            "name": "zoomChanged",
            "visibility": "public",
            "description": "This event is fired when zooming in or out.",
            "methods": [
              "attachZoomChanged",
              "detachZoomChanged",
              "fireZoomChanged"
            ]
          },
          {
            "name": "failure",
            "visibility": "public",
            "description": "This event is fired when an error has occured and the graph cannot be rendered properly.",
            "parameters": {
              "type": {
                "name": "type",
                "type": "string",
                "description": "Type of an error. This parameter can be used for decision making in the calling code."
              },
              "message": {
                "name": "message",
                "type": "string",
                "description": "A human readable message with a description of what went wrong."
              }
            },
            "methods": ["attachFailure", "detachFailure", "fireFailure"]
          },
          {
            "name": "selectionChange",
            "visibility": "public",
            "description": "This event is fired when a selection of elements in the graph changes.",
            "parameters": {
              "items": {
                "name": "items",
                "type": "sap.suite.ui.commons.networkgraph.ElementBase[]",
                "description": "A list of elements that changed the state of the selection. To determine the new state, use the <code>getSelected()</code> method."
              }
            },
            "methods": [
              "attachSelectionChange",
              "detachSelectionChange",
              "fireSelectionChange"
            ]
          },
          {
            "name": "searchSuggest",
            "visibility": "public",
            "description": "This event is fired when the user runs a search and there is a matching term found among the suggestions.",
            "parameters": { "term": { "name": "term", "type": "string" } },
            "methods": [
              "attachSearchSuggest",
              "detachSearchSuggest",
              "fireSearchSuggest"
            ]
          },
          {
            "name": "search",
            "visibility": "public",
            "description": "This event is fired when the user enters a keyword into the search field.",
            "parameters": {
              "term": { "name": "term", "type": "string" },
              "key": { "name": "key", "type": "string" }
            },
            "methods": ["attachSearch", "detachSearch", "fireSearch"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "description": "Constructor for a new Graph.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.",
        "references": [
          "{@link topic:b5649c8de7f74739b66747dcc9356d0b Network Graph}",
          "{@link fiori:https://experience.sap.com/fiori-design-web/network-graph/ Network Graph}"
        ]
      },
      "events": [
        {
          "name": "afterLayouting",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "This event is fired when the layouting algorithm has finished arranging the graph and SVG rendering starts."
        },
        {
          "name": "beforeLayouting",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "This event is fired just before the layout computation begins."
        },
        {
          "name": "failure",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "type": {
                      "name": "type",
                      "type": "string",
                      "optional": false,
                      "description": "Type of an error. This parameter can be used for decision making in the calling code."
                    },
                    "message": {
                      "name": "message",
                      "type": "string",
                      "optional": false,
                      "description": "A human readable message with a description of what went wrong."
                    }
                  }
                }
              }
            }
          ],
          "description": "This event is fired when an error has occured and the graph cannot be rendered properly."
        },
        {
          "name": "graphReady",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "This event is fired when the graph is fully rendered."
        },
        {
          "name": "search",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "term": {
                      "name": "term",
                      "type": "string",
                      "optional": false
                    },
                    "key": {
                      "name": "key",
                      "type": "string",
                      "optional": false
                    }
                  }
                }
              }
            }
          ],
          "description": "This event is fired when the user enters a keyword into the search field."
        },
        {
          "name": "searchSuggest",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "term": {
                      "name": "term",
                      "type": "string",
                      "optional": false
                    }
                  }
                }
              }
            }
          ],
          "description": "This event is fired when the user runs a search and there is a matching term found among the suggestions."
        },
        {
          "name": "selectionChange",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "items": {
                      "name": "items",
                      "type": "sap.suite.ui.commons.networkgraph.ElementBase[]",
                      "optional": false,
                      "description": "A list of elements that changed the state of the selection. To determine the new state, use the <code>getSelected()</code> method."
                    }
                  }
                }
              }
            }
          ],
          "description": "This event is fired when a selection of elements in the graph changes."
        },
        {
          "name": "zoomChanged",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "This event is fired when zooming in or out."
        }
      ],
      "methods": [
        {
          "name": "addAriaDescribedBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Graph",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "vAriaDescribedBy",
              "type": "sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaDescribedBy to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some ariaDescribedBy into the association {@link #getAriaDescribedBy ariaDescribedBy}."
        },
        {
          "name": "addAriaLabelledBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Graph",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "vAriaLabelledBy",
              "type": "sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaLabelledBy to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "addGroup",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Graph",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oGroup",
              "type": "sap.suite.ui.commons.networkgraph.Group",
              "optional": false,
              "description": "The group to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some group to the aggregation {@link #getGroups groups}."
        },
        {
          "name": "addLine",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Graph",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oLine",
              "type": "sap.suite.ui.commons.networkgraph.Line",
              "optional": false,
              "description": "The line to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some line to the aggregation {@link #getLines lines}."
        },
        {
          "name": "addNode",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Graph",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oNode",
              "type": "sap.suite.ui.commons.networkgraph.Node",
              "optional": false,
              "description": "The node to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some node to the aggregation {@link #getNodes nodes}."
        },
        {
          "name": "addStatus",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Graph",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oStatus",
              "type": "sap.suite.ui.commons.networkgraph.Status",
              "optional": false,
              "description": "The status to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some status to the aggregation {@link #getStatuses statuses}."
        },
        {
          "name": "attachAfterLayouting",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Graph",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.networkgraph.Graph</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:afterLayouting afterLayouting} event of this <code>sap.suite.ui.commons.networkgraph.Graph</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.networkgraph.Graph</code> itself.\n\nThis event is fired when the layouting algorithm has finished arranging the graph and SVG rendering starts."
        },
        {
          "name": "attachBeforeLayouting",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Graph",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.networkgraph.Graph</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:beforeLayouting beforeLayouting} event of this <code>sap.suite.ui.commons.networkgraph.Graph</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.networkgraph.Graph</code> itself.\n\nThis event is fired just before the layout computation begins."
        },
        {
          "name": "attachFailure",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Graph",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.networkgraph.Graph</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:failure failure} event of this <code>sap.suite.ui.commons.networkgraph.Graph</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.networkgraph.Graph</code> itself.\n\nThis event is fired when an error has occured and the graph cannot be rendered properly."
        },
        {
          "name": "attachGraphReady",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Graph",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.networkgraph.Graph</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:graphReady graphReady} event of this <code>sap.suite.ui.commons.networkgraph.Graph</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.networkgraph.Graph</code> itself.\n\nThis event is fired when the graph is fully rendered."
        },
        {
          "name": "attachSearch",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Graph",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.networkgraph.Graph</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:search search} event of this <code>sap.suite.ui.commons.networkgraph.Graph</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.networkgraph.Graph</code> itself.\n\nThis event is fired when the user enters a keyword into the search field."
        },
        {
          "name": "attachSearchSuggest",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Graph",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.networkgraph.Graph</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:searchSuggest searchSuggest} event of this <code>sap.suite.ui.commons.networkgraph.Graph</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.networkgraph.Graph</code> itself.\n\nThis event is fired when the user runs a search and there is a matching term found among the suggestions."
        },
        {
          "name": "attachSelectionChange",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Graph",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.networkgraph.Graph</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:selectionChange selectionChange} event of this <code>sap.suite.ui.commons.networkgraph.Graph</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.networkgraph.Graph</code> itself.\n\nThis event is fired when a selection of elements in the graph changes."
        },
        {
          "name": "attachZoomChanged",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Graph",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.networkgraph.Graph</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:zoomChanged zoomChanged} event of this <code>sap.suite.ui.commons.networkgraph.Graph</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.networkgraph.Graph</code> itself.\n\nThis event is fired when zooming in or out."
        },
        {
          "name": "deselect",
          "visibility": "public",
          "returnValue": {
            "type": "Array",
            "description": "All items that have been deselected"
          },
          "parameters": [
            {
              "name": "bSuppressEvent",
              "type": "boolean",
              "optional": false,
              "description": "Indicates whether the <code>selecitonChange</code> event should be fired"
            }
          ],
          "description": "Deselects all currently selected items."
        },
        {
          "name": "destroyAllElements",
          "visibility": "public",
          "description": "This method removes all elements (lines, nodes, groups) without triggering invalidation. You should use this method when changing graph data that uses data binding, for example with {@link sap.suite.ui.commons.networkgraph.Graph#setModel}."
        },
        {
          "name": "destroyGroups",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Graph",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the groups in the aggregation {@link #getGroups groups}."
        },
        {
          "name": "destroyLayoutAlgorithm",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Graph",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the layoutAlgorithm in the aggregation {@link #getLayoutAlgorithm layoutAlgorithm}."
        },
        {
          "name": "destroyLegend",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Graph",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the legend in the aggregation {@link #getLegend legend}."
        },
        {
          "name": "destroyLines",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Graph",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the lines in the aggregation {@link #getLines lines}."
        },
        {
          "name": "destroyNodes",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Graph",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the nodes in the aggregation {@link #getNodes nodes}."
        },
        {
          "name": "destroyStatuses",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Graph",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the statuses in the aggregation {@link #getStatuses statuses}."
        },
        {
          "name": "detachAfterLayouting",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Graph",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:afterLayouting afterLayouting} event of this <code>sap.suite.ui.commons.networkgraph.Graph</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachBeforeLayouting",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Graph",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:beforeLayouting beforeLayouting} event of this <code>sap.suite.ui.commons.networkgraph.Graph</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachFailure",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Graph",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:failure failure} event of this <code>sap.suite.ui.commons.networkgraph.Graph</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachGraphReady",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Graph",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:graphReady graphReady} event of this <code>sap.suite.ui.commons.networkgraph.Graph</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachSearch",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Graph",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:search search} event of this <code>sap.suite.ui.commons.networkgraph.Graph</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachSearchSuggest",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Graph",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:searchSuggest searchSuggest} event of this <code>sap.suite.ui.commons.networkgraph.Graph</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachSelectionChange",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Graph",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:selectionChange selectionChange} event of this <code>sap.suite.ui.commons.networkgraph.Graph</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachZoomChanged",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Graph",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:zoomChanged zoomChanged} event of this <code>sap.suite.ui.commons.networkgraph.Graph</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.networkgraph.Graph with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.suite.ui.commons.networkgraph.SvgBase.extend}."
        },
        {
          "name": "fireAfterLayouting",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Graph",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:afterLayouting afterLayouting} to attached listeners."
        },
        {
          "name": "fireBeforeLayouting",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Graph",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:beforeLayouting beforeLayouting} to attached listeners."
        },
        {
          "name": "fireFailure",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Graph",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "type": {
                  "name": "type",
                  "type": "string",
                  "optional": true,
                  "description": "Type of an error. This parameter can be used for decision making in the calling code."
                },
                "message": {
                  "name": "message",
                  "type": "string",
                  "optional": true,
                  "description": "A human readable message with a description of what went wrong."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:failure failure} to attached listeners."
        },
        {
          "name": "fireGraphReady",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Graph",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:graphReady graphReady} to attached listeners."
        },
        {
          "name": "fireSearch",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Graph",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "term": { "name": "term", "type": "string", "optional": true },
                "key": { "name": "key", "type": "string", "optional": true }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:search search} to attached listeners."
        },
        {
          "name": "fireSearchSuggest",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Graph",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "term": { "name": "term", "type": "string", "optional": true }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:searchSuggest searchSuggest} to attached listeners."
        },
        {
          "name": "fireSelectionChange",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Graph",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "items": {
                  "name": "items",
                  "type": "sap.suite.ui.commons.networkgraph.ElementBase[]",
                  "optional": true,
                  "description": "A list of elements that changed the state of the selection. To determine the new state, use the <code>getSelected()</code> method."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:selectionChange selectionChange} to attached listeners."
        },
        {
          "name": "fireZoomChanged",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Graph",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:zoomChanged zoomChanged} to attached listeners."
        },
        {
          "name": "getAriaDescribedBy",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.ID[]" },
          "description": "Returns array of IDs of the elements which are the current targets of the association {@link #getAriaDescribedBy ariaDescribedBy}."
        },
        {
          "name": "getAriaLabelledBy",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.ID[]" },
          "description": "Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "getBackgroundColor",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.BackgroundColor",
            "description": "Value of property <code>backgroundColor</code>"
          },
          "description": "Gets current value of property {@link #getBackgroundColor backgroundColor}.\n\nBackground color.\n\nDefault value is <code>White</code>."
        },
        {
          "name": "getBackgroundImage",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.URI",
            "description": "Value of property <code>backgroundImage</code>"
          },
          "description": "Gets current value of property {@link #getBackgroundImage backgroundImage}.\n\nAn image to be rendered on the background."
        },
        {
          "name": "getCurrentZoomLevel",
          "visibility": "public",
          "returnValue": { "type": "number" },
          "description": "Returns current zoom level."
        },
        {
          "name": "getEnableWheelZoom",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>enableWheelZoom</code>"
          },
          "description": "Gets current value of property {@link #getEnableWheelZoom enableWheelZoom}.\n\nIf this property is set to <code>false</code>, zooming in or out using the mouse wheel is available only when the Ctrl key is pressed.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getEnableZoom",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>enableZoom</code>"
          },
          "description": "Gets current value of property {@link #getEnableZoom enableZoom}.\n\nIf this property is set to <code>false</code>, zoom buttons are hidden, and the mouse wheel can be used for scrolling only.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getGroups",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Group[]"
          },
          "description": "Gets content of aggregation {@link #getGroups groups}.\n\nHolds a list of groups used in the graph."
        },
        {
          "name": "getHeight",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.CSSSize",
            "description": "Value of property <code>height</code>"
          },
          "description": "Gets current value of property {@link #getHeight height}.\n\nThe height of the graph. If this property is set to 'auto', the network graph will be resized to fit the height of its content, regardless of the height of the parent control.\n\nDefault value is <code>100%</code>."
        },
        {
          "name": "getLayoutAlgorithm",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.layout.LayoutAlgorithm"
          },
          "description": "Gets content of aggregation {@link #getLayoutAlgorithm layoutAlgorithm}.\n\nDefines the layout algorithm to be used. If not defined, {@link sap.suite.ui.commons.networkgraph.layout.LayeredLayout} is used."
        },
        {
          "name": "getLegend",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.Control" },
          "description": "Gets content of aggregation {@link #getLegend legend}.\n\nA custom legend to be rendered instead of the autogenerated one."
        },
        {
          "name": "getLines",
          "visibility": "public",
          "returnValue": { "type": "sap.suite.ui.commons.networkgraph.Line[]" },
          "description": "Gets content of aggregation {@link #getLines lines}.\n\nHolds the lines to be displayed in the graph."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.networkgraph.Graph."
        },
        {
          "name": "getNoData",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>noData</code>"
          },
          "description": "Gets current value of property {@link #getNoData noData}.\n\nSet this property to <code>true</code> if you want to notify the user that no data has been loaded. <br> There is no internal check for data received, so we recommend that you make sure you set it correctly when there is no data received, not just when the application is waiting for data to be retrieved.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getNoDataText",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>noDataText</code>"
          },
          "description": "Gets current value of property {@link #getNoDataText noDataText}.\n\nText displayed when no data is set. <br> This property takes effect only when the <code>noData</code> property is set to <code>true</code>.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "getNodeByKey",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Node",
            "description": "The node, if such a node exists, or undefined"
          },
          "parameters": [
            {
              "name": "sKey",
              "type": "string",
              "optional": false,
              "description": "Node's key"
            }
          ],
          "description": "Returns a node by its key."
        },
        {
          "name": "getNodes",
          "visibility": "public",
          "returnValue": { "type": "sap.suite.ui.commons.networkgraph.Node[]" },
          "description": "Gets content of aggregation {@link #getNodes nodes}.\n\nHolds the nodes to be displayed in the graph."
        },
        {
          "name": "getOrientation",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Orientation",
            "description": "Value of property <code>orientation</code>"
          },
          "description": "Gets current value of property {@link #getOrientation orientation}.\n\nOrientation of the graph flow. This property is used by layout algorithms.\n\nDefault value is <code>LeftRight</code>."
        },
        {
          "name": "getRenderType",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.RenderType",
            "description": "Value of property <code>renderType</code>"
          },
          "description": "Gets current value of property {@link #getRenderType renderType}.\n\nNodes rendering type. For optimal performance and usability, it is recommended that you use HTML whenever possible.\n\nDefault value is <code>Html</code>."
        },
        {
          "name": "getStatuses",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Status[]"
          },
          "description": "Gets content of aggregation {@link #getStatuses statuses}.\n\nHolds a collection of custom statuses that can be used to assign custom colors to nodes, lines, and groups of nodes, based on their status."
        },
        {
          "name": "getToolbar",
          "visibility": "public",
          "returnValue": {
            "type": "sap.m.OverflowToolbar",
            "description": "Toolbar instance"
          },
          "description": "Returns a toolbar instance to allow its customization."
        },
        {
          "name": "getWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.CSSSize",
            "description": "Value of property <code>width</code>"
          },
          "description": "Gets current value of property {@link #getWidth width}.\n\nThe width of the graph. If this property is set to 'auto', the network graph will be resized to fit the width of its content, regardless of the width of the parent control.\n\nDefault value is <code>100%</code>."
        },
        {
          "name": "getZoomLevelMilestones",
          "visibility": "public",
          "returnValue": {
            "type": "number[]",
            "description": "zoom level milestones"
          },
          "description": "Returns predefined zoom level steps used by the default zoom functionality."
        },
        {
          "name": "indexOfGroup",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oGroup",
              "type": "sap.suite.ui.commons.networkgraph.Group",
              "optional": false,
              "description": "The group whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.suite.ui.commons.networkgraph.Group</code> in the aggregation {@link #getGroups groups}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "indexOfLine",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oLine",
              "type": "sap.suite.ui.commons.networkgraph.Line",
              "optional": false,
              "description": "The line whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.suite.ui.commons.networkgraph.Line</code> in the aggregation {@link #getLines lines}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "indexOfNode",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oNode",
              "type": "sap.suite.ui.commons.networkgraph.Node",
              "optional": false,
              "description": "The node whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.suite.ui.commons.networkgraph.Node</code> in the aggregation {@link #getNodes nodes}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "indexOfStatus",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oStatus",
              "type": "sap.suite.ui.commons.networkgraph.Status",
              "optional": false,
              "description": "The status whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.suite.ui.commons.networkgraph.Status</code> in the aggregation {@link #getStatuses statuses}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "insertGroup",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Graph",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oGroup",
              "type": "sap.suite.ui.commons.networkgraph.Group",
              "optional": false,
              "description": "The group to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the group should be inserted at; for a negative value of <code>iIndex</code>, the group is inserted at position 0; for a value greater than the current size of the aggregation, the group is inserted at the last position"
            }
          ],
          "description": "Inserts a group into the aggregation {@link #getGroups groups}."
        },
        {
          "name": "insertLine",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Graph",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oLine",
              "type": "sap.suite.ui.commons.networkgraph.Line",
              "optional": false,
              "description": "The line to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the line should be inserted at; for a negative value of <code>iIndex</code>, the line is inserted at position 0; for a value greater than the current size of the aggregation, the line is inserted at the last position"
            }
          ],
          "description": "Inserts a line into the aggregation {@link #getLines lines}."
        },
        {
          "name": "insertNode",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Graph",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oNode",
              "type": "sap.suite.ui.commons.networkgraph.Node",
              "optional": false,
              "description": "The node to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the node should be inserted at; for a negative value of <code>iIndex</code>, the node is inserted at position 0; for a value greater than the current size of the aggregation, the node is inserted at the last position"
            }
          ],
          "description": "Inserts a node into the aggregation {@link #getNodes nodes}."
        },
        {
          "name": "insertStatus",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Graph",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oStatus",
              "type": "sap.suite.ui.commons.networkgraph.Status",
              "optional": false,
              "description": "The status to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the status should be inserted at; for a negative value of <code>iIndex</code>, the status is inserted at position 0; for a value greater than the current size of the aggregation, the status is inserted at the last position"
            }
          ],
          "description": "Inserts a status into the aggregation {@link #getStatuses statuses}."
        },
        {
          "name": "isFullScreen",
          "visibility": "public",
          "description": "Returns <code>true</code> if the graph is in full screen mode."
        },
        {
          "name": "removeAllAriaDescribedBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.ID[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls in the association named {@link #getAriaDescribedBy ariaDescribedBy}."
        },
        {
          "name": "removeAllAriaLabelledBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.ID[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "removeAllGroups",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Group[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getGroups groups}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeAllLines",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Line[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getLines lines}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeAllNodes",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Node[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getNodes nodes}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeAllStatuses",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Status[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getStatuses statuses}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeAriaDescribedBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.ID",
            "description": "The removed ariaDescribedBy or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vAriaDescribedBy",
              "type": "int|sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaDescribedBy to be removed or its index or ID"
            }
          ],
          "description": "Removes an ariaDescribedBy from the association named {@link #getAriaDescribedBy ariaDescribedBy}."
        },
        {
          "name": "removeAriaLabelledBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.ID",
            "description": "The removed ariaLabelledBy or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vAriaLabelledBy",
              "type": "int|sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaLabelledBy to be removed or its index or ID"
            }
          ],
          "description": "Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "removeGroup",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Group",
            "description": "The removed group or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vGroup",
              "type": "int|string|sap.suite.ui.commons.networkgraph.Group",
              "optional": false,
              "description": "The group to remove or its index or id"
            }
          ],
          "description": "Removes a group from the aggregation {@link #getGroups groups}."
        },
        {
          "name": "removeLine",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Line",
            "description": "The removed line or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vLine",
              "type": "int|string|sap.suite.ui.commons.networkgraph.Line",
              "optional": false,
              "description": "The line to remove or its index or id"
            }
          ],
          "description": "Removes a line from the aggregation {@link #getLines lines}."
        },
        {
          "name": "removeNode",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Node",
            "description": "The removed node or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vNode",
              "type": "int|string|sap.suite.ui.commons.networkgraph.Node",
              "optional": false,
              "description": "The node to remove or its index or id"
            }
          ],
          "description": "Removes a node from the aggregation {@link #getNodes nodes}."
        },
        {
          "name": "removeStatus",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Status",
            "description": "The removed status or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vStatus",
              "type": "int|string|sap.suite.ui.commons.networkgraph.Status",
              "optional": false,
              "description": "The status to remove or its index or id"
            }
          ],
          "description": "Removes a status from the aggregation {@link #getStatuses statuses}."
        },
        {
          "name": "scrollToElement",
          "visibility": "public",
          "parameters": [
            {
              "name": "oElement",
              "type": "Object",
              "optional": false,
              "description": "Element to scroll to"
            }
          ],
          "description": "Scrolls to the element set in the parameter."
        },
        {
          "name": "setBackgroundColor",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Graph",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sBackgroundColor",
              "type": "sap.suite.ui.commons.networkgraph.BackgroundColor",
              "optional": false,
              "description": "New value for property <code>backgroundColor</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getBackgroundColor backgroundColor}.\n\nBackground color.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>White</code>."
        },
        {
          "name": "setBackgroundImage",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Graph",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sBackgroundImage",
              "type": "sap.ui.core.URI",
              "optional": false,
              "description": "New value for property <code>backgroundImage</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getBackgroundImage backgroundImage}.\n\nAn image to be rendered on the background.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setCurrentZoomLevel",
          "visibility": "public",
          "parameters": [
            {
              "name": "zoomLevel",
              "type": "Number",
              "optional": false,
              "description": "New zoom level"
            }
          ],
          "description": "Sets current zoom level."
        },
        {
          "name": "setCustomLegendLabel",
          "visibility": "public",
          "parameters": [
            {
              "name": "mArguments",
              "type": "object",
              "optional": false,
              "parameterProperties": {
                "label": {
                  "name": "label",
                  "type": "string",
                  "optional": false,
                  "description": "New text for the legend label"
                },
                "status": {
                  "name": "status",
                  "type": "sap.suite.ui.commons.networkgraph.ElementStatus",
                  "optional": false,
                  "description": "Status the custom text will be assigned to. Works only for the default legend, not when the Legend aggregation is used"
                },
                "isNode": {
                  "name": "isNode",
                  "type": "boolean",
                  "optional": false,
                  "description": "True for a legend describing nodes. True by default if 'isLine' and 'isGroup' are false."
                },
                "isLine": {
                  "name": "isLine",
                  "type": "boolean",
                  "optional": false,
                  "description": "True for a legend describing lines. By default true if 'isNode' is false."
                },
                "isGroup": {
                  "name": "isGroup",
                  "type": "boolean",
                  "optional": false,
                  "description": "True for a legend describing groups. False by default."
                }
              },
              "description": "Parameters for this method"
            }
          ],
          "description": "Sets a custom label for the legend."
        },
        {
          "name": "setEnableWheelZoom",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Graph",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bEnableWheelZoom",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>enableWheelZoom</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getEnableWheelZoom enableWheelZoom}.\n\nIf this property is set to <code>false</code>, zooming in or out using the mouse wheel is available only when the Ctrl key is pressed.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setEnableZoom",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Graph",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bEnableZoom",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>enableZoom</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getEnableZoom enableZoom}.\n\nIf this property is set to <code>false</code>, zoom buttons are hidden, and the mouse wheel can be used for scrolling only.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setHeight",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Graph",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sHeight",
              "type": "sap.ui.core.CSSSize",
              "optional": false,
              "description": "New value for property <code>height</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getHeight height}.\n\nThe height of the graph. If this property is set to 'auto', the network graph will be resized to fit the height of its content, regardless of the height of the parent control.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>100%</code>."
        },
        {
          "name": "setLayoutAlgorithm",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Graph",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oLayoutAlgorithm",
              "type": "sap.suite.ui.commons.networkgraph.layout.LayoutAlgorithm",
              "optional": false,
              "description": "The layoutAlgorithm to set"
            }
          ],
          "description": "Sets the aggregated {@link #getLayoutAlgorithm layoutAlgorithm}."
        },
        {
          "name": "setLegend",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Graph",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oLegend",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The legend to set"
            }
          ],
          "description": "Sets the aggregated {@link #getLegend legend}."
        },
        {
          "name": "setNoData",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Graph",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bNoData",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>noData</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getNoData noData}.\n\nSet this property to <code>true</code> if you want to notify the user that no data has been loaded. <br> There is no internal check for data received, so we recommend that you make sure you set it correctly when there is no data received, not just when the application is waiting for data to be retrieved.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setNoDataText",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Graph",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sNoDataText",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>noDataText</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getNoDataText noDataText}.\n\nText displayed when no data is set. <br> This property takes effect only when the <code>noData</code> property is set to <code>true</code>.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "setOrientation",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Graph",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sOrientation",
              "type": "sap.suite.ui.commons.networkgraph.Orientation",
              "optional": false,
              "description": "New value for property <code>orientation</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getOrientation orientation}.\n\nOrientation of the graph flow. This property is used by layout algorithms.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>LeftRight</code>."
        },
        {
          "name": "setRenderType",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Graph",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sRenderType",
              "type": "sap.suite.ui.commons.networkgraph.RenderType",
              "optional": false,
              "description": "New value for property <code>renderType</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getRenderType renderType}.\n\nNodes rendering type. For optimal performance and usability, it is recommended that you use HTML whenever possible.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Html</code>."
        },
        {
          "name": "setSearchSuggestionItems",
          "visibility": "public",
          "parameters": [
            {
              "name": "aItems",
              "type": "Array",
              "optional": false,
              "description": "Array with suggestion items ({@link sap.m.SuggestionItem}) to display when the user runs a search."
            }
          ],
          "description": "Sets custom search suggestions."
        },
        {
          "name": "setWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Graph",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sWidth",
              "type": "sap.ui.core.CSSSize",
              "optional": false,
              "description": "New value for property <code>width</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getWidth width}.\n\nThe width of the graph. If this property is set to 'auto', the network graph will be resized to fit the width of its content, regardless of the width of the parent control.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>100%</code>."
        },
        {
          "name": "toggleFullScreen",
          "visibility": "public",
          "description": "Toggles full screen mode."
        },
        {
          "name": "updateLegend",
          "visibility": "public",
          "description": "Updates the legend."
        },
        {
          "name": "zoom",
          "visibility": "public",
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": false,
              "parameterProperties": {
                "x": {
                  "name": "x",
                  "type": "number",
                  "optional": true,
                  "defaultValue": "middle of view port width",
                  "description": "x position from/to which the zoom should happen"
                },
                "y": {
                  "name": "y",
                  "type": "number",
                  "optional": true,
                  "defaultValue": "middle of view port height",
                  "description": "y position from/to which the zoom should happen"
                },
                "zoomin": {
                  "name": "zoomin",
                  "type": "boolean",
                  "optional": true,
                  "defaultValue": true,
                  "description": "whether to zoom in or out"
                },
                "zoomLevel": {
                  "name": "zoomLevel",
                  "type": "number",
                  "optional": true,
                  "description": "zoom level in percents, parameter zoomin ignored in this case"
                }
              },
              "description": "Map which contains following parameters properties:"
            }
          ],
          "description": "Zooms in or out of the graph."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.networkgraph.GraphMap",
      "basename": "GraphMap",
      "resource": "sap/suite/ui/commons/networkgraph/GraphMap.js",
      "module": "sap/suite/ui/commons/networkgraph/GraphMap",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.50",
      "extends": "sap.ui.core.Control",
      "description": "A component which displays an overview of the entire graph and allows users to quickly navigate in the linked graph.",
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "height",
            "type": "sap.ui.core.CSSSize",
            "defaultValue": "",
            "group": "Appearance",
            "visibility": "public",
            "description": "The height of the graph map.",
            "methods": ["getHeight", "setHeight"]
          },
          {
            "name": "width",
            "type": "sap.ui.core.CSSSize",
            "defaultValue": "",
            "group": "Appearance",
            "visibility": "public",
            "description": "The width of the graph map.",
            "methods": ["getWidth", "setWidth"]
          },
          {
            "name": "directRenderNodeLimit",
            "type": "int",
            "defaultValue": 250,
            "group": "Behavior",
            "visibility": "public",
            "description": "This property affects the threshold at which the renderer switches from link rendering to direct graph rendering. Rendering using xlink is much faster, but with larger graphs it may slow down the browser performance. Modify this property with care. Please also keep in mind that a graph map that is rendered directly does not adapt to changes until it's fully rerendered. Available only for <code>SVG</code> rendering type.",
            "methods": ["getDirectRenderNodeLimit", "setDirectRenderNodeLimit"]
          },
          {
            "name": "title",
            "type": "string",
            "defaultValue": "",
            "group": "Misc",
            "visibility": "public",
            "description": "Graph overview title",
            "methods": ["getTitle", "setTitle"]
          }
        ],
        "associations": [
          {
            "name": "graph",
            "singularName": "graph",
            "type": "sap.suite.ui.commons.networkgraph.Graph",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "An association to a graph displayed by this component.",
            "methods": ["getGraph", "setGraph"]
          }
        ],
        "events": [
          {
            "name": "mapReady",
            "visibility": "public",
            "description": "This event is fired when the map is fully rendered.",
            "methods": ["attachMapReady", "detachMapReady", "fireMapReady"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "description": "Constructor for a new GraphMap.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "mapReady",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "This event is fired when the map is fully rendered."
        }
      ],
      "methods": [
        {
          "name": "attachMapReady",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.GraphMap",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.networkgraph.GraphMap</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:mapReady mapReady} event of this <code>sap.suite.ui.commons.networkgraph.GraphMap</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.networkgraph.GraphMap</code> itself.\n\nThis event is fired when the map is fully rendered."
        },
        {
          "name": "detachMapReady",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.GraphMap",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:mapReady mapReady} event of this <code>sap.suite.ui.commons.networkgraph.GraphMap</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.networkgraph.GraphMap with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "fireMapReady",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.GraphMap",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:mapReady mapReady} to attached listeners."
        },
        {
          "name": "getDirectRenderNodeLimit",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>directRenderNodeLimit</code>"
          },
          "description": "Gets current value of property {@link #getDirectRenderNodeLimit directRenderNodeLimit}.\n\nThis property affects the threshold at which the renderer switches from link rendering to direct graph rendering. Rendering using xlink is much faster, but with larger graphs it may slow down the browser performance. Modify this property with care. Please also keep in mind that a graph map that is rendered directly does not adapt to changes until it's fully rerendered. Available only for <code>SVG</code> rendering type.\n\nDefault value is <code>250</code>."
        },
        {
          "name": "getGraph",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.ID" },
          "description": "ID of the element which is the current target of the association {@link #getGraph graph}, or <code>null</code>."
        },
        {
          "name": "getHeight",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.CSSSize",
            "description": "Value of property <code>height</code>"
          },
          "description": "Gets current value of property {@link #getHeight height}.\n\nThe height of the graph map.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.networkgraph.GraphMap."
        },
        {
          "name": "getTitle",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>title</code>"
          },
          "description": "Gets current value of property {@link #getTitle title}.\n\nGraph overview title\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "getWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.CSSSize",
            "description": "Value of property <code>width</code>"
          },
          "description": "Gets current value of property {@link #getWidth width}.\n\nThe width of the graph map.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "setDirectRenderNodeLimit",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.GraphMap",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iDirectRenderNodeLimit",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>directRenderNodeLimit</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getDirectRenderNodeLimit directRenderNodeLimit}.\n\nThis property affects the threshold at which the renderer switches from link rendering to direct graph rendering. Rendering using xlink is much faster, but with larger graphs it may slow down the browser performance. Modify this property with care. Please also keep in mind that a graph map that is rendered directly does not adapt to changes until it's fully rerendered. Available only for <code>SVG</code> rendering type.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>250</code>."
        },
        {
          "name": "setGraph",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.GraphMap",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oGraph",
              "type": "sap.ui.core.ID|sap.suite.ui.commons.networkgraph.Graph",
              "optional": false,
              "description": "ID of an element which becomes the new target of this graph association; alternatively, an element instance may be given"
            }
          ],
          "description": "Sets the associated {@link #getGraph graph}."
        },
        {
          "name": "setHeight",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.GraphMap",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sHeight",
              "type": "sap.ui.core.CSSSize",
              "optional": false,
              "description": "New value for property <code>height</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getHeight height}.\n\nThe height of the graph map.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "setTitle",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.GraphMap",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sTitle",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>title</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getTitle title}.\n\nGraph overview title\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "setWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.GraphMap",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sWidth",
              "type": "sap.ui.core.CSSSize",
              "optional": false,
              "description": "New value for property <code>width</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getWidth width}.\n\nThe width of the graph map.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>empty string</code>."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.networkgraph.Group",
      "basename": "Group",
      "resource": "sap/suite/ui/commons/networkgraph/Group.js",
      "module": "sap/suite/ui/commons/networkgraph/Group",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.50",
      "extends": "sap.suite.ui.commons.networkgraph.ElementBase",
      "description": "Holds details about a group.",
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "headerCheckBoxState",
            "type": "sap.suite.ui.commons.networkgraph.HeaderCheckboxState",
            "defaultValue": "Hidden",
            "group": "Misc",
            "visibility": "public",
            "description": "Defines if the Header checkbox should be displayed and whether it should be selected or not. By default, the checkbox is hidden.",
            "methods": ["getHeaderCheckBoxState", "setHeaderCheckBoxState"]
          },
          {
            "name": "key",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The key of the group. This key is used to assign nodes to groups.",
            "methods": ["getKey", "setKey"]
          },
          {
            "name": "collapsed",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "description": "Defines whether the group is collapsed. By default, it is expanded.",
            "methods": ["getCollapsed", "setCollapsed"]
          },
          {
            "name": "icon",
            "type": "string",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "description": "An icon associated with the group.",
            "methods": ["getIcon", "setIcon"]
          },
          {
            "name": "minWidth",
            "type": "float",
            "group": "Misc",
            "visibility": "public",
            "description": "Minimal width of the group (swim lane) for the <code>SwimLanes</code> type of {@link sap.suite.ui.commons.networkgraph.LayoutRenderType}.<br> If not specified, the width of the group (swim lane) is defined automatically, based on the width of the nodes included in the swim lane.<br> If the width specified in this property is too small to fit the nodes included in this group (swim lane), the width is increased accordingly.",
            "methods": ["getMinWidth", "setMinWidth"]
          },
          {
            "name": "parentGroupKey",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Key of the parent group. Can be used only with the <code>TwoColumns</code> layout.",
            "methods": ["getParentGroupKey", "setParentGroupKey"]
          }
        ],
        "aggregations": [
          {
            "name": "_checkBox",
            "singularName": "_checkBox",
            "type": "sap.m.CheckBox",
            "cardinality": "0..1",
            "visibility": "hidden",
            "description": "Internal aggregation for the Header checkbox.",
            "methods": ["get_checkBox", "destroy_checkBox", "set_checkBox"]
          }
        ],
        "events": [
          {
            "name": "headerCheckBoxPress",
            "visibility": "public",
            "description": "This event is fired when the user selects or clears the Header checkbox.",
            "parameters": {
              "checked": {
                "name": "checked",
                "type": "boolean",
                "description": "Indicates whether checkbox is selected."
              }
            },
            "methods": [
              "attachHeaderCheckBoxPress",
              "detachHeaderCheckBoxPress",
              "fireHeaderCheckBoxPress"
            ]
          },
          {
            "name": "collapseExpand",
            "visibility": "public",
            "description": "This event is fired when the user clicks or taps the collapse/expand button.",
            "methods": [
              "attachCollapseExpand",
              "detachCollapseExpand",
              "fireCollapseExpand"
            ]
          },
          {
            "name": "showDetail",
            "visibility": "public",
            "description": "This event is fired when the user clicks or taps the group's details button.",
            "methods": [
              "attachShowDetail",
              "detachShowDetail",
              "fireShowDetail"
            ]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "description": "Constructor for a new Group. Grouping is not supported for custom layouting.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "collapseExpand",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "This event is fired when the user clicks or taps the collapse/expand button."
        },
        {
          "name": "headerCheckBoxPress",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "checked": {
                      "name": "checked",
                      "type": "boolean",
                      "optional": false,
                      "description": "Indicates whether checkbox is selected."
                    }
                  }
                }
              }
            }
          ],
          "description": "This event is fired when the user selects or clears the Header checkbox."
        },
        {
          "name": "showDetail",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "This event is fired when the user clicks or taps the group's details button."
        }
      ],
      "methods": [
        {
          "name": "attachCollapseExpand",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Group",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.networkgraph.Group</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:collapseExpand collapseExpand} event of this <code>sap.suite.ui.commons.networkgraph.Group</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.networkgraph.Group</code> itself.\n\nThis event is fired when the user clicks or taps the collapse/expand button."
        },
        {
          "name": "attachHeaderCheckBoxPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Group",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.networkgraph.Group</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:headerCheckBoxPress headerCheckBoxPress} event of this <code>sap.suite.ui.commons.networkgraph.Group</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.networkgraph.Group</code> itself.\n\nThis event is fired when the user selects or clears the Header checkbox."
        },
        {
          "name": "attachShowDetail",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Group",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.networkgraph.Group</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:showDetail showDetail} event of this <code>sap.suite.ui.commons.networkgraph.Group</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.networkgraph.Group</code> itself.\n\nThis event is fired when the user clicks or taps the group's details button."
        },
        {
          "name": "detachCollapseExpand",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Group",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:collapseExpand collapseExpand} event of this <code>sap.suite.ui.commons.networkgraph.Group</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachHeaderCheckBoxPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Group",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:headerCheckBoxPress headerCheckBoxPress} event of this <code>sap.suite.ui.commons.networkgraph.Group</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachShowDetail",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Group",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:showDetail showDetail} event of this <code>sap.suite.ui.commons.networkgraph.Group</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.networkgraph.Group with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.suite.ui.commons.networkgraph.ElementBase.extend}."
        },
        {
          "name": "fireCollapseExpand",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Group",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:collapseExpand collapseExpand} to attached listeners."
        },
        {
          "name": "fireHeaderCheckBoxPress",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Group",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "checked": {
                  "name": "checked",
                  "type": "boolean",
                  "optional": true,
                  "description": "Indicates whether checkbox is selected."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:headerCheckBoxPress headerCheckBoxPress} to attached listeners."
        },
        {
          "name": "fireShowDetail",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Group",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:showDetail showDetail} to attached listeners."
        },
        {
          "name": "getChildLines",
          "visibility": "public",
          "returnValue": {
            "type": "Array",
            "description": "Returns all lines connected to the group's child nodes."
          }
        },
        {
          "name": "getChildNodes",
          "visibility": "public",
          "returnValue": {
            "type": "Array",
            "description": "Returns all child nodes of the group."
          }
        },
        {
          "name": "getCollapsed",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>collapsed</code>"
          },
          "description": "Gets current value of property {@link #getCollapsed collapsed}.\n\nDefines whether the group is collapsed. By default, it is expanded.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getHeaderCheckbox",
          "visibility": "public",
          "description": "Returns header checkbox object"
        },
        {
          "name": "getHeaderCheckBoxState",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.HeaderCheckboxState",
            "description": "Value of property <code>headerCheckBoxState</code>"
          },
          "description": "Gets current value of property {@link #getHeaderCheckBoxState headerCheckBoxState}.\n\nDefines if the Header checkbox should be displayed and whether it should be selected or not. By default, the checkbox is hidden.\n\nDefault value is <code>Hidden</code>."
        },
        {
          "name": "getIcon",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>icon</code>"
          },
          "description": "Gets current value of property {@link #getIcon icon}.\n\nAn icon associated with the group."
        },
        {
          "name": "getKey",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>key</code>"
          },
          "description": "Gets current value of property {@link #getKey key}.\n\nThe key of the group. This key is used to assign nodes to groups."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.networkgraph.Group."
        },
        {
          "name": "getMinWidth",
          "visibility": "public",
          "returnValue": {
            "type": "float",
            "description": "Value of property <code>minWidth</code>"
          },
          "description": "Gets current value of property {@link #getMinWidth minWidth}.\n\nMinimal width of the group (swim lane) for the <code>SwimLanes</code> type of {@link sap.suite.ui.commons.networkgraph.LayoutRenderType}.<br> If not specified, the width of the group (swim lane) is defined automatically, based on the width of the nodes included in the swim lane.<br> If the width specified in this property is too small to fit the nodes included in this group (swim lane), the width is increased accordingly.\n\nDefault value is <code>undefined</code>."
        },
        {
          "name": "getNodes",
          "visibility": "public",
          "returnValue": {
            "type": "Array",
            "description": "Returns all nodes belonging to this group."
          }
        },
        {
          "name": "getParentGroupKey",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>parentGroupKey</code>"
          },
          "description": "Gets current value of property {@link #getParentGroupKey parentGroupKey}.\n\nKey of the parent group. Can be used only with the <code>TwoColumns</code> layout."
        },
        {
          "name": "getParentLines",
          "visibility": "public",
          "returnValue": {
            "type": "Array",
            "description": "Returns all lines connected to the parent nodes of the group."
          }
        },
        {
          "name": "getParentNodes",
          "visibility": "public",
          "returnValue": {
            "type": "Array",
            "description": "Returns all parent nodes of the group."
          }
        },
        {
          "name": "setCollapsed",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Group",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bCollapsed",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>collapsed</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getCollapsed collapsed}.\n\nDefines whether the group is collapsed. By default, it is expanded.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setHeaderCheckBoxState",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Group",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sHeaderCheckBoxState",
              "type": "sap.suite.ui.commons.networkgraph.HeaderCheckboxState",
              "optional": false,
              "description": "New value for property <code>headerCheckBoxState</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getHeaderCheckBoxState headerCheckBoxState}.\n\nDefines if the Header checkbox should be displayed and whether it should be selected or not. By default, the checkbox is hidden.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Hidden</code>."
        },
        {
          "name": "setHidden",
          "visibility": "public",
          "description": "Hides the group and the nodes included in it."
        },
        {
          "name": "setIcon",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Group",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sIcon",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>icon</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getIcon icon}.\n\nAn icon associated with the group.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setKey",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Group",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sKey",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>key</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getKey key}.\n\nThe key of the group. This key is used to assign nodes to groups.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setMinWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Group",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fMinWidth",
              "type": "float",
              "optional": false,
              "description": "New value for property <code>minWidth</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getMinWidth minWidth}.\n\nMinimal width of the group (swim lane) for the <code>SwimLanes</code> type of {@link sap.suite.ui.commons.networkgraph.LayoutRenderType}.<br> If not specified, the width of the group (swim lane) is defined automatically, based on the width of the nodes included in the swim lane.<br> If the width specified in this property is too small to fit the nodes included in this group (swim lane), the width is increased accordingly.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>undefined</code>."
        },
        {
          "name": "setParentGroupKey",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Group",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sParentGroupKey",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>parentGroupKey</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getParentGroupKey parentGroupKey}.\n\nKey of the parent group. Can be used only with the <code>TwoColumns</code> layout.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.suite.ui.commons.networkgraph.HeaderCheckboxState",
      "basename": "HeaderCheckboxState",
      "resource": "sap/suite/ui/commons/library.js",
      "module": "sap/suite/ui/commons/library",
      "export": "networkgraph.HeaderCheckboxState",
      "static": true,
      "visibility": "public",
      "description": "States of the Header checkbox.",
      "properties": [
        {
          "name": "Checked",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Checkbox is visible and selected."
        },
        {
          "name": "Hidden",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Checkbox is not visible."
        },
        {
          "name": "Unchecked",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Checkbox is visible and not selected."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.networkgraph.layout.ForceBasedLayout",
      "basename": "ForceBasedLayout",
      "resource": "sap/suite/ui/commons/networkgraph/layout/ForceBasedLayout.js",
      "module": "sap/suite/ui/commons/networkgraph/layout/ForceBasedLayout",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.50",
      "extends": "sap.suite.ui.commons.networkgraph.layout.LayoutAlgorithm",
      "description": "This algorithm uses D3.force algorithm to layout the graph. It's good if the graph is too complicated and LayeredLayout is not sufficient.",
      "ui5-metadata": {
        "stereotype": "element",
        "properties": [
          {
            "name": "alpha",
            "type": "float",
            "defaultValue": 0.3,
            "group": "Behavior",
            "visibility": "public",
            "description": "See: {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Force-Layout.md#alpha}",
            "methods": ["getAlpha", "setAlpha"]
          },
          {
            "name": "charge",
            "type": "float",
            "defaultValue": -30,
            "group": "Behavior",
            "visibility": "public",
            "description": "See: {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Force-Layout.md#charge}",
            "methods": ["getCharge", "setCharge"]
          },
          {
            "name": "friction",
            "type": "float",
            "defaultValue": 0.9,
            "group": "Behavior",
            "visibility": "public",
            "description": "Value in [0,1] range. See: {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Force-Layout.md#friction}",
            "methods": ["getFriction", "setFriction"]
          },
          {
            "name": "maximumDuration",
            "type": "int",
            "defaultValue": 1000,
            "group": "Behaviour",
            "visibility": "public",
            "description": "Specifies the maximal time in miliseconds the algorithm is allowed to run.",
            "methods": ["getMaximumDuration", "setMaximumDuration"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "description": "Constructor for a new ForceBasedLayout.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.networkgraph.layout.ForceBasedLayout with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.suite.ui.commons.networkgraph.layout.LayoutAlgorithm.extend}."
        },
        {
          "name": "getAlpha",
          "visibility": "public",
          "returnValue": {
            "type": "float",
            "description": "Value of property <code>alpha</code>"
          },
          "description": "Gets current value of property {@link #getAlpha alpha}.\n\nSee: {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Force-Layout.md#alpha}\n\nDefault value is <code>0.3</code>."
        },
        {
          "name": "getCharge",
          "visibility": "public",
          "returnValue": {
            "type": "float",
            "description": "Value of property <code>charge</code>"
          },
          "description": "Gets current value of property {@link #getCharge charge}.\n\nSee: {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Force-Layout.md#charge}\n\nDefault value is <code>-30</code>."
        },
        {
          "name": "getFriction",
          "visibility": "public",
          "returnValue": {
            "type": "float",
            "description": "Value of property <code>friction</code>"
          },
          "description": "Gets current value of property {@link #getFriction friction}.\n\nValue in [0,1] range. See: {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Force-Layout.md#friction}\n\nDefault value is <code>0.9</code>."
        },
        {
          "name": "getLayoutRenderType",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.LayoutRenderType"
          },
          "description": "Gets the type of the layout algorithm that defines the visual features and layout of the network graph."
        },
        {
          "name": "getMaximumDuration",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>maximumDuration</code>"
          },
          "description": "Gets current value of property {@link #getMaximumDuration maximumDuration}.\n\nSpecifies the maximal time in miliseconds the algorithm is allowed to run.\n\nDefault value is <code>1000</code>."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.networkgraph.layout.ForceBasedLayout."
        },
        {
          "name": "isLayered",
          "visibility": "public",
          "returnValue": { "type": "boolean", "description": "Always false" },
          "description": "Specifies if this layouting algorithm distributes nodes into layers. Parent graph may change behaviour based on this option."
        },
        {
          "name": "layout",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.layout.LayoutTask",
            "description": "Task to get the layout calculated."
          },
          "description": "Executes the layouting algorithm."
        },
        {
          "name": "setAlpha",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.layout.ForceBasedLayout",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fAlpha",
              "type": "float",
              "optional": false,
              "description": "New value for property <code>alpha</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getAlpha alpha}.\n\nSee: {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Force-Layout.md#alpha}\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>0.3</code>."
        },
        {
          "name": "setCharge",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.layout.ForceBasedLayout",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fCharge",
              "type": "float",
              "optional": false,
              "description": "New value for property <code>charge</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getCharge charge}.\n\nSee: {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Force-Layout.md#charge}\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>-30</code>."
        },
        {
          "name": "setFriction",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.layout.ForceBasedLayout",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fFriction",
              "type": "float",
              "optional": false,
              "description": "New value for property <code>friction</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getFriction friction}.\n\nValue in [0,1] range. See: {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Force-Layout.md#friction}\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>0.9</code>."
        },
        {
          "name": "setMaximumDuration",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.layout.ForceBasedLayout",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iMaximumDuration",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>maximumDuration</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getMaximumDuration maximumDuration}.\n\nSpecifies the maximal time in miliseconds the algorithm is allowed to run.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>1000</code>."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.networkgraph.layout.ForceDirectedLayout",
      "basename": "ForceDirectedLayout",
      "resource": "sap/suite/ui/commons/networkgraph/layout/ForceDirectedLayout.js",
      "module": "sap/suite/ui/commons/networkgraph/layout/ForceDirectedLayout",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.58",
      "extends": "sap.suite.ui.commons.networkgraph.layout.LayoutAlgorithm",
      "description": "This algorithm uses the deterministic variant of the force-directed layout algorithm {@link sap.suite.ui.commons.networkgraph.layout.ForceBasedLayout} to arrange the nodes included in the network graph. It can be useful for complex graphs, where {@link sap.suite.ui.commons.networkgraph.layout.LayeredLayout} is not sufficient.",
      "ui5-metadata": {
        "stereotype": "element",
        "properties": [
          {
            "name": "optimalDistanceConstant",
            "type": "float",
            "defaultValue": 0.2,
            "group": "Misc",
            "visibility": "public",
            "description": "The \"C\" constant from the optimal distance equation used in the Fruchterman-Reingold Algorithm. See {@link https://www.researchgate.net/publication/309193795_Force-Directed_Graph_Drawing_Algorithm}",
            "methods": [
              "getOptimalDistanceConstant",
              "setOptimalDistanceConstant"
            ]
          },
          {
            "name": "maxIterations",
            "type": "int",
            "defaultValue": 200,
            "group": "Misc",
            "visibility": "public",
            "description": "Maximum number of iterations (or cooldown steps) the layouting process will go through.",
            "methods": ["getMaxIterations", "setMaxIterations"]
          },
          {
            "name": "maxTime",
            "type": "int",
            "defaultValue": 2000,
            "group": "Misc",
            "visibility": "public",
            "description": "Maximum time in milliseconds the layouting process will run for.",
            "methods": ["getMaxTime", "setMaxTime"]
          },
          {
            "name": "initialTemperature",
            "type": "float",
            "defaultValue": 200,
            "group": "Misc",
            "visibility": "public",
            "description": "Initial 'temperature' of the system, that controls the step width of the nodes' movements and that decreases, or 'cools down', after each iteration.",
            "methods": ["getInitialTemperature", "setInitialTemperature"]
          },
          {
            "name": "coolDownStep",
            "type": "float",
            "defaultValue": 1,
            "group": "Misc",
            "visibility": "public",
            "description": "Specifies how much the 'temperature' decreases after every iteration.",
            "methods": ["getCoolDownStep", "setCoolDownStep"]
          },
          {
            "name": "staticNodes",
            "type": "string[]",
            "defaultValue": "[]",
            "group": "Misc",
            "visibility": "public",
            "description": "List of keys of nodes that should ignore cooldown iterations and keep their original positions (x and y coordinates) in the graph.",
            "methods": ["getStaticNodes", "setStaticNodes"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "description": "Constructor for a new ForceDirectedLayout.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.networkgraph.layout.ForceDirectedLayout with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.suite.ui.commons.networkgraph.layout.LayoutAlgorithm.extend}."
        },
        {
          "name": "getCoolDownStep",
          "visibility": "public",
          "returnValue": {
            "type": "float",
            "description": "Value of property <code>coolDownStep</code>"
          },
          "description": "Gets current value of property {@link #getCoolDownStep coolDownStep}.\n\nSpecifies how much the 'temperature' decreases after every iteration.\n\nDefault value is <code>1</code>."
        },
        {
          "name": "getInitialTemperature",
          "visibility": "public",
          "returnValue": {
            "type": "float",
            "description": "Value of property <code>initialTemperature</code>"
          },
          "description": "Gets current value of property {@link #getInitialTemperature initialTemperature}.\n\nInitial 'temperature' of the system, that controls the step width of the nodes' movements and that decreases, or 'cools down', after each iteration.\n\nDefault value is <code>200</code>."
        },
        {
          "name": "getLayoutRenderType",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.LayoutRenderType"
          },
          "description": "Specifies the type of layout algorithm that defines the visual features and layout of the network graph."
        },
        {
          "name": "getMaxIterations",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>maxIterations</code>"
          },
          "description": "Gets current value of property {@link #getMaxIterations maxIterations}.\n\nMaximum number of iterations (or cooldown steps) the layouting process will go through.\n\nDefault value is <code>200</code>."
        },
        {
          "name": "getMaxTime",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>maxTime</code>"
          },
          "description": "Gets current value of property {@link #getMaxTime maxTime}.\n\nMaximum time in milliseconds the layouting process will run for.\n\nDefault value is <code>2000</code>."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.networkgraph.layout.ForceDirectedLayout."
        },
        {
          "name": "getOptimalDistanceConstant",
          "visibility": "public",
          "returnValue": {
            "type": "float",
            "description": "Value of property <code>optimalDistanceConstant</code>"
          },
          "description": "Gets current value of property {@link #getOptimalDistanceConstant optimalDistanceConstant}.\n\nThe \"C\" constant from the optimal distance equation used in the Fruchterman-Reingold Algorithm. See {@link https://www.researchgate.net/publication/309193795_Force-Directed_Graph_Drawing_Algorithm}\n\nDefault value is <code>0.2</code>."
        },
        {
          "name": "getStaticNodes",
          "visibility": "public",
          "returnValue": {
            "type": "string[]",
            "description": "Value of property <code>staticNodes</code>"
          },
          "description": "Gets current value of property {@link #getStaticNodes staticNodes}.\n\nList of keys of nodes that should ignore cooldown iterations and keep their original positions (x and y coordinates) in the graph.\n\nDefault value is <code>[]</code>."
        },
        {
          "name": "isLayered",
          "visibility": "public",
          "returnValue": { "type": "boolean", "description": "Always false" },
          "description": "Specifies if this layout algorithm distributes nodes into layers. The parent graph may affect the behaviour based on this option."
        },
        {
          "name": "layout",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.layout.LayoutTask",
            "description": "Task to get the layout calculated."
          },
          "description": "Runs the layout algorithm."
        },
        {
          "name": "setCoolDownStep",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.layout.ForceDirectedLayout",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fCoolDownStep",
              "type": "float",
              "optional": false,
              "description": "New value for property <code>coolDownStep</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getCoolDownStep coolDownStep}.\n\nSpecifies how much the 'temperature' decreases after every iteration.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>1</code>."
        },
        {
          "name": "setInitialTemperature",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.layout.ForceDirectedLayout",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fInitialTemperature",
              "type": "float",
              "optional": false,
              "description": "New value for property <code>initialTemperature</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getInitialTemperature initialTemperature}.\n\nInitial 'temperature' of the system, that controls the step width of the nodes' movements and that decreases, or 'cools down', after each iteration.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>200</code>."
        },
        {
          "name": "setMaxIterations",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.layout.ForceDirectedLayout",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iMaxIterations",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>maxIterations</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getMaxIterations maxIterations}.\n\nMaximum number of iterations (or cooldown steps) the layouting process will go through.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>200</code>."
        },
        {
          "name": "setMaxTime",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.layout.ForceDirectedLayout",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iMaxTime",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>maxTime</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getMaxTime maxTime}.\n\nMaximum time in milliseconds the layouting process will run for.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>2000</code>."
        },
        {
          "name": "setOptimalDistanceConstant",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.layout.ForceDirectedLayout",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fOptimalDistanceConstant",
              "type": "float",
              "optional": false,
              "description": "New value for property <code>optimalDistanceConstant</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getOptimalDistanceConstant optimalDistanceConstant}.\n\nThe \"C\" constant from the optimal distance equation used in the Fruchterman-Reingold Algorithm. See {@link https://www.researchgate.net/publication/309193795_Force-Directed_Graph_Drawing_Algorithm}\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>0.2</code>."
        },
        {
          "name": "setStaticNodes",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.layout.ForceDirectedLayout",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sStaticNodes",
              "type": "string[]",
              "optional": false,
              "description": "New value for property <code>staticNodes</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getStaticNodes staticNodes}.\n\nList of keys of nodes that should ignore cooldown iterations and keep their original positions (x and y coordinates) in the graph.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>[]</code>."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.networkgraph.layout.LayeredLayout",
      "basename": "LayeredLayout",
      "resource": "sap/suite/ui/commons/networkgraph/layout/LayeredLayout.js",
      "module": "sap/suite/ui/commons/networkgraph/layout/LayeredLayout",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.50",
      "extends": "sap.suite.ui.commons.networkgraph.layout.LayoutAlgorithm",
      "description": "This algorithm uses the klay.js algorithm to rearrange the graph in grid form. It's suitable for process flows and tree-like graphs. It can be used for almost any graph.",
      "ui5-metadata": {
        "stereotype": "element",
        "properties": [
          {
            "name": "nodeSpacing",
            "type": "float",
            "defaultValue": 55,
            "group": "Misc",
            "visibility": "public",
            "description": "Define a minimal distance on nodes the algorithm will try to keep. The default value is 55. Note that values below 50 are incompatible with presence of groups due to insufficient space for group title bars and space between nodes and their groups' borders.",
            "methods": ["getNodeSpacing", "setNodeSpacing"]
          },
          {
            "name": "lineSpacingFactor",
            "type": "float",
            "defaultValue": 0.25,
            "group": "Misc",
            "visibility": "public",
            "methods": ["getLineSpacingFactor", "setLineSpacingFactor"]
          },
          {
            "name": "nodePlacement",
            "type": "sap.suite.ui.commons.networkgraph.NodePlacement",
            "defaultValue": "BrandesKoepf",
            "group": "Misc",
            "visibility": "public",
            "description": "A node placement strategy to use (see {@link sap.suite.ui.commons.networkgraph.NodePlacement}).",
            "methods": ["getNodePlacement", "setNodePlacement"]
          },
          {
            "name": "mergeEdges",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "description": "Determines if all lines should lead to the same place in the node, or if each line should point to a different place.",
            "methods": ["getMergeEdges", "setMergeEdges"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "description": "Constructor for a new LayeredLayout.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.networkgraph.layout.LayeredLayout with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.suite.ui.commons.networkgraph.layout.LayoutAlgorithm.extend}."
        },
        {
          "name": "getLayoutRenderType",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.LayoutRenderType"
          },
          "description": "Specifies the type of layout algorithm that defines the visual features and layout of the network graph."
        },
        {
          "name": "getLineSpacingFactor",
          "visibility": "public",
          "returnValue": {
            "type": "float",
            "description": "Value of property <code>lineSpacingFactor</code>"
          },
          "description": "Gets current value of property {@link #getLineSpacingFactor lineSpacingFactor}.\n\nDefault value is <code>0.25</code>."
        },
        {
          "name": "getMergeEdges",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>mergeEdges</code>"
          },
          "description": "Gets current value of property {@link #getMergeEdges mergeEdges}.\n\nDetermines if all lines should lead to the same place in the node, or if each line should point to a different place.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.networkgraph.layout.LayeredLayout."
        },
        {
          "name": "getNodePlacement",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.NodePlacement",
            "description": "Value of property <code>nodePlacement</code>"
          },
          "description": "Gets current value of property {@link #getNodePlacement nodePlacement}.\n\nA node placement strategy to use (see {@link sap.suite.ui.commons.networkgraph.NodePlacement}).\n\nDefault value is <code>BrandesKoepf</code>."
        },
        {
          "name": "getNodeSpacing",
          "visibility": "public",
          "returnValue": {
            "type": "float",
            "description": "Value of property <code>nodeSpacing</code>"
          },
          "description": "Gets current value of property {@link #getNodeSpacing nodeSpacing}.\n\nDefine a minimal distance on nodes the algorithm will try to keep. The default value is 55. Note that values below 50 are incompatible with presence of groups due to insufficient space for group title bars and space between nodes and their groups' borders.\n\nDefault value is <code>55</code>."
        },
        {
          "name": "layout",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.layout.LayoutTask",
            "description": "Task to get the layout calculated."
          },
          "description": "Executes the layout algorithm."
        },
        {
          "name": "setLineSpacingFactor",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.layout.LayeredLayout",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fLineSpacingFactor",
              "type": "float",
              "optional": false,
              "description": "New value for property <code>lineSpacingFactor</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getLineSpacingFactor lineSpacingFactor}.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>0.25</code>."
        },
        {
          "name": "setMergeEdges",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.layout.LayeredLayout",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bMergeEdges",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>mergeEdges</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getMergeEdges mergeEdges}.\n\nDetermines if all lines should lead to the same place in the node, or if each line should point to a different place.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setNodePlacement",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.layout.LayeredLayout",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sNodePlacement",
              "type": "sap.suite.ui.commons.networkgraph.NodePlacement",
              "optional": false,
              "description": "New value for property <code>nodePlacement</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getNodePlacement nodePlacement}.\n\nA node placement strategy to use (see {@link sap.suite.ui.commons.networkgraph.NodePlacement}).\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>BrandesKoepf</code>."
        },
        {
          "name": "setNodeSpacing",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.layout.LayeredLayout",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fNodeSpacing",
              "type": "float",
              "optional": false,
              "description": "New value for property <code>nodeSpacing</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getNodeSpacing nodeSpacing}.\n\nDefine a minimal distance on nodes the algorithm will try to keep. The default value is 55. Note that values below 50 are incompatible with presence of groups due to insufficient space for group title bars and space between nodes and their groups' borders.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>55</code>."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.networkgraph.layout.LayoutAlgorithm",
      "basename": "LayoutAlgorithm",
      "resource": "sap/suite/ui/commons/networkgraph/layout/LayoutAlgorithm.js",
      "module": "sap/suite/ui/commons/networkgraph/layout/LayoutAlgorithm",
      "export": "",
      "abstract": true,
      "static": true,
      "visibility": "public",
      "since": "1.50",
      "extends": "sap.ui.core.Element",
      "description": "This is an abstract base class for Layout Algorithms.",
      "ui5-metadata": { "stereotype": "element" },
      "constructor": {
        "visibility": "public",
        "description": "Constructor for a new LayoutingAlgorithm.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element} can be used."
      },
      "methods": [
        { "name": "_alignCoordinatesWithView", "visibility": "protected" },
        {
          "name": "_hasHierarchicalGroups",
          "visibility": "protected",
          "returnValue": {
            "type": "boolean",
            "description": "True if there are hierarchical groups, false otherwise."
          }
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.networkgraph.layout.LayoutAlgorithm with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.networkgraph.layout.LayoutAlgorithm."
        },
        {
          "name": "getType",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.LayoutType"
          },
          "description": "Specifies the type of layout algorithm that defines the visual features and layout of the network graph."
        },
        {
          "name": "isLayered",
          "visibility": "public",
          "returnValue": { "type": "boolean" },
          "description": "Specifies if this layouting algorithm distributes nodes into layers. Parent graph may change behaviour based on this option."
        },
        {
          "name": "layout",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.layout.LayoutTask"
          },
          "description": "Executes the layouting algorithm."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.networkgraph.layout.LayoutTask",
      "basename": "LayoutTask",
      "resource": "sap/suite/ui/commons/networkgraph/layout/LayoutTask.js",
      "module": "sap/suite/ui/commons/networkgraph/layout/LayoutTask",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.50",
      "extends": "sap.ui.base.Object",
      "description": "A layout task is a wrapper around Promise which allows the caller to terminate the task. A terminated layout task should not modify the graph associated with it.",
      "ui5-metadata": { "stereotype": "object" },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "fnPromiseCallback",
            "type": "function",
            "optional": false,
            "description": "A function to be called from Promise main body. It gets"
          }
        ],
        "description": "Constructor for a new LayoutTask."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.networkgraph.layout.LayoutTask with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.networkgraph.layout.LayoutTask."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.networkgraph.layout.NoopLayout",
      "basename": "NoopLayout",
      "resource": "sap/suite/ui/commons/networkgraph/layout/NoopLayout.js",
      "module": "sap/suite/ui/commons/networkgraph/layout/NoopLayout",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.50",
      "extends": "sap.suite.ui.commons.networkgraph.layout.LayoutAlgorithm",
      "description": "This is a simple layout algorithm that expects the positions of nodes to be already present. It only creates line coordinates (see {@link sap.suite.ui.commons.networkgraph.Line#setCoordinates}).",
      "ui5-metadata": { "stereotype": "element" },
      "constructor": {
        "visibility": "public",
        "description": "Constructor for a new NoopLayout."
      },
      "methods": [
        {
          "name": "getLayoutRenderType",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.LayoutRenderType"
          },
          "description": "Specifies the type of layout algorithm that defines the visual features and layout of the network graph."
        },
        {
          "name": "layout",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.layout.LayoutTask",
            "description": "Task to get the layout calculated."
          },
          "description": "Executes the layout algorithm."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.networkgraph.layout.SwimLaneChainLayout",
      "basename": "SwimLaneChainLayout",
      "resource": "sap/suite/ui/commons/networkgraph/layout/SwimLaneChainLayout.js",
      "module": "sap/suite/ui/commons/networkgraph/layout/SwimLaneChainLayout",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.58",
      "extends": "sap.suite.ui.commons.networkgraph.layout.LayoutAlgorithm",
      "description": "This algorithm uses the klay.js algorithm to rearrange the graph in grid form. It's suitable for process flows and tree-like graphs. It can be used for almost any graph.",
      "ui5-metadata": { "stereotype": "element" },
      "constructor": {
        "visibility": "public",
        "description": "Constructor for a new SwimLaneChainLayout."
      },
      "methods": [
        {
          "name": "_alignCoordinatesWithView",
          "visibility": "protected",
          "description": "In this override of the generic method for all layouts we want to avoid global margin."
        },
        {
          "name": "getLayoutRenderType",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.LayoutRenderType"
          },
          "description": "Specifies the type of layout algorithm that defines the visual features and layout of the network graph."
        },
        {
          "name": "layout",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.layout.LayoutTask",
            "description": "Task to get the layout calculated."
          },
          "description": "Executes the layout algorithm."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.networkgraph.layout.TwoColumnsLayout",
      "basename": "TwoColumnsLayout",
      "resource": "sap/suite/ui/commons/networkgraph/layout/TwoColumnsLayout.js",
      "module": "sap/suite/ui/commons/networkgraph/layout/TwoColumnsLayout",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.63",
      "extends": "sap.suite.ui.commons.networkgraph.layout.LayoutAlgorithm",
      "description": "This algorithm rearranges the graph into two columns.",
      "ui5-metadata": { "stereotype": "element" },
      "constructor": {
        "visibility": "public",
        "description": "Constructor for a new TwoColumnsLayout."
      },
      "methods": [
        {
          "name": "getLayoutRenderType",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.LayoutRenderType"
          },
          "description": "Specifies the type of layout algorithm that defines the visual features and layout of the network graph."
        },
        {
          "name": "layout",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.layout.LayoutTask",
            "description": "Task to get the layout calculated."
          },
          "description": "Executes the layout algorithm."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.suite.ui.commons.networkgraph.LayoutRenderType",
      "basename": "LayoutRenderType",
      "resource": "sap/suite/ui/commons/library.js",
      "module": "sap/suite/ui/commons/library",
      "export": "networkgraph.LayoutRenderType",
      "static": true,
      "visibility": "public",
      "description": "Types of layout algorithms that define the visual features and layout of the network graph.",
      "properties": [
        {
          "name": "Forces",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Algorithm that arranges the nodes freely in a force-directed manner, based on the attractive and repulsive forces within the graph.<br> This layout algorithm ignores node groups, so all nodes appear as standalone nodes not grouped in any way."
        },
        {
          "name": "LayeredWithGroups",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Algorithm that arranges nodes into layers and ensures support for free-form groups."
        },
        {
          "name": "SwimLanes",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Algorithm that arranges nodes into swim lanes, which are single-layer groups."
        },
        {
          "name": "TwoColumns",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Algorithm that supports nested groups, similar to <code>SwimLanes</code>, but arranges them into two columns only: one on the left and one on the right."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.networkgraph.Line",
      "basename": "Line",
      "resource": "sap/suite/ui/commons/networkgraph/Line.js",
      "module": "sap/suite/ui/commons/networkgraph/Line",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.50",
      "extends": "sap.suite.ui.commons.networkgraph.ElementBase",
      "description": "Holds information about one connector line.",
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "selected",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "description": "Shows if the line is selected. Once the line is selected, its appearance changes slightly to distinguish it from other lines.",
            "methods": ["getSelected", "setSelected"]
          },
          {
            "name": "from",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Key of the node where the line begins.",
            "methods": ["getFrom", "setFrom"]
          },
          {
            "name": "to",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Key of the node the line leads to.",
            "methods": ["getTo", "setTo"]
          },
          {
            "name": "lineType",
            "type": "sap.suite.ui.commons.networkgraph.LineType",
            "defaultValue": "Solid",
            "group": "Appearance",
            "visibility": "public",
            "description": "Defines the appearance of the line. Can be set to solid, dashed, or dotted.",
            "methods": ["getLineType", "setLineType"]
          },
          {
            "name": "arrowPosition",
            "type": "sap.suite.ui.commons.networkgraph.LineArrowPosition",
            "defaultValue": "End",
            "group": "Appearance",
            "visibility": "public",
            "description": "Position of the arrow on the line. Can be set to End, Middle, or Start.",
            "methods": ["getArrowPosition", "setArrowPosition"]
          },
          {
            "name": "arrowOrientation",
            "type": "sap.suite.ui.commons.networkgraph.LineArrowOrientation",
            "defaultValue": "ParentOf",
            "group": "Appearance",
            "visibility": "public",
            "description": "Orientation of the line that defines the direction of the arrow.",
            "methods": ["getArrowOrientation", "setArrowOrientation"]
          },
          {
            "name": "stretchToCenter",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "description": "Extends the line up to the node's horizontal or vertical axis to ensure that it meets the shape's outline even when a fancy shape is used.<br> Available for custom nodes only.",
            "methods": ["getStretchToCenter", "setStretchToCenter"]
          }
        ],
        "aggregations": [
          {
            "name": "coordinates",
            "singularName": "coordinate",
            "type": "sap.suite.ui.commons.networkgraph.Coordinate",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "A list of points the line goes through. After the layouting algorithm has finished arranging the graph, this aggregation contains the coordinates of at least two points: the starting point and the end point of the line. The rest of the points making up the line are treated as break points.",
            "methods": [
              "getCoordinates",
              "destroyCoordinates",
              "insertCoordinate",
              "addCoordinate",
              "removeCoordinate",
              "indexOfCoordinate",
              "removeAllCoordinates"
            ]
          },
          {
            "name": "actionButtons",
            "singularName": "actionButton",
            "type": "sap.suite.ui.commons.networkgraph.ActionButton",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "A list of custom action buttons.",
            "methods": [
              "getActionButtons",
              "destroyActionButtons",
              "insertActionButton",
              "addActionButton",
              "removeActionButton",
              "indexOfActionButton",
              "removeAllActionButtons"
            ]
          }
        ],
        "events": [
          {
            "name": "hover",
            "visibility": "public",
            "description": "This event is fired when the user moves the mouse pointer over the line.",
            "methods": ["attachHover", "detachHover", "fireHover"]
          },
          {
            "name": "press",
            "visibility": "public",
            "description": "This event is fired when the user clicks or taps the line.",
            "parameters": {
              "point": {
                "name": "point",
                "type": "Object",
                "description": "Coordinates of the cursor when pressed."
              },
              "opener": {
                "name": "opener",
                "type": "Object",
                "description": "Object you can pass to 'openBy' method for custom tooltip. Its important for lines where you want to display tooltip precisely where the cursor is."
              }
            },
            "methods": ["attachPress", "detachPress", "firePress"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "description": "Constructor for a new Line.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "hover",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "This event is fired when the user moves the mouse pointer over the line."
        },
        {
          "name": "press",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "point": {
                      "name": "point",
                      "type": "Object",
                      "optional": false,
                      "description": "Coordinates of the cursor when pressed."
                    },
                    "opener": {
                      "name": "opener",
                      "type": "Object",
                      "optional": false,
                      "description": "Object you can pass to 'openBy' method for custom tooltip. Its important for lines where you want to display tooltip precisely where the cursor is."
                    }
                  }
                }
              }
            }
          ],
          "description": "This event is fired when the user clicks or taps the line."
        }
      ],
      "methods": [
        {
          "name": "addActionButton",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Line",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oActionButton",
              "type": "sap.suite.ui.commons.networkgraph.ActionButton",
              "optional": false,
              "description": "The actionButton to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some actionButton to the aggregation {@link #getActionButtons actionButtons}."
        },
        {
          "name": "addBend",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Coordinate",
            "description": "Newly added coordinates object"
          },
          "parameters": [
            {
              "name": "oPoint",
              "type": "Object",
              "optional": false,
              "description": "X and Y coordinates"
            }
          ],
          "description": "Adds coordinates for points that should define the shape of the line between its start and end points. This method doesn't call invalidate on the object."
        },
        {
          "name": "addCoordinate",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Line",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oCoordinate",
              "type": "sap.suite.ui.commons.networkgraph.Coordinate",
              "optional": false,
              "description": "The coordinate to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some coordinate to the aggregation {@link #getCoordinates coordinates}."
        },
        {
          "name": "attachHover",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Line",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.networkgraph.Line</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:hover hover} event of this <code>sap.suite.ui.commons.networkgraph.Line</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.networkgraph.Line</code> itself.\n\nThis event is fired when the user moves the mouse pointer over the line."
        },
        {
          "name": "attachPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Line",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.networkgraph.Line</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:press press} event of this <code>sap.suite.ui.commons.networkgraph.Line</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.networkgraph.Line</code> itself.\n\nThis event is fired when the user clicks or taps the line."
        },
        {
          "name": "clearBends",
          "visibility": "public",
          "description": "Removes all points that define the shape of the line between its start and end points. This method doesn't call invalidate on the object."
        },
        {
          "name": "destroyActionButtons",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Line",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the actionButtons in the aggregation {@link #getActionButtons actionButtons}."
        },
        {
          "name": "destroyCoordinates",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Line",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the coordinates in the aggregation {@link #getCoordinates coordinates}."
        },
        {
          "name": "detachHover",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Line",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:hover hover} event of this <code>sap.suite.ui.commons.networkgraph.Line</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Line",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:press press} event of this <code>sap.suite.ui.commons.networkgraph.Line</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.networkgraph.Line with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.suite.ui.commons.networkgraph.ElementBase.extend}."
        },
        {
          "name": "fireHover",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Line",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:hover hover} to attached listeners."
        },
        {
          "name": "firePress",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Line",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "point": {
                  "name": "point",
                  "type": "Object",
                  "optional": true,
                  "description": "Coordinates of the cursor when pressed."
                },
                "opener": {
                  "name": "opener",
                  "type": "Object",
                  "optional": true,
                  "description": "Object you can pass to 'openBy' method for custom tooltip. Its important for lines where you want to display tooltip precisely where the cursor is."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:press press} to attached listeners."
        },
        {
          "name": "getActionButtons",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.ActionButton[]"
          },
          "description": "Gets content of aggregation {@link #getActionButtons actionButtons}.\n\nA list of custom action buttons."
        },
        {
          "name": "getArrowOrientation",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.LineArrowOrientation",
            "description": "Value of property <code>arrowOrientation</code>"
          },
          "description": "Gets current value of property {@link #getArrowOrientation arrowOrientation}.\n\nOrientation of the line that defines the direction of the arrow.\n\nDefault value is <code>ParentOf</code>."
        },
        {
          "name": "getArrowPosition",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.LineArrowPosition",
            "description": "Value of property <code>arrowPosition</code>"
          },
          "description": "Gets current value of property {@link #getArrowPosition arrowPosition}.\n\nPosition of the arrow on the line. Can be set to End, Middle, or Start.\n\nDefault value is <code>End</code>."
        },
        {
          "name": "getBends",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Coordinate[]",
            "description": "Coordinates of the points shaping the line"
          },
          "description": "Returns the coordinates of all points that define the shape of the line between its start and end points. This method doesn't call invalidate on the object."
        },
        {
          "name": "getCoordinates",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Coordinate[]"
          },
          "description": "Gets content of aggregation {@link #getCoordinates coordinates}.\n\nA list of points the line goes through. After the layouting algorithm has finished arranging the graph, this aggregation contains the coordinates of at least two points: the starting point and the end point of the line. The rest of the points making up the line are treated as break points."
        },
        {
          "name": "getFrom",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>from</code>"
          },
          "description": "Gets current value of property {@link #getFrom from}.\n\nKey of the node where the line begins."
        },
        {
          "name": "getFromNode",
          "visibility": "public",
          "returnValue": {
            "type": "object",
            "description": "Node instance where the line starts"
          },
          "description": "Returns the node instance where the line starts. This method doesn't call invalidate on the object."
        },
        {
          "name": "getLineType",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.LineType",
            "description": "Value of property <code>lineType</code>"
          },
          "description": "Gets current value of property {@link #getLineType lineType}.\n\nDefines the appearance of the line. Can be set to solid, dashed, or dotted.\n\nDefault value is <code>Solid</code>."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.networkgraph.Line."
        },
        {
          "name": "getSelected",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>selected</code>"
          },
          "description": "Gets current value of property {@link #getSelected selected}.\n\nShows if the line is selected. Once the line is selected, its appearance changes slightly to distinguish it from other lines.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getSource",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Coordinate",
            "description": "Coordinate object"
          },
          "description": "Returns the coordinates of the line's starting point. This method doesn't call invalidate on the object."
        },
        {
          "name": "getStretchToCenter",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>stretchToCenter</code>"
          },
          "description": "Gets current value of property {@link #getStretchToCenter stretchToCenter}.\n\nExtends the line up to the node's horizontal or vertical axis to ensure that it meets the shape's outline even when a fancy shape is used.<br> Available for custom nodes only.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getTarget",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Coordinate",
            "description": "Coordinate object"
          },
          "description": "Returns the coordinates of the line's end point. This method doesn't call invalidate on the object."
        },
        {
          "name": "getTo",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>to</code>"
          },
          "description": "Gets current value of property {@link #getTo to}.\n\nKey of the node the line leads to."
        },
        {
          "name": "getToNode",
          "visibility": "public",
          "returnValue": {
            "type": "object",
            "description": "Node instance where the line ends"
          },
          "description": "Returns the node instance where the line leads to. This method doesn't call invalidate on the object."
        },
        {
          "name": "indexOfActionButton",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oActionButton",
              "type": "sap.suite.ui.commons.networkgraph.ActionButton",
              "optional": false,
              "description": "The actionButton whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.suite.ui.commons.networkgraph.ActionButton</code> in the aggregation {@link #getActionButtons actionButtons}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "indexOfCoordinate",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oCoordinate",
              "type": "sap.suite.ui.commons.networkgraph.Coordinate",
              "optional": false,
              "description": "The coordinate whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.suite.ui.commons.networkgraph.Coordinate</code> in the aggregation {@link #getCoordinates coordinates}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "insertActionButton",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Line",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oActionButton",
              "type": "sap.suite.ui.commons.networkgraph.ActionButton",
              "optional": false,
              "description": "The actionButton to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the actionButton should be inserted at; for a negative value of <code>iIndex</code>, the actionButton is inserted at position 0; for a value greater than the current size of the aggregation, the actionButton is inserted at the last position"
            }
          ],
          "description": "Inserts a actionButton into the aggregation {@link #getActionButtons actionButtons}."
        },
        {
          "name": "insertCoordinate",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Line",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oCoordinate",
              "type": "sap.suite.ui.commons.networkgraph.Coordinate",
              "optional": false,
              "description": "The coordinate to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the coordinate should be inserted at; for a negative value of <code>iIndex</code>, the coordinate is inserted at position 0; for a value greater than the current size of the aggregation, the coordinate is inserted at the last position"
            }
          ],
          "description": "Inserts a coordinate into the aggregation {@link #getCoordinates coordinates}."
        },
        {
          "name": "removeActionButton",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.ActionButton",
            "description": "The removed actionButton or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vActionButton",
              "type": "int|string|sap.suite.ui.commons.networkgraph.ActionButton",
              "optional": false,
              "description": "The actionButton to remove or its index or id"
            }
          ],
          "description": "Removes a actionButton from the aggregation {@link #getActionButtons actionButtons}."
        },
        {
          "name": "removeAllActionButtons",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.ActionButton[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getActionButtons actionButtons}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeAllCoordinates",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Coordinate[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getCoordinates coordinates}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeCoordinate",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Coordinate",
            "description": "The removed coordinate or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vCoordinate",
              "type": "int|string|sap.suite.ui.commons.networkgraph.Coordinate",
              "optional": false,
              "description": "The coordinate to remove or its index or id"
            }
          ],
          "description": "Removes a coordinate from the aggregation {@link #getCoordinates coordinates}."
        },
        {
          "name": "setArrowOrientation",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Line",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sArrowOrientation",
              "type": "sap.suite.ui.commons.networkgraph.LineArrowOrientation",
              "optional": false,
              "description": "New value for property <code>arrowOrientation</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getArrowOrientation arrowOrientation}.\n\nOrientation of the line that defines the direction of the arrow.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>ParentOf</code>."
        },
        {
          "name": "setArrowPosition",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Line",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sArrowPosition",
              "type": "sap.suite.ui.commons.networkgraph.LineArrowPosition",
              "optional": false,
              "description": "New value for property <code>arrowPosition</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getArrowPosition arrowPosition}.\n\nPosition of the arrow on the line. Can be set to End, Middle, or Start.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>End</code>."
        },
        {
          "name": "setFrom",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Line",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sFrom",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>from</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getFrom from}.\n\nKey of the node where the line begins.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setHidden",
          "visibility": "public",
          "description": "Hides the line."
        },
        {
          "name": "setLineType",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Line",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sLineType",
              "type": "sap.suite.ui.commons.networkgraph.LineType",
              "optional": false,
              "description": "New value for property <code>lineType</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getLineType lineType}.\n\nDefines the appearance of the line. Can be set to solid, dashed, or dotted.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Solid</code>."
        },
        {
          "name": "setSelected",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Line",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bSelected",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>selected</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSelected selected}.\n\nShows if the line is selected. Once the line is selected, its appearance changes slightly to distinguish it from other lines.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setSource",
          "visibility": "public",
          "parameters": [
            {
              "name": "mArguments",
              "type": "object",
              "optional": false,
              "description": "mArguments.x mArguments.y X and Y coordinates of the starting point"
            }
          ],
          "description": "Sets the starting point, or the source, for the line. This method doesn't call invalidate on the object."
        },
        {
          "name": "setStretchToCenter",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Line",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bStretchToCenter",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>stretchToCenter</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getStretchToCenter stretchToCenter}.\n\nExtends the line up to the node's horizontal or vertical axis to ensure that it meets the shape's outline even when a fancy shape is used.<br> Available for custom nodes only.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setTarget",
          "visibility": "public",
          "parameters": [
            {
              "name": "mArguments",
              "type": "object",
              "optional": false,
              "description": "mArguments.x mArguments.y X and Y coordinates of the end point"
            }
          ],
          "description": "Sets the end point, or the target, for the line. This method doesn't call invalidate on the object."
        },
        {
          "name": "setTo",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Line",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sTo",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>to</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getTo to}.\n\nKey of the node the line leads to.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.suite.ui.commons.networkgraph.LineArrowOrientation",
      "basename": "LineArrowOrientation",
      "resource": "sap/suite/ui/commons/library.js",
      "module": "sap/suite/ui/commons/library",
      "export": "networkgraph.LineArrowOrientation",
      "static": true,
      "visibility": "public",
      "description": "Direction of the arrow on the connector line.",
      "properties": [
        {
          "name": "Both",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The arrows on the line point both ways."
        },
        {
          "name": "ChildOf",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The arrow points from child to parent."
        },
        {
          "name": "None",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The arrow is hidden."
        },
        {
          "name": "ParentOf",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The arrow points from parent to child."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.suite.ui.commons.networkgraph.LineArrowPosition",
      "basename": "LineArrowPosition",
      "resource": "sap/suite/ui/commons/library.js",
      "module": "sap/suite/ui/commons/library",
      "export": "networkgraph.LineArrowPosition",
      "static": true,
      "visibility": "public",
      "description": "Position of the arrow on a connector line.",
      "properties": [
        {
          "name": "End",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The arrow is placed at the end of the last line segment."
        },
        {
          "name": "Middle",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The arrow is placed in the middle of the last line segment. If the line has only one segment, the arrow appears in the middle of the line."
        },
        {
          "name": "Start",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The arrow is placed at the beginning of the first line segment."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.suite.ui.commons.networkgraph.LineType",
      "basename": "LineType",
      "resource": "sap/suite/ui/commons/library.js",
      "module": "sap/suite/ui/commons/library",
      "export": "networkgraph.LineType",
      "static": true,
      "visibility": "public",
      "description": "Type of connector line used in the network graph.",
      "properties": [
        {
          "name": "Dashed",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Dashed connector line."
        },
        {
          "name": "Dotted",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Dotted connector line."
        },
        {
          "name": "Solid",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Solid connector line."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.networkgraph.Node",
      "basename": "Node",
      "resource": "sap/suite/ui/commons/networkgraph/Node.js",
      "module": "sap/suite/ui/commons/networkgraph/Node",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.50",
      "extends": "sap.suite.ui.commons.networkgraph.ElementBase",
      "description": "Holds information about one node. When changing the size of the node after the graph is rendered, you have to manually invalidate the graph, which causes the layout algorithm to be applied again.",
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "headerCheckBoxState",
            "type": "sap.suite.ui.commons.networkgraph.HeaderCheckboxState",
            "defaultValue": "Hidden",
            "group": "Misc",
            "visibility": "public",
            "description": "Defines if the Header checkbox should be displayed and whether it should be selected or not. By default, the checkbox is hidden. Available only for box nodes.",
            "methods": ["getHeaderCheckBoxState", "setHeaderCheckBoxState"]
          },
          {
            "name": "collapsed",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "description": "Defines if the subtree of this node is collapsed. By default, it is expanded.",
            "methods": ["getCollapsed", "setCollapsed"]
          },
          {
            "name": "selected",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "description": "Shows if the node is selected. Once the node is selected, its appearance changes slightly to distinguish it from other nodes.",
            "methods": ["getSelected", "setSelected"]
          },
          {
            "name": "group",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Key of the group where this node is included.",
            "methods": ["getGroup", "setGroup"]
          },
          {
            "name": "key",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Key of the node. This key is used throughout the DOM to reference this node, mainly in the connector line (Line) elements of the graph.",
            "methods": ["getKey", "setKey"]
          },
          {
            "name": "shape",
            "type": "sap.suite.ui.commons.networkgraph.NodeShape",
            "defaultValue": "Circle",
            "group": "Misc",
            "visibility": "public",
            "description": "Shape of the node. The shape is round by default. To create a rectangular node, set this property to Box.",
            "methods": ["getShape", "setShape"]
          },
          {
            "name": "icon",
            "type": "string",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "description": "An icon associated with the element.",
            "methods": ["getIcon", "setIcon"]
          },
          {
            "name": "statusIcon",
            "type": "string",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "description": "An additional status icon displayed when the node is collapsed.",
            "methods": ["getStatusIcon", "setStatusIcon"]
          },
          {
            "name": "width",
            "type": "int",
            "group": "Misc",
            "visibility": "public",
            "description": "Width of the node. If the width is not defined, the node expands, so it can fit the content.",
            "methods": ["getWidth", "setWidth"]
          },
          {
            "name": "height",
            "type": "int",
            "group": "Misc",
            "visibility": "public",
            "description": "Height of the node. In circular nodes, it determines the circle diameter.",
            "methods": ["getHeight", "setHeight"]
          },
          {
            "name": "maxWidth",
            "type": "int",
            "group": "Misc",
            "visibility": "public",
            "description": "Maximum width allowed. The auto grow algorithm stops increasing the width at this value.",
            "methods": ["getMaxWidth", "setMaxWidth"]
          },
          {
            "name": "x",
            "type": "float",
            "defaultValue": 0,
            "group": "Misc",
            "visibility": "public",
            "description": "The x coordinate of the node. This value must be set after the layout algorithm has finished arranging the graph. It may come from the input data but is not required for most layout algorithms. <br>Works only for <code>CustomLayout</code> or <code>NoopLayout</code> layout algorithms. Other layout algorithms override this property. However, you can still change it using an <code>afterLayouting</code> event.",
            "methods": ["getX", "setX"]
          },
          {
            "name": "y",
            "type": "float",
            "defaultValue": 0,
            "group": "Misc",
            "visibility": "public",
            "description": "The y coordinate of the node. This value must be set after the layout algorithm has finished arranging the graph. It may come from the input data but is not required for most layout algorithms. <br>Works only for <code>CustomLayout</code> or <code>NoopLayout</code> layout algorithms. Other layout algorithms override this property. However, you can still change it using an <code>afterLayouting</code> event.",
            "methods": ["getY", "setY"]
          },
          {
            "name": "showExpandButton",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "description": "Determines if the expand button is visible.",
            "methods": ["getShowExpandButton", "setShowExpandButton"]
          },
          {
            "name": "showActionLinksButton",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "description": "Determines if the links button is visible.",
            "methods": ["getShowActionLinksButton", "setShowActionLinksButton"]
          },
          {
            "name": "showDetailButton",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "description": "Determines if the details button is visible.",
            "methods": ["getShowDetailButton", "setShowDetailButton"]
          },
          {
            "name": "titleLineSize",
            "type": "int",
            "defaultValue": 1,
            "group": "Misc",
            "visibility": "public",
            "description": "Determines the maximum number of lines allowed for the node's label. If set to 0, the label may have an unlimited number of lines.",
            "methods": ["getTitleLineSize", "setTitleLineSize"]
          },
          {
            "name": "descriptionLineSize",
            "type": "int",
            "defaultValue": -1,
            "group": "Misc",
            "visibility": "public",
            "description": "Determines the maximum number of lines allowed to be displayed in the node's description. If you want to hide the description, set this property to <code>-1</code> (default). To display an unlimited number of lines, set this property to <code>0</code>. This property does not affect the description that appears in the tooltip, which is always fully rendered.",
            "methods": ["getDescriptionLineSize", "setDescriptionLineSize"]
          },
          {
            "name": "iconSize",
            "type": "int",
            "group": "Appearance",
            "visibility": "public",
            "description": "Determines the size of the node's icon. This property can be applied only to circular nodes.",
            "methods": ["getIconSize", "setIconSize"]
          },
          {
            "name": "coreNodeSize",
            "type": "int",
            "defaultValue": 0,
            "group": "Appearance",
            "visibility": "public",
            "description": "Determines the size of a custom node, which can be useful for nodes that have text or other content outside of its shape.<br>This property is available for custom nodes only.",
            "methods": ["getCoreNodeSize", "setCoreNodeSize"]
          },
          {
            "name": "visible",
            "type": "boolean",
            "defaultValue": true,
            "group": "Appearance",
            "visibility": "public",
            "description": "Whether the control should be visible on the screen. Node is still used for layouter.",
            "methods": ["getVisible", "setVisible"]
          }
        ],
        "aggregations": [
          {
            "name": "actionLinks",
            "singularName": "actionLink",
            "type": "sap.ui.core.Control",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "A list of links to be shown in the links area. A link may point to any UI5 control. It's up to the caller to set up all necessary callback functions.",
            "methods": [
              "getActionLinks",
              "destroyActionLinks",
              "insertActionLink",
              "addActionLink",
              "removeActionLink",
              "indexOfActionLink",
              "removeAllActionLinks"
            ]
          },
          {
            "name": "actionButtons",
            "singularName": "actionButton",
            "type": "sap.suite.ui.commons.networkgraph.ActionButton",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "A list of custom action buttons. These buttons are displayed in the button area for each node. A node may have up to 4 buttons. The default 3 buttons (collapse/expand, details, and links) have priority over any other custom buttons that you add. If you want all 4 of your custom buttons to be displayed, set the visibility of the default buttons to false.",
            "methods": [
              "getActionButtons",
              "destroyActionButtons",
              "insertActionButton",
              "addActionButton",
              "removeActionButton",
              "indexOfActionButton",
              "removeAllActionButtons"
            ]
          },
          {
            "name": "image",
            "singularName": "nodeImage",
            "type": "sap.suite.ui.commons.networkgraph.NodeImage",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "The image that is displayed in the node's header instead of the icon.",
            "methods": ["getImage", "destroyImage", "setImage"]
          },
          {
            "name": "content",
            "singularName": "content",
            "type": "sap.ui.core.Control",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "Custom content rendered with the node. Available only for rectangular nodes with HTML rendering type. When this aggregation is used, the description and attributes of {@link sap.suite.ui.commons.networkgraph.ElementBase} are ignored.",
            "methods": ["getContent", "destroyContent", "setContent"]
          },
          {
            "name": "_checkBox",
            "singularName": "_checkBox",
            "type": "sap.m.CheckBox",
            "cardinality": "0..1",
            "visibility": "hidden",
            "description": "Internal aggregation for the Header checkbox.",
            "methods": ["get_checkBox", "destroy_checkBox", "set_checkBox"]
          }
        ],
        "events": [
          {
            "name": "headerCheckBoxPress",
            "visibility": "public",
            "description": "This event is fired when the user selects or clears the Header checkbox.",
            "parameters": {
              "checked": {
                "name": "checked",
                "type": "boolean",
                "description": "Indicates whether checkbox is selected."
              }
            },
            "methods": [
              "attachHeaderCheckBoxPress",
              "detachHeaderCheckBoxPress",
              "fireHeaderCheckBoxPress"
            ]
          },
          {
            "name": "press",
            "visibility": "public",
            "description": "This event is fired when the user clicks or taps the node.",
            "methods": ["attachPress", "detachPress", "firePress"]
          },
          {
            "name": "hover",
            "visibility": "public",
            "description": "This event is fired when the user moves the mouse pointer over the node.",
            "methods": ["attachHover", "detachHover", "fireHover"]
          },
          {
            "name": "collapseExpand",
            "visibility": "public",
            "description": "This event is fired when the user clicks the node's collapse/expand button.",
            "methods": [
              "attachCollapseExpand",
              "detachCollapseExpand",
              "fireCollapseExpand"
            ]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "description": "Constructor for a new Node.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "collapseExpand",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "This event is fired when the user clicks the node's collapse/expand button."
        },
        {
          "name": "headerCheckBoxPress",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "checked": {
                      "name": "checked",
                      "type": "boolean",
                      "optional": false,
                      "description": "Indicates whether checkbox is selected."
                    }
                  }
                }
              }
            }
          ],
          "description": "This event is fired when the user selects or clears the Header checkbox."
        },
        {
          "name": "hover",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "This event is fired when the user moves the mouse pointer over the node."
        },
        {
          "name": "press",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "This event is fired when the user clicks or taps the node."
        }
      ],
      "methods": [
        {
          "name": "addActionButton",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Node",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oActionButton",
              "type": "sap.suite.ui.commons.networkgraph.ActionButton",
              "optional": false,
              "description": "The actionButton to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some actionButton to the aggregation {@link #getActionButtons actionButtons}."
        },
        {
          "name": "addActionLink",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Node",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oActionLink",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The actionLink to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some actionLink to the aggregation {@link #getActionLinks actionLinks}."
        },
        {
          "name": "attachCollapseExpand",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Node",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.networkgraph.Node</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:collapseExpand collapseExpand} event of this <code>sap.suite.ui.commons.networkgraph.Node</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.networkgraph.Node</code> itself.\n\nThis event is fired when the user clicks the node's collapse/expand button."
        },
        {
          "name": "attachHeaderCheckBoxPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Node",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.networkgraph.Node</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:headerCheckBoxPress headerCheckBoxPress} event of this <code>sap.suite.ui.commons.networkgraph.Node</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.networkgraph.Node</code> itself.\n\nThis event is fired when the user selects or clears the Header checkbox."
        },
        {
          "name": "attachHover",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Node",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.networkgraph.Node</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:hover hover} event of this <code>sap.suite.ui.commons.networkgraph.Node</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.networkgraph.Node</code> itself.\n\nThis event is fired when the user moves the mouse pointer over the node."
        },
        {
          "name": "attachPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Node",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.networkgraph.Node</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:press press} event of this <code>sap.suite.ui.commons.networkgraph.Node</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.networkgraph.Node</code> itself.\n\nThis event is fired when the user clicks or taps the node."
        },
        {
          "name": "calculateSizes",
          "visibility": "public",
          "returnValue": { "type": "*" },
          "description": "Determines node sizes, applies text trimming, arranges the text into lines, and makes other necessary adjustments.<br>\n\nThis method can only be overridden when custom rendering is used. It must never be called directly."
        },
        {
          "name": "computeTextDimensions",
          "visibility": "public",
          "parameters": [
            {
              "name": "mArguments",
              "type": "Object",
              "optional": true,
              "parameterProperties": {
                "attributes": {
                  "name": "attributes",
                  "type": "Object",
                  "optional": true,
                  "description": "Additional attributes appended to the text"
                },
                "width": {
                  "name": "width",
                  "type": "int",
                  "optional": true,
                  "description": "Width of the text is trimmed to"
                },
                "text": {
                  "name": "text",
                  "type": "string",
                  "optional": true,
                  "description": "Text to trim"
                }
              },
              "description": "Arguments passed to the method"
            }
          ],
          "description": "Returns an object that includes an array of text lines and the height of a single line."
        },
        {
          "name": "destroyActionButtons",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Node",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the actionButtons in the aggregation {@link #getActionButtons actionButtons}."
        },
        {
          "name": "destroyActionLinks",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Node",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the actionLinks in the aggregation {@link #getActionLinks actionLinks}."
        },
        {
          "name": "destroyContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Node",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the content in the aggregation {@link #getContent content}."
        },
        {
          "name": "destroyImage",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Node",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the image in the aggregation {@link #getImage image}."
        },
        {
          "name": "detachCollapseExpand",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Node",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:collapseExpand collapseExpand} event of this <code>sap.suite.ui.commons.networkgraph.Node</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachHeaderCheckBoxPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Node",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:headerCheckBoxPress headerCheckBoxPress} event of this <code>sap.suite.ui.commons.networkgraph.Node</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachHover",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Node",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:hover hover} event of this <code>sap.suite.ui.commons.networkgraph.Node</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Node",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:press press} event of this <code>sap.suite.ui.commons.networkgraph.Node</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.networkgraph.Node with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.suite.ui.commons.networkgraph.ElementBase.extend}."
        },
        {
          "name": "fireCollapseExpand",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Node",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:collapseExpand collapseExpand} to attached listeners."
        },
        {
          "name": "fireHeaderCheckBoxPress",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Node",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "checked": {
                  "name": "checked",
                  "type": "boolean",
                  "optional": true,
                  "description": "Indicates whether checkbox is selected."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:headerCheckBoxPress headerCheckBoxPress} to attached listeners."
        },
        {
          "name": "fireHover",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Node",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:hover hover} to attached listeners."
        },
        {
          "name": "firePress",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Node",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:press press} to attached listeners."
        },
        {
          "name": "getActionButtons",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.ActionButton[]"
          },
          "description": "Gets content of aggregation {@link #getActionButtons actionButtons}.\n\nA list of custom action buttons. These buttons are displayed in the button area for each node. A node may have up to 4 buttons. The default 3 buttons (collapse/expand, details, and links) have priority over any other custom buttons that you add. If you want all 4 of your custom buttons to be displayed, set the visibility of the default buttons to false."
        },
        {
          "name": "getActionLinks",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.Control[]" },
          "description": "Gets content of aggregation {@link #getActionLinks actionLinks}.\n\nA list of links to be shown in the links area. A link may point to any UI5 control. It's up to the caller to set up all necessary callback functions."
        },
        {
          "name": "getCenterPosition",
          "visibility": "public",
          "returnValue": {
            "type": "Object",
            "description": "Object with X and Y coordinates of the center of the node. For circular nodes, this method returns the center of the circle."
          },
          "description": "Returns center position of the node."
        },
        {
          "name": "getChildLines",
          "visibility": "public",
          "returnValue": {
            "type": "Array",
            "description": "Array of lines connecting this node with its child nodes"
          },
          "description": "Returns all lines connected to the child nodes."
        },
        {
          "name": "getChildNodes",
          "visibility": "public",
          "returnValue": {
            "type": "Array",
            "description": "Array with child nodes"
          },
          "description": "Returns all child nodes."
        },
        {
          "name": "getCollapsed",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>collapsed</code>"
          },
          "description": "Gets current value of property {@link #getCollapsed collapsed}.\n\nDefines if the subtree of this node is collapsed. By default, it is expanded.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getContent",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.Control" },
          "description": "Gets content of aggregation {@link #getContent content}.\n\nCustom content rendered with the node. Available only for rectangular nodes with HTML rendering type. When this aggregation is used, the description and attributes of {@link sap.suite.ui.commons.networkgraph.ElementBase} are ignored."
        },
        {
          "name": "getCoreNodeSize",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>coreNodeSize</code>"
          },
          "description": "Gets current value of property {@link #getCoreNodeSize coreNodeSize}.\n\nDetermines the size of a custom node, which can be useful for nodes that have text or other content outside of its shape.<br>This property is available for custom nodes only.\n\nDefault value is <code>0</code>."
        },
        {
          "name": "getDescriptionLineSize",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>descriptionLineSize</code>"
          },
          "description": "Gets current value of property {@link #getDescriptionLineSize descriptionLineSize}.\n\nDetermines the maximum number of lines allowed to be displayed in the node's description. If you want to hide the description, set this property to <code>-1</code> (default). To display an unlimited number of lines, set this property to <code>0</code>. This property does not affect the description that appears in the tooltip, which is always fully rendered.\n\nDefault value is <code>-1</code>."
        },
        {
          "name": "getEnabledActionButtons",
          "visibility": "public",
          "returnValue": {
            "type": "Array",
            "description": "Returns an array of enabled action buttons."
          },
          "description": "Gets the node's action buttons that are enabled."
        },
        {
          "name": "getGroup",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>group</code>"
          },
          "description": "Gets current value of property {@link #getGroup group}.\n\nKey of the group where this node is included."
        },
        {
          "name": "getHeaderCheckbox",
          "visibility": "public",
          "description": "Returns header checkbox object"
        },
        {
          "name": "getHeaderCheckBoxState",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.HeaderCheckboxState",
            "description": "Value of property <code>headerCheckBoxState</code>"
          },
          "description": "Gets current value of property {@link #getHeaderCheckBoxState headerCheckBoxState}.\n\nDefines if the Header checkbox should be displayed and whether it should be selected or not. By default, the checkbox is hidden. Available only for box nodes.\n\nDefault value is <code>Hidden</code>."
        },
        {
          "name": "getHeight",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>height</code>"
          },
          "description": "Gets current value of property {@link #getHeight height}.\n\nHeight of the node. In circular nodes, it determines the circle diameter.\n\nDefault value is <code>undefined</code>."
        },
        {
          "name": "getIcon",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>icon</code>"
          },
          "description": "Gets current value of property {@link #getIcon icon}.\n\nAn icon associated with the element."
        },
        {
          "name": "getIconSize",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>iconSize</code>"
          },
          "description": "Gets current value of property {@link #getIconSize iconSize}.\n\nDetermines the size of the node's icon. This property can be applied only to circular nodes.\n\nDefault value is <code>undefined</code>."
        },
        {
          "name": "getImage",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.NodeImage"
          },
          "description": "Gets content of aggregation {@link #getImage image}.\n\nThe image that is displayed in the node's header instead of the icon."
        },
        {
          "name": "getKey",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>key</code>"
          },
          "description": "Gets current value of property {@link #getKey key}.\n\nKey of the node. This key is used throughout the DOM to reference this node, mainly in the connector line (Line) elements of the graph."
        },
        {
          "name": "getMaxWidth",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>maxWidth</code>"
          },
          "description": "Gets current value of property {@link #getMaxWidth maxWidth}.\n\nMaximum width allowed. The auto grow algorithm stops increasing the width at this value.\n\nDefault value is <code>undefined</code>."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.networkgraph.Node."
        },
        {
          "name": "getParentLines",
          "visibility": "public",
          "returnValue": {
            "type": "Array",
            "description": "Array with lines connecting this node with its parent nodes"
          },
          "description": "Returns all lines connected to the parent nodes."
        },
        {
          "name": "getParentNodes",
          "visibility": "public",
          "returnValue": {
            "type": "Array",
            "description": "Array with all parent nodes"
          },
          "description": "Returns all parent nodes."
        },
        {
          "name": "getSelected",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>selected</code>"
          },
          "description": "Gets current value of property {@link #getSelected selected}.\n\nShows if the node is selected. Once the node is selected, its appearance changes slightly to distinguish it from other nodes.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getShape",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.NodeShape",
            "description": "Value of property <code>shape</code>"
          },
          "description": "Gets current value of property {@link #getShape shape}.\n\nShape of the node. The shape is round by default. To create a rectangular node, set this property to Box.\n\nDefault value is <code>Circle</code>."
        },
        {
          "name": "getShowActionLinksButton",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showActionLinksButton</code>"
          },
          "description": "Gets current value of property {@link #getShowActionLinksButton showActionLinksButton}.\n\nDetermines if the links button is visible.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getShowDetailButton",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showDetailButton</code>"
          },
          "description": "Gets current value of property {@link #getShowDetailButton showDetailButton}.\n\nDetermines if the details button is visible.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getShowExpandButton",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showExpandButton</code>"
          },
          "description": "Gets current value of property {@link #getShowExpandButton showExpandButton}.\n\nDetermines if the expand button is visible.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getStatusIcon",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>statusIcon</code>"
          },
          "description": "Gets current value of property {@link #getStatusIcon statusIcon}.\n\nAn additional status icon displayed when the node is collapsed."
        },
        {
          "name": "getTitleLineSize",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>titleLineSize</code>"
          },
          "description": "Gets current value of property {@link #getTitleLineSize titleLineSize}.\n\nDetermines the maximum number of lines allowed for the node's label. If set to 0, the label may have an unlimited number of lines.\n\nDefault value is <code>1</code>."
        },
        {
          "name": "getVisible",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>visible</code>"
          },
          "description": "Gets current value of property {@link #getVisible visible}.\n\nWhether the control should be visible on the screen. Node is still used for layouter.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getWidth",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>width</code>"
          },
          "description": "Gets current value of property {@link #getWidth width}.\n\nWidth of the node. If the width is not defined, the node expands, so it can fit the content.\n\nDefault value is <code>undefined</code>."
        },
        {
          "name": "getX",
          "visibility": "public",
          "returnValue": {
            "type": "float",
            "description": "Value of property <code>x</code>"
          },
          "description": "Gets current value of property {@link #getX x}.\n\nThe x coordinate of the node. This value must be set after the layout algorithm has finished arranging the graph. It may come from the input data but is not required for most layout algorithms. <br>Works only for <code>CustomLayout</code> or <code>NoopLayout</code> layout algorithms. Other layout algorithms override this property. However, you can still change it using an <code>afterLayouting</code> event.\n\nDefault value is <code>0</code>."
        },
        {
          "name": "getY",
          "visibility": "public",
          "returnValue": {
            "type": "float",
            "description": "Value of property <code>y</code>"
          },
          "description": "Gets current value of property {@link #getY y}.\n\nThe y coordinate of the node. This value must be set after the layout algorithm has finished arranging the graph. It may come from the input data but is not required for most layout algorithms. <br>Works only for <code>CustomLayout</code> or <code>NoopLayout</code> layout algorithms. Other layout algorithms override this property. However, you can still change it using an <code>afterLayouting</code> event.\n\nDefault value is <code>0</code>."
        },
        {
          "name": "hasVisibleActionButtons",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Returns true if node has action buttons displayed."
          },
          "description": "Checks whether the node has visible action buttons"
        },
        {
          "name": "indexOfActionButton",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oActionButton",
              "type": "sap.suite.ui.commons.networkgraph.ActionButton",
              "optional": false,
              "description": "The actionButton whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.suite.ui.commons.networkgraph.ActionButton</code> in the aggregation {@link #getActionButtons actionButtons}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "indexOfActionLink",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oActionLink",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The actionLink whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.ui.core.Control</code> in the aggregation {@link #getActionLinks actionLinks}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "insertActionButton",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Node",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oActionButton",
              "type": "sap.suite.ui.commons.networkgraph.ActionButton",
              "optional": false,
              "description": "The actionButton to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the actionButton should be inserted at; for a negative value of <code>iIndex</code>, the actionButton is inserted at position 0; for a value greater than the current size of the aggregation, the actionButton is inserted at the last position"
            }
          ],
          "description": "Inserts a actionButton into the aggregation {@link #getActionButtons actionButtons}."
        },
        {
          "name": "insertActionLink",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Node",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oActionLink",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The actionLink to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the actionLink should be inserted at; for a negative value of <code>iIndex</code>, the actionLink is inserted at position 0; for a value greater than the current size of the aggregation, the actionLink is inserted at the last position"
            }
          ],
          "description": "Inserts a actionLink into the aggregation {@link #getActionLinks actionLinks}."
        },
        {
          "name": "isHidden",
          "visibility": "public",
          "returnValue": {
            "type": "boolean|*",
            "description": "<code>true</code> if the node is hidden"
          },
          "description": "Indicates whether the node is hidden by collapsing any of its parent nodes."
        },
        {
          "name": "removeActionButton",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.ActionButton",
            "description": "The removed actionButton or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vActionButton",
              "type": "int|string|sap.suite.ui.commons.networkgraph.ActionButton",
              "optional": false,
              "description": "The actionButton to remove or its index or id"
            }
          ],
          "description": "Removes a actionButton from the aggregation {@link #getActionButtons actionButtons}."
        },
        {
          "name": "removeActionLink",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.Control",
            "description": "The removed actionLink or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vActionLink",
              "type": "int|string|sap.ui.core.Control",
              "optional": false,
              "description": "The actionLink to remove or its index or id"
            }
          ],
          "description": "Removes a actionLink from the aggregation {@link #getActionLinks actionLinks}."
        },
        {
          "name": "removeAllActionButtons",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.ActionButton[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getActionButtons actionButtons}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeAllActionLinks",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.Control[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getActionLinks actionLinks}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "renderContent",
          "visibility": "public",
          "returnValue": { "type": "*" },
          "parameters": [
            {
              "name": "mOptions",
              "type": "Object",
              "optional": true,
              "parameterProperties": {
                "sizeDetermination": {
                  "name": "sizeDetermination",
                  "type": "boolean",
                  "optional": true,
                  "description": "If <code>true</code>, the size is determined for the purposes of text trimming and other resizing operations that are performed later, just before the final rendering of the graph, not when the method is called.<br> If you don't plan to trim text or resize the node, skip the rendering if you set this property to <code>true</code>."
                }
              },
              "description": "Options passed to the method"
            }
          ],
          "description": "This method can only be overridden when custom rendering is used. It must never be called directly."
        },
        {
          "name": "renderElement",
          "visibility": "public",
          "returnValue": { "type": "string", "description": "SVG icon string" },
          "parameters": [
            {
              "name": "name",
              "type": "string",
              "optional": true,
              "description": "Name of the element"
            },
            {
              "name": "mAttributes",
              "type": "string",
              "optional": true,
              "description": "Attributes of the element."
            },
            {
              "name": "bClose",
              "type": "boolean",
              "optional": true,
              "description": "Indicates whether to close the element. If set to <code>false</code>, the caller is responsible for adding a closing tag."
            }
          ],
          "description": "Creates an SVG element string."
        },
        {
          "name": "renderHtmlActionButtons",
          "visibility": "public",
          "returnValue": { "type": "string" },
          "parameters": [
            {
              "name": "mOptions",
              "type": "Object",
              "optional": true,
              "parameterProperties": {
                "idSufix": {
                  "name": "idSufix",
                  "type": "string",
                  "optional": true,
                  "description": "Suffix (optional). When the suffix is specified, it is added to the IDs of the wrappers."
                }
              },
              "description": "Options passed to the method (optional)."
            }
          ],
          "description": "Renders wrappers for HTML action buttons. Used for custom rendering."
        },
        {
          "name": "renderHtmlIcon",
          "visibility": "public",
          "returnValue": { "type": "string", "description": "HTML icon" },
          "parameters": [
            {
              "name": "sIcon",
              "type": "undefined",
              "optional": false,
              "description": "icon to render"
            }
          ],
          "description": "Creates HTML representation of an icon."
        },
        {
          "name": "renderHtmlInfoIcon",
          "visibility": "public",
          "parameters": [
            {
              "name": "oStyle",
              "type": "object",
              "optional": false,
              "description": "Object with additional style appended to info icon"
            }
          ],
          "description": "Renders custom info icon for HTML rendering."
        },
        {
          "name": "renderIcon",
          "visibility": "public",
          "returnValue": { "type": "string", "description": "SVG icon string" },
          "parameters": [
            {
              "name": "mArguments",
              "type": "Object",
              "optional": true,
              "parameterProperties": {
                "icon": {
                  "name": "icon",
                  "type": "string",
                  "optional": true,
                  "description": "Icon name, based on the SAP icon font"
                },
                "x": {
                  "name": "x",
                  "type": "int",
                  "optional": true,
                  "description": "X coordinate that is added to node's top left x coordinate."
                },
                "y": {
                  "name": "y",
                  "type": "int",
                  "optional": true,
                  "description": "Y coordinate that is added to node's top left y coordinate."
                },
                "attributes": {
                  "name": "attributes",
                  "type": "Object",
                  "optional": true,
                  "description": "Additional attributes rendered with the text"
                }
              },
              "description": "Arguments passed to the method"
            }
          ],
          "description": "Creates an SVG icon string."
        },
        {
          "name": "renderItemContent",
          "visibility": "public",
          "returnValue": { "type": "*" },
          "parameters": [
            {
              "name": "mOptions",
              "type": "Object",
              "optional": true,
              "parameterProperties": {
                "sizeDetermination": {
                  "name": "sizeDetermination",
                  "type": "boolean",
                  "optional": true,
                  "description": "If <code>true</code>, the size is determined for the purposes of text trimming and other resizing operations that are performed later, just before the final rendering of the graph, not when the method is called.<br> If you don't plan to trim text or resize the node, skip the rendering if you set this property to <code>true</code>."
                }
              },
              "description": "Options passed to the method"
            }
          ],
          "description": "This method can only be overridden when custom rendering is used. It must never be called directly."
        },
        {
          "name": "renderStatusIcon",
          "visibility": "public",
          "parameters": [
            {
              "name": "mParameters",
              "type": "Object",
              "optional": true,
              "description": "Options passed to the method"
            }
          ],
          "description": "Renders the status icon. Can be called directly or overridden when custom rendering is used."
        },
        {
          "name": "renderText",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Text string rendered as SVG"
          },
          "parameters": [
            {
              "name": "mArguments",
              "type": "Object",
              "optional": true,
              "parameterProperties": {
                "text": {
                  "name": "text",
                  "type": "string",
                  "optional": true,
                  "description": "Text to render, available only for single-line text. Rendered as it is, cannot be used for trim or any other similar operation"
                },
                "lines": {
                  "name": "lines",
                  "type": "Array",
                  "optional": true,
                  "description": "Array with lines of text. Words are spread across multiple lines"
                },
                "x": {
                  "name": "x",
                  "type": "int",
                  "optional": true,
                  "description": "X coordinate that is added to the node's top left x coordinate"
                },
                "y": {
                  "name": "y",
                  "type": "int",
                  "optional": true,
                  "description": "Y coordinate that is added to the node's top left y coordinate"
                },
                "lineSize": {
                  "name": "lineSize",
                  "type": "int",
                  "optional": true,
                  "description": "Line size for the node, if not set, the default line size is used"
                },
                "attributes": {
                  "name": "attributes",
                  "type": "Object",
                  "optional": true,
                  "description": "Additional attributes rendered with the text"
                }
              },
              "description": "Arguments passed to the method"
            }
          ],
          "description": "Renders the text of the node as SVG. Either text or lines of text must be passed to this method as an argument."
        },
        {
          "name": "setCollapsed",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Node",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bCollapsed",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>collapsed</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getCollapsed collapsed}.\n\nDefines if the subtree of this node is collapsed. By default, it is expanded.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Node",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oContent",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The content to set"
            }
          ],
          "description": "Sets the aggregated {@link #getContent content}."
        },
        {
          "name": "setCoreNodeSize",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Node",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iCoreNodeSize",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>coreNodeSize</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getCoreNodeSize coreNodeSize}.\n\nDetermines the size of a custom node, which can be useful for nodes that have text or other content outside of its shape.<br>This property is available for custom nodes only.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>0</code>."
        },
        {
          "name": "setDescriptionLineSize",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Node",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iDescriptionLineSize",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>descriptionLineSize</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getDescriptionLineSize descriptionLineSize}.\n\nDetermines the maximum number of lines allowed to be displayed in the node's description. If you want to hide the description, set this property to <code>-1</code> (default). To display an unlimited number of lines, set this property to <code>0</code>. This property does not affect the description that appears in the tooltip, which is always fully rendered.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>-1</code>."
        },
        {
          "name": "setGroup",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Node",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sGroup",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>group</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getGroup group}.\n\nKey of the group where this node is included.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setHeaderCheckBoxState",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Node",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sHeaderCheckBoxState",
              "type": "sap.suite.ui.commons.networkgraph.HeaderCheckboxState",
              "optional": false,
              "description": "New value for property <code>headerCheckBoxState</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getHeaderCheckBoxState headerCheckBoxState}.\n\nDefines if the Header checkbox should be displayed and whether it should be selected or not. By default, the checkbox is hidden. Available only for box nodes.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Hidden</code>."
        },
        {
          "name": "setHeight",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Node",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iHeight",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>height</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getHeight height}.\n\nHeight of the node. In circular nodes, it determines the circle diameter.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>undefined</code>."
        },
        {
          "name": "setHidden",
          "visibility": "public",
          "parameters": [
            {
              "name": "bValue",
              "type": "undefined",
              "optional": false,
              "description": "value"
            }
          ],
          "description": "Hides the node and any lines that lead to it."
        },
        {
          "name": "setIcon",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Node",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sIcon",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>icon</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getIcon icon}.\n\nAn icon associated with the element.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setIconSize",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Node",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iIconSize",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>iconSize</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getIconSize iconSize}.\n\nDetermines the size of the node's icon. This property can be applied only to circular nodes.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>undefined</code>."
        },
        {
          "name": "setImage",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Node",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oImage",
              "type": "sap.suite.ui.commons.networkgraph.NodeImage",
              "optional": false,
              "description": "The image to set"
            }
          ],
          "description": "Sets the aggregated {@link #getImage image}."
        },
        {
          "name": "setKey",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Node",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sKey",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>key</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getKey key}.\n\nKey of the node. This key is used throughout the DOM to reference this node, mainly in the connector line (Line) elements of the graph.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setMaxWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Node",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iMaxWidth",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>maxWidth</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getMaxWidth maxWidth}.\n\nMaximum width allowed. The auto grow algorithm stops increasing the width at this value.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>undefined</code>."
        },
        {
          "name": "setSelected",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Node",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bSelected",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>selected</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSelected selected}.\n\nShows if the node is selected. Once the node is selected, its appearance changes slightly to distinguish it from other nodes.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setShape",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Node",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sShape",
              "type": "sap.suite.ui.commons.networkgraph.NodeShape",
              "optional": false,
              "description": "New value for property <code>shape</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShape shape}.\n\nShape of the node. The shape is round by default. To create a rectangular node, set this property to Box.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Circle</code>."
        },
        {
          "name": "setShowActionLinksButton",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Node",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowActionLinksButton",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showActionLinksButton</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowActionLinksButton showActionLinksButton}.\n\nDetermines if the links button is visible.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setShowDetailButton",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Node",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowDetailButton",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showDetailButton</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowDetailButton showDetailButton}.\n\nDetermines if the details button is visible.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setShowExpandButton",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Node",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowExpandButton",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showExpandButton</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowExpandButton showExpandButton}.\n\nDetermines if the expand button is visible.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setSize",
          "visibility": "public",
          "parameters": [
            {
              "name": "mArguments",
              "type": "Object",
              "optional": false,
              "description": "Arguments passed to the method"
            }
          ],
          "description": "Sets the width and height of the node.<br> If you don't want to change the <code>height</code> and <code>width</code> properties, use this method to change the internal width and height."
        },
        {
          "name": "setStatusIcon",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Node",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sStatusIcon",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>statusIcon</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getStatusIcon statusIcon}.\n\nAn additional status icon displayed when the node is collapsed.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setTitleLineSize",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Node",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iTitleLineSize",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>titleLineSize</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getTitleLineSize titleLineSize}.\n\nDetermines the maximum number of lines allowed for the node's label. If set to 0, the label may have an unlimited number of lines.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>1</code>."
        },
        {
          "name": "setVisible",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Node",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bVisible",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>visible</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getVisible visible}.\n\nWhether the control should be visible on the screen. Node is still used for layouter.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Node",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iWidth",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>width</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getWidth width}.\n\nWidth of the node. If the width is not defined, the node expands, so it can fit the content.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>undefined</code>."
        },
        {
          "name": "setX",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Node",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fX",
              "type": "float",
              "optional": false,
              "description": "New value for property <code>x</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getX x}.\n\nThe x coordinate of the node. This value must be set after the layout algorithm has finished arranging the graph. It may come from the input data but is not required for most layout algorithms. <br>Works only for <code>CustomLayout</code> or <code>NoopLayout</code> layout algorithms. Other layout algorithms override this property. However, you can still change it using an <code>afterLayouting</code> event.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>0</code>."
        },
        {
          "name": "setY",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Node",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fY",
              "type": "float",
              "optional": false,
              "description": "New value for property <code>y</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getY y}.\n\nThe y coordinate of the node. This value must be set after the layout algorithm has finished arranging the graph. It may come from the input data but is not required for most layout algorithms. <br>Works only for <code>CustomLayout</code> or <code>NoopLayout</code> layout algorithms. Other layout algorithms override this property. However, you can still change it using an <code>afterLayouting</code> event.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>0</code>."
        },
        {
          "name": "showActionButtons",
          "visibility": "public",
          "parameters": [
            {
              "name": "bShow",
              "type": "boolean",
              "optional": false,
              "description": "Indicates whether to hide or to show buttons"
            }
          ],
          "description": "Shows or hides the node's action buttons."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.networkgraph.NodeImage",
      "basename": "NodeImage",
      "resource": "sap/suite/ui/commons/networkgraph/NodeImage.js",
      "module": "sap/suite/ui/commons/networkgraph/NodeImage",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.50",
      "extends": "sap.ui.core.Element",
      "description": "Holds information about node image.",
      "ui5-metadata": {
        "stereotype": "element",
        "properties": [
          {
            "name": "src",
            "type": "sap.ui.core.URI",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "description": "Relative or absolute path to the image file.",
            "methods": ["getSrc", "setSrc"]
          },
          {
            "name": "width",
            "type": "int",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "description": "Width of the image.",
            "methods": ["getWidth", "setWidth"]
          },
          {
            "name": "height",
            "type": "int",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "description": "Height of the image.",
            "methods": ["getHeight", "setHeight"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "description": "Constructor for a new Node Image.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.networkgraph.NodeImage with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
        },
        {
          "name": "getHeight",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>height</code>"
          },
          "description": "Gets current value of property {@link #getHeight height}.\n\nHeight of the image."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.networkgraph.NodeImage."
        },
        {
          "name": "getSrc",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.URI",
            "description": "Value of property <code>src</code>"
          },
          "description": "Gets current value of property {@link #getSrc src}.\n\nRelative or absolute path to the image file."
        },
        {
          "name": "getWidth",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>width</code>"
          },
          "description": "Gets current value of property {@link #getWidth width}.\n\nWidth of the image."
        },
        {
          "name": "setHeight",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.NodeImage",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iHeight",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>height</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getHeight height}.\n\nHeight of the image.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setSrc",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.NodeImage",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sSrc",
              "type": "sap.ui.core.URI",
              "optional": false,
              "description": "New value for property <code>src</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSrc src}.\n\nRelative or absolute path to the image file.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.NodeImage",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iWidth",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>width</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getWidth width}.\n\nWidth of the image.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.suite.ui.commons.networkgraph.NodePlacement",
      "basename": "NodePlacement",
      "resource": "sap/suite/ui/commons/library.js",
      "module": "sap/suite/ui/commons/library",
      "export": "networkgraph.NodePlacement",
      "static": true,
      "visibility": "public",
      "description": "Type of node placement for Layered Algorithm. See {@link https://rtsys.informatik.uni-kiel.de/confluence/display/KIELER/KLay+Layered+Layout+Options#KLayLayeredLayoutOptions-nodePlacement}",
      "properties": [
        {
          "name": "BrandesKoepf",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Minimizes the number of edge bends at the expense of the graph size."
        },
        {
          "name": "LinearSegments",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Calculates the most optimal layout balance."
        },
        {
          "name": "Simple",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Minimizes the area taken by the graph at the expense of everything else."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.suite.ui.commons.networkgraph.NodeShape",
      "basename": "NodeShape",
      "resource": "sap/suite/ui/commons/library.js",
      "module": "sap/suite/ui/commons/library",
      "export": "networkgraph.NodeShape",
      "static": true,
      "visibility": "public",
      "description": "Shape of a node in a network graph.",
      "properties": [
        {
          "name": "Box",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Rectangular shape with an optional list of attributes."
        },
        {
          "name": "Circle",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Round shape with a text label below."
        },
        {
          "name": "Custom",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Shape for custom rendering."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.suite.ui.commons.networkgraph.Orientation",
      "basename": "Orientation",
      "resource": "sap/suite/ui/commons/library.js",
      "module": "sap/suite/ui/commons/library",
      "export": "networkgraph.Orientation",
      "static": true,
      "visibility": "public",
      "description": "Orientation of layered layout.",
      "properties": [
        {
          "name": "BottomTop",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The flow of the graph is bottom to top."
        },
        {
          "name": "LeftRight",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The flow of the graph is left to right."
        },
        {
          "name": "RightLeft",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The flow of the graph is right to left."
        },
        {
          "name": "TopBottom",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The flow of the graph is top to bottom."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.suite.ui.commons.networkgraph.RenderType",
      "basename": "RenderType",
      "resource": "sap/suite/ui/commons/library.js",
      "module": "sap/suite/ui/commons/library",
      "export": "networkgraph.RenderType",
      "static": true,
      "visibility": "public",
      "description": "Determines how nodes are rendered. For optimal performance and usability, it is recommended that you use HTML, which allows you to avoid dealing with SVG limitations.",
      "ui5-metamodel": true,
      "properties": [
        {
          "name": "Html",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Nodes are rendered as classic HTML."
        },
        {
          "name": "Svg",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Nodes are rendered as SVG."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.networkgraph.Status",
      "basename": "Status",
      "resource": "sap/suite/ui/commons/networkgraph/Status.js",
      "module": "sap/suite/ui/commons/networkgraph/Status",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.50",
      "extends": "sap.ui.core.Element",
      "description": "The status element holds information about a custom status that can be applied to nodes, lines, and groups of nodes.<br> <br> You can create multiple custom statuses and assign them to your graph using the <code>statuses</code> aggregation of the {@link sap.suite.ui.commons.networkgraph.Graph} control.<br> <br> Alternatively, you can use default statuses provided by the {@link sap.suite.ui.commons.networkgraph.ElementStatus} element.",
      "ui5-metadata": {
        "stereotype": "element",
        "properties": [
          {
            "name": "key",
            "type": "string",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "methods": ["getKey", "setKey"]
          },
          {
            "name": "title",
            "type": "string",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "description": "Title of the node.<br> The title that is applied to elements that are in this custom status. The title is displayed in the legend.",
            "methods": ["getTitle", "setTitle"]
          },
          {
            "name": "borderColor",
            "type": "string",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "description": "Border color.<br> The border color that is applied to elements in this custom status.",
            "methods": ["getBorderColor", "setBorderColor"]
          },
          {
            "name": "backgroundColor",
            "type": "string",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "description": "Fill color.<br> The fill color that is applied to elements and lines that are in this custom status.",
            "methods": ["getBackgroundColor", "setBackgroundColor"]
          },
          {
            "name": "contentColor",
            "type": "string",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "description": "Color of the content (text or icon) inside the node.<br> The color is applied to a node's content when it enters this custom status.",
            "methods": ["getContentColor", "setContentColor"]
          },
          {
            "name": "headerContentColor",
            "type": "string",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "description": "Color of the header content (title and icon) of the node.<br> Applicable only to the rectangular nodes.",
            "methods": ["getHeaderContentColor", "setHeaderContentColor"]
          },
          {
            "name": "hoverBackgroundColor",
            "type": "string",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "description": "Fill color on hover.<br> The fill color of a custom status element, line, or group when you hover over it.",
            "methods": ["getHoverBackgroundColor", "setHoverBackgroundColor"]
          },
          {
            "name": "hoverBorderColor",
            "type": "string",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "description": "Border color on hover.<br> The border color of a custom status element when you hover over it.",
            "methods": ["getHoverBorderColor", "setHoverBorderColor"]
          },
          {
            "name": "hoverContentColor",
            "type": "string",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "description": "Content color on hover. Color of the content (text or icon) inside the custom status element when you hover over it.",
            "methods": ["getHoverContentColor", "setHoverContentColor"]
          },
          {
            "name": "selectedBackgroundColor",
            "type": "string",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "description": "Fill color when selected.<br> The fill color of a custom status element when you select it.",
            "methods": [
              "getSelectedBackgroundColor",
              "setSelectedBackgroundColor"
            ]
          },
          {
            "name": "selectedBorderColor",
            "type": "string",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "description": "Border color when selected. The border color of a custom status element when you select it.",
            "methods": ["getSelectedBorderColor", "setSelectedBorderColor"]
          },
          {
            "name": "selectedContentColor",
            "type": "string",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "description": "Content color when selected. Color of the content (text or icon) inside the custom status node when you select it.",
            "methods": ["getSelectedContentColor", "setSelectedContentColor"]
          },
          {
            "name": "legendColor",
            "type": "string",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "description": "Color displayed in the graph's legend.<br> If not set, the fill color defined in the <code>backgroundColor</code> property is used.",
            "methods": ["getLegendColor", "setLegendColor"]
          },
          {
            "name": "useFocusColorAsContentColor",
            "type": "boolean",
            "defaultValue": false,
            "group": "Appearance",
            "visibility": "public",
            "description": "Defines whether the focus border should match the color of the content in focus. If false, the focus border has the default color.<br>This property can be used only for nodes and groups of nodes.",
            "methods": [
              "getUseFocusColorAsContentColor",
              "setUseFocusColorAsContentColor"
            ]
          },
          {
            "name": "borderWidth",
            "type": "sap.ui.core.CSSSize",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "description": "Border width of the element in specific units (for example 2px).",
            "methods": ["getBorderWidth", "setBorderWidth"]
          },
          {
            "name": "borderStyle",
            "type": "string",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "description": "Style of the border. For {@link sap.suite.ui.commons.networkgraph.Line} elements use this value as parameter for <code>stroke-dasharray</code>.",
            "methods": ["getBorderStyle", "setBorderStyle"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "description": "Constructor for a new Status.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.networkgraph.Status with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
        },
        {
          "name": "getBackgroundColor",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>backgroundColor</code>"
          },
          "description": "Gets current value of property {@link #getBackgroundColor backgroundColor}.\n\nFill color.<br> The fill color that is applied to elements and lines that are in this custom status."
        },
        {
          "name": "getBorderColor",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>borderColor</code>"
          },
          "description": "Gets current value of property {@link #getBorderColor borderColor}.\n\nBorder color.<br> The border color that is applied to elements in this custom status."
        },
        {
          "name": "getBorderStyle",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>borderStyle</code>"
          },
          "description": "Gets current value of property {@link #getBorderStyle borderStyle}.\n\nStyle of the border. For {@link sap.suite.ui.commons.networkgraph.Line} elements use this value as parameter for <code>stroke-dasharray</code>."
        },
        {
          "name": "getBorderWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.CSSSize",
            "description": "Value of property <code>borderWidth</code>"
          },
          "description": "Gets current value of property {@link #getBorderWidth borderWidth}.\n\nBorder width of the element in specific units (for example 2px)."
        },
        {
          "name": "getContentColor",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>contentColor</code>"
          },
          "description": "Gets current value of property {@link #getContentColor contentColor}.\n\nColor of the content (text or icon) inside the node.<br> The color is applied to a node's content when it enters this custom status."
        },
        {
          "name": "getHeaderContentColor",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>headerContentColor</code>"
          },
          "description": "Gets current value of property {@link #getHeaderContentColor headerContentColor}.\n\nColor of the header content (title and icon) of the node.<br> Applicable only to the rectangular nodes."
        },
        {
          "name": "getHoverBackgroundColor",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>hoverBackgroundColor</code>"
          },
          "description": "Gets current value of property {@link #getHoverBackgroundColor hoverBackgroundColor}.\n\nFill color on hover.<br> The fill color of a custom status element, line, or group when you hover over it."
        },
        {
          "name": "getHoverBorderColor",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>hoverBorderColor</code>"
          },
          "description": "Gets current value of property {@link #getHoverBorderColor hoverBorderColor}.\n\nBorder color on hover.<br> The border color of a custom status element when you hover over it."
        },
        {
          "name": "getHoverContentColor",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>hoverContentColor</code>"
          },
          "description": "Gets current value of property {@link #getHoverContentColor hoverContentColor}.\n\nContent color on hover. Color of the content (text or icon) inside the custom status element when you hover over it."
        },
        {
          "name": "getKey",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>key</code>"
          },
          "description": "Gets current value of property {@link #getKey key}."
        },
        {
          "name": "getLegendColor",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>legendColor</code>"
          },
          "description": "Gets current value of property {@link #getLegendColor legendColor}.\n\nColor displayed in the graph's legend.<br> If not set, the fill color defined in the <code>backgroundColor</code> property is used."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.networkgraph.Status."
        },
        {
          "name": "getSelectedBackgroundColor",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>selectedBackgroundColor</code>"
          },
          "description": "Gets current value of property {@link #getSelectedBackgroundColor selectedBackgroundColor}.\n\nFill color when selected.<br> The fill color of a custom status element when you select it."
        },
        {
          "name": "getSelectedBorderColor",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>selectedBorderColor</code>"
          },
          "description": "Gets current value of property {@link #getSelectedBorderColor selectedBorderColor}.\n\nBorder color when selected. The border color of a custom status element when you select it."
        },
        {
          "name": "getSelectedContentColor",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>selectedContentColor</code>"
          },
          "description": "Gets current value of property {@link #getSelectedContentColor selectedContentColor}.\n\nContent color when selected. Color of the content (text or icon) inside the custom status node when you select it."
        },
        {
          "name": "getTitle",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>title</code>"
          },
          "description": "Gets current value of property {@link #getTitle title}.\n\nTitle of the node.<br> The title that is applied to elements that are in this custom status. The title is displayed in the legend."
        },
        {
          "name": "getUseFocusColorAsContentColor",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>useFocusColorAsContentColor</code>"
          },
          "description": "Gets current value of property {@link #getUseFocusColorAsContentColor useFocusColorAsContentColor}.\n\nDefines whether the focus border should match the color of the content in focus. If false, the focus border has the default color.<br>This property can be used only for nodes and groups of nodes.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setBackgroundColor",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Status",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sBackgroundColor",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>backgroundColor</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getBackgroundColor backgroundColor}.\n\nFill color.<br> The fill color that is applied to elements and lines that are in this custom status.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setBorderColor",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Status",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sBorderColor",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>borderColor</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getBorderColor borderColor}.\n\nBorder color.<br> The border color that is applied to elements in this custom status.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setBorderStyle",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Status",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sBorderStyle",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>borderStyle</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getBorderStyle borderStyle}.\n\nStyle of the border. For {@link sap.suite.ui.commons.networkgraph.Line} elements use this value as parameter for <code>stroke-dasharray</code>.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setBorderWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Status",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sBorderWidth",
              "type": "sap.ui.core.CSSSize",
              "optional": false,
              "description": "New value for property <code>borderWidth</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getBorderWidth borderWidth}.\n\nBorder width of the element in specific units (for example 2px).\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setContentColor",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Status",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sContentColor",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>contentColor</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getContentColor contentColor}.\n\nColor of the content (text or icon) inside the node.<br> The color is applied to a node's content when it enters this custom status.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setHeaderContentColor",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Status",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sHeaderContentColor",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>headerContentColor</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getHeaderContentColor headerContentColor}.\n\nColor of the header content (title and icon) of the node.<br> Applicable only to the rectangular nodes.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setHoverBackgroundColor",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Status",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sHoverBackgroundColor",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>hoverBackgroundColor</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getHoverBackgroundColor hoverBackgroundColor}.\n\nFill color on hover.<br> The fill color of a custom status element, line, or group when you hover over it.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setHoverBorderColor",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Status",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sHoverBorderColor",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>hoverBorderColor</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getHoverBorderColor hoverBorderColor}.\n\nBorder color on hover.<br> The border color of a custom status element when you hover over it.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setHoverContentColor",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Status",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sHoverContentColor",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>hoverContentColor</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getHoverContentColor hoverContentColor}.\n\nContent color on hover. Color of the content (text or icon) inside the custom status element when you hover over it.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setKey",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Status",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sKey",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>key</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getKey key}.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setLegendColor",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Status",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sLegendColor",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>legendColor</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getLegendColor legendColor}.\n\nColor displayed in the graph's legend.<br> If not set, the fill color defined in the <code>backgroundColor</code> property is used.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setSelectedBackgroundColor",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Status",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sSelectedBackgroundColor",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>selectedBackgroundColor</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSelectedBackgroundColor selectedBackgroundColor}.\n\nFill color when selected.<br> The fill color of a custom status element when you select it.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setSelectedBorderColor",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Status",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sSelectedBorderColor",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>selectedBorderColor</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSelectedBorderColor selectedBorderColor}.\n\nBorder color when selected. The border color of a custom status element when you select it.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setSelectedContentColor",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Status",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sSelectedContentColor",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>selectedContentColor</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSelectedContentColor selectedContentColor}.\n\nContent color when selected. Color of the content (text or icon) inside the custom status node when you select it.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setTitle",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Status",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sTitle",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>title</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getTitle title}.\n\nTitle of the node.<br> The title that is applied to elements that are in this custom status. The title is displayed in the legend.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setUseFocusColorAsContentColor",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Status",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bUseFocusColorAsContentColor",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>useFocusColorAsContentColor</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getUseFocusColorAsContentColor useFocusColorAsContentColor}.\n\nDefines whether the focus border should match the color of the content in focus. If false, the focus border has the default color.<br>This property can be used only for nodes and groups of nodes.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.networkgraph.SvgBase",
      "basename": "SvgBase",
      "resource": "sap/suite/ui/commons/networkgraph/SvgBase.js",
      "module": "sap/suite/ui/commons/networkgraph/SvgBase",
      "export": "",
      "abstract": true,
      "static": true,
      "visibility": "public",
      "since": "1.50",
      "extends": "sap.ui.core.Control",
      "description": "SvgBase class",
      "ui5-metadata": { "stereotype": "control" },
      "constructor": {
        "visibility": "public",
        "description": "Constructor for a new ElementBase.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.networkgraph.SvgBase with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.networkgraph.SvgBase."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.networkgraph.util.Dijkstra",
      "basename": "Dijkstra",
      "resource": "sap/suite/ui/commons/networkgraph/util/Dijkstra.js",
      "module": "sap/suite/ui/commons/networkgraph/util/Dijkstra",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.58",
      "description": "This algorithm uses Dijkstra's algorithm to compute the shortest possible paths from the starting point node to all other nodes in the graph and arrange them accordingly.",
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "oGraph",
            "type": "sap.suite.ui.commons.networkgraph.Graph",
            "optional": false,
            "description": "Graph to compute the paths in."
          },
          {
            "name": "oSourceNode",
            "type": "sap.suite.ui.commons.networkgraph.Node",
            "optional": false,
            "description": "Node that serves as the starting point for computing the paths."
          },
          {
            "name": "oSettings",
            "type": "object",
            "optional": true,
            "parameterProperties": {
              "fnLineValue": {
                "name": "fnLineValue",
                "type": "function",
                "optional": true,
                "defaultValue": "function () {return 1;}",
                "description": "Evaluation function for determining the value of a line. The function will receive the line to be evaluated as a parameter and must return a positive number representing its value (note that Dijkstra's algorithm cannot be used on negative values of lines). If this function is not passed as a parameter, the algorithm will consider the value of each line to be 1."
              },
              "bIgnoreDirections": {
                "name": "bIgnoreDirections",
                "type": "boolean",
                "optional": true,
                "defaultValue": false,
                "description": "Makes the algorithm ignore line directions and treat the graph as non-oriented."
              },
              "bIgnoreCollapsed": {
                "name": "bIgnoreCollapsed",
                "type": "boolean",
                "optional": true,
                "defaultValue": false,
                "description": "Makes the algorithm ignore collapsed and hidden nodes."
              }
            },
            "description": "Settings for the algorithm."
          }
        ],
        "description": "Constructor for a new Dijkstra's algorithm. The constructor computes the shortest paths to all nodes in the network graph from given starting point node."
      },
      "methods": [
        {
          "name": "getShortestPathTo",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.networkgraph.Line[]",
            "description": "Lines representing the shortest path."
          },
          "parameters": [
            {
              "name": "oToNode",
              "type": "sap.suite.ui.commons.networkgraph.Node",
              "optional": false,
              "description": "Node to find shortest path to."
            }
          ],
          "description": "Retrieves the shortest path to the given node. Due to the nature of the algorithm, the path is returned in reversed order. In most cases, each line has to be processed anyway, so the order is not important. However, if you need to retrieve lines in the direct order, you can use the <code>Array.reverse()</code> method."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.NewsContent",
      "basename": "NewsContent",
      "resource": "sap/suite/ui/commons/NewsContent.js",
      "module": "sap/suite/ui/commons/NewsContent",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.m.NewsContent",
      "description": "This control displays the news content text and subheader in a tile.",
      "deprecated": {
        "since": "1.34",
        "text": "this control is a mere wrapper for sap.m.NewsContent."
      },
      "ui5-metamodel": true,
      "ui5-metadata": { "stereotype": "control" },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, automatically generated if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new NewsContent."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.NewsContent with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.m.NewsContent.extend}."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.NewsContent."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.NoteTaker",
      "basename": "NoteTaker",
      "resource": "sap/suite/ui/commons/NoteTaker.js",
      "module": "sap/suite/ui/commons/NoteTaker",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.core.Control",
      "description": "This control allows you to create and store your notes for further reference.",
      "deprecated": {
        "since": "1.32",
        "text": "Deprecated. Standard Fiori technology should be used."
      },
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "visibleNotes",
            "type": "int",
            "defaultValue": 2,
            "group": "Misc",
            "visibility": "public",
            "description": "Number of notes to display.",
            "methods": ["getVisibleNotes", "setVisibleNotes"]
          },
          {
            "name": "cardViewAllTrigger",
            "type": "int",
            "defaultValue": 1800,
            "group": "Misc",
            "visibility": "public",
            "description": "The View All link appears in the Note Taker card when length of a card body text exceeds the specified value. The updated value of this property is not applied to the existing cards.",
            "methods": ["getCardViewAllTrigger", "setCardViewAllTrigger"]
          },
          {
            "name": "filterCriteria",
            "type": "object",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "A composite object containing criteria for filtering cards in the Note Taker.",
            "methods": ["getFilterCriteria", "setFilterCriteria"]
          },
          {
            "name": "attachmentUploadUrl",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Defines a path on the server where the attached files are uploaded.",
            "methods": ["getAttachmentUploadUrl", "setAttachmentUploadUrl"]
          },
          {
            "name": "attachmentName",
            "type": "string",
            "defaultValue": "attachment",
            "group": "Misc",
            "visibility": "public",
            "description": "The attachment property name for identification on the server side after sending data to the server.",
            "methods": ["getAttachmentName", "setAttachmentName"]
          }
        ],
        "aggregations": [
          {
            "name": "cards",
            "singularName": "card",
            "type": "sap.suite.ui.commons.NoteTakerCard",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "This aggregation allows you to add note cards to the Note Taker and remove them from the Note Taker.",
            "methods": [
              "getCards",
              "destroyCards",
              "insertCard",
              "addCard",
              "removeCard",
              "indexOfCard",
              "removeAllCards"
            ]
          },
          {
            "name": "carousel",
            "singularName": "carousel",
            "type": "sap.ui.commons.Carousel",
            "cardinality": "0..1",
            "visibility": "hidden",
            "description": "A slideable container for the NoteTaker cards and Feeder card.",
            "methods": ["getCarousel", "destroyCarousel", "setCarousel"]
          }
        ],
        "events": [
          {
            "name": "addCard",
            "visibility": "public",
            "description": "The event is fired when a new card is added if no data binding is available. If data binding is available, the event is fired to notify a developer to add an element to the model.",
            "parameters": {
              "title": {
                "name": "title",
                "type": "string",
                "description": "The title of the note to be added."
              },
              "body": {
                "name": "body",
                "type": "string",
                "description": "The text of the note to be added."
              },
              "timestamp": {
                "name": "timestamp",
                "type": "object",
                "description": "The timestamp of the note to be added."
              },
              "viewAllTrigger": {
                "name": "viewAllTrigger",
                "type": "int",
                "description": "The View All link appears in the Note Taker card when length of a body text exceeds the specified value."
              },
              "thumbUp": {
                "name": "thumbUp",
                "type": "boolean",
                "description": "Indicates positive information for a new card."
              },
              "thumbDown": {
                "name": "thumbDown",
                "type": "boolean",
                "description": "Indicates negative information for a new card."
              },
              "attachmentFilename": {
                "name": "attachmentFilename",
                "type": "string",
                "description": "Stores the name of the file attached to the card."
              },
              "uid": {
                "name": "uid",
                "type": "string",
                "description": "The unique ID if available."
              },
              "attachmentUrl": {
                "name": "attachmentUrl",
                "type": "string",
                "description": "Stores the URL of the file attached to the card."
              },
              "card": {
                "name": "card",
                "type": "sap.suite.ui.commons.NoteTakerCard",
                "description": "A newly created card if no data binding is available. If data binding is available, this parameter is empty."
              }
            },
            "methods": ["attachAddCard", "detachAddCard", "fireAddCard"]
          },
          {
            "name": "deleteCard",
            "visibility": "public",
            "description": "The event is fired when a new card is deleted if no data binding is available. If data binding is available, the event is fired to notify a developer to delete the element from the model.",
            "parameters": {
              "title": {
                "name": "title",
                "type": "string",
                "description": "The title of the card to be deleted."
              },
              "body": {
                "name": "body",
                "type": "string",
                "description": "The text of the card to be deleted."
              },
              "timestamp": {
                "name": "timestamp",
                "type": "string",
                "description": "The timestamp of the card to be deleted."
              },
              "uid": {
                "name": "uid",
                "type": "string",
                "description": "The unique ID that was set by an application developer."
              },
              "thumbUp": {
                "name": "thumbUp",
                "type": "boolean",
                "description": "Indicates positive information for the deleted card."
              },
              "thumbDown": {
                "name": "thumbDown",
                "type": "boolean",
                "description": "Indicates negative information for the deleted card."
              }
            },
            "methods": [
              "attachDeleteCard",
              "detachDeleteCard",
              "fireDeleteCard"
            ]
          },
          {
            "name": "editCard",
            "visibility": "public",
            "description": "The event is fired when a new card has been edited.",
            "parameters": {
              "title": {
                "name": "title",
                "type": "string",
                "description": "The title of the edited card."
              },
              "body": {
                "name": "body",
                "type": "string",
                "description": "A new text of the edited card."
              },
              "timestamp": {
                "name": "timestamp",
                "type": "string",
                "description": "A new timestamp of the edited card."
              },
              "uid": {
                "name": "uid",
                "type": "string",
                "description": "A unique ID that was set by an application developer."
              },
              "thumbUp": {
                "name": "thumbUp",
                "type": "boolean",
                "description": "Indicates positive information for the edited card."
              },
              "thumbDown": {
                "name": "thumbDown",
                "type": "boolean",
                "description": "Indicates negative information for the edited card."
              },
              "tags": {
                "name": "tags",
                "type": "object",
                "description": "Updated array of the String type tags applied to the card during editing."
              }
            },
            "methods": ["attachEditCard", "detachEditCard", "fireEditCard"]
          },
          {
            "name": "attachmentSelect",
            "visibility": "public",
            "description": "The event is fired when the value of attached file has been changed.",
            "parameters": {
              "filename": {
                "name": "filename",
                "type": "string",
                "description": "A name of the attached file."
              }
            },
            "methods": [
              "attachAttachmentSelect",
              "detachAttachmentSelect",
              "fireAttachmentSelect"
            ]
          },
          {
            "name": "attachmentUploadComplete",
            "visibility": "public",
            "description": "Fire event uploadComplete to attached listeners.",
            "parameters": {
              "response": {
                "name": "response",
                "type": "string",
                "description": "The response message of the String type that comes from the server. On the server side this response has to be put within the \"body\" tags of the response document of the iFrame. It can consist of a return code and an optional message. This does not work in cross-domain scenarios."
              },
              "uid": {
                "name": "uid",
                "type": "string",
                "description": "The unique ID of the card."
              }
            },
            "methods": [
              "attachAttachmentUploadComplete",
              "detachAttachmentUploadComplete",
              "fireAttachmentUploadComplete"
            ]
          },
          {
            "name": "attachmentDelete",
            "visibility": "public",
            "description": "The event is fired, when user deletes the attached file.",
            "parameters": {
              "filename": {
                "name": "filename",
                "type": "string",
                "description": "A name of the attached file."
              },
              "uid": {
                "name": "uid",
                "type": "string",
                "description": "The unique ID of the card."
              }
            },
            "methods": [
              "attachAttachmentDelete",
              "detachAttachmentDelete",
              "fireAttachmentDelete"
            ]
          },
          {
            "name": "attachmentClick",
            "visibility": "public",
            "description": "The event is fired when a user presses the attachment link.",
            "parameters": {
              "uid": {
                "name": "uid",
                "type": "string",
                "description": "The unique ID of the card."
              },
              "isCardAttachment": {
                "name": "isCardAttachment",
                "type": "string",
                "description": "If true, a user chooses the attachment in the Note card. If false, a user chooses the attachment in the Feeder card."
              },
              "filename": {
                "name": "filename",
                "type": "string",
                "description": "A name of the attached file."
              }
            },
            "methods": [
              "attachAttachmentClick",
              "detachAttachmentClick",
              "fireAttachmentClick"
            ]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new NoteTaker.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "addCard",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "title": {
                      "name": "title",
                      "type": "string",
                      "optional": false,
                      "description": "The title of the note to be added."
                    },
                    "body": {
                      "name": "body",
                      "type": "string",
                      "optional": false,
                      "description": "The text of the note to be added."
                    },
                    "timestamp": {
                      "name": "timestamp",
                      "type": "object",
                      "optional": false,
                      "description": "The timestamp of the note to be added."
                    },
                    "viewAllTrigger": {
                      "name": "viewAllTrigger",
                      "type": "int",
                      "optional": false,
                      "description": "The View All link appears in the Note Taker card when length of a body text exceeds the specified value."
                    },
                    "thumbUp": {
                      "name": "thumbUp",
                      "type": "boolean",
                      "optional": false,
                      "description": "Indicates positive information for a new card."
                    },
                    "thumbDown": {
                      "name": "thumbDown",
                      "type": "boolean",
                      "optional": false,
                      "description": "Indicates negative information for a new card."
                    },
                    "attachmentFilename": {
                      "name": "attachmentFilename",
                      "type": "string",
                      "optional": false,
                      "description": "Stores the name of the file attached to the card."
                    },
                    "uid": {
                      "name": "uid",
                      "type": "string",
                      "optional": false,
                      "description": "The unique ID if available."
                    },
                    "attachmentUrl": {
                      "name": "attachmentUrl",
                      "type": "string",
                      "optional": false,
                      "description": "Stores the URL of the file attached to the card."
                    },
                    "card": {
                      "name": "card",
                      "type": "sap.suite.ui.commons.NoteTakerCard",
                      "optional": false,
                      "description": "A newly created card if no data binding is available. If data binding is available, this parameter is empty."
                    }
                  }
                }
              }
            }
          ],
          "description": "The event is fired when a new card is added if no data binding is available. If data binding is available, the event is fired to notify a developer to add an element to the model."
        },
        {
          "name": "attachmentClick",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "uid": {
                      "name": "uid",
                      "type": "string",
                      "optional": false,
                      "description": "The unique ID of the card."
                    },
                    "isCardAttachment": {
                      "name": "isCardAttachment",
                      "type": "string",
                      "optional": false,
                      "description": "If true, a user chooses the attachment in the Note card. If false, a user chooses the attachment in the Feeder card."
                    },
                    "filename": {
                      "name": "filename",
                      "type": "string",
                      "optional": false,
                      "description": "A name of the attached file."
                    }
                  }
                }
              }
            }
          ],
          "description": "The event is fired when a user presses the attachment link."
        },
        {
          "name": "attachmentDelete",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "filename": {
                      "name": "filename",
                      "type": "string",
                      "optional": false,
                      "description": "A name of the attached file."
                    },
                    "uid": {
                      "name": "uid",
                      "type": "string",
                      "optional": false,
                      "description": "The unique ID of the card."
                    }
                  }
                }
              }
            }
          ],
          "description": "The event is fired, when user deletes the attached file."
        },
        {
          "name": "attachmentSelect",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "filename": {
                      "name": "filename",
                      "type": "string",
                      "optional": false,
                      "description": "A name of the attached file."
                    }
                  }
                }
              }
            }
          ],
          "description": "The event is fired when the value of attached file has been changed."
        },
        {
          "name": "attachmentUploadComplete",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "response": {
                      "name": "response",
                      "type": "string",
                      "optional": false,
                      "description": "The response message of the String type that comes from the server. On the server side this response has to be put within the \"body\" tags of the response document of the iFrame. It can consist of a return code and an optional message. This does not work in cross-domain scenarios."
                    },
                    "uid": {
                      "name": "uid",
                      "type": "string",
                      "optional": false,
                      "description": "The unique ID of the card."
                    }
                  }
                }
              }
            }
          ],
          "description": "Fire event uploadComplete to attached listeners."
        },
        {
          "name": "deleteCard",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "title": {
                      "name": "title",
                      "type": "string",
                      "optional": false,
                      "description": "The title of the card to be deleted."
                    },
                    "body": {
                      "name": "body",
                      "type": "string",
                      "optional": false,
                      "description": "The text of the card to be deleted."
                    },
                    "timestamp": {
                      "name": "timestamp",
                      "type": "string",
                      "optional": false,
                      "description": "The timestamp of the card to be deleted."
                    },
                    "uid": {
                      "name": "uid",
                      "type": "string",
                      "optional": false,
                      "description": "The unique ID that was set by an application developer."
                    },
                    "thumbUp": {
                      "name": "thumbUp",
                      "type": "boolean",
                      "optional": false,
                      "description": "Indicates positive information for the deleted card."
                    },
                    "thumbDown": {
                      "name": "thumbDown",
                      "type": "boolean",
                      "optional": false,
                      "description": "Indicates negative information for the deleted card."
                    }
                  }
                }
              }
            }
          ],
          "description": "The event is fired when a new card is deleted if no data binding is available. If data binding is available, the event is fired to notify a developer to delete the element from the model."
        },
        {
          "name": "editCard",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "title": {
                      "name": "title",
                      "type": "string",
                      "optional": false,
                      "description": "The title of the edited card."
                    },
                    "body": {
                      "name": "body",
                      "type": "string",
                      "optional": false,
                      "description": "A new text of the edited card."
                    },
                    "timestamp": {
                      "name": "timestamp",
                      "type": "string",
                      "optional": false,
                      "description": "A new timestamp of the edited card."
                    },
                    "uid": {
                      "name": "uid",
                      "type": "string",
                      "optional": false,
                      "description": "A unique ID that was set by an application developer."
                    },
                    "thumbUp": {
                      "name": "thumbUp",
                      "type": "boolean",
                      "optional": false,
                      "description": "Indicates positive information for the edited card."
                    },
                    "thumbDown": {
                      "name": "thumbDown",
                      "type": "boolean",
                      "optional": false,
                      "description": "Indicates negative information for the edited card."
                    },
                    "tags": {
                      "name": "tags",
                      "type": "object",
                      "optional": false,
                      "description": "Updated array of the String type tags applied to the card during editing."
                    }
                  }
                }
              }
            }
          ],
          "description": "The event is fired when a new card has been edited."
        }
      ],
      "methods": [
        {
          "name": "addCard",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.NoteTaker",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oCard",
              "type": "sap.suite.ui.commons.NoteTakerCard",
              "optional": false,
              "description": "The card to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some card to the aggregation {@link #getCards cards}."
        },
        {
          "name": "attachAddCard",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.NoteTaker",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.NoteTaker</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:addCard addCard} event of this <code>sap.suite.ui.commons.NoteTaker</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.NoteTaker</code> itself.\n\nThe event is fired when a new card is added if no data binding is available. If data binding is available, the event is fired to notify a developer to add an element to the model."
        },
        {
          "name": "attachAttachmentClick",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.NoteTaker",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.NoteTaker</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:attachmentClick attachmentClick} event of this <code>sap.suite.ui.commons.NoteTaker</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.NoteTaker</code> itself.\n\nThe event is fired when a user presses the attachment link."
        },
        {
          "name": "attachAttachmentDelete",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.NoteTaker",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.NoteTaker</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:attachmentDelete attachmentDelete} event of this <code>sap.suite.ui.commons.NoteTaker</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.NoteTaker</code> itself.\n\nThe event is fired, when user deletes the attached file."
        },
        {
          "name": "attachAttachmentSelect",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.NoteTaker",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.NoteTaker</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:attachmentSelect attachmentSelect} event of this <code>sap.suite.ui.commons.NoteTaker</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.NoteTaker</code> itself.\n\nThe event is fired when the value of attached file has been changed."
        },
        {
          "name": "attachAttachmentUploadComplete",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.NoteTaker",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.NoteTaker</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:attachmentUploadComplete attachmentUploadComplete} event of this <code>sap.suite.ui.commons.NoteTaker</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.NoteTaker</code> itself.\n\nFire event uploadComplete to attached listeners."
        },
        {
          "name": "attachDeleteCard",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.NoteTaker",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.NoteTaker</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:deleteCard deleteCard} event of this <code>sap.suite.ui.commons.NoteTaker</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.NoteTaker</code> itself.\n\nThe event is fired when a new card is deleted if no data binding is available. If data binding is available, the event is fired to notify a developer to delete the element from the model."
        },
        {
          "name": "attachEditCard",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.NoteTaker",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.NoteTaker</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:editCard editCard} event of this <code>sap.suite.ui.commons.NoteTaker</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.NoteTaker</code> itself.\n\nThe event is fired when a new card has been edited."
        },
        {
          "name": "destroyCards",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.NoteTaker",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the cards in the aggregation {@link #getCards cards}."
        },
        {
          "name": "detachAddCard",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.NoteTaker",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:addCard addCard} event of this <code>sap.suite.ui.commons.NoteTaker</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachAttachmentClick",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.NoteTaker",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:attachmentClick attachmentClick} event of this <code>sap.suite.ui.commons.NoteTaker</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachAttachmentDelete",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.NoteTaker",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:attachmentDelete attachmentDelete} event of this <code>sap.suite.ui.commons.NoteTaker</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachAttachmentSelect",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.NoteTaker",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:attachmentSelect attachmentSelect} event of this <code>sap.suite.ui.commons.NoteTaker</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachAttachmentUploadComplete",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.NoteTaker",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:attachmentUploadComplete attachmentUploadComplete} event of this <code>sap.suite.ui.commons.NoteTaker</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachDeleteCard",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.NoteTaker",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:deleteCard deleteCard} event of this <code>sap.suite.ui.commons.NoteTaker</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachEditCard",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.NoteTaker",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:editCard editCard} event of this <code>sap.suite.ui.commons.NoteTaker</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.NoteTaker with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "fireAddCard",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.NoteTaker",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "title": {
                  "name": "title",
                  "type": "string",
                  "optional": true,
                  "description": "The title of the note to be added."
                },
                "body": {
                  "name": "body",
                  "type": "string",
                  "optional": true,
                  "description": "The text of the note to be added."
                },
                "timestamp": {
                  "name": "timestamp",
                  "type": "object",
                  "optional": true,
                  "description": "The timestamp of the note to be added."
                },
                "viewAllTrigger": {
                  "name": "viewAllTrigger",
                  "type": "int",
                  "optional": true,
                  "description": "The View All link appears in the Note Taker card when length of a body text exceeds the specified value."
                },
                "thumbUp": {
                  "name": "thumbUp",
                  "type": "boolean",
                  "optional": true,
                  "description": "Indicates positive information for a new card."
                },
                "thumbDown": {
                  "name": "thumbDown",
                  "type": "boolean",
                  "optional": true,
                  "description": "Indicates negative information for a new card."
                },
                "attachmentFilename": {
                  "name": "attachmentFilename",
                  "type": "string",
                  "optional": true,
                  "description": "Stores the name of the file attached to the card."
                },
                "uid": {
                  "name": "uid",
                  "type": "string",
                  "optional": true,
                  "description": "The unique ID if available."
                },
                "attachmentUrl": {
                  "name": "attachmentUrl",
                  "type": "string",
                  "optional": true,
                  "description": "Stores the URL of the file attached to the card."
                },
                "card": {
                  "name": "card",
                  "type": "sap.suite.ui.commons.NoteTakerCard",
                  "optional": true,
                  "description": "A newly created card if no data binding is available. If data binding is available, this parameter is empty."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:addCard addCard} to attached listeners."
        },
        {
          "name": "fireAttachmentClick",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.NoteTaker",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "uid": {
                  "name": "uid",
                  "type": "string",
                  "optional": true,
                  "description": "The unique ID of the card."
                },
                "isCardAttachment": {
                  "name": "isCardAttachment",
                  "type": "string",
                  "optional": true,
                  "description": "If true, a user chooses the attachment in the Note card. If false, a user chooses the attachment in the Feeder card."
                },
                "filename": {
                  "name": "filename",
                  "type": "string",
                  "optional": true,
                  "description": "A name of the attached file."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:attachmentClick attachmentClick} to attached listeners."
        },
        {
          "name": "fireAttachmentDelete",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.NoteTaker",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "filename": {
                  "name": "filename",
                  "type": "string",
                  "optional": true,
                  "description": "A name of the attached file."
                },
                "uid": {
                  "name": "uid",
                  "type": "string",
                  "optional": true,
                  "description": "The unique ID of the card."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:attachmentDelete attachmentDelete} to attached listeners."
        },
        {
          "name": "fireAttachmentSelect",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.NoteTaker",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "filename": {
                  "name": "filename",
                  "type": "string",
                  "optional": true,
                  "description": "A name of the attached file."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:attachmentSelect attachmentSelect} to attached listeners."
        },
        {
          "name": "fireAttachmentUploadComplete",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.NoteTaker",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "response": {
                  "name": "response",
                  "type": "string",
                  "optional": true,
                  "description": "The response message of the String type that comes from the server. On the server side this response has to be put within the \"body\" tags of the response document of the iFrame. It can consist of a return code and an optional message. This does not work in cross-domain scenarios."
                },
                "uid": {
                  "name": "uid",
                  "type": "string",
                  "optional": true,
                  "description": "The unique ID of the card."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:attachmentUploadComplete attachmentUploadComplete} to attached listeners."
        },
        {
          "name": "fireDeleteCard",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.NoteTaker",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "title": {
                  "name": "title",
                  "type": "string",
                  "optional": true,
                  "description": "The title of the card to be deleted."
                },
                "body": {
                  "name": "body",
                  "type": "string",
                  "optional": true,
                  "description": "The text of the card to be deleted."
                },
                "timestamp": {
                  "name": "timestamp",
                  "type": "string",
                  "optional": true,
                  "description": "The timestamp of the card to be deleted."
                },
                "uid": {
                  "name": "uid",
                  "type": "string",
                  "optional": true,
                  "description": "The unique ID that was set by an application developer."
                },
                "thumbUp": {
                  "name": "thumbUp",
                  "type": "boolean",
                  "optional": true,
                  "description": "Indicates positive information for the deleted card."
                },
                "thumbDown": {
                  "name": "thumbDown",
                  "type": "boolean",
                  "optional": true,
                  "description": "Indicates negative information for the deleted card."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:deleteCard deleteCard} to attached listeners."
        },
        {
          "name": "fireEditCard",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.NoteTaker",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "title": {
                  "name": "title",
                  "type": "string",
                  "optional": true,
                  "description": "The title of the edited card."
                },
                "body": {
                  "name": "body",
                  "type": "string",
                  "optional": true,
                  "description": "A new text of the edited card."
                },
                "timestamp": {
                  "name": "timestamp",
                  "type": "string",
                  "optional": true,
                  "description": "A new timestamp of the edited card."
                },
                "uid": {
                  "name": "uid",
                  "type": "string",
                  "optional": true,
                  "description": "A unique ID that was set by an application developer."
                },
                "thumbUp": {
                  "name": "thumbUp",
                  "type": "boolean",
                  "optional": true,
                  "description": "Indicates positive information for the edited card."
                },
                "thumbDown": {
                  "name": "thumbDown",
                  "type": "boolean",
                  "optional": true,
                  "description": "Indicates negative information for the edited card."
                },
                "tags": {
                  "name": "tags",
                  "type": "object",
                  "optional": true,
                  "description": "Updated array of the String type tags applied to the card during editing."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:editCard editCard} to attached listeners."
        },
        {
          "name": "getAttachmentName",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>attachmentName</code>"
          },
          "description": "Gets current value of property {@link #getAttachmentName attachmentName}.\n\nThe attachment property name for identification on the server side after sending data to the server.\n\nDefault value is <code>attachment</code>."
        },
        {
          "name": "getAttachmentUploadUrl",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>attachmentUploadUrl</code>"
          },
          "description": "Gets current value of property {@link #getAttachmentUploadUrl attachmentUploadUrl}.\n\nDefines a path on the server where the attached files are uploaded."
        },
        {
          "name": "getCards",
          "visibility": "public",
          "returnValue": { "type": "sap.suite.ui.commons.NoteTakerCard[]" },
          "description": "Gets content of aggregation {@link #getCards cards}.\n\nThis aggregation allows you to add note cards to the Note Taker and remove them from the Note Taker."
        },
        {
          "name": "getCardViewAllTrigger",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>cardViewAllTrigger</code>"
          },
          "description": "Gets current value of property {@link #getCardViewAllTrigger cardViewAllTrigger}.\n\nThe View All link appears in the Note Taker card when length of a card body text exceeds the specified value. The updated value of this property is not applied to the existing cards.\n\nDefault value is <code>1800</code>."
        },
        {
          "name": "getFilterCriteria",
          "visibility": "public",
          "returnValue": {
            "type": "object",
            "description": "Value of property <code>filterCriteria</code>"
          },
          "description": "Gets current value of property {@link #getFilterCriteria filterCriteria}.\n\nA composite object containing criteria for filtering cards in the Note Taker."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.NoteTaker."
        },
        {
          "name": "getVisibleNotes",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>visibleNotes</code>"
          },
          "description": "Gets current value of property {@link #getVisibleNotes visibleNotes}.\n\nNumber of notes to display.\n\nDefault value is <code>2</code>."
        },
        {
          "name": "indexOfCard",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oCard",
              "type": "sap.suite.ui.commons.NoteTakerCard",
              "optional": false,
              "description": "The card whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.suite.ui.commons.NoteTakerCard</code> in the aggregation {@link #getCards cards}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "insertCard",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.NoteTaker",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oCard",
              "type": "sap.suite.ui.commons.NoteTakerCard",
              "optional": false,
              "description": "The card to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the card should be inserted at; for a negative value of <code>iIndex</code>, the card is inserted at position 0; for a value greater than the current size of the aggregation, the card is inserted at the last position"
            }
          ],
          "description": "Inserts a card into the aggregation {@link #getCards cards}."
        },
        {
          "name": "removeAllCards",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.NoteTakerCard[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getCards cards}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeCard",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.NoteTakerCard",
            "description": "The removed card or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vCard",
              "type": "int|string|sap.suite.ui.commons.NoteTakerCard",
              "optional": false,
              "description": "The card to remove or its index or id"
            }
          ],
          "description": "Removes a card from the aggregation {@link #getCards cards}."
        },
        {
          "name": "setAttachmentName",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.NoteTaker",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sAttachmentName",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>attachmentName</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getAttachmentName attachmentName}.\n\nThe attachment property name for identification on the server side after sending data to the server.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>attachment</code>."
        },
        {
          "name": "setAttachmentUploadUrl",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.NoteTaker",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sAttachmentUploadUrl",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>attachmentUploadUrl</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getAttachmentUploadUrl attachmentUploadUrl}.\n\nDefines a path on the server where the attached files are uploaded.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setCardViewAllTrigger",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.NoteTaker",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iCardViewAllTrigger",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>cardViewAllTrigger</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getCardViewAllTrigger cardViewAllTrigger}.\n\nThe View All link appears in the Note Taker card when length of a card body text exceeds the specified value. The updated value of this property is not applied to the existing cards.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>1800</code>."
        },
        {
          "name": "setFilterCriteria",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.NoteTaker",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oFilterCriteria",
              "type": "object",
              "optional": false,
              "description": "New value for property <code>filterCriteria</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getFilterCriteria filterCriteria}.\n\nA composite object containing criteria for filtering cards in the Note Taker.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setVisibleNotes",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.NoteTaker",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iVisibleNotes",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>visibleNotes</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getVisibleNotes visibleNotes}.\n\nNumber of notes to display.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>2</code>."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.NoteTakerCard",
      "basename": "NoteTakerCard",
      "resource": "sap/suite/ui/commons/NoteTakerCard.js",
      "module": "sap/suite/ui/commons/NoteTakerCard",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.core.Control",
      "description": "This control allows you to store Note Taker card header and body text.",
      "deprecated": {
        "since": "1.32",
        "text": "Deprecated. Standard Fiori technology should be used."
      },
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "header",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Stores the Note Taker card header.",
            "methods": ["getHeader", "setHeader"]
          },
          {
            "name": "body",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Stores the Note Taker card body text.",
            "methods": ["getBody", "setBody"]
          },
          {
            "name": "timestamp",
            "type": "object",
            "defaultValue": "new Date()",
            "group": "Misc",
            "visibility": "public",
            "description": "Stores a timestamp of the Note Taker card.",
            "methods": ["getTimestamp", "setTimestamp"]
          },
          {
            "name": "tags",
            "type": "object",
            "defaultValue": "[]",
            "group": "Misc",
            "visibility": "public",
            "description": "Contains an array of the String type tags applied to the current card.",
            "methods": ["getTags", "setTags"]
          },
          {
            "name": "viewAllTrigger",
            "type": "int",
            "defaultValue": 1800,
            "group": "Misc",
            "visibility": "public",
            "description": "The View All link appears in the Note Taker card if a body text length exceeds the specified value.",
            "methods": ["getViewAllTrigger", "setViewAllTrigger"]
          },
          {
            "name": "uid",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The card ID. This property should be set by an application developer.",
            "methods": ["getUid", "setUid"]
          },
          {
            "name": "isFiltered",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "description": "Shows whether the note card is hidden by the applied filter.",
            "methods": ["getIsFiltered", "setIsFiltered"]
          },
          {
            "name": "thumbUp",
            "type": "boolean",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Indicates positive information for the card.",
            "methods": ["getThumbUp", "setThumbUp"]
          },
          {
            "name": "thumbDown",
            "type": "boolean",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Indicates negative information for the card.",
            "methods": ["getThumbDown", "setThumbDown"]
          },
          {
            "name": "allTags",
            "type": "object",
            "defaultValue": "[]",
            "group": "Misc",
            "visibility": "public",
            "description": "Contains an array of the String type tags available for selection during the card update.",
            "methods": ["getAllTags", "setAllTags"]
          },
          {
            "name": "attachmentFilename",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Stores the name of the file attached to the card.",
            "methods": ["getAttachmentFilename", "setAttachmentFilename"]
          },
          {
            "name": "attachmentUrl",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Stores the address of the file attached to the card.",
            "methods": ["getAttachmentUrl", "setAttachmentUrl"]
          }
        ],
        "events": [
          {
            "name": "editNote",
            "visibility": "public",
            "description": "The event is fired when a user chooses the Edit button in the note card.",
            "parameters": {
              "title": {
                "name": "title",
                "type": "string",
                "description": "The title of edited card."
              },
              "body": {
                "name": "body",
                "type": "string",
                "description": "A new text of the edited card."
              },
              "timestamp": {
                "name": "timestamp",
                "type": "string",
                "description": "A new timestamp of the edited card."
              },
              "uid": {
                "name": "uid",
                "type": "string",
                "description": "A unique ID that was set by an application developer."
              },
              "thumbUp": {
                "name": "thumbUp",
                "type": "boolean",
                "description": "Indicates positive information for the edited card."
              },
              "thumbDown": {
                "name": "thumbDown",
                "type": "boolean",
                "description": "Indicates negative information for the edited card."
              },
              "tags": {
                "name": "tags",
                "type": "object",
                "description": "Updated array of the String type tags applied to the card during editing."
              }
            },
            "methods": ["attachEditNote", "detachEditNote", "fireEditNote"]
          },
          {
            "name": "deleteNote",
            "visibility": "public",
            "description": "The event is fired when a card needs to be deleted. This event is needed for the Note Taker control.",
            "parameters": {
              "cardId": {
                "name": "cardId",
                "type": "string",
                "description": "The HTML ID of a card that needs to be deleted."
              },
              "title": {
                "name": "title",
                "type": "string",
                "description": "The title of the card to be deleted."
              },
              "body": {
                "name": "body",
                "type": "string",
                "description": "The text of the card to be deleted."
              },
              "timestamp": {
                "name": "timestamp",
                "type": "string",
                "description": "The timestamp of the card to be deleted."
              },
              "uid": {
                "name": "uid",
                "type": "string",
                "description": "A unique ID that was set by an application developer."
              },
              "thumbUp": {
                "name": "thumbUp",
                "type": "boolean",
                "description": "Indicates positive information for the deleted card."
              },
              "thumbDown": {
                "name": "thumbDown",
                "type": "boolean",
                "description": "Indicates negative information for the deleted card."
              }
            },
            "methods": [
              "attachDeleteNote",
              "detachDeleteNote",
              "fireDeleteNote"
            ]
          },
          {
            "name": "attachmentClick",
            "visibility": "public",
            "description": "The event is fired when a user chooses the attachment download link.",
            "parameters": {
              "uid": {
                "name": "uid",
                "type": "string",
                "description": "A unique ID that was set by an application developer."
              },
              "url": {
                "name": "url",
                "type": "string",
                "description": "The address of the file attached to the card."
              },
              "filename": {
                "name": "filename",
                "type": "string",
                "description": "The name of the file attached to the card."
              }
            },
            "methods": [
              "attachAttachmentClick",
              "detachAttachmentClick",
              "fireAttachmentClick"
            ]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new NoteTakerCard.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "attachmentClick",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "uid": {
                      "name": "uid",
                      "type": "string",
                      "optional": false,
                      "description": "A unique ID that was set by an application developer."
                    },
                    "url": {
                      "name": "url",
                      "type": "string",
                      "optional": false,
                      "description": "The address of the file attached to the card."
                    },
                    "filename": {
                      "name": "filename",
                      "type": "string",
                      "optional": false,
                      "description": "The name of the file attached to the card."
                    }
                  }
                }
              }
            }
          ],
          "description": "The event is fired when a user chooses the attachment download link."
        },
        {
          "name": "deleteNote",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "cardId": {
                      "name": "cardId",
                      "type": "string",
                      "optional": false,
                      "description": "The HTML ID of a card that needs to be deleted."
                    },
                    "title": {
                      "name": "title",
                      "type": "string",
                      "optional": false,
                      "description": "The title of the card to be deleted."
                    },
                    "body": {
                      "name": "body",
                      "type": "string",
                      "optional": false,
                      "description": "The text of the card to be deleted."
                    },
                    "timestamp": {
                      "name": "timestamp",
                      "type": "string",
                      "optional": false,
                      "description": "The timestamp of the card to be deleted."
                    },
                    "uid": {
                      "name": "uid",
                      "type": "string",
                      "optional": false,
                      "description": "A unique ID that was set by an application developer."
                    },
                    "thumbUp": {
                      "name": "thumbUp",
                      "type": "boolean",
                      "optional": false,
                      "description": "Indicates positive information for the deleted card."
                    },
                    "thumbDown": {
                      "name": "thumbDown",
                      "type": "boolean",
                      "optional": false,
                      "description": "Indicates negative information for the deleted card."
                    }
                  }
                }
              }
            }
          ],
          "description": "The event is fired when a card needs to be deleted. This event is needed for the Note Taker control."
        },
        {
          "name": "editNote",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "title": {
                      "name": "title",
                      "type": "string",
                      "optional": false,
                      "description": "The title of edited card."
                    },
                    "body": {
                      "name": "body",
                      "type": "string",
                      "optional": false,
                      "description": "A new text of the edited card."
                    },
                    "timestamp": {
                      "name": "timestamp",
                      "type": "string",
                      "optional": false,
                      "description": "A new timestamp of the edited card."
                    },
                    "uid": {
                      "name": "uid",
                      "type": "string",
                      "optional": false,
                      "description": "A unique ID that was set by an application developer."
                    },
                    "thumbUp": {
                      "name": "thumbUp",
                      "type": "boolean",
                      "optional": false,
                      "description": "Indicates positive information for the edited card."
                    },
                    "thumbDown": {
                      "name": "thumbDown",
                      "type": "boolean",
                      "optional": false,
                      "description": "Indicates negative information for the edited card."
                    },
                    "tags": {
                      "name": "tags",
                      "type": "object",
                      "optional": false,
                      "description": "Updated array of the String type tags applied to the card during editing."
                    }
                  }
                }
              }
            }
          ],
          "description": "The event is fired when a user chooses the Edit button in the note card."
        }
      ],
      "methods": [
        {
          "name": "attachAttachmentClick",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.NoteTakerCard",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.NoteTakerCard</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:attachmentClick attachmentClick} event of this <code>sap.suite.ui.commons.NoteTakerCard</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.NoteTakerCard</code> itself.\n\nThe event is fired when a user chooses the attachment download link."
        },
        {
          "name": "attachDeleteNote",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.NoteTakerCard",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.NoteTakerCard</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:deleteNote deleteNote} event of this <code>sap.suite.ui.commons.NoteTakerCard</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.NoteTakerCard</code> itself.\n\nThe event is fired when a card needs to be deleted. This event is needed for the Note Taker control."
        },
        {
          "name": "attachEditNote",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.NoteTakerCard",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.NoteTakerCard</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:editNote editNote} event of this <code>sap.suite.ui.commons.NoteTakerCard</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.NoteTakerCard</code> itself.\n\nThe event is fired when a user chooses the Edit button in the note card."
        },
        {
          "name": "detachAttachmentClick",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.NoteTakerCard",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:attachmentClick attachmentClick} event of this <code>sap.suite.ui.commons.NoteTakerCard</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachDeleteNote",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.NoteTakerCard",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:deleteNote deleteNote} event of this <code>sap.suite.ui.commons.NoteTakerCard</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachEditNote",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.NoteTakerCard",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:editNote editNote} event of this <code>sap.suite.ui.commons.NoteTakerCard</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.NoteTakerCard with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "fireAttachmentClick",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.NoteTakerCard",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "uid": {
                  "name": "uid",
                  "type": "string",
                  "optional": true,
                  "description": "A unique ID that was set by an application developer."
                },
                "url": {
                  "name": "url",
                  "type": "string",
                  "optional": true,
                  "description": "The address of the file attached to the card."
                },
                "filename": {
                  "name": "filename",
                  "type": "string",
                  "optional": true,
                  "description": "The name of the file attached to the card."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:attachmentClick attachmentClick} to attached listeners."
        },
        {
          "name": "fireDeleteNote",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.NoteTakerCard",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "cardId": {
                  "name": "cardId",
                  "type": "string",
                  "optional": true,
                  "description": "The HTML ID of a card that needs to be deleted."
                },
                "title": {
                  "name": "title",
                  "type": "string",
                  "optional": true,
                  "description": "The title of the card to be deleted."
                },
                "body": {
                  "name": "body",
                  "type": "string",
                  "optional": true,
                  "description": "The text of the card to be deleted."
                },
                "timestamp": {
                  "name": "timestamp",
                  "type": "string",
                  "optional": true,
                  "description": "The timestamp of the card to be deleted."
                },
                "uid": {
                  "name": "uid",
                  "type": "string",
                  "optional": true,
                  "description": "A unique ID that was set by an application developer."
                },
                "thumbUp": {
                  "name": "thumbUp",
                  "type": "boolean",
                  "optional": true,
                  "description": "Indicates positive information for the deleted card."
                },
                "thumbDown": {
                  "name": "thumbDown",
                  "type": "boolean",
                  "optional": true,
                  "description": "Indicates negative information for the deleted card."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:deleteNote deleteNote} to attached listeners."
        },
        {
          "name": "fireEditNote",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.NoteTakerCard",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "title": {
                  "name": "title",
                  "type": "string",
                  "optional": true,
                  "description": "The title of edited card."
                },
                "body": {
                  "name": "body",
                  "type": "string",
                  "optional": true,
                  "description": "A new text of the edited card."
                },
                "timestamp": {
                  "name": "timestamp",
                  "type": "string",
                  "optional": true,
                  "description": "A new timestamp of the edited card."
                },
                "uid": {
                  "name": "uid",
                  "type": "string",
                  "optional": true,
                  "description": "A unique ID that was set by an application developer."
                },
                "thumbUp": {
                  "name": "thumbUp",
                  "type": "boolean",
                  "optional": true,
                  "description": "Indicates positive information for the edited card."
                },
                "thumbDown": {
                  "name": "thumbDown",
                  "type": "boolean",
                  "optional": true,
                  "description": "Indicates negative information for the edited card."
                },
                "tags": {
                  "name": "tags",
                  "type": "object",
                  "optional": true,
                  "description": "Updated array of the String type tags applied to the card during editing."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:editNote editNote} to attached listeners."
        },
        {
          "name": "getAllTags",
          "visibility": "public",
          "returnValue": {
            "type": "object",
            "description": "Value of property <code>allTags</code>"
          },
          "description": "Gets current value of property {@link #getAllTags allTags}.\n\nContains an array of the String type tags available for selection during the card update.\n\nDefault value is <code>[]</code>."
        },
        {
          "name": "getAttachmentFilename",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>attachmentFilename</code>"
          },
          "description": "Gets current value of property {@link #getAttachmentFilename attachmentFilename}.\n\nStores the name of the file attached to the card."
        },
        {
          "name": "getAttachmentUrl",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>attachmentUrl</code>"
          },
          "description": "Gets current value of property {@link #getAttachmentUrl attachmentUrl}.\n\nStores the address of the file attached to the card."
        },
        {
          "name": "getBody",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>body</code>"
          },
          "description": "Gets current value of property {@link #getBody body}.\n\nStores the Note Taker card body text."
        },
        {
          "name": "getHeader",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>header</code>"
          },
          "description": "Gets current value of property {@link #getHeader header}.\n\nStores the Note Taker card header."
        },
        {
          "name": "getIsFiltered",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>isFiltered</code>"
          },
          "description": "Gets current value of property {@link #getIsFiltered isFiltered}.\n\nShows whether the note card is hidden by the applied filter.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.NoteTakerCard."
        },
        {
          "name": "getTags",
          "visibility": "public",
          "returnValue": {
            "type": "object",
            "description": "Value of property <code>tags</code>"
          },
          "description": "Gets current value of property {@link #getTags tags}.\n\nContains an array of the String type tags applied to the current card.\n\nDefault value is <code>[]</code>."
        },
        {
          "name": "getThumbDown",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>thumbDown</code>"
          },
          "description": "Gets current value of property {@link #getThumbDown thumbDown}.\n\nIndicates negative information for the card."
        },
        {
          "name": "getThumbUp",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>thumbUp</code>"
          },
          "description": "Gets current value of property {@link #getThumbUp thumbUp}.\n\nIndicates positive information for the card."
        },
        {
          "name": "getTimestamp",
          "visibility": "public",
          "returnValue": {
            "type": "object",
            "description": "Value of property <code>timestamp</code>"
          },
          "description": "Gets current value of property {@link #getTimestamp timestamp}.\n\nStores a timestamp of the Note Taker card.\n\nDefault value is <code>new Date()</code>."
        },
        {
          "name": "getUid",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>uid</code>"
          },
          "description": "Gets current value of property {@link #getUid uid}.\n\nThe card ID. This property should be set by an application developer."
        },
        {
          "name": "getViewAllTrigger",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>viewAllTrigger</code>"
          },
          "description": "Gets current value of property {@link #getViewAllTrigger viewAllTrigger}.\n\nThe View All link appears in the Note Taker card if a body text length exceeds the specified value.\n\nDefault value is <code>1800</code>."
        },
        {
          "name": "setAllTags",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.NoteTakerCard",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oAllTags",
              "type": "object",
              "optional": false,
              "description": "New value for property <code>allTags</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getAllTags allTags}.\n\nContains an array of the String type tags available for selection during the card update.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>[]</code>."
        },
        {
          "name": "setAttachmentFilename",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.NoteTakerCard",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sAttachmentFilename",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>attachmentFilename</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getAttachmentFilename attachmentFilename}.\n\nStores the name of the file attached to the card.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setAttachmentUrl",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.NoteTakerCard",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sAttachmentUrl",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>attachmentUrl</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getAttachmentUrl attachmentUrl}.\n\nStores the address of the file attached to the card.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setBody",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.NoteTakerCard",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sBody",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>body</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getBody body}.\n\nStores the Note Taker card body text.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setHeader",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.NoteTakerCard",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sHeader",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>header</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getHeader header}.\n\nStores the Note Taker card header.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setIsFiltered",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.NoteTakerCard",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bIsFiltered",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>isFiltered</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getIsFiltered isFiltered}.\n\nShows whether the note card is hidden by the applied filter.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setTags",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.NoteTakerCard",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oTags",
              "type": "object",
              "optional": false,
              "description": "New value for property <code>tags</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getTags tags}.\n\nContains an array of the String type tags applied to the current card.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>[]</code>."
        },
        {
          "name": "setThumbDown",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.NoteTakerCard",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bThumbDown",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>thumbDown</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getThumbDown thumbDown}.\n\nIndicates negative information for the card.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setThumbUp",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.NoteTakerCard",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bThumbUp",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>thumbUp</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getThumbUp thumbUp}.\n\nIndicates positive information for the card.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setTimestamp",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.NoteTakerCard",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oTimestamp",
              "type": "object",
              "optional": false,
              "description": "New value for property <code>timestamp</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getTimestamp timestamp}.\n\nStores a timestamp of the Note Taker card.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>new Date()</code>."
        },
        {
          "name": "setUid",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.NoteTakerCard",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sUid",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>uid</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getUid uid}.\n\nThe card ID. This property should be set by an application developer.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setViewAllTrigger",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.NoteTakerCard",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iViewAllTrigger",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>viewAllTrigger</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getViewAllTrigger viewAllTrigger}.\n\nThe View All link appears in the Note Taker card if a body text length exceeds the specified value.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>1800</code>."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.NoteTakerFeeder",
      "basename": "NoteTakerFeeder",
      "resource": "sap/suite/ui/commons/NoteTakerFeeder.js",
      "module": "sap/suite/ui/commons/NoteTakerFeeder",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.core.Control",
      "description": "This control allows you to enter a quick note and N note cards.",
      "deprecated": {
        "since": "1.32",
        "text": "Deprecated. Standard Fiori technology should be used."
      },
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "body",
            "type": "string",
            "defaultValue": null,
            "group": "Data",
            "visibility": "public",
            "description": "The text inside the note card.",
            "methods": ["getBody", "setBody"]
          },
          {
            "name": "title",
            "type": "string",
            "defaultValue": null,
            "group": "Data",
            "visibility": "public",
            "description": "This text is the header of a new note.",
            "methods": ["getTitle", "setTitle"]
          },
          {
            "name": "tags",
            "type": "object",
            "defaultValue": "[]",
            "group": "Misc",
            "visibility": "public",
            "description": "The list of tags selected for addition to a new note card.",
            "methods": ["getTags", "setTags"]
          },
          {
            "name": "thumbUp",
            "type": "boolean",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Sets positive indication for a new note.",
            "methods": ["getThumbUp", "setThumbUp"]
          },
          {
            "name": "thumbDown",
            "type": "boolean",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Sets negative indication for a new note.",
            "methods": ["getThumbDown", "setThumbDown"]
          },
          {
            "name": "attachmentUploadUrl",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Sets the upload attachment URL for a new card.",
            "methods": ["getAttachmentUploadUrl", "setAttachmentUploadUrl"]
          },
          {
            "name": "attachmentName",
            "type": "string",
            "defaultValue": "attachment",
            "group": "Misc",
            "visibility": "public",
            "description": "The attachment property name for identification on the server side after sending data to the server.",
            "methods": ["getAttachmentName", "setAttachmentName"]
          }
        ],
        "aggregations": [
          {
            "name": "bodyArea",
            "singularName": "bodyArea",
            "type": "sap.ui.core.Control",
            "cardinality": "0..1",
            "visibility": "hidden",
            "description": "Hidden aggregation of body area control.",
            "methods": ["getBodyArea", "destroyBodyArea", "setBodyArea"]
          },
          {
            "name": "titleInput",
            "singularName": "titleInput",
            "type": "sap.ui.core.Control",
            "cardinality": "0..1",
            "visibility": "hidden",
            "description": "Hidden aggregation of title field control.",
            "methods": ["getTitleInput", "destroyTitleInput", "setTitleInput"]
          },
          {
            "name": "fileUploader",
            "singularName": "fileUploader",
            "type": "sap.ui.core.Control",
            "cardinality": "0..1",
            "visibility": "hidden",
            "description": "Hidden aggregation of FileUploader control.",
            "methods": [
              "getFileUploader",
              "destroyFileUploader",
              "setFileUploader"
            ]
          },
          {
            "name": "tagInput",
            "singularName": "tagInput",
            "type": "sap.ui.core.Control",
            "cardinality": "0..1",
            "visibility": "hidden",
            "description": "Hidden aggregation of tag field control.",
            "methods": ["getTagInput", "destroyTagInput", "setTagInput"]
          }
        ],
        "events": [
          {
            "name": "addNote",
            "visibility": "public",
            "description": "The event is fired when a user chooses the Add button in the control.",
            "parameters": {
              "title": {
                "name": "title",
                "type": "string",
                "description": "The title of the note to be added."
              },
              "body": {
                "name": "body",
                "type": "string",
                "description": "The text of the note to be added."
              },
              "timestamp": {
                "name": "timestamp",
                "type": "object",
                "description": "The timestamp of the note to be added."
              },
              "thumbUp": {
                "name": "thumbUp",
                "type": "boolean",
                "description": "If set to true, a new card should be marked as positive one."
              },
              "thumbDown": {
                "name": "thumbDown",
                "type": "boolean",
                "description": "If set to true, a new card should be marked as negative one."
              },
              "attachmentFilename": {
                "name": "attachmentFilename",
                "type": "string",
                "description": "Stores the attachment file name for a new card."
              }
            },
            "methods": ["attachAddNote", "detachAddNote", "fireAddNote"]
          },
          {
            "name": "attachmentSelect",
            "visibility": "public",
            "description": "The event is fired when the value of attached file has been changed.",
            "parameters": {
              "filename": {
                "name": "filename",
                "type": "string",
                "description": "A name of the attached file."
              }
            },
            "methods": [
              "attachAttachmentSelect",
              "detachAttachmentSelect",
              "fireAttachmentSelect"
            ]
          },
          {
            "name": "attachmentUploadComplete",
            "visibility": "public",
            "description": "The event is fired when the upload of the file is completed. However this covers only the client side of the Upload process and does not give any success status from the server.",
            "parameters": {
              "response": {
                "name": "response",
                "type": "string",
                "description": "The response message that comes from the server. On the server side this response has to be put within the \"body\" tags of the response document of the iFrame. It can consist of a return code and an optional message. This does not work in cross-domain scenarios."
              }
            },
            "methods": [
              "attachAttachmentUploadComplete",
              "detachAttachmentUploadComplete",
              "fireAttachmentUploadComplete"
            ]
          },
          {
            "name": "attachmentDelete",
            "visibility": "public",
            "description": "The event is fired when a user presses the Delete button in the Feeder card.",
            "parameters": {
              "filename": {
                "name": "filename",
                "type": "string",
                "description": "A name of the attached file."
              }
            },
            "methods": [
              "attachAttachmentDelete",
              "detachAttachmentDelete",
              "fireAttachmentDelete"
            ]
          },
          {
            "name": "attachmentClick",
            "visibility": "public",
            "description": "The event is fired when a user presses the attachment link.",
            "parameters": {
              "filename": {
                "name": "filename",
                "type": "string",
                "description": "A name of the attached file."
              }
            },
            "methods": [
              "attachAttachmentClick",
              "detachAttachmentClick",
              "fireAttachmentClick"
            ]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new NoteTakerFeeder.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "addNote",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "title": {
                      "name": "title",
                      "type": "string",
                      "optional": false,
                      "description": "The title of the note to be added."
                    },
                    "body": {
                      "name": "body",
                      "type": "string",
                      "optional": false,
                      "description": "The text of the note to be added."
                    },
                    "timestamp": {
                      "name": "timestamp",
                      "type": "object",
                      "optional": false,
                      "description": "The timestamp of the note to be added."
                    },
                    "thumbUp": {
                      "name": "thumbUp",
                      "type": "boolean",
                      "optional": false,
                      "description": "If set to true, a new card should be marked as positive one."
                    },
                    "thumbDown": {
                      "name": "thumbDown",
                      "type": "boolean",
                      "optional": false,
                      "description": "If set to true, a new card should be marked as negative one."
                    },
                    "attachmentFilename": {
                      "name": "attachmentFilename",
                      "type": "string",
                      "optional": false,
                      "description": "Stores the attachment file name for a new card."
                    }
                  }
                }
              }
            }
          ],
          "description": "The event is fired when a user chooses the Add button in the control."
        },
        {
          "name": "attachmentClick",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "filename": {
                      "name": "filename",
                      "type": "string",
                      "optional": false,
                      "description": "A name of the attached file."
                    }
                  }
                }
              }
            }
          ],
          "description": "The event is fired when a user presses the attachment link."
        },
        {
          "name": "attachmentDelete",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "filename": {
                      "name": "filename",
                      "type": "string",
                      "optional": false,
                      "description": "A name of the attached file."
                    }
                  }
                }
              }
            }
          ],
          "description": "The event is fired when a user presses the Delete button in the Feeder card."
        },
        {
          "name": "attachmentSelect",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "filename": {
                      "name": "filename",
                      "type": "string",
                      "optional": false,
                      "description": "A name of the attached file."
                    }
                  }
                }
              }
            }
          ],
          "description": "The event is fired when the value of attached file has been changed."
        },
        {
          "name": "attachmentUploadComplete",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "response": {
                      "name": "response",
                      "type": "string",
                      "optional": false,
                      "description": "The response message that comes from the server. On the server side this response has to be put within the \"body\" tags of the response document of the iFrame. It can consist of a return code and an optional message. This does not work in cross-domain scenarios."
                    }
                  }
                }
              }
            }
          ],
          "description": "The event is fired when the upload of the file is completed. However this covers only the client side of the Upload process and does not give any success status from the server."
        }
      ],
      "methods": [
        {
          "name": "attachAddNote",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.NoteTakerFeeder",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.NoteTakerFeeder</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:addNote addNote} event of this <code>sap.suite.ui.commons.NoteTakerFeeder</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.NoteTakerFeeder</code> itself.\n\nThe event is fired when a user chooses the Add button in the control."
        },
        {
          "name": "attachAttachmentClick",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.NoteTakerFeeder",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.NoteTakerFeeder</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:attachmentClick attachmentClick} event of this <code>sap.suite.ui.commons.NoteTakerFeeder</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.NoteTakerFeeder</code> itself.\n\nThe event is fired when a user presses the attachment link."
        },
        {
          "name": "attachAttachmentDelete",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.NoteTakerFeeder",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.NoteTakerFeeder</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:attachmentDelete attachmentDelete} event of this <code>sap.suite.ui.commons.NoteTakerFeeder</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.NoteTakerFeeder</code> itself.\n\nThe event is fired when a user presses the Delete button in the Feeder card."
        },
        {
          "name": "attachAttachmentSelect",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.NoteTakerFeeder",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.NoteTakerFeeder</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:attachmentSelect attachmentSelect} event of this <code>sap.suite.ui.commons.NoteTakerFeeder</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.NoteTakerFeeder</code> itself.\n\nThe event is fired when the value of attached file has been changed."
        },
        {
          "name": "attachAttachmentUploadComplete",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.NoteTakerFeeder",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.NoteTakerFeeder</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:attachmentUploadComplete attachmentUploadComplete} event of this <code>sap.suite.ui.commons.NoteTakerFeeder</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.NoteTakerFeeder</code> itself.\n\nThe event is fired when the upload of the file is completed. However this covers only the client side of the Upload process and does not give any success status from the server."
        },
        {
          "name": "detachAddNote",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.NoteTakerFeeder",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:addNote addNote} event of this <code>sap.suite.ui.commons.NoteTakerFeeder</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachAttachmentClick",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.NoteTakerFeeder",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:attachmentClick attachmentClick} event of this <code>sap.suite.ui.commons.NoteTakerFeeder</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachAttachmentDelete",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.NoteTakerFeeder",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:attachmentDelete attachmentDelete} event of this <code>sap.suite.ui.commons.NoteTakerFeeder</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachAttachmentSelect",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.NoteTakerFeeder",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:attachmentSelect attachmentSelect} event of this <code>sap.suite.ui.commons.NoteTakerFeeder</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachAttachmentUploadComplete",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.NoteTakerFeeder",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:attachmentUploadComplete attachmentUploadComplete} event of this <code>sap.suite.ui.commons.NoteTakerFeeder</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.NoteTakerFeeder with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "fireAddNote",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.NoteTakerFeeder",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "title": {
                  "name": "title",
                  "type": "string",
                  "optional": true,
                  "description": "The title of the note to be added."
                },
                "body": {
                  "name": "body",
                  "type": "string",
                  "optional": true,
                  "description": "The text of the note to be added."
                },
                "timestamp": {
                  "name": "timestamp",
                  "type": "object",
                  "optional": true,
                  "description": "The timestamp of the note to be added."
                },
                "thumbUp": {
                  "name": "thumbUp",
                  "type": "boolean",
                  "optional": true,
                  "description": "If set to true, a new card should be marked as positive one."
                },
                "thumbDown": {
                  "name": "thumbDown",
                  "type": "boolean",
                  "optional": true,
                  "description": "If set to true, a new card should be marked as negative one."
                },
                "attachmentFilename": {
                  "name": "attachmentFilename",
                  "type": "string",
                  "optional": true,
                  "description": "Stores the attachment file name for a new card."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:addNote addNote} to attached listeners."
        },
        {
          "name": "fireAttachmentClick",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.NoteTakerFeeder",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "filename": {
                  "name": "filename",
                  "type": "string",
                  "optional": true,
                  "description": "A name of the attached file."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:attachmentClick attachmentClick} to attached listeners."
        },
        {
          "name": "fireAttachmentDelete",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.NoteTakerFeeder",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "filename": {
                  "name": "filename",
                  "type": "string",
                  "optional": true,
                  "description": "A name of the attached file."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:attachmentDelete attachmentDelete} to attached listeners."
        },
        {
          "name": "fireAttachmentSelect",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.NoteTakerFeeder",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "filename": {
                  "name": "filename",
                  "type": "string",
                  "optional": true,
                  "description": "A name of the attached file."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:attachmentSelect attachmentSelect} to attached listeners."
        },
        {
          "name": "fireAttachmentUploadComplete",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.NoteTakerFeeder",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "response": {
                  "name": "response",
                  "type": "string",
                  "optional": true,
                  "description": "The response message that comes from the server. On the server side this response has to be put within the \"body\" tags of the response document of the iFrame. It can consist of a return code and an optional message. This does not work in cross-domain scenarios."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:attachmentUploadComplete attachmentUploadComplete} to attached listeners."
        },
        {
          "name": "getAttachmentName",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>attachmentName</code>"
          },
          "description": "Gets current value of property {@link #getAttachmentName attachmentName}.\n\nThe attachment property name for identification on the server side after sending data to the server.\n\nDefault value is <code>attachment</code>."
        },
        {
          "name": "getAttachmentUploadUrl",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>attachmentUploadUrl</code>"
          },
          "description": "Gets current value of property {@link #getAttachmentUploadUrl attachmentUploadUrl}.\n\nSets the upload attachment URL for a new card."
        },
        {
          "name": "getBody",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>body</code>"
          },
          "description": "Gets current value of property {@link #getBody body}.\n\nThe text inside the note card."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.NoteTakerFeeder."
        },
        {
          "name": "getTags",
          "visibility": "public",
          "returnValue": {
            "type": "object",
            "description": "Value of property <code>tags</code>"
          },
          "description": "Gets current value of property {@link #getTags tags}.\n\nThe list of tags selected for addition to a new note card.\n\nDefault value is <code>[]</code>."
        },
        {
          "name": "getThumbDown",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>thumbDown</code>"
          },
          "description": "Gets current value of property {@link #getThumbDown thumbDown}.\n\nSets negative indication for a new note."
        },
        {
          "name": "getThumbUp",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>thumbUp</code>"
          },
          "description": "Gets current value of property {@link #getThumbUp thumbUp}.\n\nSets positive indication for a new note."
        },
        {
          "name": "getTitle",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>title</code>"
          },
          "description": "Gets current value of property {@link #getTitle title}.\n\nThis text is the header of a new note."
        },
        {
          "name": "setAttachmentName",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.NoteTakerFeeder",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sAttachmentName",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>attachmentName</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getAttachmentName attachmentName}.\n\nThe attachment property name for identification on the server side after sending data to the server.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>attachment</code>."
        },
        {
          "name": "setAttachmentUploadUrl",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.NoteTakerFeeder",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sAttachmentUploadUrl",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>attachmentUploadUrl</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getAttachmentUploadUrl attachmentUploadUrl}.\n\nSets the upload attachment URL for a new card.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setBody",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.NoteTakerFeeder",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sBody",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>body</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getBody body}.\n\nThe text inside the note card.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setTags",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.NoteTakerFeeder",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oTags",
              "type": "object",
              "optional": false,
              "description": "New value for property <code>tags</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getTags tags}.\n\nThe list of tags selected for addition to a new note card.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>[]</code>."
        },
        {
          "name": "setThumbDown",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.NoteTakerFeeder",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bThumbDown",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>thumbDown</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getThumbDown thumbDown}.\n\nSets negative indication for a new note.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setThumbUp",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.NoteTakerFeeder",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bThumbUp",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>thumbUp</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getThumbUp thumbUp}.\n\nSets positive indication for a new note.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setTitle",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.NoteTakerFeeder",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sTitle",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>title</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getTitle title}.\n\nThis text is the header of a new note.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.NumericTile",
      "basename": "NumericTile",
      "resource": "sap/suite/ui/commons/NumericTile.js",
      "module": "sap/suite/ui/commons/NumericTile",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.suite.ui.commons.InfoTile",
      "description": "This control is the implementation of the InfoTile to show a numeric value.",
      "deprecated": {
        "since": "1.25",
        "text": "This control has been deprecated in favor of new sap.suite.ui.commons.GenericTile."
      },
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "value",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The actual value.",
            "methods": ["getValue", "setValue"]
          },
          {
            "name": "scale",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The scaling prefix. Financial characters can be used for currencies and counters. The SI prefixes can be used for units.",
            "methods": ["getScale", "setScale"]
          },
          {
            "name": "unit",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The percent sign, the currency symbol, or the unit of measure.",
            "methods": ["getUnit", "setUnit"]
          },
          {
            "name": "valueColor",
            "type": "sap.suite.ui.commons.InfoTileValueColor",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The semantic color of the value.",
            "methods": ["getValueColor", "setValueColor"]
          },
          {
            "name": "indicator",
            "type": "sap.suite.ui.commons.DeviationIndicator",
            "defaultValue": "None",
            "group": "Misc",
            "visibility": "public",
            "description": "The indicator arrow that shows value deviation.",
            "methods": ["getIndicator", "setIndicator"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new NumericTile.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.NumericTile with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.suite.ui.commons.InfoTile.extend}."
        },
        {
          "name": "getIndicator",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.DeviationIndicator",
            "description": "Value of property <code>indicator</code>"
          },
          "description": "Gets current value of property {@link #getIndicator indicator}.\n\nThe indicator arrow that shows value deviation.\n\nDefault value is <code>None</code>."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.NumericTile."
        },
        {
          "name": "getScale",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>scale</code>"
          },
          "description": "Gets current value of property {@link #getScale scale}.\n\nThe scaling prefix. Financial characters can be used for currencies and counters. The SI prefixes can be used for units."
        },
        {
          "name": "getUnit",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>unit</code>"
          },
          "description": "Gets current value of property {@link #getUnit unit}.\n\nThe percent sign, the currency symbol, or the unit of measure."
        },
        {
          "name": "getValue",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>value</code>"
          },
          "description": "Gets current value of property {@link #getValue value}.\n\nThe actual value."
        },
        {
          "name": "getValueColor",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.InfoTileValueColor",
            "description": "Value of property <code>valueColor</code>"
          },
          "description": "Gets current value of property {@link #getValueColor valueColor}.\n\nThe semantic color of the value."
        },
        {
          "name": "setIndicator",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.NumericTile",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sIndicator",
              "type": "sap.suite.ui.commons.DeviationIndicator",
              "optional": false,
              "description": "New value for property <code>indicator</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getIndicator indicator}.\n\nThe indicator arrow that shows value deviation.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>None</code>."
        },
        {
          "name": "setScale",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.NumericTile",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sScale",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>scale</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getScale scale}.\n\nThe scaling prefix. Financial characters can be used for currencies and counters. The SI prefixes can be used for units.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setUnit",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.NumericTile",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sUnit",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>unit</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getUnit unit}.\n\nThe percent sign, the currency symbol, or the unit of measure.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setValue",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.NumericTile",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sValue",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>value</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getValue value}.\n\nThe actual value.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setValueColor",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.NumericTile",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sValueColor",
              "type": "sap.suite.ui.commons.InfoTileValueColor",
              "optional": false,
              "description": "New value for property <code>valueColor</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getValueColor valueColor}.\n\nThe semantic color of the value.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.PictureZoomIn",
      "basename": "PictureZoomIn",
      "resource": "sap/suite/ui/commons/PictureZoomIn.js",
      "module": "sap/suite/ui/commons/PictureZoomIn",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.core.Control",
      "description": "Shows picture in fullscreen.",
      "deprecated": { "since": "1.34", "text": "Deprecated. Not Fiori." },
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "description",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Description is shown under image.",
            "methods": ["getDescription", "setDescription"]
          },
          {
            "name": "imageSrc",
            "type": "sap.ui.core.URI",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Source for image.",
            "methods": ["getImageSrc", "setImageSrc"]
          }
        ],
        "aggregations": [
          {
            "name": "busyIndicator",
            "singularName": "busyIndicator",
            "type": "sap.ui.core.Control",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "Custom busy indicator.",
            "methods": [
              "getBusyIndicator",
              "destroyBusyIndicator",
              "setBusyIndicator"
            ]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new PictureZoomIn.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "destroyBusyIndicator",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.PictureZoomIn",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the busyIndicator in the aggregation {@link #getBusyIndicator busyIndicator}."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.PictureZoomIn with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "getBusyIndicator",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.Control" },
          "description": "Gets content of aggregation {@link #getBusyIndicator busyIndicator}.\n\nCustom busy indicator."
        },
        {
          "name": "getDescription",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>description</code>"
          },
          "description": "Gets current value of property {@link #getDescription description}.\n\nDescription is shown under image."
        },
        {
          "name": "getImageSrc",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.URI",
            "description": "Value of property <code>imageSrc</code>"
          },
          "description": "Gets current value of property {@link #getImageSrc imageSrc}.\n\nSource for image."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.PictureZoomIn."
        },
        {
          "name": "setBusyIndicator",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.PictureZoomIn",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oBusyIndicator",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The busyIndicator to set"
            }
          ],
          "description": "Sets the aggregated {@link #getBusyIndicator busyIndicator}."
        },
        {
          "name": "setDescription",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.PictureZoomIn",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sDescription",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>description</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getDescription description}.\n\nDescription is shown under image.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setImageSrc",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.PictureZoomIn",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sImageSrc",
              "type": "sap.ui.core.URI",
              "optional": false,
              "description": "New value for property <code>imageSrc</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getImageSrc imageSrc}.\n\nSource for image.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.ProcessFlow",
      "basename": "ProcessFlow",
      "resource": "sap/suite/ui/commons/ProcessFlow.js",
      "module": "sap/suite/ui/commons/ProcessFlow",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.core.Control",
      "description": "Complex control that enables you to display documents or other items in their flow.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "foldedCorners",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "description": "This property defines the folded corners for the single node control. The following values exist: - true: means folded corner - false/null/undefined: means normal corner",
            "methods": ["getFoldedCorners", "setFoldedCorners"]
          },
          {
            "name": "scrollable",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "description": "By default, the control body is embedded into a scroll container of fixed size, so the user can put the control into a fixed size layout. When the control body (the graph) gets larger, the container cuts the overflowing parts of the graph and the cut parts can be displayed by scrolling the control body. When the control body fits into the container limits, obviously no scrolling is possible (and makes sense).\n\nThe scrolling feature can be turned off by setting this property value to false, so the width/height of the whole control will change as the flow graph gets smaller/larger. In this case the control body could not be scrolled, as the control body size matches the control container size.",
            "methods": ["getScrollable", "setScrollable"]
          },
          {
            "name": "wheelZoomable",
            "type": "boolean",
            "defaultValue": true,
            "group": "Behavior",
            "visibility": "public",
            "description": "Defines if semantic zooming by mouse wheel events on desktop browsers is enabled.",
            "methods": ["getWheelZoomable", "setWheelZoomable"]
          },
          {
            "name": "showLabels",
            "type": "boolean",
            "defaultValue": false,
            "group": "Appearance",
            "visibility": "public",
            "description": "Defines if the connection labels are shown or not.",
            "methods": ["getShowLabels", "setShowLabels"]
          }
        ],
        "dnd": { "draggable": false, "droppable": true },
        "aggregations": [
          {
            "name": "_connections",
            "singularName": "_connection",
            "type": "sap.suite.ui.commons.ProcessFlowConnection",
            "cardinality": "0..n",
            "visibility": "hidden",
            "description": "This is the aggregation of the connection controls put into the table to the calculated cells.",
            "methods": [
              "get_connections",
              "destroy_connections",
              "insert_connection",
              "add_connection",
              "remove_connection",
              "indexOf_connection",
              "removeAll_connections"
            ]
          },
          {
            "name": "nodes",
            "singularName": "node",
            "type": "sap.suite.ui.commons.ProcessFlowNode",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "This is the aggregation of nodes in the process flow control.",
            "methods": [
              "getNodes",
              "destroyNodes",
              "insertNode",
              "addNode",
              "removeNode",
              "indexOfNode",
              "removeAllNodes"
            ]
          },
          {
            "name": "lanes",
            "singularName": "lane",
            "type": "sap.suite.ui.commons.ProcessFlowLaneHeader",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "This is a header of the table for the process flow control.",
            "methods": [
              "getLanes",
              "destroyLanes",
              "insertLane",
              "addLane",
              "removeLane",
              "indexOfLane",
              "removeAllLanes"
            ]
          },
          {
            "name": "ariaProperties",
            "singularName": "ariaProperty",
            "type": "sap.suite.ui.commons.AriaProperties",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "ARIA-compliant properties to be added to the control.",
            "methods": [
              "getAriaProperties",
              "destroyAriaProperties",
              "setAriaProperties"
            ]
          }
        ],
        "defaultAggregation": "lanes",
        "events": [
          {
            "name": "nodeTitlePress",
            "visibility": "public",
            "description": "This event is fired when a process flow node title was clicked. The user can access the clicked process flow node control object which is the only argument of the event handler.",
            "deprecated": {
              "since": "1.26",
              "text": "Should not be used any longer, use nodePress event instead ( click on the node)"
            },
            "parameters": {
              "oEvent": {
                "name": "oEvent",
                "type": "object",
                "description": "This object represents the wrapped process flow node object."
              }
            },
            "methods": [
              "attachNodeTitlePress",
              "detachNodeTitlePress",
              "fireNodeTitlePress"
            ]
          },
          {
            "name": "nodePress",
            "visibility": "public",
            "description": "This event is fired when a process flow node was clicked.",
            "parameters": {
              "oEvent": {
                "name": "oEvent",
                "type": "object",
                "description": "This object represents the wrapped process flow node object."
              }
            },
            "methods": ["attachNodePress", "detachNodePress", "fireNodePress"]
          },
          {
            "name": "labelPress",
            "visibility": "public",
            "description": "This event is fired when a process flow connection label was clicked.",
            "parameters": {
              "oEvent": {
                "name": "oEvent",
                "type": "object",
                "description": "This object represents the label information."
              }
            },
            "methods": [
              "attachLabelPress",
              "detachLabelPress",
              "fireLabelPress"
            ]
          },
          {
            "name": "headerPress",
            "visibility": "public",
            "description": "This event is fired when the header column is clicked. This event is available only in header mode, i.e. when no nodes are defined.",
            "parameters": {
              "oEvent": {
                "name": "oEvent",
                "type": "object",
                "description": "This object represents the wrapped process flow lane header object."
              }
            },
            "methods": [
              "attachHeaderPress",
              "detachHeaderPress",
              "fireHeaderPress"
            ]
          },
          {
            "name": "onError",
            "visibility": "public",
            "description": "This event is fired when an issue occurs with the process flow calculation. In most cases, there is an issue with the data. The console contains the detailed error description with the errors.",
            "parameters": {
              "oEvent": {
                "name": "oEvent",
                "type": "object",
                "description": "This parameters contains the localized string with error message."
              }
            },
            "methods": ["attachOnError", "detachOnError", "fireOnError"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new ProcessFlow.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "headerPress",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "oEvent": {
                      "name": "oEvent",
                      "type": "object",
                      "optional": false,
                      "description": "This object represents the wrapped process flow lane header object."
                    }
                  }
                }
              }
            }
          ],
          "description": "This event is fired when the header column is clicked. This event is available only in header mode, i.e. when no nodes are defined."
        },
        {
          "name": "labelPress",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "oEvent": {
                      "name": "oEvent",
                      "type": "object",
                      "optional": false,
                      "description": "This object represents the label information."
                    }
                  }
                }
              }
            }
          ],
          "description": "This event is fired when a process flow connection label was clicked."
        },
        {
          "name": "nodePress",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "oEvent": {
                      "name": "oEvent",
                      "type": "object",
                      "optional": false,
                      "description": "This object represents the wrapped process flow node object."
                    }
                  }
                }
              }
            }
          ],
          "description": "This event is fired when a process flow node was clicked."
        },
        {
          "name": "nodeTitlePress",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "oEvent": {
                      "name": "oEvent",
                      "type": "object",
                      "optional": false,
                      "description": "This object represents the wrapped process flow node object."
                    }
                  }
                }
              }
            }
          ],
          "description": "This event is fired when a process flow node title was clicked. The user can access the clicked process flow node control object which is the only argument of the event handler.",
          "deprecated": {
            "since": "1.26",
            "text": "Should not be used any longer, use nodePress event instead ( click on the node)"
          }
        },
        {
          "name": "onError",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "oEvent": {
                      "name": "oEvent",
                      "type": "object",
                      "optional": false,
                      "description": "This parameters contains the localized string with error message."
                    }
                  }
                }
              }
            }
          ],
          "description": "This event is fired when an issue occurs with the process flow calculation. In most cases, there is an issue with the data. The console contains the detailed error description with the errors."
        }
      ],
      "methods": [
        {
          "name": "addLane",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oLane",
              "type": "sap.suite.ui.commons.ProcessFlowLaneHeader",
              "optional": false,
              "description": "The lane to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some lane to the aggregation {@link #getLanes lanes}."
        },
        {
          "name": "applyNodeDisplayState",
          "visibility": "public",
          "description": "Function applies the changes to the display state based on the requirements. If any node is in the highlighted state all others are set to the dimmed state."
        },
        {
          "name": "attachHeaderPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.ProcessFlow</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:headerPress headerPress} event of this <code>sap.suite.ui.commons.ProcessFlow</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.ProcessFlow</code> itself.\n\nThis event is fired when the header column is clicked. This event is available only in header mode, i.e. when no nodes are defined."
        },
        {
          "name": "attachLabelPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.ProcessFlow</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:labelPress labelPress} event of this <code>sap.suite.ui.commons.ProcessFlow</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.ProcessFlow</code> itself.\n\nThis event is fired when a process flow connection label was clicked."
        },
        {
          "name": "attachNodePress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.ProcessFlow</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:nodePress nodePress} event of this <code>sap.suite.ui.commons.ProcessFlow</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.ProcessFlow</code> itself.\n\nThis event is fired when a process flow node was clicked."
        },
        {
          "name": "attachNodeTitlePress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.ProcessFlow</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:nodeTitlePress nodeTitlePress} event of this <code>sap.suite.ui.commons.ProcessFlow</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.ProcessFlow</code> itself.\n\nThis event is fired when a process flow node title was clicked. The user can access the clicked process flow node control object which is the only argument of the event handler.",
          "deprecated": {
            "since": "1.26",
            "text": "Should not be used any longer, use nodePress event instead ( click on the node)"
          }
        },
        {
          "name": "attachOnError",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.ProcessFlow</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:onError onError} event of this <code>sap.suite.ui.commons.ProcessFlow</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.ProcessFlow</code> itself.\n\nThis event is fired when an issue occurs with the process flow calculation. In most cases, there is an issue with the data. The console contains the detailed error description with the errors."
        },
        {
          "name": "destroyAriaProperties",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the ariaProperties in the aggregation {@link #getAriaProperties ariaProperties}."
        },
        {
          "name": "destroyLanes",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the lanes in the aggregation {@link #getLanes lanes}."
        },
        {
          "name": "destroyNodes",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the nodes in the aggregation {@link #getNodes nodes}."
        },
        {
          "name": "detachHeaderPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:headerPress headerPress} event of this <code>sap.suite.ui.commons.ProcessFlow</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachLabelPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:labelPress labelPress} event of this <code>sap.suite.ui.commons.ProcessFlow</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachNodePress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:nodePress nodePress} event of this <code>sap.suite.ui.commons.ProcessFlow</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachNodeTitlePress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:nodeTitlePress nodeTitlePress} event of this <code>sap.suite.ui.commons.ProcessFlow</code>.\n\nThe passed function and listener object must match the ones used for event registration.",
          "deprecated": {
            "since": "1.26",
            "text": "Should not be used any longer, use nodePress event instead ( click on the node)"
          }
        },
        {
          "name": "detachOnError",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:onError onError} event of this <code>sap.suite.ui.commons.ProcessFlow</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.ProcessFlow with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "fireHeaderPress",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "oEvent": {
                  "name": "oEvent",
                  "type": "object",
                  "optional": true,
                  "description": "This object represents the wrapped process flow lane header object."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:headerPress headerPress} to attached listeners."
        },
        {
          "name": "fireLabelPress",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "oEvent": {
                  "name": "oEvent",
                  "type": "object",
                  "optional": true,
                  "description": "This object represents the label information."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:labelPress labelPress} to attached listeners."
        },
        {
          "name": "fireNodePress",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "oEvent": {
                  "name": "oEvent",
                  "type": "object",
                  "optional": true,
                  "description": "This object represents the wrapped process flow node object."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:nodePress nodePress} to attached listeners."
        },
        {
          "name": "fireNodeTitlePress",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "oEvent": {
                  "name": "oEvent",
                  "type": "object",
                  "optional": true,
                  "description": "This object represents the wrapped process flow node object."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:nodeTitlePress nodeTitlePress} to attached listeners.",
          "deprecated": {
            "since": "1.26",
            "text": "Should not be used any longer, use nodePress event instead ( click on the node)"
          }
        },
        {
          "name": "fireOnError",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "oEvent": {
                  "name": "oEvent",
                  "type": "object",
                  "optional": true,
                  "description": "This parameters contains the localized string with error message."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:onError onError} to attached listeners."
        },
        {
          "name": "getAriaProperties",
          "visibility": "public",
          "returnValue": { "type": "sap.suite.ui.commons.AriaProperties" },
          "description": "Gets content of aggregation {@link #getAriaProperties ariaProperties}.\n\nARIA-compliant properties to be added to the control."
        },
        {
          "name": "getFocusedNode",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "The id of focused node"
          },
          "description": "Function returns the nodeId of the node which is focused."
        },
        {
          "name": "getFoldedCorners",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>foldedCorners</code>"
          },
          "description": "Gets current value of property {@link #getFoldedCorners foldedCorners}.\n\nThis property defines the folded corners for the single node control. The following values exist: - true: means folded corner - false/null/undefined: means normal corner\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getLane",
          "visibility": "public",
          "since": "1.46.0",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlowLaneHeader",
            "description": "the requested lane or null"
          },
          "parameters": [
            {
              "name": "sLaneId",
              "type": "string",
              "optional": false,
              "description": "ID of the lane to return"
            }
          ],
          "description": "Returns a lane from the aggregation named 'lanes' by comparing the laneId property of lane."
        },
        {
          "name": "getLanes",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlowLaneHeader[]"
          },
          "description": "Gets content of aggregation {@link #getLanes lanes}.\n\nThis is a header of the table for the process flow control."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.ProcessFlow."
        },
        {
          "name": "getNode",
          "visibility": "public",
          "since": "1.46.0",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlowNode",
            "description": "the requested node or null"
          },
          "parameters": [
            {
              "name": "sNodeId",
              "type": "string",
              "optional": false,
              "description": "ID of node to return"
            }
          ],
          "description": "Returns a node from the aggregation named 'nodes' by comparing the nodeId property of node."
        },
        {
          "name": "getNodes",
          "visibility": "public",
          "returnValue": { "type": "sap.suite.ui.commons.ProcessFlowNode[]" },
          "description": "Gets content of aggregation {@link #getNodes nodes}.\n\nThis is the aggregation of nodes in the process flow control."
        },
        {
          "name": "getScrollable",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>scrollable</code>"
          },
          "description": "Gets current value of property {@link #getScrollable scrollable}.\n\nBy default, the control body is embedded into a scroll container of fixed size, so the user can put the control into a fixed size layout. When the control body (the graph) gets larger, the container cuts the overflowing parts of the graph and the cut parts can be displayed by scrolling the control body. When the control body fits into the container limits, obviously no scrolling is possible (and makes sense).\n\nThe scrolling feature can be turned off by setting this property value to false, so the width/height of the whole control will change as the flow graph gets smaller/larger. In this case the control body could not be scrolled, as the control body size matches the control container size.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getShowLabels",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showLabels</code>"
          },
          "description": "Gets current value of property {@link #getShowLabels showLabels}.\n\nDefines if the connection labels are shown or not.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getWheelZoomable",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>wheelZoomable</code>"
          },
          "description": "Gets current value of property {@link #getWheelZoomable wheelZoomable}.\n\nDefines if semantic zooming by mouse wheel events on desktop browsers is enabled.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getZoomLevel",
          "visibility": "public",
          "returnValue": { "type": "string", "description": "The zoomLevel" },
          "description": "Function returns current zoom level."
        },
        {
          "name": "indexOfLane",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oLane",
              "type": "sap.suite.ui.commons.ProcessFlowLaneHeader",
              "optional": false,
              "description": "The lane whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.suite.ui.commons.ProcessFlowLaneHeader</code> in the aggregation {@link #getLanes lanes}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "indexOfNode",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oNode",
              "type": "sap.suite.ui.commons.ProcessFlowNode",
              "optional": false,
              "description": "The node whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.suite.ui.commons.ProcessFlowNode</code> in the aggregation {@link #getNodes nodes}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "insertLane",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oLane",
              "type": "sap.suite.ui.commons.ProcessFlowLaneHeader",
              "optional": false,
              "description": "The lane to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the lane should be inserted at; for a negative value of <code>iIndex</code>, the lane is inserted at position 0; for a value greater than the current size of the aggregation, the lane is inserted at the last position"
            }
          ],
          "description": "Inserts a lane into the aggregation {@link #getLanes lanes}."
        },
        {
          "name": "insertNode",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oNode",
              "type": "sap.suite.ui.commons.ProcessFlowNode",
              "optional": false,
              "description": "The node to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the node should be inserted at; for a negative value of <code>iIndex</code>, the node is inserted at position 0; for a value greater than the current size of the aggregation, the node is inserted at the last position"
            }
          ],
          "description": "Inserts a node into the aggregation {@link #getNodes nodes}."
        },
        {
          "name": "optimizeLayout",
          "visibility": "public",
          "since": "1.44",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlow",
            "description": "this to allow method chaining"
          },
          "parameters": [
            {
              "name": "isOptimized",
              "type": "boolean",
              "optional": false,
              "description": "True if the layout should be optimized; false if the layout should be brought to the initial state."
            }
          ],
          "description": "Optimizes the layout and updates the model. To be used carefully because of its possible side effects on the performance."
        },
        {
          "name": "removeAllLanes",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlowLaneHeader[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getLanes lanes}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeAllNodes",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlowNode[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getNodes nodes}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeLane",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlowLaneHeader",
            "description": "The removed lane or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vLane",
              "type": "int|string|sap.suite.ui.commons.ProcessFlowLaneHeader",
              "optional": false,
              "description": "The lane to remove or its index or id"
            }
          ],
          "description": "Removes a lane from the aggregation {@link #getLanes lanes}."
        },
        {
          "name": "removeNode",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlowNode",
            "description": "The removed node or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vNode",
              "type": "int|string|sap.suite.ui.commons.ProcessFlowNode",
              "optional": false,
              "description": "The node to remove or its index or id"
            }
          ],
          "description": "Removes a node from the aggregation {@link #getNodes nodes}."
        },
        {
          "name": "setAriaProperties",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oAriaProperties",
              "type": "sap.suite.ui.commons.AriaProperties",
              "optional": false,
              "description": "The ariaProperties to set"
            }
          ],
          "description": "Sets the aggregated {@link #getAriaProperties ariaProperties}."
        },
        {
          "name": "setFocusToLabel",
          "visibility": "public",
          "since": "1.32",
          "parameters": [
            {
              "name": "label",
              "type": "sap.suite.ui.commons.ProcessFlowConnectionLabel",
              "optional": false,
              "description": "Label to focus"
            }
          ],
          "description": "Sets the focus to the given Label"
        },
        {
          "name": "setFoldedCorners",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bFoldedCorners",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>foldedCorners</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getFoldedCorners foldedCorners}.\n\nThis property defines the folded corners for the single node control. The following values exist: - true: means folded corner - false/null/undefined: means normal corner\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setScrollable",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bScrollable",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>scrollable</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getScrollable scrollable}.\n\nBy default, the control body is embedded into a scroll container of fixed size, so the user can put the control into a fixed size layout. When the control body (the graph) gets larger, the container cuts the overflowing parts of the graph and the cut parts can be displayed by scrolling the control body. When the control body fits into the container limits, obviously no scrolling is possible (and makes sense).\n\nThe scrolling feature can be turned off by setting this property value to false, so the width/height of the whole control will change as the flow graph gets smaller/larger. In this case the control body could not be scrolled, as the control body size matches the control container size.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setSelectedPath",
          "visibility": "public",
          "since": "1.32",
          "parameters": [
            {
              "name": "sourceNodeId",
              "type": "string",
              "optional": false,
              "description": "of the path or null"
            },
            {
              "name": "targetNodeId",
              "type": "string",
              "optional": false,
              "description": "of the path or null"
            }
          ],
          "description": "Sets the path between source and target node to selected status and rerenders the control. If parameters are null, sets all nodes to normal status."
        },
        {
          "name": "setShowLabels",
          "visibility": "public",
          "parameters": [
            {
              "name": "value",
              "type": "boolean",
              "optional": false,
              "description": "New value for showLabels"
            }
          ],
          "description": "Overwrites setShowLabels of ProcessFlow control to apply additional functionality."
        },
        {
          "name": "setWheelZoomable",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bWheelZoomable",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>wheelZoomable</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getWheelZoomable wheelZoomable}.\n\nDefines if semantic zooming by mouse wheel events on desktop browsers is enabled.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setZoomLevel",
          "visibility": "public",
          "parameters": [
            {
              "name": "zoomLevel",
              "type": "sap.suite.ui.commons.ProcessFlowZoomLevel",
              "optional": false,
              "description": "The new zoom level."
            }
          ],
          "description": "Function sets the zoom level."
        },
        {
          "name": "updateModel",
          "visibility": "public",
          "description": "Updates the model and rerenders the control."
        },
        {
          "name": "updateNodesOnly",
          "visibility": "public",
          "description": "Updates the nodes and rerenders the control."
        },
        {
          "name": "zoomIn",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "The updated zoomLevel"
          },
          "description": "Function sets new zoom level with higher level of details. Having max details it stays as it is."
        },
        {
          "name": "zoomOut",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "The updated zoomLevel"
          },
          "description": "Function sets new zoom level with smaller level of details. Having the least detail view it stays as it is."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.ProcessFlowConnection",
      "basename": "ProcessFlowConnection",
      "resource": "sap/suite/ui/commons/ProcessFlowConnection.js",
      "module": "sap/suite/ui/commons/ProcessFlowConnection",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.core.Control",
      "description": "This control is used inside the ProcessFlow control to connect process flow node A with process flow node B in respect to the style(x) chosen by the application.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "drawData",
            "type": "object[]",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "This is an array of the following attributes for one element: 1. flowLine (string) - A connection definition where the line should be drawn. A string which defines a course of a flow line. A flow line is a connection between nodes in a process flow control. The string can contain the following characters: - \"r\" for right, - \"t\" for top, - \"l\" for left, - \"b\" for bottom. 2. targetNodeState (ProcessFlowNodeState) - A copy of the target node status. If the target node is created, the line is solid. If the target node is planned, the line is dashed. 3. displayState (ProcessFlowDisplayState) - Display state of the node. This property defines if the node is displayed regularly, highlighted, or dimmed in combination with a selected visual style of the control. 4. hasArrow (boolean) - Indicates if the line has an arrow on the right end.",
            "methods": ["getDrawData", "setDrawData"]
          },
          {
            "name": "zoomLevel",
            "type": "sap.suite.ui.commons.ProcessFlowZoomLevel",
            "defaultValue": "Two",
            "group": "Misc",
            "visibility": "public",
            "description": "This is a current zoom level for the connection. The point of connection to the node is derived from zoom level.",
            "methods": ["getZoomLevel", "setZoomLevel"]
          },
          {
            "name": "type",
            "type": "sap.suite.ui.commons.ProcessFlowConnectionType",
            "defaultValue": "Normal",
            "group": "Appearance",
            "visibility": "public",
            "description": "Type of the connection.",
            "deprecated": {
              "since": "1.32",
              "text": "Type is deprecated because of no usages. There will be no replacement."
            },
            "methods": ["getType", "setType"]
          },
          {
            "name": "state",
            "type": "sap.suite.ui.commons.ProcessFlowConnectionState",
            "defaultValue": "Regular",
            "group": "Appearance",
            "visibility": "public",
            "description": "State of the connection.",
            "deprecated": {
              "since": "1.32",
              "text": "State is deprecated because of no usages. There will be no replacement."
            },
            "methods": ["getState", "setState"]
          }
        ],
        "aggregations": [
          {
            "name": "_labels",
            "singularName": "_label",
            "type": "sap.suite.ui.commons.ProcessFlowConnectionLabel",
            "cardinality": "0..n",
            "visibility": "hidden",
            "description": "Specifies the ProcessFlowConnectionLabels for the current ProcessFlowConnection.",
            "methods": [
              "get_labels",
              "destroy_labels",
              "insert_label",
              "add_label",
              "remove_label",
              "indexOf_label",
              "removeAll_labels"
            ]
          }
        ],
        "defaultAggregation": "_labels"
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new ProcessFlowConnection.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.ProcessFlowConnection with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "getDrawData",
          "visibility": "public",
          "returnValue": {
            "type": "object[]",
            "description": "Value of property <code>drawData</code>"
          },
          "description": "Gets current value of property {@link #getDrawData drawData}.\n\nThis is an array of the following attributes for one element: 1. flowLine (string) - A connection definition where the line should be drawn. A string which defines a course of a flow line. A flow line is a connection between nodes in a process flow control. The string can contain the following characters: - \"r\" for right, - \"t\" for top, - \"l\" for left, - \"b\" for bottom. 2. targetNodeState (ProcessFlowNodeState) - A copy of the target node status. If the target node is created, the line is solid. If the target node is planned, the line is dashed. 3. displayState (ProcessFlowDisplayState) - Display state of the node. This property defines if the node is displayed regularly, highlighted, or dimmed in combination with a selected visual style of the control. 4. hasArrow (boolean) - Indicates if the line has an arrow on the right end."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.ProcessFlowConnection."
        },
        {
          "name": "getState",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlowConnectionState",
            "description": "Value of property <code>state</code>"
          },
          "description": "Gets current value of property {@link #getState state}.\n\nState of the connection.\n\nDefault value is <code>Regular</code>.",
          "deprecated": {
            "since": "1.32",
            "text": "State is deprecated because of no usages. There will be no replacement."
          }
        },
        {
          "name": "getType",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlowConnectionType",
            "description": "Value of property <code>type</code>"
          },
          "description": "Gets current value of property {@link #getType type}.\n\nType of the connection.\n\nDefault value is <code>Normal</code>.",
          "deprecated": {
            "since": "1.32",
            "text": "Type is deprecated because of no usages. There will be no replacement."
          }
        },
        {
          "name": "getZoomLevel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlowZoomLevel",
            "description": "Value of property <code>zoomLevel</code>"
          },
          "description": "Gets current value of property {@link #getZoomLevel zoomLevel}.\n\nThis is a current zoom level for the connection. The point of connection to the node is derived from zoom level.\n\nDefault value is <code>Two</code>."
        },
        {
          "name": "setDrawData",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlowConnection",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sDrawData",
              "type": "object[]",
              "optional": false,
              "description": "New value for property <code>drawData</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getDrawData drawData}.\n\nThis is an array of the following attributes for one element: 1. flowLine (string) - A connection definition where the line should be drawn. A string which defines a course of a flow line. A flow line is a connection between nodes in a process flow control. The string can contain the following characters: - \"r\" for right, - \"t\" for top, - \"l\" for left, - \"b\" for bottom. 2. targetNodeState (ProcessFlowNodeState) - A copy of the target node status. If the target node is created, the line is solid. If the target node is planned, the line is dashed. 3. displayState (ProcessFlowDisplayState) - Display state of the node. This property defines if the node is displayed regularly, highlighted, or dimmed in combination with a selected visual style of the control. 4. hasArrow (boolean) - Indicates if the line has an arrow on the right end.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setState",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlowConnection",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sState",
              "type": "sap.suite.ui.commons.ProcessFlowConnectionState",
              "optional": false,
              "description": "New value for property <code>state</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getState state}.\n\nState of the connection.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Regular</code>.",
          "deprecated": {
            "since": "1.32",
            "text": "State is deprecated because of no usages. There will be no replacement."
          }
        },
        {
          "name": "setType",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlowConnection",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sType",
              "type": "sap.suite.ui.commons.ProcessFlowConnectionType",
              "optional": false,
              "description": "New value for property <code>type</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getType type}.\n\nType of the connection.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Normal</code>.",
          "deprecated": {
            "since": "1.32",
            "text": "Type is deprecated because of no usages. There will be no replacement."
          }
        },
        {
          "name": "setZoomLevel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlowConnection",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sZoomLevel",
              "type": "sap.suite.ui.commons.ProcessFlowZoomLevel",
              "optional": false,
              "description": "New value for property <code>zoomLevel</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getZoomLevel zoomLevel}.\n\nThis is a current zoom level for the connection. The point of connection to the node is derived from zoom level.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Two</code>."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.ProcessFlowConnectionLabel",
      "basename": "ProcessFlowConnectionLabel",
      "resource": "sap/suite/ui/commons/ProcessFlowConnectionLabel.js",
      "module": "sap/suite/ui/commons/ProcessFlowConnectionLabel",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.m.Button",
      "description": "This control is used inside the ProcessFlow control providing information on connections. Using this control, you need to take care of the lifetime handling instance as instances of this control are not destroyed automatically.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "priority",
            "type": "int",
            "defaultValue": 0,
            "group": "Misc",
            "visibility": "public",
            "description": "Priority is used to define which label is visible if the state of multiple labels is equal. Assuming there are multiple labels with equal state (e.g. Negative state appears twice), the priority decides which one needs to be selected.",
            "methods": ["getPriority", "setPriority"]
          },
          {
            "name": "state",
            "type": "sap.suite.ui.commons.ProcessFlowConnectionLabelState",
            "defaultValue": "Neutral",
            "group": "Appearance",
            "visibility": "public",
            "description": "Specifies the state of the connection label. If multiple labels are available for one connection, the label will be selected by state based on the following order: Neutral -> Positive -> Critical -> Negative.",
            "methods": ["getState", "setState"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new ProcessFlowConnectionLabel.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.ProcessFlowConnectionLabel with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.m.Button.extend}."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.ProcessFlowConnectionLabel."
        },
        {
          "name": "getPriority",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>priority</code>"
          },
          "description": "Gets current value of property {@link #getPriority priority}.\n\nPriority is used to define which label is visible if the state of multiple labels is equal. Assuming there are multiple labels with equal state (e.g. Negative state appears twice), the priority decides which one needs to be selected.\n\nDefault value is <code>0</code>."
        },
        {
          "name": "getState",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlowConnectionLabelState",
            "description": "Value of property <code>state</code>"
          },
          "description": "Gets current value of property {@link #getState state}.\n\nSpecifies the state of the connection label. If multiple labels are available for one connection, the label will be selected by state based on the following order: Neutral -> Positive -> Critical -> Negative.\n\nDefault value is <code>Neutral</code>."
        },
        {
          "name": "setPriority",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlowConnectionLabel",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iPriority",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>priority</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getPriority priority}.\n\nPriority is used to define which label is visible if the state of multiple labels is equal. Assuming there are multiple labels with equal state (e.g. Negative state appears twice), the priority decides which one needs to be selected.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>0</code>."
        },
        {
          "name": "setState",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlowConnectionLabel",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sState",
              "type": "sap.suite.ui.commons.ProcessFlowConnectionLabelState",
              "optional": false,
              "description": "New value for property <code>state</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getState state}.\n\nSpecifies the state of the connection label. If multiple labels are available for one connection, the label will be selected by state based on the following order: Neutral -> Positive -> Critical -> Negative.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Neutral</code>."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.suite.ui.commons.ProcessFlowConnectionLabelState",
      "basename": "ProcessFlowConnectionLabelState",
      "resource": "sap/suite/ui/commons/library.js",
      "module": "sap/suite/ui/commons/library",
      "export": "ProcessFlowConnectionLabelState",
      "static": true,
      "visibility": "public",
      "description": "Describes the state of a connection label.",
      "ui5-metamodel": true,
      "properties": [
        {
          "name": "Critical",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Critical connection label."
        },
        {
          "name": "Negative",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Negative connection label."
        },
        {
          "name": "Neutral",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Neutral connection label."
        },
        {
          "name": "Positive",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Positive connection label."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.suite.ui.commons.ProcessFlowConnectionState",
      "basename": "ProcessFlowConnectionState",
      "resource": "sap/suite/ui/commons/library.js",
      "module": "sap/suite/ui/commons/library",
      "export": "ProcessFlowConnectionState",
      "static": true,
      "visibility": "public",
      "description": "Describes the state of a connection.",
      "ui5-metamodel": true,
      "properties": [
        {
          "name": "Dimmed",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Dimmed connection."
        },
        {
          "name": "Highlighted",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Highlighted connection."
        },
        {
          "name": "Regular",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Regular connection."
        },
        {
          "name": "Selected",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Selected connection."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.suite.ui.commons.ProcessFlowConnectionType",
      "basename": "ProcessFlowConnectionType",
      "resource": "sap/suite/ui/commons/library.js",
      "module": "sap/suite/ui/commons/library",
      "export": "ProcessFlowConnectionType",
      "static": true,
      "visibility": "public",
      "description": "Describes the type of a connection.",
      "ui5-metamodel": true,
      "properties": [
        {
          "name": "Normal",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Normal connection."
        },
        {
          "name": "Planned",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Planned connection."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.suite.ui.commons.ProcessFlowDisplayState",
      "basename": "ProcessFlowDisplayState",
      "resource": "sap/suite/ui/commons/library.js",
      "module": "sap/suite/ui/commons/library",
      "export": "ProcessFlowDisplayState",
      "static": true,
      "visibility": "public",
      "description": "The ProcessFlow calculates the ProcessFlowDisplayState based on the 'focused' and 'highlighted' properties of each node.",
      "ui5-metamodel": true,
      "properties": [
        {
          "name": "Dimmed",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The control is in the dimmed state"
        },
        {
          "name": "DimmedFocused",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The control is in the combination of dimmed and focused display state"
        },
        {
          "name": "Highlighted",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The control is in highlighted display state"
        },
        {
          "name": "HighlightedFocused",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The control is in the combination of highlighted and focused display state"
        },
        {
          "name": "Regular",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The control is in the regular display state"
        },
        {
          "name": "RegularFocused",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The control is in the combination of regular and focused display state"
        },
        {
          "name": "Selected",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The control is in the selected display state"
        },
        {
          "name": "SelectedFocused",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The control is in the combination of selected and focused display state"
        },
        {
          "name": "SelectedHighlighted",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The control is in the combination of selected and highlighted display state"
        },
        {
          "name": "SelectedHighlightedFocused",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The control is in the combination of selected, highlighted and focused display state"
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.ProcessFlowLaneHeader",
      "basename": "ProcessFlowLaneHeader",
      "resource": "sap/suite/ui/commons/ProcessFlowLaneHeader.js",
      "module": "sap/suite/ui/commons/ProcessFlowLaneHeader",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.core.Control",
      "description": "This control gives you an overview of documents or items used in a process flow. The process flow is represented by donut chart sections that are colored according to the status of documents. This control can be used in two different ways. If you use it standalone, an event is triggered and can be caught to display the node map. If you use it with nodes or documents, it gives you an overview of the documents or items used in the process flow, which is represented by the donut chart sections.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "text",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Text information that is displayed in the control.",
            "methods": ["getText", "setText"]
          },
          {
            "name": "iconSrc",
            "type": "sap.ui.core.URI",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Icon to be displayed in the middle of the control.",
            "methods": ["getIconSrc", "setIconSrc"]
          },
          {
            "name": "position",
            "type": "int",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Position of the lane in the process flow control. Numbering of the position has to be sequential and needs to start from 0.",
            "methods": ["getPosition", "setPosition"]
          },
          {
            "name": "laneId",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Internal identification of the header.",
            "methods": ["getLaneId", "setLaneId"]
          },
          {
            "name": "state",
            "type": "object",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Array of the ProcessFlowLaneState. The user can explicitly set an array with the two properties state and value of the state, for example [state:sap.suite.ui.commons.ProcessFlowNodeState.Neutral, value: 20]. Possible states are states are positive, negative, neutral, and planned.",
            "methods": ["getState", "setState"]
          },
          {
            "name": "zoomLevel",
            "type": "sap.suite.ui.commons.ProcessFlowZoomLevel",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Current zoom level for the lane header.",
            "methods": ["getZoomLevel", "setZoomLevel"]
          }
        ],
        "events": [
          {
            "name": "press",
            "visibility": "public",
            "description": "This event is fired when the header is clicked.",
            "parameters": {
              "oEvent": {
                "name": "oEvent",
                "type": "object",
                "description": "tbd"
              }
            },
            "methods": ["attachPress", "detachPress", "firePress"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new ProcessFlowLaneHeader.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "press",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "oEvent": {
                      "name": "oEvent",
                      "type": "object",
                      "optional": false,
                      "description": "tbd"
                    }
                  }
                }
              }
            }
          ],
          "description": "This event is fired when the header is clicked."
        }
      ],
      "methods": [
        {
          "name": "attachPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlowLaneHeader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.ProcessFlowLaneHeader</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:press press} event of this <code>sap.suite.ui.commons.ProcessFlowLaneHeader</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.ProcessFlowLaneHeader</code> itself.\n\nThis event is fired when the header is clicked."
        },
        {
          "name": "detachPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlowLaneHeader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:press press} event of this <code>sap.suite.ui.commons.ProcessFlowLaneHeader</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.ProcessFlowLaneHeader with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "firePress",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlowLaneHeader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "oEvent": {
                  "name": "oEvent",
                  "type": "object",
                  "optional": true,
                  "description": "tbd"
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:press press} to attached listeners."
        },
        {
          "name": "getIconSrc",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.URI",
            "description": "Value of property <code>iconSrc</code>"
          },
          "description": "Gets current value of property {@link #getIconSrc iconSrc}.\n\nIcon to be displayed in the middle of the control."
        },
        {
          "name": "getLaneId",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>laneId</code>"
          },
          "description": "Gets current value of property {@link #getLaneId laneId}.\n\nInternal identification of the header."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.ProcessFlowLaneHeader."
        },
        {
          "name": "getPosition",
          "visibility": "public",
          "returnValue": { "type": "int", "description": "Lane position" },
          "description": "Overrides the getter method for property position. It returns the position that was changed due to the artificial merged lanes. Otherwise it returns the position set as a property."
        },
        {
          "name": "getState",
          "visibility": "public",
          "returnValue": {
            "type": "object",
            "description": "Value of property <code>state</code>"
          },
          "description": "Gets current value of property {@link #getState state}.\n\nArray of the ProcessFlowLaneState. The user can explicitly set an array with the two properties state and value of the state, for example [state:sap.suite.ui.commons.ProcessFlowNodeState.Neutral, value: 20]. Possible states are states are positive, negative, neutral, and planned."
        },
        {
          "name": "getText",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>text</code>"
          },
          "description": "Gets current value of property {@link #getText text}.\n\nText information that is displayed in the control."
        },
        {
          "name": "getZoomLevel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlowZoomLevel",
            "description": "Value of property <code>zoomLevel</code>"
          },
          "description": "Gets current value of property {@link #getZoomLevel zoomLevel}.\n\nCurrent zoom level for the lane header."
        },
        {
          "name": "setIconSrc",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlowLaneHeader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sIconSrc",
              "type": "sap.ui.core.URI",
              "optional": false,
              "description": "New value for property <code>iconSrc</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getIconSrc iconSrc}.\n\nIcon to be displayed in the middle of the control.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setLaneId",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlowLaneHeader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sLaneId",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>laneId</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getLaneId laneId}.\n\nInternal identification of the header.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setPosition",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlowLaneHeader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iPosition",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>position</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getPosition position}.\n\nPosition of the lane in the process flow control. Numbering of the position has to be sequential and needs to start from 0.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setState",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlowLaneHeader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oState",
              "type": "object",
              "optional": false,
              "description": "New value for property <code>state</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getState state}.\n\nArray of the ProcessFlowLaneState. The user can explicitly set an array with the two properties state and value of the state, for example [state:sap.suite.ui.commons.ProcessFlowNodeState.Neutral, value: 20]. Possible states are states are positive, negative, neutral, and planned.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setText",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlowLaneHeader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sText",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>text</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getText text}.\n\nText information that is displayed in the control.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setZoomLevel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlowLaneHeader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sZoomLevel",
              "type": "sap.suite.ui.commons.ProcessFlowZoomLevel",
              "optional": false,
              "description": "New value for property <code>zoomLevel</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getZoomLevel zoomLevel}.\n\nCurrent zoom level for the lane header.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.suite.ui.commons.ProcessFlowLaneState",
      "basename": "ProcessFlowLaneState",
      "resource": "sap/suite/ui/commons/library.js",
      "module": "sap/suite/ui/commons/library",
      "export": "ProcessFlowLaneState",
      "static": true,
      "visibility": "public",
      "description": "This type is used in the 'state' property of the ProcessFlowLaneHeader. For example, app developers can set the status of the lane header if lanes are displayed without documents. If the complete process flow is displayed (that is, if the lane header is displayed with documents underneath), the given state values of the lane header are ignored and will be calculated in the ProcessFlow according to the current state of the documents.",
      "ui5-metamodel": true,
      "properties": [
        {
          "name": "state",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The 'state' property is associated with the given value. Possible states are: positive, negative, neutral, and planned."
        },
        {
          "name": "value",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "In the 'state' array, the total amount of values needs to be 100%."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.ProcessFlowNode",
      "basename": "ProcessFlowNode",
      "resource": "sap/suite/ui/commons/ProcessFlowNode.js",
      "module": "sap/suite/ui/commons/ProcessFlowNode",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.core.Control",
      "description": "This control enables you to see documents (or other items) in respect to their statuses – positive, negative, neutral, planned, planned negative. In addition to the node title (which can be optionally a hyperlink) also two other text fields are provided and can be filled. The process flow nodes consider all styles depending on the status they are in. The user can update or change the content of the node. The content of the node can be also filtered according to updated data and specific parameters set. This means that also the node’s style is affected.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "title",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The node title.",
            "methods": ["getTitle", "setTitle"]
          },
          {
            "name": "isTitleClickable",
            "type": "boolean",
            "defaultValue": false,
            "group": "Behavior",
            "visibility": "public",
            "description": "Specifies if the node title is clickable.",
            "deprecated": {
              "since": "1.26",
              "text": "According to the new requirement there should be only one click event for each node (click on the whole node – see Press event) that is why titlePress event should not be used any longer. Hence isTitleClickable should not be used either."
            },
            "methods": ["getIsTitleClickable", "setIsTitleClickable"]
          },
          {
            "name": "laneId",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Specifies the assignment of the node to the respective lane.",
            "methods": ["getLaneId", "setLaneId"]
          },
          {
            "name": "nodeId",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Node identifier.",
            "methods": ["getNodeId", "setNodeId"]
          },
          {
            "name": "state",
            "type": "sap.suite.ui.commons.ProcessFlowNodeState",
            "defaultValue": "Neutral",
            "group": "Appearance",
            "visibility": "public",
            "description": "State of the node.",
            "methods": ["getState", "setState"]
          },
          {
            "name": "type",
            "type": "sap.suite.ui.commons.ProcessFlowNodeType",
            "defaultValue": "Single",
            "group": "Appearance",
            "visibility": "public",
            "description": "Type of the node.",
            "methods": ["getType", "setType"]
          },
          {
            "name": "children",
            "type": "any[]",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Defines an array of children of the node.",
            "methods": ["getChildren", "setChildren"]
          },
          {
            "name": "titleAbbreviation",
            "type": "string",
            "defaultValue": null,
            "group": "Data",
            "visibility": "public",
            "description": "Title abbreviation is used in zoom level 'Three'.",
            "methods": ["getTitleAbbreviation", "setTitleAbbreviation"]
          },
          {
            "name": "stateText",
            "type": "string",
            "defaultValue": null,
            "group": "Data",
            "visibility": "public",
            "description": "Description of the state, for example \"Status OK\".",
            "methods": ["getStateText", "setStateText"]
          },
          {
            "name": "texts",
            "type": "string[]",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The property contains the additional texts on the node. The expected type is array of strings. One array must not contain more than two strings. Additional strings in the array will be ignored.",
            "methods": ["getTexts", "setTexts"]
          },
          {
            "name": "highlighted",
            "type": "boolean",
            "defaultValue": false,
            "group": "Appearance",
            "visibility": "public",
            "description": "The parameter defines if the node should be displayed in highlighted state.",
            "methods": ["getHighlighted", "setHighlighted"]
          },
          {
            "name": "focused",
            "type": "boolean",
            "defaultValue": false,
            "group": "Appearance",
            "visibility": "public",
            "description": "The parameter defines if the node should be displayed in focus state.",
            "methods": ["getFocused", "setFocused"]
          },
          {
            "name": "tag",
            "type": "object",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The user-defined object which is returned back to the user by a node click event.",
            "methods": ["getTag", "setTag"]
          },
          {
            "name": "selected",
            "type": "boolean",
            "defaultValue": false,
            "group": "Appearance",
            "visibility": "public",
            "description": "The parameter defines if the node should be displayed in selected state.",
            "methods": ["getSelected", "setSelected"]
          }
        ],
        "aggregations": [
          {
            "name": "zoomLevelOneContent",
            "singularName": "zoomLevelOneContent",
            "type": "sap.ui.core.Control",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "The node's content used for zoom level 1. If this aggregation is set, no default content like title and texts is used.",
            "experimental": { "since": "1.50" },
            "methods": [
              "getZoomLevelOneContent",
              "destroyZoomLevelOneContent",
              "setZoomLevelOneContent"
            ]
          },
          {
            "name": "zoomLevelTwoContent",
            "singularName": "zoomLevelTwoContent",
            "type": "sap.ui.core.Control",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "The node's content used for zoom level 2. If this aggregation is set, no default content like title and texts is used.",
            "experimental": { "since": "1.50" },
            "methods": [
              "getZoomLevelTwoContent",
              "destroyZoomLevelTwoContent",
              "setZoomLevelTwoContent"
            ]
          },
          {
            "name": "zoomLevelThreeContent",
            "singularName": "zoomLevelThreeContent",
            "type": "sap.ui.core.Control",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "The node's content used for zoom level 3. If this aggregation is set, no default content like title and texts is used.",
            "experimental": { "since": "1.50" },
            "methods": [
              "getZoomLevelThreeContent",
              "destroyZoomLevelThreeContent",
              "setZoomLevelThreeContent"
            ]
          },
          {
            "name": "zoomLevelFourContent",
            "singularName": "zoomLevelFourContent",
            "type": "sap.ui.core.Control",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "The node's content used for zoom level 4. If this aggregation is set, no default content like title and texts is used.",
            "experimental": { "since": "1.50" },
            "methods": [
              "getZoomLevelFourContent",
              "destroyZoomLevelFourContent",
              "setZoomLevelFourContent"
            ]
          },
          {
            "name": "ariaProperties",
            "singularName": "ariaProperty",
            "type": "sap.suite.ui.commons.AriaProperties",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "ARIA-compliant properties to be added to the control.",
            "methods": [
              "getAriaProperties",
              "destroyAriaProperties",
              "setAriaProperties"
            ]
          }
        ],
        "associations": [
          {
            "name": "parents",
            "singularName": "parent",
            "type": "sap.suite.ui.commons.ProcessFlowNode",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Reference to ProcessFlowNodes which appears before this ProcessFlowNode.",
            "methods": [
              "getParents",
              "addParent",
              "removeParent",
              "removeAllParents"
            ]
          }
        ],
        "events": [
          {
            "name": "titlePress",
            "visibility": "public",
            "description": "This event handler is executed when the user clicks the node title. This event is fired only when the title is clickable (isTitleClickable equals true).",
            "deprecated": {
              "since": "1.26",
              "text": "Should not be used any longer, use Press event instead ( click on the node)"
            },
            "parameters": {
              "oEvent": {
                "name": "oEvent",
                "type": "object",
                "description": "The node identification."
              }
            },
            "methods": [
              "attachTitlePress",
              "detachTitlePress",
              "fireTitlePress"
            ]
          },
          {
            "name": "press",
            "visibility": "public",
            "description": "This event is fired when the user clicks on the node. However, this event is not fired if the titlePress event has been fired.",
            "deprecated": {
              "since": "1.50.0",
              "text": "This event is deprecated, use <node>nodePress</code> event instead. See {@link sap.suite.ui.commons.ProcessFlow.html#event:nodePress}."
            },
            "parameters": {
              "oEvent": {
                "name": "oEvent",
                "type": "object",
                "description": "The node identification."
              }
            },
            "methods": ["attachPress", "detachPress", "firePress"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new ProcessFlowNode.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "press",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "oEvent": {
                      "name": "oEvent",
                      "type": "object",
                      "optional": false,
                      "description": "The node identification."
                    }
                  }
                }
              }
            }
          ],
          "description": "This event is fired when the user clicks on the node. However, this event is not fired if the titlePress event has been fired.",
          "deprecated": {
            "since": "1.50.0",
            "text": "This event is deprecated, use <node>nodePress</code> event instead. See {@link sap.suite.ui.commons.ProcessFlow.html#event:nodePress}."
          }
        },
        {
          "name": "titlePress",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "oEvent": {
                      "name": "oEvent",
                      "type": "object",
                      "optional": false,
                      "description": "The node identification."
                    }
                  }
                }
              }
            }
          ],
          "description": "This event handler is executed when the user clicks the node title. This event is fired only when the title is clickable (isTitleClickable equals true).",
          "deprecated": {
            "since": "1.26",
            "text": "Should not be used any longer, use Press event instead ( click on the node)"
          }
        }
      ],
      "methods": [
        {
          "name": "addParent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlowNode",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "vParent",
              "type": "sap.ui.core.ID|sap.suite.ui.commons.ProcessFlowNode",
              "optional": false,
              "description": "The parents to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some parent into the association {@link #getParents parents}."
        },
        {
          "name": "attachPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlowNode",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.ProcessFlowNode</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:press press} event of this <code>sap.suite.ui.commons.ProcessFlowNode</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.ProcessFlowNode</code> itself.\n\nThis event is fired when the user clicks on the node. However, this event is not fired if the titlePress event has been fired.",
          "deprecated": {
            "since": "1.50.0",
            "text": "This event is deprecated, use <node>nodePress</code> event instead. See {@link sap.suite.ui.commons.ProcessFlow.html#event:nodePress}."
          }
        },
        {
          "name": "attachTitlePress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlowNode",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.ProcessFlowNode</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:titlePress titlePress} event of this <code>sap.suite.ui.commons.ProcessFlowNode</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.ProcessFlowNode</code> itself.\n\nThis event handler is executed when the user clicks the node title. This event is fired only when the title is clickable (isTitleClickable equals true).",
          "deprecated": {
            "since": "1.26",
            "text": "Should not be used any longer, use Press event instead ( click on the node)"
          }
        },
        {
          "name": "destroyAriaProperties",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlowNode",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the ariaProperties in the aggregation {@link #getAriaProperties ariaProperties}."
        },
        {
          "name": "destroyZoomLevelFourContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlowNode",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the zoomLevelFourContent in the aggregation {@link #getZoomLevelFourContent zoomLevelFourContent}.",
          "experimental": { "since": "1.50" }
        },
        {
          "name": "destroyZoomLevelOneContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlowNode",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the zoomLevelOneContent in the aggregation {@link #getZoomLevelOneContent zoomLevelOneContent}.",
          "experimental": { "since": "1.50" }
        },
        {
          "name": "destroyZoomLevelThreeContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlowNode",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the zoomLevelThreeContent in the aggregation {@link #getZoomLevelThreeContent zoomLevelThreeContent}.",
          "experimental": { "since": "1.50" }
        },
        {
          "name": "destroyZoomLevelTwoContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlowNode",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the zoomLevelTwoContent in the aggregation {@link #getZoomLevelTwoContent zoomLevelTwoContent}.",
          "experimental": { "since": "1.50" }
        },
        {
          "name": "detachPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlowNode",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:press press} event of this <code>sap.suite.ui.commons.ProcessFlowNode</code>.\n\nThe passed function and listener object must match the ones used for event registration.",
          "deprecated": {
            "since": "1.50.0",
            "text": "This event is deprecated, use <node>nodePress</code> event instead. See {@link sap.suite.ui.commons.ProcessFlow.html#event:nodePress}."
          }
        },
        {
          "name": "detachTitlePress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlowNode",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:titlePress titlePress} event of this <code>sap.suite.ui.commons.ProcessFlowNode</code>.\n\nThe passed function and listener object must match the ones used for event registration.",
          "deprecated": {
            "since": "1.26",
            "text": "Should not be used any longer, use Press event instead ( click on the node)"
          }
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.ProcessFlowNode with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "firePress",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlowNode",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "oEvent": {
                  "name": "oEvent",
                  "type": "object",
                  "optional": true,
                  "description": "The node identification."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:press press} to attached listeners.",
          "deprecated": {
            "since": "1.50.0",
            "text": "This event is deprecated, use <node>nodePress</code> event instead. See {@link sap.suite.ui.commons.ProcessFlow.html#event:nodePress}."
          }
        },
        {
          "name": "fireTitlePress",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlowNode",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "oEvent": {
                  "name": "oEvent",
                  "type": "object",
                  "optional": true,
                  "description": "The node identification."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:titlePress titlePress} to attached listeners.",
          "deprecated": {
            "since": "1.26",
            "text": "Should not be used any longer, use Press event instead ( click on the node)"
          }
        },
        {
          "name": "getAriaProperties",
          "visibility": "public",
          "returnValue": { "type": "sap.suite.ui.commons.AriaProperties" },
          "description": "Gets content of aggregation {@link #getAriaProperties ariaProperties}.\n\nARIA-compliant properties to be added to the control."
        },
        {
          "name": "getChildren",
          "visibility": "public",
          "returnValue": {
            "type": "any[]",
            "description": "Value of property <code>children</code>"
          },
          "description": "Gets current value of property {@link #getChildren children}.\n\nDefines an array of children of the node."
        },
        {
          "name": "getFocused",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>focused</code>"
          },
          "description": "Gets current value of property {@link #getFocused focused}.\n\nThe parameter defines if the node should be displayed in focus state.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getHighlighted",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>highlighted</code>"
          },
          "description": "Gets current value of property {@link #getHighlighted highlighted}.\n\nThe parameter defines if the node should be displayed in highlighted state.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getIsTitleClickable",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>isTitleClickable</code>"
          },
          "description": "Gets current value of property {@link #getIsTitleClickable isTitleClickable}.\n\nSpecifies if the node title is clickable.\n\nDefault value is <code>false</code>.",
          "deprecated": {
            "since": "1.26",
            "text": "According to the new requirement there should be only one click event for each node (click on the whole node – see Press event) that is why titlePress event should not be used any longer. Hence isTitleClickable should not be used either."
          }
        },
        {
          "name": "getLaneId",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>laneId</code>"
          },
          "description": "Gets current value of property {@link #getLaneId laneId}.\n\nSpecifies the assignment of the node to the respective lane."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.ProcessFlowNode."
        },
        {
          "name": "getNodeId",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>nodeId</code>"
          },
          "description": "Gets current value of property {@link #getNodeId nodeId}.\n\nNode identifier."
        },
        {
          "name": "getParents",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.ID[]" },
          "description": "Returns array of IDs of the elements which are the current targets of the association {@link #getParents parents}."
        },
        {
          "name": "getSelected",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>selected</code>"
          },
          "description": "Gets current value of property {@link #getSelected selected}.\n\nThe parameter defines if the node should be displayed in selected state.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getState",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlowNodeState",
            "description": "Value of property <code>state</code>"
          },
          "description": "Gets current value of property {@link #getState state}.\n\nState of the node.\n\nDefault value is <code>Neutral</code>."
        },
        {
          "name": "getStateText",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>stateText</code>"
          },
          "description": "Gets current value of property {@link #getStateText stateText}.\n\nDescription of the state, for example \"Status OK\"."
        },
        {
          "name": "getTag",
          "visibility": "public",
          "returnValue": {
            "type": "object",
            "description": "Value of property <code>tag</code>"
          },
          "description": "Gets current value of property {@link #getTag tag}.\n\nThe user-defined object which is returned back to the user by a node click event."
        },
        {
          "name": "getTexts",
          "visibility": "public",
          "returnValue": {
            "type": "string[]",
            "description": "Value of property <code>texts</code>"
          },
          "description": "Gets current value of property {@link #getTexts texts}.\n\nThe property contains the additional texts on the node. The expected type is array of strings. One array must not contain more than two strings. Additional strings in the array will be ignored."
        },
        {
          "name": "getTitle",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>title</code>"
          },
          "description": "Gets current value of property {@link #getTitle title}.\n\nThe node title."
        },
        {
          "name": "getTitleAbbreviation",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>titleAbbreviation</code>"
          },
          "description": "Gets current value of property {@link #getTitleAbbreviation titleAbbreviation}.\n\nTitle abbreviation is used in zoom level 'Three'."
        },
        {
          "name": "getType",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlowNodeType",
            "description": "Value of property <code>type</code>"
          },
          "description": "Gets current value of property {@link #getType type}.\n\nType of the node.\n\nDefault value is <code>Single</code>."
        },
        {
          "name": "getZoomLevelFourContent",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.Control" },
          "description": "Gets content of aggregation {@link #getZoomLevelFourContent zoomLevelFourContent}.\n\nThe node's content used for zoom level 4. If this aggregation is set, no default content like title and texts is used.",
          "experimental": { "since": "1.50" }
        },
        {
          "name": "getZoomLevelOneContent",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.Control" },
          "description": "Gets content of aggregation {@link #getZoomLevelOneContent zoomLevelOneContent}.\n\nThe node's content used for zoom level 1. If this aggregation is set, no default content like title and texts is used.",
          "experimental": { "since": "1.50" }
        },
        {
          "name": "getZoomLevelThreeContent",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.Control" },
          "description": "Gets content of aggregation {@link #getZoomLevelThreeContent zoomLevelThreeContent}.\n\nThe node's content used for zoom level 3. If this aggregation is set, no default content like title and texts is used.",
          "experimental": { "since": "1.50" }
        },
        {
          "name": "getZoomLevelTwoContent",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.Control" },
          "description": "Gets content of aggregation {@link #getZoomLevelTwoContent zoomLevelTwoContent}.\n\nThe node's content used for zoom level 2. If this aggregation is set, no default content like title and texts is used.",
          "experimental": { "since": "1.50" }
        },
        {
          "name": "removeAllParents",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.ID[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls in the association named {@link #getParents parents}."
        },
        {
          "name": "removeParent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.ID",
            "description": "The removed parent or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vParent",
              "type": "int|sap.ui.core.ID|sap.suite.ui.commons.ProcessFlowNode",
              "optional": false,
              "description": "The parent to be removed or its index or ID"
            }
          ],
          "description": "Removes an parent from the association named {@link #getParents parents}."
        },
        {
          "name": "setAriaProperties",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlowNode",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oAriaProperties",
              "type": "sap.suite.ui.commons.AriaProperties",
              "optional": false,
              "description": "The ariaProperties to set"
            }
          ],
          "description": "Sets the aggregated {@link #getAriaProperties ariaProperties}."
        },
        {
          "name": "setChildren",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlowNode",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sChildren",
              "type": "any[]",
              "optional": false,
              "description": "New value for property <code>children</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getChildren children}.\n\nDefines an array of children of the node.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setFocused",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlowNode",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bFocused",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>focused</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getFocused focused}.\n\nThe parameter defines if the node should be displayed in focus state.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setHighlighted",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlowNode",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bHighlighted",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>highlighted</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getHighlighted highlighted}.\n\nThe parameter defines if the node should be displayed in highlighted state.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setIsTitleClickable",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlowNode",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bIsTitleClickable",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>isTitleClickable</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getIsTitleClickable isTitleClickable}.\n\nSpecifies if the node title is clickable.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>.",
          "deprecated": {
            "since": "1.26",
            "text": "According to the new requirement there should be only one click event for each node (click on the whole node – see Press event) that is why titlePress event should not be used any longer. Hence isTitleClickable should not be used either."
          }
        },
        {
          "name": "setLaneId",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlowNode",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sLaneId",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>laneId</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getLaneId laneId}.\n\nSpecifies the assignment of the node to the respective lane.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setNodeId",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlowNode",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sNodeId",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>nodeId</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getNodeId nodeId}.\n\nNode identifier.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setSelected",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlowNode",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bSelected",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>selected</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSelected selected}.\n\nThe parameter defines if the node should be displayed in selected state.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setState",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlowNode",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sState",
              "type": "sap.suite.ui.commons.ProcessFlowNodeState",
              "optional": false,
              "description": "New value for property <code>state</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getState state}.\n\nState of the node.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Neutral</code>."
        },
        {
          "name": "setStateText",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlowNode",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sStateText",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>stateText</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getStateText stateText}.\n\nDescription of the state, for example \"Status OK\".\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setTag",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlowNode",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oTag",
              "type": "object",
              "optional": false,
              "description": "New value for property <code>tag</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getTag tag}.\n\nThe user-defined object which is returned back to the user by a node click event.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setTexts",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlowNode",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sTexts",
              "type": "string[]",
              "optional": false,
              "description": "New value for property <code>texts</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getTexts texts}.\n\nThe property contains the additional texts on the node. The expected type is array of strings. One array must not contain more than two strings. Additional strings in the array will be ignored.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setTitle",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlowNode",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sTitle",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>title</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getTitle title}.\n\nThe node title.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setTitleAbbreviation",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlowNode",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sTitleAbbreviation",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>titleAbbreviation</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getTitleAbbreviation titleAbbreviation}.\n\nTitle abbreviation is used in zoom level 'Three'.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setType",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlowNode",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sType",
              "type": "sap.suite.ui.commons.ProcessFlowNodeType",
              "optional": false,
              "description": "New value for property <code>type</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getType type}.\n\nType of the node.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Single</code>."
        },
        {
          "name": "setZoomLevelFourContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlowNode",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oZoomLevelFourContent",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The zoomLevelFourContent to set"
            }
          ],
          "description": "Sets the aggregated {@link #getZoomLevelFourContent zoomLevelFourContent}.",
          "experimental": { "since": "1.50" }
        },
        {
          "name": "setZoomLevelOneContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlowNode",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oZoomLevelOneContent",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The zoomLevelOneContent to set"
            }
          ],
          "description": "Sets the aggregated {@link #getZoomLevelOneContent zoomLevelOneContent}.",
          "experimental": { "since": "1.50" }
        },
        {
          "name": "setZoomLevelThreeContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlowNode",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oZoomLevelThreeContent",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The zoomLevelThreeContent to set"
            }
          ],
          "description": "Sets the aggregated {@link #getZoomLevelThreeContent zoomLevelThreeContent}.",
          "experimental": { "since": "1.50" }
        },
        {
          "name": "setZoomLevelTwoContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ProcessFlowNode",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oZoomLevelTwoContent",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The zoomLevelTwoContent to set"
            }
          ],
          "description": "Sets the aggregated {@link #getZoomLevelTwoContent zoomLevelTwoContent}.",
          "experimental": { "since": "1.50" }
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.suite.ui.commons.ProcessFlowNodeState",
      "basename": "ProcessFlowNodeState",
      "resource": "sap/suite/ui/commons/library.js",
      "module": "sap/suite/ui/commons/library",
      "export": "ProcessFlowNodeState",
      "static": true,
      "visibility": "public",
      "description": "Describes the state connected to the content it is representing in the Process Flow Node. The state is also displayed in the Process Flow Lane Header as a color segment of the donut.",
      "ui5-metamodel": true,
      "properties": [
        {
          "name": "Critical",
          "visibility": "public",
          "static": true,
          "since": "1.42.0",
          "type": "string",
          "description": "Critical status for a created document: with this document, a critical issue occurred, for example, the business process can be interrupted."
        },
        {
          "name": "Negative",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Negative status for a created document: with this document, an issue occurred."
        },
        {
          "name": "Neutral",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Neutral status for a created document: the document is in progress."
        },
        {
          "name": "Planned",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Planned status for a document: the document is planned to be started."
        },
        {
          "name": "PlannedNegative",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Planned, but negative status for a document: the planned document has an issue but has not yet been started."
        },
        {
          "name": "Positive",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Positive status for a created document: the document is done, finished, solved."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.suite.ui.commons.ProcessFlowNodeType",
      "basename": "ProcessFlowNodeType",
      "resource": "sap/suite/ui/commons/library.js",
      "module": "sap/suite/ui/commons/library",
      "export": "ProcessFlowNodeType",
      "static": true,
      "visibility": "public",
      "description": "Describes the type of a node. The type value could be single or aggregated. With this type, the application can define if several nodes should be displayed as one aggregated node in a path per column to represent a grouping of semantically equal nodes.",
      "ui5-metamodel": true,
      "properties": [
        {
          "name": "Aggregated",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Aggregated node - several nodes are illustrated as a stack of nodes in the same path and in one column."
        },
        {
          "name": "Single",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Single node - one node is illustrated in a column."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.suite.ui.commons.ProcessFlowZoomLevel",
      "basename": "ProcessFlowZoomLevel",
      "resource": "sap/suite/ui/commons/library.js",
      "module": "sap/suite/ui/commons/library",
      "export": "ProcessFlowZoomLevel",
      "static": true,
      "visibility": "public",
      "description": "The zoom level defines level of details for the node and how much space the process flow requires.",
      "ui5-metamodel": true,
      "properties": [
        {
          "name": "Four",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Zoom level for least details - only icon is displayed."
        },
        {
          "name": "One",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The full details with normal font size."
        },
        {
          "name": "Three",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The details are the icon, title text and no additional texts."
        },
        {
          "name": "Two",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The full detail view of the node but with smaller font size."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.RepeaterViewConfiguration",
      "basename": "RepeaterViewConfiguration",
      "resource": "sap/suite/ui/commons/RepeaterViewConfiguration.js",
      "module": "sap/suite/ui/commons/RepeaterViewConfiguration",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.core.Control",
      "description": "A configuration control defining how the content of the sap.suite.ui.commons.ViewRepeater control is displayed and what data is bound.",
      "deprecated": {
        "since": "1.32",
        "text": "Deprecated. Standard Fiori technology should be used."
      },
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "title",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The title of the view to be displayed in sap.suite.ui.commons.ViewRepeater view selector. If neither this nor \"icon\" property are defined, the default title \"View ##\" will be shown, where ## is an index number of the view in View Repeater starting from 1.",
            "methods": ["getTitle", "setTitle"]
          },
          {
            "name": "icon",
            "type": "sap.ui.core.URI",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "A path to the icon representing this view in sap.suite.ui.commons.ViewRepeater view selector.",
            "methods": ["getIcon", "setIcon"]
          },
          {
            "name": "iconHovered",
            "type": "sap.ui.core.URI",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "A path to the icon representing this view in sap.suite.ui.commons.ViewRepeater view selector when the regular icon is hovered.",
            "methods": ["getIconHovered", "setIconHovered"]
          },
          {
            "name": "path",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "A path used for rows/titles data binding.",
            "methods": ["getPath", "setPath"]
          },
          {
            "name": "itemMinWidth",
            "type": "int",
            "defaultValue": -1,
            "group": "Misc",
            "visibility": "public",
            "description": "The minimal width of the tile in this view. Only applicable if \"responsive\" property is set to true.",
            "methods": ["getItemMinWidth", "setItemMinWidth"]
          },
          {
            "name": "numberOfTiles",
            "type": "int",
            "defaultValue": -1,
            "group": "Misc",
            "visibility": "public",
            "description": "The number of tiles/rows that will be shown on a single page in this view.",
            "methods": ["getNumberOfTiles", "setNumberOfTiles"]
          },
          {
            "name": "responsive",
            "type": "any",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "description": "This parameter indicates whether the content is shown in rows or tiles. If false, the content is shown in rows just like in core sap.ui.commons.RowRepeater. If true, the content is shown in tiles (similar to sap.ui.ux3.DataSet control) that have minimal width defined by the \"itemMinWidth\" property. The number of columns depends on the parent control's width. If you resize the control, the number of columns may change respectively so that the content tiles can fill the entire space of a row.",
            "methods": ["getResponsive", "setResponsive"]
          },
          {
            "name": "external",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "description": "Indicates if the external representation of this view is rendered instead of the row repeater's own content.",
            "methods": ["getExternal", "setExternal"]
          },
          {
            "name": "iconSelected",
            "type": "sap.ui.core.URI",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "A path to the icon representing this view in sap.suite.ui.commons.ViewRepeater view selector when the regular icon is selected.",
            "methods": ["getIconSelected", "setIconSelected"]
          },
          {
            "name": "itemHeight",
            "type": "int",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The height of the tile in this view in pixels. Only applicable if the responsive property is set to true. This value is used for calculating the number of tile rows.",
            "methods": ["getItemHeight", "setItemHeight"]
          }
        ],
        "aggregations": [
          {
            "name": "template",
            "singularName": "template",
            "type": "sap.ui.core.Control",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "The control used as a template while displaying rows/tiles in this view. It should not have fixed width wider than defined by the \"itemMinWidth\" property, otherwise some content may appear cropped.",
            "methods": ["getTemplate", "destroyTemplate", "setTemplate"]
          },
          {
            "name": "externalRepresentation",
            "singularName": "externalRepresentation",
            "type": "sap.ui.core.Control",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "The control to be rendered instead of sap.suite.ui.commons.ViewRepeater's own content. Only used if the \"external\" property is set to true. This allows you to create custom views, for example, Table views. The sap.suite.ui.commons.ViewRepeater control will share its model with this control if the control does not have its own model.",
            "methods": [
              "getExternalRepresentation",
              "destroyExternalRepresentation",
              "setExternalRepresentation"
            ]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new RepeaterViewConfiguration.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "destroyExternalRepresentation",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.RepeaterViewConfiguration",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the externalRepresentation in the aggregation {@link #getExternalRepresentation externalRepresentation}."
        },
        {
          "name": "destroyTemplate",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.RepeaterViewConfiguration",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the template in the aggregation {@link #getTemplate template}."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.RepeaterViewConfiguration with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "getExternal",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>external</code>"
          },
          "description": "Gets current value of property {@link #getExternal external}.\n\nIndicates if the external representation of this view is rendered instead of the row repeater's own content.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getExternalRepresentation",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.Control" },
          "description": "Gets content of aggregation {@link #getExternalRepresentation externalRepresentation}.\n\nThe control to be rendered instead of sap.suite.ui.commons.ViewRepeater's own content. Only used if the \"external\" property is set to true. This allows you to create custom views, for example, Table views. The sap.suite.ui.commons.ViewRepeater control will share its model with this control if the control does not have its own model."
        },
        {
          "name": "getIcon",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.URI",
            "description": "Value of property <code>icon</code>"
          },
          "description": "Gets current value of property {@link #getIcon icon}.\n\nA path to the icon representing this view in sap.suite.ui.commons.ViewRepeater view selector."
        },
        {
          "name": "getIconHovered",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.URI",
            "description": "Value of property <code>iconHovered</code>"
          },
          "description": "Gets current value of property {@link #getIconHovered iconHovered}.\n\nA path to the icon representing this view in sap.suite.ui.commons.ViewRepeater view selector when the regular icon is hovered."
        },
        {
          "name": "getIconSelected",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.URI",
            "description": "Value of property <code>iconSelected</code>"
          },
          "description": "Gets current value of property {@link #getIconSelected iconSelected}.\n\nA path to the icon representing this view in sap.suite.ui.commons.ViewRepeater view selector when the regular icon is selected."
        },
        {
          "name": "getItemHeight",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>itemHeight</code>"
          },
          "description": "Gets current value of property {@link #getItemHeight itemHeight}.\n\nThe height of the tile in this view in pixels. Only applicable if the responsive property is set to true. This value is used for calculating the number of tile rows."
        },
        {
          "name": "getItemMinWidth",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>itemMinWidth</code>"
          },
          "description": "Gets current value of property {@link #getItemMinWidth itemMinWidth}.\n\nThe minimal width of the tile in this view. Only applicable if \"responsive\" property is set to true.\n\nDefault value is <code>-1</code>."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.RepeaterViewConfiguration."
        },
        {
          "name": "getNumberOfTiles",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>numberOfTiles</code>"
          },
          "description": "Gets current value of property {@link #getNumberOfTiles numberOfTiles}.\n\nThe number of tiles/rows that will be shown on a single page in this view.\n\nDefault value is <code>-1</code>."
        },
        {
          "name": "getPath",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>path</code>"
          },
          "description": "Gets current value of property {@link #getPath path}.\n\nA path used for rows/titles data binding."
        },
        {
          "name": "getResponsive",
          "visibility": "public",
          "returnValue": {
            "type": "any",
            "description": "Value of property <code>responsive</code>"
          },
          "description": "Gets current value of property {@link #getResponsive responsive}.\n\nThis parameter indicates whether the content is shown in rows or tiles. If false, the content is shown in rows just like in core sap.ui.commons.RowRepeater. If true, the content is shown in tiles (similar to sap.ui.ux3.DataSet control) that have minimal width defined by the \"itemMinWidth\" property. The number of columns depends on the parent control's width. If you resize the control, the number of columns may change respectively so that the content tiles can fill the entire space of a row.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getTemplate",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.Control" },
          "description": "Gets content of aggregation {@link #getTemplate template}.\n\nThe control used as a template while displaying rows/tiles in this view. It should not have fixed width wider than defined by the \"itemMinWidth\" property, otherwise some content may appear cropped."
        },
        {
          "name": "getTitle",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>title</code>"
          },
          "description": "Gets current value of property {@link #getTitle title}.\n\nThe title of the view to be displayed in sap.suite.ui.commons.ViewRepeater view selector. If neither this nor \"icon\" property are defined, the default title \"View ##\" will be shown, where ## is an index number of the view in View Repeater starting from 1."
        },
        {
          "name": "setExternal",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.RepeaterViewConfiguration",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bExternal",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>external</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getExternal external}.\n\nIndicates if the external representation of this view is rendered instead of the row repeater's own content.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setExternalRepresentation",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.RepeaterViewConfiguration",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oExternalRepresentation",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The externalRepresentation to set"
            }
          ],
          "description": "Sets the aggregated {@link #getExternalRepresentation externalRepresentation}."
        },
        {
          "name": "setIcon",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.RepeaterViewConfiguration",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sIcon",
              "type": "sap.ui.core.URI",
              "optional": false,
              "description": "New value for property <code>icon</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getIcon icon}.\n\nA path to the icon representing this view in sap.suite.ui.commons.ViewRepeater view selector.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setIconHovered",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.RepeaterViewConfiguration",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sIconHovered",
              "type": "sap.ui.core.URI",
              "optional": false,
              "description": "New value for property <code>iconHovered</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getIconHovered iconHovered}.\n\nA path to the icon representing this view in sap.suite.ui.commons.ViewRepeater view selector when the regular icon is hovered.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setIconSelected",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.RepeaterViewConfiguration",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sIconSelected",
              "type": "sap.ui.core.URI",
              "optional": false,
              "description": "New value for property <code>iconSelected</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getIconSelected iconSelected}.\n\nA path to the icon representing this view in sap.suite.ui.commons.ViewRepeater view selector when the regular icon is selected.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setItemHeight",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.RepeaterViewConfiguration",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iItemHeight",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>itemHeight</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getItemHeight itemHeight}.\n\nThe height of the tile in this view in pixels. Only applicable if the responsive property is set to true. This value is used for calculating the number of tile rows.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setItemMinWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.RepeaterViewConfiguration",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iItemMinWidth",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>itemMinWidth</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getItemMinWidth itemMinWidth}.\n\nThe minimal width of the tile in this view. Only applicable if \"responsive\" property is set to true.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>-1</code>."
        },
        {
          "name": "setNumberOfTiles",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.RepeaterViewConfiguration",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iNumberOfTiles",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>numberOfTiles</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getNumberOfTiles numberOfTiles}.\n\nThe number of tiles/rows that will be shown on a single page in this view.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>-1</code>."
        },
        {
          "name": "setPath",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.RepeaterViewConfiguration",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sPath",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>path</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getPath path}.\n\nA path used for rows/titles data binding.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setResponsive",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.RepeaterViewConfiguration",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oResponsive",
              "type": "any",
              "optional": false,
              "description": "New value for property <code>responsive</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getResponsive responsive}.\n\nThis parameter indicates whether the content is shown in rows or tiles. If false, the content is shown in rows just like in core sap.ui.commons.RowRepeater. If true, the content is shown in tiles (similar to sap.ui.ux3.DataSet control) that have minimal width defined by the \"itemMinWidth\" property. The number of columns depends on the parent control's width. If you resize the control, the number of columns may change respectively so that the content tiles can fill the entire space of a row.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setTemplate",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.RepeaterViewConfiguration",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oTemplate",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The template to set"
            }
          ],
          "description": "Sets the aggregated {@link #getTemplate template}."
        },
        {
          "name": "setTitle",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.RepeaterViewConfiguration",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sTitle",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>title</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getTitle title}.\n\nThe title of the view to be displayed in sap.suite.ui.commons.ViewRepeater view selector. If neither this nor \"icon\" property are defined, the default title \"View ##\" will be shown, where ## is an index number of the view in View Repeater starting from 1.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.suite.ui.commons.SelectionState",
      "basename": "SelectionState",
      "resource": "sap/suite/ui/commons/library.js",
      "module": "sap/suite/ui/commons/library",
      "export": "SelectionState",
      "static": true,
      "visibility": "public",
      "description": "SelectionState",
      "deprecated": {
        "since": "1.48",
        "text": "This Enumeration is deprecated as it is not used anywhere."
      },
      "ui5-metamodel": true,
      "properties": [
        {
          "name": "NotSelected",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Not Selected"
        },
        {
          "name": "Selected",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Selected"
        },
        {
          "name": "Semantic",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Semantic"
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.SplitButton",
      "basename": "SplitButton",
      "resource": "sap/suite/ui/commons/SplitButton.js",
      "module": "sap/suite/ui/commons/SplitButton",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.core.Control",
      "description": "The Split Button Control is a composite control that consists of a default-action Button and a Menu Button control. The default-action button control represents a simple push button. It is used for initiating actions, such as save or print. It can contain some text, an icon, or both; the order of the two can be configured. The action initiated by this button is considered to be the default action for the control, and it must be one of the selections defined in the Menu Button menu. The Menu Button control is a button that opens a menu upon user's click. MenuButton is a composition of the Menu control and the Button control and thus inheriting all features. When a menu item is selected by the user, MenuButton throws an event called itemSelected. The event transfers the itemId of the selected item. As an alternative, the button press event can be used which has a similar behavior.",
      "deprecated": { "since": "1.34", "text": "Deprecated. Not Fiori." },
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "visible",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "description": "Invisible split buttons are not rendered",
            "methods": ["getVisible", "setVisible"]
          },
          {
            "name": "enabled",
            "type": "boolean",
            "defaultValue": true,
            "group": "Behavior",
            "visibility": "public",
            "description": "Boolean property to enable the control (default is true). Buttons that are disabled have other colors than enabled ones, depending on custom settings.",
            "methods": ["getEnabled", "setEnabled"]
          },
          {
            "name": "lite",
            "type": "boolean",
            "defaultValue": false,
            "group": "Appearance",
            "visibility": "public",
            "description": "The split button is rendered as lite split button.",
            "methods": ["getLite", "setLite"]
          },
          {
            "name": "style",
            "type": "sap.ui.commons.ButtonStyle",
            "defaultValue": "Default",
            "group": "Appearance",
            "visibility": "public",
            "description": "Style of the control (e.g. emphasized, accept)",
            "methods": ["getStyle", "setStyle"]
          },
          {
            "name": "styled",
            "type": "boolean",
            "defaultValue": true,
            "group": "Appearance",
            "visibility": "public",
            "description": "Indicatied if the button is styled. If not it is rendered as native HTML-button. In this case a custom styling can be added usig addStyleClass.",
            "methods": ["getStyled", "setStyled"]
          },
          {
            "name": "iconFirst",
            "type": "boolean",
            "defaultValue": true,
            "group": "Appearance",
            "visibility": "public",
            "description": "If set to true (default), the display sequence is 1. icon 2. control text .",
            "methods": ["getIconFirst", "setIconFirst"]
          },
          {
            "name": "text",
            "type": "string",
            "defaultValue": "",
            "group": "Appearance",
            "visibility": "public",
            "description": "Text to be displayed for the action button.",
            "methods": ["getText", "setText"]
          },
          {
            "name": "icon",
            "type": "sap.ui.core.URI",
            "defaultValue": "",
            "group": "Appearance",
            "visibility": "public",
            "description": "Icon to be displayed as graphical element within the action button.",
            "methods": ["getIcon", "setIcon"]
          }
        ],
        "aggregations": [
          {
            "name": "menu",
            "singularName": "menu",
            "type": "sap.ui.commons.Menu",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "Menu that shall be opened when the menu part of the button is clicked",
            "methods": ["getMenu", "destroyMenu", "setMenu"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new SplitButton.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "destroyMenu",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.SplitButton",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the menu in the aggregation {@link #getMenu menu}."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.SplitButton with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "getEnabled",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>enabled</code>"
          },
          "description": "Gets current value of property {@link #getEnabled enabled}.\n\nBoolean property to enable the control (default is true). Buttons that are disabled have other colors than enabled ones, depending on custom settings.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getIcon",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.URI",
            "description": "Value of property <code>icon</code>"
          },
          "description": "Gets current value of property {@link #getIcon icon}.\n\nIcon to be displayed as graphical element within the action button.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "getIconFirst",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>iconFirst</code>"
          },
          "description": "Gets current value of property {@link #getIconFirst iconFirst}.\n\nIf set to true (default), the display sequence is 1. icon 2. control text .\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getLite",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>lite</code>"
          },
          "description": "Gets current value of property {@link #getLite lite}.\n\nThe split button is rendered as lite split button.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getMenu",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.commons.Menu" },
          "description": "Gets content of aggregation {@link #getMenu menu}.\n\nMenu that shall be opened when the menu part of the button is clicked"
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.SplitButton."
        },
        {
          "name": "getStyle",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.commons.ButtonStyle",
            "description": "Value of property <code>style</code>"
          },
          "description": "Gets current value of property {@link #getStyle style}.\n\nStyle of the control (e.g. emphasized, accept)\n\nDefault value is <code>Default</code>."
        },
        {
          "name": "getStyled",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>styled</code>"
          },
          "description": "Gets current value of property {@link #getStyled styled}.\n\nIndicatied if the button is styled. If not it is rendered as native HTML-button. In this case a custom styling can be added usig addStyleClass.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getText",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>text</code>"
          },
          "description": "Gets current value of property {@link #getText text}.\n\nText to be displayed for the action button.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "getVisible",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>visible</code>"
          },
          "description": "Gets current value of property {@link #getVisible visible}.\n\nInvisible split buttons are not rendered\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setEnabled",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.SplitButton",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bEnabled",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>enabled</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getEnabled enabled}.\n\nBoolean property to enable the control (default is true). Buttons that are disabled have other colors than enabled ones, depending on custom settings.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setIcon",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.SplitButton",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sIcon",
              "type": "sap.ui.core.URI",
              "optional": false,
              "description": "New value for property <code>icon</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getIcon icon}.\n\nIcon to be displayed as graphical element within the action button.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "setIconFirst",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.SplitButton",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bIconFirst",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>iconFirst</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getIconFirst iconFirst}.\n\nIf set to true (default), the display sequence is 1. icon 2. control text .\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setLite",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.SplitButton",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bLite",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>lite</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getLite lite}.\n\nThe split button is rendered as lite split button.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setMenu",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.SplitButton",
            "description": "<code>this</code> to allow method chaining"
          },
          "parameters": [
            {
              "name": "oMenu",
              "type": "sap.ui.commons.Menu",
              "optional": false,
              "description": "Menu"
            },
            {
              "name": "oMenuItem",
              "type": "sap.ui.commons.MenuItem",
              "optional": false,
              "description": "Item of menu"
            }
          ],
          "description": "Set the menu to the button and set menu item for the action button. The menu item for action button must exist in the menu. If it doesn't exist the first menu item is set by default."
        },
        {
          "name": "setStyle",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.SplitButton",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sStyle",
              "type": "sap.ui.commons.ButtonStyle",
              "optional": false,
              "description": "New value for property <code>style</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getStyle style}.\n\nStyle of the control (e.g. emphasized, accept)\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Default</code>."
        },
        {
          "name": "setStyled",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.SplitButton",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bStyled",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>styled</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getStyled styled}.\n\nIndicatied if the button is styled. If not it is rendered as native HTML-button. In this case a custom styling can be added usig addStyleClass.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setText",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.SplitButton",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sText",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>text</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getText text}.\n\nText to be displayed for the action button.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "setVisible",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.SplitButton",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bVisible",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>visible</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getVisible visible}.\n\nInvisible split buttons are not rendered\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.statusindicator.Circle",
      "basename": "Circle",
      "resource": "sap/suite/ui/commons/statusindicator/Circle.js",
      "module": "sap/suite/ui/commons/statusindicator/Circle",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.50",
      "extends": "sap.suite.ui.commons.statusindicator.SimpleShape",
      "description": "Status indicator shape in the form of a circle.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "cx",
            "type": "float",
            "defaultValue": 0,
            "group": "Misc",
            "visibility": "public",
            "description": "Defines the x coordinate of the center of the circle with respect to its parent status indicator.",
            "methods": ["getCx", "setCx"]
          },
          {
            "name": "cy",
            "type": "float",
            "defaultValue": 0,
            "group": "Misc",
            "visibility": "public",
            "description": "Defines the y coordinate of the center of the circle with respect to its parent status indicator.",
            "methods": ["getCy", "setCy"]
          },
          {
            "name": "r",
            "type": "float",
            "defaultValue": 0,
            "group": "Misc",
            "visibility": "public",
            "description": "Defines the radius of the circle.",
            "methods": ["getR", "setR"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new Circle.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.statusindicator.Circle with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.suite.ui.commons.statusindicator.SimpleShape.extend}."
        },
        {
          "name": "getCx",
          "visibility": "public",
          "returnValue": {
            "type": "float",
            "description": "Value of property <code>cx</code>"
          },
          "description": "Gets current value of property {@link #getCx cx}.\n\nDefines the x coordinate of the center of the circle with respect to its parent status indicator.\n\nDefault value is <code>0</code>."
        },
        {
          "name": "getCy",
          "visibility": "public",
          "returnValue": {
            "type": "float",
            "description": "Value of property <code>cy</code>"
          },
          "description": "Gets current value of property {@link #getCy cy}.\n\nDefines the y coordinate of the center of the circle with respect to its parent status indicator.\n\nDefault value is <code>0</code>."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.statusindicator.Circle."
        },
        {
          "name": "getR",
          "visibility": "public",
          "returnValue": {
            "type": "float",
            "description": "Value of property <code>r</code>"
          },
          "description": "Gets current value of property {@link #getR r}.\n\nDefines the radius of the circle.\n\nDefault value is <code>0</code>."
        },
        {
          "name": "setCx",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.Circle",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fCx",
              "type": "float",
              "optional": false,
              "description": "New value for property <code>cx</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getCx cx}.\n\nDefines the x coordinate of the center of the circle with respect to its parent status indicator.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>0</code>."
        },
        {
          "name": "setCy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.Circle",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fCy",
              "type": "float",
              "optional": false,
              "description": "New value for property <code>cy</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getCy cy}.\n\nDefines the y coordinate of the center of the circle with respect to its parent status indicator.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>0</code>."
        },
        {
          "name": "setR",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.Circle",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fR",
              "type": "float",
              "optional": false,
              "description": "New value for property <code>r</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getR r}.\n\nDefines the radius of the circle.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>0</code>."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.statusindicator.CustomShape",
      "basename": "CustomShape",
      "resource": "sap/suite/ui/commons/statusindicator/CustomShape.js",
      "module": "sap/suite/ui/commons/statusindicator/CustomShape",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.50",
      "extends": "sap.suite.ui.commons.statusindicator.Shape",
      "description": "Custom shape that is defined directly as SVG.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "x",
            "type": "int",
            "defaultValue": 0,
            "group": "Misc",
            "visibility": "public",
            "description": "Defines the x coordinate of the upper-left corner of the bounding rectangle.",
            "methods": ["getX", "setX"]
          },
          {
            "name": "y",
            "type": "int",
            "defaultValue": 0,
            "group": "Misc",
            "visibility": "public",
            "description": "Defines the y coordinate of the upper-left corner of the bounding rectangle.",
            "methods": ["getY", "setY"]
          },
          {
            "name": "width",
            "type": "sap.ui.core.CSSSize",
            "defaultValue": "100%",
            "group": "Misc",
            "visibility": "public",
            "description": "Defines the width of the bounding rectangle.",
            "methods": ["getWidth", "setWidth"]
          },
          {
            "name": "height",
            "type": "sap.ui.core.CSSSize",
            "defaultValue": "100%",
            "group": "Misc",
            "visibility": "public",
            "description": "Defines the height of the bounding rectangle.",
            "methods": ["getHeight", "setHeight"]
          },
          {
            "name": "strokeColor",
            "type": "sap.m.ValueCSSColor",
            "defaultValue": "Neutral",
            "group": "Misc",
            "visibility": "public",
            "description": "Specifies the color of the shape's outline.",
            "methods": ["getStrokeColor", "setStrokeColor"]
          },
          {
            "name": "strokeWidth",
            "type": "float",
            "defaultValue": 0.25,
            "group": "Misc",
            "visibility": "public",
            "description": "Specifies the width of the shape's outline.",
            "methods": ["getStrokeWidth", "setStrokeWidth"]
          },
          {
            "name": "definition",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "A valid XML fragment that contains an &lt;svg&gt; element that complies with the following requirements: <ul> <li>It includes no SVG groups (&lt;g&gt; elements).</li> <li>It includes no &lt;defs&gt; elements.</li> </ul> The SVG element is transformed into a status indicator shape in the following way: <ul> <li>The <code>viewBox</code> attribute of the root SVG element is respected and kept after the transformation.</li> <li>The inline styles of SVG shapes are respected, and shapes with such inline styles are not considered to be fillable.</li> <li>The SVG shapes without classes are considered fillable.</li> <li>If there are multiple fillable shapes, each shape element must have a <code>data-shape-id</code> attribute that is set to a unique value.</li> </ul> Example: <pre>\n  &lt;svg version=&quot;1.1&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; viewBox=&quot;0 0 30 30&quot; xml:space=&quot;preserve&quot;&gt;\n     &lt;path style=&quot;fill:blue;&quot; d=&quot;M14.664,29....&quot; /&gt;\n     &lt;path style=&quot;fill:blue;&quot; d=&quot;M13.626,25....&quot; /&gt;\n     &lt;path data-shape-id=&quot;fill-1&quot; d=&quot;M15.337,21....&quot; /&gt;\n     &lt;path data-shape-id=&quot;fill-2&quot; d=&quot;M13.626,17....&quot; /&gt;\n     &lt;path data-shape-id=&quot;fill-3&quot; d=&quot;M15.337,14....&quot; /&gt;\n     &lt;path data-shape-id=&quot;fill-4&quot; d=&quot;M13.107,10....&quot; /&gt;\n  &lt;/svg&gt;\n</pre> The first two paths in this example are filled with blue color. The last four shape elements are filled gradually, as the status indicator's value changes.\n\nPlease note that the SVG element must be escaped when used directly as an attribute in the XML view.",
            "methods": ["getDefinition", "setDefinition"]
          }
        ],
        "aggregations": [
          {
            "name": "shapes",
            "singularName": "shape",
            "type": "sap.suite.ui.commons.statusindicator.SimpleShape",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Read-only aggregation that contains simple shapes transformed from the SVG definition.",
            "methods": [
              "getShapes",
              "destroyShapes",
              "insertShape",
              "addShape",
              "removeShape",
              "indexOfShape",
              "removeAllShapes"
            ]
          },
          {
            "name": "fillingOptions",
            "singularName": "fillingOption",
            "type": "sap.suite.ui.commons.statusindicator.FillingOption",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Defines the order and weight of fillable shapes based on the status indicator value distribution. If this aggregation is not used, the shapes are filled in the order they are specified in the SVG definition.",
            "methods": [
              "getFillingOptions",
              "destroyFillingOptions",
              "insertFillingOption",
              "addFillingOption",
              "removeFillingOption",
              "indexOfFillingOption",
              "removeAllFillingOptions"
            ]
          }
        ],
        "defaultAggregation": "shapes"
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new CustomShape.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "addFillingOption",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.CustomShape",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oFillingOption",
              "type": "sap.suite.ui.commons.statusindicator.FillingOption",
              "optional": false,
              "description": "The fillingOption to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some fillingOption to the aggregation {@link #getFillingOptions fillingOptions}."
        },
        {
          "name": "addShape",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.CustomShape",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oShape",
              "type": "sap.suite.ui.commons.statusindicator.SimpleShape",
              "optional": false,
              "description": "The shape to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some shape to the aggregation {@link #getShapes shapes}."
        },
        {
          "name": "destroyFillingOptions",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.CustomShape",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the fillingOptions in the aggregation {@link #getFillingOptions fillingOptions}."
        },
        {
          "name": "destroyShapes",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.CustomShape",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the shapes in the aggregation {@link #getShapes shapes}."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.statusindicator.CustomShape with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.suite.ui.commons.statusindicator.Shape.extend}."
        },
        {
          "name": "getDefinition",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>definition</code>"
          },
          "description": "Gets current value of property {@link #getDefinition definition}.\n\nA valid XML fragment that contains an &lt;svg&gt; element that complies with the following requirements: <ul> <li>It includes no SVG groups (&lt;g&gt; elements).</li> <li>It includes no &lt;defs&gt; elements.</li> </ul> The SVG element is transformed into a status indicator shape in the following way: <ul> <li>The <code>viewBox</code> attribute of the root SVG element is respected and kept after the transformation.</li> <li>The inline styles of SVG shapes are respected, and shapes with such inline styles are not considered to be fillable.</li> <li>The SVG shapes without classes are considered fillable.</li> <li>If there are multiple fillable shapes, each shape element must have a <code>data-shape-id</code> attribute that is set to a unique value.</li> </ul> Example: <pre>\n  &lt;svg version=&quot;1.1&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; viewBox=&quot;0 0 30 30&quot; xml:space=&quot;preserve&quot;&gt;\n     &lt;path style=&quot;fill:blue;&quot; d=&quot;M14.664,29....&quot; /&gt;\n     &lt;path style=&quot;fill:blue;&quot; d=&quot;M13.626,25....&quot; /&gt;\n     &lt;path data-shape-id=&quot;fill-1&quot; d=&quot;M15.337,21....&quot; /&gt;\n     &lt;path data-shape-id=&quot;fill-2&quot; d=&quot;M13.626,17....&quot; /&gt;\n     &lt;path data-shape-id=&quot;fill-3&quot; d=&quot;M15.337,14....&quot; /&gt;\n     &lt;path data-shape-id=&quot;fill-4&quot; d=&quot;M13.107,10....&quot; /&gt;\n  &lt;/svg&gt;\n</pre> The first two paths in this example are filled with blue color. The last four shape elements are filled gradually, as the status indicator's value changes.\n\nPlease note that the SVG element must be escaped when used directly as an attribute in the XML view."
        },
        {
          "name": "getFillingOptions",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.FillingOption[]"
          },
          "description": "Gets content of aggregation {@link #getFillingOptions fillingOptions}.\n\nDefines the order and weight of fillable shapes based on the status indicator value distribution. If this aggregation is not used, the shapes are filled in the order they are specified in the SVG definition."
        },
        {
          "name": "getHeight",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.CSSSize",
            "description": "Value of property <code>height</code>"
          },
          "description": "Gets current value of property {@link #getHeight height}.\n\nDefines the height of the bounding rectangle.\n\nDefault value is <code>100%</code>."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.statusindicator.CustomShape."
        },
        {
          "name": "getShapes",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.SimpleShape[]"
          },
          "description": "Gets content of aggregation {@link #getShapes shapes}.\n\nRead-only aggregation that contains simple shapes transformed from the SVG definition."
        },
        {
          "name": "getStrokeColor",
          "visibility": "public",
          "returnValue": {
            "type": "sap.m.ValueCSSColor",
            "description": "Value of property <code>strokeColor</code>"
          },
          "description": "Gets current value of property {@link #getStrokeColor strokeColor}.\n\nSpecifies the color of the shape's outline.\n\nDefault value is <code>Neutral</code>."
        },
        {
          "name": "getStrokeWidth",
          "visibility": "public",
          "returnValue": {
            "type": "float",
            "description": "Value of property <code>strokeWidth</code>"
          },
          "description": "Gets current value of property {@link #getStrokeWidth strokeWidth}.\n\nSpecifies the width of the shape's outline.\n\nDefault value is <code>0.25</code>."
        },
        {
          "name": "getWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.CSSSize",
            "description": "Value of property <code>width</code>"
          },
          "description": "Gets current value of property {@link #getWidth width}.\n\nDefines the width of the bounding rectangle.\n\nDefault value is <code>100%</code>."
        },
        {
          "name": "getX",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>x</code>"
          },
          "description": "Gets current value of property {@link #getX x}.\n\nDefines the x coordinate of the upper-left corner of the bounding rectangle.\n\nDefault value is <code>0</code>."
        },
        {
          "name": "getY",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>y</code>"
          },
          "description": "Gets current value of property {@link #getY y}.\n\nDefines the y coordinate of the upper-left corner of the bounding rectangle.\n\nDefault value is <code>0</code>."
        },
        {
          "name": "indexOfFillingOption",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oFillingOption",
              "type": "sap.suite.ui.commons.statusindicator.FillingOption",
              "optional": false,
              "description": "The fillingOption whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.suite.ui.commons.statusindicator.FillingOption</code> in the aggregation {@link #getFillingOptions fillingOptions}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "indexOfShape",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oShape",
              "type": "sap.suite.ui.commons.statusindicator.SimpleShape",
              "optional": false,
              "description": "The shape whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.suite.ui.commons.statusindicator.SimpleShape</code> in the aggregation {@link #getShapes shapes}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "insertFillingOption",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.CustomShape",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oFillingOption",
              "type": "sap.suite.ui.commons.statusindicator.FillingOption",
              "optional": false,
              "description": "The fillingOption to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the fillingOption should be inserted at; for a negative value of <code>iIndex</code>, the fillingOption is inserted at position 0; for a value greater than the current size of the aggregation, the fillingOption is inserted at the last position"
            }
          ],
          "description": "Inserts a fillingOption into the aggregation {@link #getFillingOptions fillingOptions}."
        },
        {
          "name": "insertShape",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.CustomShape",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oShape",
              "type": "sap.suite.ui.commons.statusindicator.SimpleShape",
              "optional": false,
              "description": "The shape to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the shape should be inserted at; for a negative value of <code>iIndex</code>, the shape is inserted at position 0; for a value greater than the current size of the aggregation, the shape is inserted at the last position"
            }
          ],
          "description": "Inserts a shape into the aggregation {@link #getShapes shapes}."
        },
        {
          "name": "removeAllFillingOptions",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.FillingOption[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getFillingOptions fillingOptions}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeAllShapes",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.SimpleShape[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getShapes shapes}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeFillingOption",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.FillingOption",
            "description": "The removed fillingOption or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vFillingOption",
              "type": "int|string|sap.suite.ui.commons.statusindicator.FillingOption",
              "optional": false,
              "description": "The fillingOption to remove or its index or id"
            }
          ],
          "description": "Removes a fillingOption from the aggregation {@link #getFillingOptions fillingOptions}."
        },
        {
          "name": "removeShape",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.SimpleShape",
            "description": "The removed shape or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vShape",
              "type": "int|string|sap.suite.ui.commons.statusindicator.SimpleShape",
              "optional": false,
              "description": "The shape to remove or its index or id"
            }
          ],
          "description": "Removes a shape from the aggregation {@link #getShapes shapes}."
        },
        {
          "name": "setDefinition",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.CustomShape",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sDefinition",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>definition</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getDefinition definition}.\n\nA valid XML fragment that contains an &lt;svg&gt; element that complies with the following requirements: <ul> <li>It includes no SVG groups (&lt;g&gt; elements).</li> <li>It includes no &lt;defs&gt; elements.</li> </ul> The SVG element is transformed into a status indicator shape in the following way: <ul> <li>The <code>viewBox</code> attribute of the root SVG element is respected and kept after the transformation.</li> <li>The inline styles of SVG shapes are respected, and shapes with such inline styles are not considered to be fillable.</li> <li>The SVG shapes without classes are considered fillable.</li> <li>If there are multiple fillable shapes, each shape element must have a <code>data-shape-id</code> attribute that is set to a unique value.</li> </ul> Example: <pre>\n  &lt;svg version=&quot;1.1&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; viewBox=&quot;0 0 30 30&quot; xml:space=&quot;preserve&quot;&gt;\n     &lt;path style=&quot;fill:blue;&quot; d=&quot;M14.664,29....&quot; /&gt;\n     &lt;path style=&quot;fill:blue;&quot; d=&quot;M13.626,25....&quot; /&gt;\n     &lt;path data-shape-id=&quot;fill-1&quot; d=&quot;M15.337,21....&quot; /&gt;\n     &lt;path data-shape-id=&quot;fill-2&quot; d=&quot;M13.626,17....&quot; /&gt;\n     &lt;path data-shape-id=&quot;fill-3&quot; d=&quot;M15.337,14....&quot; /&gt;\n     &lt;path data-shape-id=&quot;fill-4&quot; d=&quot;M13.107,10....&quot; /&gt;\n  &lt;/svg&gt;\n</pre> The first two paths in this example are filled with blue color. The last four shape elements are filled gradually, as the status indicator's value changes.\n\nPlease note that the SVG element must be escaped when used directly as an attribute in the XML view.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setHeight",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.CustomShape",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sHeight",
              "type": "sap.ui.core.CSSSize",
              "optional": false,
              "description": "New value for property <code>height</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getHeight height}.\n\nDefines the height of the bounding rectangle.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>100%</code>."
        },
        {
          "name": "setStrokeColor",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.CustomShape",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sStrokeColor",
              "type": "sap.m.ValueCSSColor",
              "optional": false,
              "description": "New value for property <code>strokeColor</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getStrokeColor strokeColor}.\n\nSpecifies the color of the shape's outline.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Neutral</code>."
        },
        {
          "name": "setStrokeWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.CustomShape",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fStrokeWidth",
              "type": "float",
              "optional": false,
              "description": "New value for property <code>strokeWidth</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getStrokeWidth strokeWidth}.\n\nSpecifies the width of the shape's outline.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>0.25</code>."
        },
        {
          "name": "setWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.CustomShape",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sWidth",
              "type": "sap.ui.core.CSSSize",
              "optional": false,
              "description": "New value for property <code>width</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getWidth width}.\n\nDefines the width of the bounding rectangle.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>100%</code>."
        },
        {
          "name": "setX",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.CustomShape",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iX",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>x</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getX x}.\n\nDefines the x coordinate of the upper-left corner of the bounding rectangle.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>0</code>."
        },
        {
          "name": "setY",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.CustomShape",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iY",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>y</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getY y}.\n\nDefines the y coordinate of the upper-left corner of the bounding rectangle.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>0</code>."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.statusindicator.DiscreteThreshold",
      "basename": "DiscreteThreshold",
      "resource": "sap/suite/ui/commons/statusindicator/DiscreteThreshold.js",
      "module": "sap/suite/ui/commons/statusindicator/DiscreteThreshold",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.50",
      "extends": "sap.ui.core.Control",
      "description": "Discrete threshold specifies which values should be displayed by the status indicator.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "value",
            "type": "int",
            "defaultValue": 0,
            "group": "Misc",
            "visibility": "public",
            "description": "Defines the value threshold. This value is displayed when the status indicator's percentage value is above or equal to this value but below the value of the next threshold.",
            "methods": ["getValue", "setValue"]
          },
          {
            "name": "ariaLabel",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "ARIA label for this threshold to be used by screen reader software.",
            "methods": ["getAriaLabel", "setAriaLabel"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new DiscreteThreshold.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.statusindicator.DiscreteThreshold with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "getAriaLabel",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>ariaLabel</code>"
          },
          "description": "Gets current value of property {@link #getAriaLabel ariaLabel}.\n\nARIA label for this threshold to be used by screen reader software."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.statusindicator.DiscreteThreshold."
        },
        {
          "name": "getValue",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>value</code>"
          },
          "description": "Gets current value of property {@link #getValue value}.\n\nDefines the value threshold. This value is displayed when the status indicator's percentage value is above or equal to this value but below the value of the next threshold.\n\nDefault value is <code>0</code>."
        },
        {
          "name": "setAriaLabel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.DiscreteThreshold",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sAriaLabel",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>ariaLabel</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getAriaLabel ariaLabel}.\n\nARIA label for this threshold to be used by screen reader software.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setValue",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.DiscreteThreshold",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iValue",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>value</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getValue value}.\n\nDefines the value threshold. This value is displayed when the status indicator's percentage value is above or equal to this value but below the value of the next threshold.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>0</code>."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.suite.ui.commons.statusindicator.FillingDirectionType",
      "basename": "FillingDirectionType",
      "resource": "sap/suite/ui/commons/library.js",
      "module": "sap/suite/ui/commons/library",
      "export": "statusindicator.FillingDirectionType",
      "static": true,
      "visibility": "public",
      "description": "The direction of animation.<br>\n\nThe direction types <code>Up</code>, <code>Down</code>, <code>Left</code>, and <code>Right</code> are available when {@link sap.suite.ui.commons.statusindicator.FillingType} is set to <code>Linear</code>.<br> The direction types <code>Clockwise</code> and <code>Counterclockwise</code> are available when {@link sap.suite.ui.commons.statusindicator.FillingType} is set to <code>Circular</code>.",
      "properties": [
        {
          "name": "Clockwise",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Clockwise."
        },
        {
          "name": "CounterClockwise",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Counterclockwise."
        },
        {
          "name": "Down",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "From top to bottom."
        },
        {
          "name": "Left",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "From right to left."
        },
        {
          "name": "Right",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "From left to right."
        },
        {
          "name": "Up",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "From bottom upwards."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.statusindicator.FillingOption",
      "basename": "FillingOption",
      "resource": "sap/suite/ui/commons/statusindicator/FillingOption.js",
      "module": "sap/suite/ui/commons/statusindicator/FillingOption",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.50",
      "extends": "sap.ui.core.Control",
      "description": "Filling options for an SVG shape included in a custom shape.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "shapeId",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "ID of the fillable SVG shape included in a custom shape.",
            "methods": ["getShapeId", "setShapeId"]
          },
          {
            "name": "weight",
            "type": "int",
            "defaultValue": 1,
            "group": "Misc",
            "visibility": "public",
            "description": "Weight of the fillable shape, relative to other fillable shapes included in this custom shape. This property allows you to distribute the status indicator's value between distinct SVG shapes included in the custom shape. For example, for four SVG shapes with weights 1, 2, 3, and 4 (total weight 10), the status indicator's value is distributed in the following way: <ul> <li>If the status indicator's value is below 10% (1 out of 10), the first SVG shape (weight 1) is partially filled, depending on the percentage value. For example, if the percentage value of the status indicator is 5, the first SVG shape appears half-full. The rest of the SVG shapes appear empty.</li> <li>If the status indicator's value is at least 10% but below 30%, the first SVG shape (weight 1) is filled, and the second shape (weight 2) is filled only partially, depending on the percentage value. The rest of the SVG shapes in this custom shape appear empty.</li> <li>If the status indicator's value is at least 30% but below 60%, the first two SVG shapes (weight 1 and 2) are filled, and the third SVG shape (weight 3) is filled only partially. The fourth SVG shape (weight 4) appears empty.</li> <li>If the status indicator's value is at least 60% but below 100%, the first three SVG shapes (weight 1, 2, and 3) are filled, but the fourth SVG shape is filled only partially, depending on the percentage value.</li> <li>If the status indicator's value is 100, all four SVG shapes appear filled.</li> </ul>",
            "methods": ["getWeight", "setWeight"]
          },
          {
            "name": "order",
            "type": "int",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Order in which this fillable SVG shape must be filled, relative to other SVG shapes included in the custom shape. For example, if you have three SVG shapes with order values 1, 2, and 4 assigned, the first shape will be filled first, then the second shape, and, finally, the third shape, regardless of their order in the SVG definition. The value of this property must be unique.",
            "methods": ["getOrder", "setOrder"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new FillingOption.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.statusindicator.FillingOption with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.statusindicator.FillingOption."
        },
        {
          "name": "getOrder",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>order</code>"
          },
          "description": "Gets current value of property {@link #getOrder order}.\n\nOrder in which this fillable SVG shape must be filled, relative to other SVG shapes included in the custom shape. For example, if you have three SVG shapes with order values 1, 2, and 4 assigned, the first shape will be filled first, then the second shape, and, finally, the third shape, regardless of their order in the SVG definition. The value of this property must be unique."
        },
        {
          "name": "getShapeId",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>shapeId</code>"
          },
          "description": "Gets current value of property {@link #getShapeId shapeId}.\n\nID of the fillable SVG shape included in a custom shape."
        },
        {
          "name": "getWeight",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>weight</code>"
          },
          "description": "Gets current value of property {@link #getWeight weight}.\n\nWeight of the fillable shape, relative to other fillable shapes included in this custom shape. This property allows you to distribute the status indicator's value between distinct SVG shapes included in the custom shape. For example, for four SVG shapes with weights 1, 2, 3, and 4 (total weight 10), the status indicator's value is distributed in the following way: <ul> <li>If the status indicator's value is below 10% (1 out of 10), the first SVG shape (weight 1) is partially filled, depending on the percentage value. For example, if the percentage value of the status indicator is 5, the first SVG shape appears half-full. The rest of the SVG shapes appear empty.</li> <li>If the status indicator's value is at least 10% but below 30%, the first SVG shape (weight 1) is filled, and the second shape (weight 2) is filled only partially, depending on the percentage value. The rest of the SVG shapes in this custom shape appear empty.</li> <li>If the status indicator's value is at least 30% but below 60%, the first two SVG shapes (weight 1 and 2) are filled, and the third SVG shape (weight 3) is filled only partially. The fourth SVG shape (weight 4) appears empty.</li> <li>If the status indicator's value is at least 60% but below 100%, the first three SVG shapes (weight 1, 2, and 3) are filled, but the fourth SVG shape is filled only partially, depending on the percentage value.</li> <li>If the status indicator's value is 100, all four SVG shapes appear filled.</li> </ul>\n\nDefault value is <code>1</code>."
        },
        {
          "name": "setOrder",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.FillingOption",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iOrder",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>order</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getOrder order}.\n\nOrder in which this fillable SVG shape must be filled, relative to other SVG shapes included in the custom shape. For example, if you have three SVG shapes with order values 1, 2, and 4 assigned, the first shape will be filled first, then the second shape, and, finally, the third shape, regardless of their order in the SVG definition. The value of this property must be unique.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setShapeId",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.FillingOption",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sShapeId",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>shapeId</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShapeId shapeId}.\n\nID of the fillable SVG shape included in a custom shape.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setWeight",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.FillingOption",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iWeight",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>weight</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getWeight weight}.\n\nWeight of the fillable shape, relative to other fillable shapes included in this custom shape. This property allows you to distribute the status indicator's value between distinct SVG shapes included in the custom shape. For example, for four SVG shapes with weights 1, 2, 3, and 4 (total weight 10), the status indicator's value is distributed in the following way: <ul> <li>If the status indicator's value is below 10% (1 out of 10), the first SVG shape (weight 1) is partially filled, depending on the percentage value. For example, if the percentage value of the status indicator is 5, the first SVG shape appears half-full. The rest of the SVG shapes appear empty.</li> <li>If the status indicator's value is at least 10% but below 30%, the first SVG shape (weight 1) is filled, and the second shape (weight 2) is filled only partially, depending on the percentage value. The rest of the SVG shapes in this custom shape appear empty.</li> <li>If the status indicator's value is at least 30% but below 60%, the first two SVG shapes (weight 1 and 2) are filled, and the third SVG shape (weight 3) is filled only partially. The fourth SVG shape (weight 4) appears empty.</li> <li>If the status indicator's value is at least 60% but below 100%, the first three SVG shapes (weight 1, 2, and 3) are filled, but the fourth SVG shape is filled only partially, depending on the percentage value.</li> <li>If the status indicator's value is 100, all four SVG shapes appear filled.</li> </ul>\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>1</code>."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.suite.ui.commons.statusindicator.FillingType",
      "basename": "FillingType",
      "resource": "sap/suite/ui/commons/library.js",
      "module": "sap/suite/ui/commons/library",
      "export": "statusindicator.FillingType",
      "static": true,
      "visibility": "public",
      "description": "The type of filling.",
      "properties": [
        {
          "name": "Circular",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Clockwise or counterclockwise circular filling is applied.\n\n<p> For details, see {@link sap.suite.ui.commons.statusindicator.FillingDirectionType}. </p>"
        },
        {
          "name": "Linear",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The shape is filled with a linear gradient."
        },
        {
          "name": "None",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "No filling is applied."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.suite.ui.commons.statusindicator.HorizontalAlignmentType",
      "basename": "HorizontalAlignmentType",
      "resource": "sap/suite/ui/commons/library.js",
      "module": "sap/suite/ui/commons/library",
      "export": "statusindicator.HorizontalAlignmentType",
      "static": true,
      "visibility": "public",
      "description": "The horizontal alignment of the status indicator within its parent container.",
      "properties": [
        {
          "name": "Left",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Left."
        },
        {
          "name": "Middle",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Middle."
        },
        {
          "name": "Right",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Right."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.suite.ui.commons.statusindicator.LabelPositionType",
      "basename": "LabelPositionType",
      "resource": "sap/suite/ui/commons/library.js",
      "module": "sap/suite/ui/commons/library",
      "export": "statusindicator.LabelPositionType",
      "static": true,
      "visibility": "public",
      "description": "Position of the label, relative to the status indicator.",
      "properties": [
        {
          "name": "Bottom",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Bottom."
        },
        {
          "name": "Left",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Left"
        },
        {
          "name": "Right",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Right."
        },
        {
          "name": "Top",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Top."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.statusindicator.LibraryShape",
      "basename": "LibraryShape",
      "resource": "sap/suite/ui/commons/statusindicator/LibraryShape.js",
      "module": "sap/suite/ui/commons/statusindicator/LibraryShape",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.60.0",
      "extends": "sap.suite.ui.commons.statusindicator.CustomShape",
      "description": "Custom shape that is selected by <code>shapeId</code> from the shapes library.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "shapeId",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "An ID associated with a specific shape from the shape library.",
            "methods": ["getShapeId", "setShapeId"]
          }
        ],
        "events": [
          {
            "name": "afterShapeLoaded",
            "visibility": "public",
            "description": "This event is fired when the definition of shape is loaded.",
            "methods": [
              "attachAfterShapeLoaded",
              "detachAfterShapeLoaded",
              "fireAfterShapeLoaded"
            ]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new Library Shape.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "afterShapeLoaded",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "This event is fired when the definition of shape is loaded."
        }
      ],
      "methods": [
        {
          "name": "attachAfterShapeLoaded",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.LibraryShape",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.statusindicator.LibraryShape</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:afterShapeLoaded afterShapeLoaded} event of this <code>sap.suite.ui.commons.statusindicator.LibraryShape</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.statusindicator.LibraryShape</code> itself.\n\nThis event is fired when the definition of shape is loaded."
        },
        {
          "name": "detachAfterShapeLoaded",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.LibraryShape",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:afterShapeLoaded afterShapeLoaded} event of this <code>sap.suite.ui.commons.statusindicator.LibraryShape</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.statusindicator.LibraryShape with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.suite.ui.commons.statusindicator.CustomShape.extend}."
        },
        {
          "name": "fireAfterShapeLoaded",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.LibraryShape",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:afterShapeLoaded afterShapeLoaded} to attached listeners."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.statusindicator.LibraryShape."
        },
        {
          "name": "getShapeId",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>shapeId</code>"
          },
          "description": "Gets current value of property {@link #getShapeId shapeId}.\n\nAn ID associated with a specific shape from the shape library."
        },
        {
          "name": "setShapeId",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.LibraryShape",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sShapeId",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>shapeId</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShapeId shapeId}.\n\nAn ID associated with a specific shape from the shape library.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.statusindicator.Path",
      "basename": "Path",
      "resource": "sap/suite/ui/commons/statusindicator/Path.js",
      "module": "sap/suite/ui/commons/statusindicator/Path",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.50",
      "extends": "sap.suite.ui.commons.statusindicator.SimpleShape",
      "description": "Shape that consists of a single SVG path element.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "d",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Specifies the path that outlines the shape. The format is identical to the <code>d</code> attribute of the <code>&lt;path&gt;</code> SVG element.",
            "methods": ["getD", "setD"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new Path.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.statusindicator.Path with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.suite.ui.commons.statusindicator.SimpleShape.extend}."
        },
        {
          "name": "getD",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>d</code>"
          },
          "description": "Gets current value of property {@link #getD d}.\n\nSpecifies the path that outlines the shape. The format is identical to the <code>d</code> attribute of the <code>&lt;path&gt;</code> SVG element."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.statusindicator.Path."
        },
        {
          "name": "setD",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.Path",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sD",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>d</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getD d}.\n\nSpecifies the path that outlines the shape. The format is identical to the <code>d</code> attribute of the <code>&lt;path&gt;</code> SVG element.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.statusindicator.PropertyThreshold",
      "basename": "PropertyThreshold",
      "resource": "sap/suite/ui/commons/statusindicator/PropertyThreshold.js",
      "module": "sap/suite/ui/commons/statusindicator/PropertyThreshold",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.50",
      "extends": "sap.ui.core.Control",
      "description": "Property threshold defines how the shapes included in the status indicator should be filled when the status indicator's percentage value is below the given threshold.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "fillColor",
            "type": "sap.m.ValueCSSColor",
            "defaultValue": "Neutral",
            "group": "Misc",
            "visibility": "public",
            "description": "Defines the color used to fill the shapes included in the status indicator.",
            "methods": ["getFillColor", "setFillColor"]
          },
          {
            "name": "toValue",
            "type": "int",
            "defaultValue": 0,
            "group": "Misc",
            "visibility": "public",
            "description": "Defines the maximum value up to which the threshold setting should apply.",
            "methods": ["getToValue", "setToValue"]
          },
          {
            "name": "ariaLabel",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "ARIA label for this threshold to be used by screen reader software.",
            "methods": ["getAriaLabel", "setAriaLabel"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is provided"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new PropertyThreshold.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.statusindicator.PropertyThreshold with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "getAriaLabel",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>ariaLabel</code>"
          },
          "description": "Gets current value of property {@link #getAriaLabel ariaLabel}.\n\nARIA label for this threshold to be used by screen reader software."
        },
        {
          "name": "getFillColor",
          "visibility": "public",
          "returnValue": {
            "type": "sap.m.ValueCSSColor",
            "description": "Value of property <code>fillColor</code>"
          },
          "description": "Gets current value of property {@link #getFillColor fillColor}.\n\nDefines the color used to fill the shapes included in the status indicator.\n\nDefault value is <code>Neutral</code>."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.statusindicator.PropertyThreshold."
        },
        {
          "name": "getToValue",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>toValue</code>"
          },
          "description": "Gets current value of property {@link #getToValue toValue}.\n\nDefines the maximum value up to which the threshold setting should apply.\n\nDefault value is <code>0</code>."
        },
        {
          "name": "setAriaLabel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.PropertyThreshold",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sAriaLabel",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>ariaLabel</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getAriaLabel ariaLabel}.\n\nARIA label for this threshold to be used by screen reader software.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setFillColor",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.PropertyThreshold",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sFillColor",
              "type": "sap.m.ValueCSSColor",
              "optional": false,
              "description": "New value for property <code>fillColor</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getFillColor fillColor}.\n\nDefines the color used to fill the shapes included in the status indicator.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Neutral</code>."
        },
        {
          "name": "setToValue",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.PropertyThreshold",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iToValue",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>toValue</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getToValue toValue}.\n\nDefines the maximum value up to which the threshold setting should apply.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>0</code>."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.statusindicator.Rectangle",
      "basename": "Rectangle",
      "resource": "sap/suite/ui/commons/statusindicator/Rectangle.js",
      "module": "sap/suite/ui/commons/statusindicator/Rectangle",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.50",
      "extends": "sap.suite.ui.commons.statusindicator.SimpleShape",
      "description": "Status indicator shape in the form of a rectangle.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "x",
            "type": "int",
            "defaultValue": 0,
            "group": "Misc",
            "visibility": "public",
            "description": "Defines the x coordinate of the upper-left corner of the rectangle.",
            "methods": ["getX", "setX"]
          },
          {
            "name": "y",
            "type": "int",
            "defaultValue": 0,
            "group": "Misc",
            "visibility": "public",
            "description": "Defines the y coordinate of the upper-left corner of the rectangle.",
            "methods": ["getY", "setY"]
          },
          {
            "name": "rx",
            "type": "int",
            "defaultValue": 0,
            "group": "Misc",
            "visibility": "public",
            "description": "Defines the horizontal corner radius of the rectangle. If set to 0, the corners are not rounded.",
            "methods": ["getRx", "setRx"]
          },
          {
            "name": "ry",
            "type": "int",
            "defaultValue": 0,
            "group": "Misc",
            "visibility": "public",
            "description": "Defines the vertical corner radius of the rectangle. If set to 0, the corners are not rounded.",
            "methods": ["getRy", "setRy"]
          },
          {
            "name": "width",
            "type": "int",
            "defaultValue": 0,
            "group": "Misc",
            "visibility": "public",
            "description": "Defines the width of the rectangle.",
            "methods": ["getWidth", "setWidth"]
          },
          {
            "name": "height",
            "type": "int",
            "defaultValue": 0,
            "group": "Misc",
            "visibility": "public",
            "description": "Defines the height of the rectangle.",
            "methods": ["getHeight", "setHeight"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new Rectangle.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.statusindicator.Rectangle with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.suite.ui.commons.statusindicator.SimpleShape.extend}."
        },
        {
          "name": "getHeight",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>height</code>"
          },
          "description": "Gets current value of property {@link #getHeight height}.\n\nDefines the height of the rectangle.\n\nDefault value is <code>0</code>."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.statusindicator.Rectangle."
        },
        {
          "name": "getRx",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>rx</code>"
          },
          "description": "Gets current value of property {@link #getRx rx}.\n\nDefines the horizontal corner radius of the rectangle. If set to 0, the corners are not rounded.\n\nDefault value is <code>0</code>."
        },
        {
          "name": "getRy",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>ry</code>"
          },
          "description": "Gets current value of property {@link #getRy ry}.\n\nDefines the vertical corner radius of the rectangle. If set to 0, the corners are not rounded.\n\nDefault value is <code>0</code>."
        },
        {
          "name": "getWidth",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>width</code>"
          },
          "description": "Gets current value of property {@link #getWidth width}.\n\nDefines the width of the rectangle.\n\nDefault value is <code>0</code>."
        },
        {
          "name": "getX",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>x</code>"
          },
          "description": "Gets current value of property {@link #getX x}.\n\nDefines the x coordinate of the upper-left corner of the rectangle.\n\nDefault value is <code>0</code>."
        },
        {
          "name": "getY",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>y</code>"
          },
          "description": "Gets current value of property {@link #getY y}.\n\nDefines the y coordinate of the upper-left corner of the rectangle.\n\nDefault value is <code>0</code>."
        },
        {
          "name": "setHeight",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.Rectangle",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iHeight",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>height</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getHeight height}.\n\nDefines the height of the rectangle.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>0</code>."
        },
        {
          "name": "setRx",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.Rectangle",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iRx",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>rx</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getRx rx}.\n\nDefines the horizontal corner radius of the rectangle. If set to 0, the corners are not rounded.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>0</code>."
        },
        {
          "name": "setRy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.Rectangle",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iRy",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>ry</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getRy ry}.\n\nDefines the vertical corner radius of the rectangle. If set to 0, the corners are not rounded.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>0</code>."
        },
        {
          "name": "setWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.Rectangle",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iWidth",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>width</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getWidth width}.\n\nDefines the width of the rectangle.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>0</code>."
        },
        {
          "name": "setX",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.Rectangle",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iX",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>x</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getX x}.\n\nDefines the x coordinate of the upper-left corner of the rectangle.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>0</code>."
        },
        {
          "name": "setY",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.Rectangle",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iY",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>y</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getY y}.\n\nDefines the y coordinate of the upper-left corner of the rectangle.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>0</code>."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.statusindicator.Shape",
      "basename": "Shape",
      "resource": "sap/suite/ui/commons/statusindicator/Shape.js",
      "module": "sap/suite/ui/commons/statusindicator/Shape",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.50",
      "extends": "sap.ui.core.Control",
      "description": "Abstract shape that displays the value of the status indicator. The shape reflects the status indicator's percentage value by filling one or more of its parts (SVG shapes) with the specified color.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "fullAnimationDuration",
            "type": "int",
            "defaultValue": 0,
            "group": "Misc",
            "visibility": "public",
            "description": "Specifies the duration, in milliseconds, of the animation that would fill an empty shape to the full. The actual time it takes to change the shape's filling is proportional to the difference between the initial and the target status indicator's value. For example, a change from 20 percent to 70 percent takes only half of the time specified in the <code>fullAnimationDuration</code> property. If this property is set to <code>0</code>, changes are applied instantly without any animation.",
            "deprecated": {
              "since": "1.54.1",
              "text": "All animations are now limited to 250 ms."
            },
            "methods": ["getFullAnimationDuration", "setFullAnimationDuration"]
          },
          {
            "name": "fillColor",
            "type": "sap.m.ValueCSSColor",
            "defaultValue": "Neutral",
            "group": "Misc",
            "visibility": "public",
            "description": "Defines the color of the shape's fill.",
            "methods": ["getFillColor", "setFillColor"]
          },
          {
            "name": "animationOnStartup",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "description": "Defines if the initial value of the status indicator should be animated or directly displayed on startup. By default, it's displayed on startup without any animation.",
            "deprecated": {
              "since": "1.54.1",
              "text": "Use the animationOnChange property instead."
            },
            "methods": ["getAnimationOnStartup", "setAnimationOnStartup"]
          },
          {
            "name": "animationOnChange",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "description": "Defines if the change in the status indicator value should be animated or not.<br> When set to <code>true</code>, the change in value is animated.",
            "methods": ["getAnimationOnChange", "setAnimationOnChange"]
          },
          {
            "name": "animationOnStartupDelay",
            "type": "int",
            "defaultValue": 0,
            "group": "Misc",
            "visibility": "public",
            "description": "Specifies the delay of the initial value animation. Only applicable if the <code>animationOnStartup</code> property is set to <code>true</code>.",
            "deprecated": {},
            "methods": [
              "getAnimationOnStartupDelay",
              "setAnimationOnStartupDelay"
            ]
          },
          {
            "name": "fillingDirection",
            "type": "sap.suite.ui.commons.statusindicator.FillingDirectionType",
            "defaultValue": "Up",
            "group": "Misc",
            "visibility": "public",
            "description": "Defines the direction in which the shape is filled.",
            "methods": ["getFillingDirection", "setFillingDirection"]
          },
          {
            "name": "fillingType",
            "type": "sap.suite.ui.commons.statusindicator.FillingType",
            "defaultValue": "Linear",
            "group": "Misc",
            "visibility": "public",
            "description": "Defines the type of the shape's fill.",
            "methods": ["getFillingType", "setFillingType"]
          },
          {
            "name": "fillingAngle",
            "type": "int",
            "group": "Misc",
            "visibility": "public",
            "description": "Defines the angle at which the shape is filled. This property overrides the <code>fillingDirection</code> property.<br> Accepted values include <code>0</code> through <code>360</code> degrees.<br> For example, if you set the filling angle to <code>45</code>, the shape will be filled diagonally from the lower right part of the shape to its upper left part.<br> This property can be used only when {@link sap.suite.ui.commons.statusindicator.FillingType} is set to <code>Linear</code>.",
            "methods": ["getFillingAngle", "setFillingAngle"]
          },
          {
            "name": "verticalAlignment",
            "type": "sap.suite.ui.commons.statusindicator.VerticalAlignmentType",
            "defaultValue": "Middle",
            "group": "Misc",
            "visibility": "public",
            "description": "Defines the vertical alignment of the shape within its parent container.",
            "methods": ["getVerticalAlignment", "setVerticalAlignment"]
          },
          {
            "name": "horizontalAlignment",
            "type": "sap.suite.ui.commons.statusindicator.HorizontalAlignmentType",
            "defaultValue": "Middle",
            "group": "Misc",
            "visibility": "public",
            "description": "Defines the horizontal alignment of the shape within its parent container.",
            "methods": ["getHorizontalAlignment", "setHorizontalAlignment"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is provided"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new Shape.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.statusindicator.Shape with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "getAnimationOnChange",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>animationOnChange</code>"
          },
          "description": "Gets current value of property {@link #getAnimationOnChange animationOnChange}.\n\nDefines if the change in the status indicator value should be animated or not.<br> When set to <code>true</code>, the change in value is animated.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getAnimationOnStartup",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>animationOnStartup</code>"
          },
          "description": "Gets current value of property {@link #getAnimationOnStartup animationOnStartup}.\n\nDefines if the initial value of the status indicator should be animated or directly displayed on startup. By default, it's displayed on startup without any animation.\n\nDefault value is <code>false</code>.",
          "deprecated": {
            "since": "1.54.1",
            "text": "Use the animationOnChange property instead."
          }
        },
        {
          "name": "getAnimationOnStartupDelay",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>animationOnStartupDelay</code>"
          },
          "description": "Gets current value of property {@link #getAnimationOnStartupDelay animationOnStartupDelay}.\n\nSpecifies the delay of the initial value animation. Only applicable if the <code>animationOnStartup</code> property is set to <code>true</code>.\n\nDefault value is <code>0</code>.",
          "deprecated": { "text": "true" }
        },
        {
          "name": "getDisplayedValue",
          "visibility": "public",
          "returnValue": { "description": "int" },
          "description": "Returns the currently displayed value This method must be overridden by a child class"
        },
        {
          "name": "getFillColor",
          "visibility": "public",
          "returnValue": {
            "type": "sap.m.ValueCSSColor",
            "description": "Value of property <code>fillColor</code>"
          },
          "description": "Gets current value of property {@link #getFillColor fillColor}.\n\nDefines the color of the shape's fill.\n\nDefault value is <code>Neutral</code>."
        },
        {
          "name": "getFillingAngle",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>fillingAngle</code>"
          },
          "description": "Gets current value of property {@link #getFillingAngle fillingAngle}.\n\nDefines the angle at which the shape is filled. This property overrides the <code>fillingDirection</code> property.<br> Accepted values include <code>0</code> through <code>360</code> degrees.<br> For example, if you set the filling angle to <code>45</code>, the shape will be filled diagonally from the lower right part of the shape to its upper left part.<br> This property can be used only when {@link sap.suite.ui.commons.statusindicator.FillingType} is set to <code>Linear</code>.\n\nDefault value is <code>undefined</code>."
        },
        {
          "name": "getFillingDirection",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.FillingDirectionType",
            "description": "Value of property <code>fillingDirection</code>"
          },
          "description": "Gets current value of property {@link #getFillingDirection fillingDirection}.\n\nDefines the direction in which the shape is filled.\n\nDefault value is <code>Up</code>."
        },
        {
          "name": "getFillingType",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.FillingType",
            "description": "Value of property <code>fillingType</code>"
          },
          "description": "Gets current value of property {@link #getFillingType fillingType}.\n\nDefines the type of the shape's fill.\n\nDefault value is <code>Linear</code>."
        },
        {
          "name": "getFullAnimationDuration",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>fullAnimationDuration</code>"
          },
          "description": "Gets current value of property {@link #getFullAnimationDuration fullAnimationDuration}.\n\nSpecifies the duration, in milliseconds, of the animation that would fill an empty shape to the full. The actual time it takes to change the shape's filling is proportional to the difference between the initial and the target status indicator's value. For example, a change from 20 percent to 70 percent takes only half of the time specified in the <code>fullAnimationDuration</code> property. If this property is set to <code>0</code>, changes are applied instantly without any animation.\n\nDefault value is <code>0</code>.",
          "deprecated": {
            "since": "1.54.1",
            "text": "All animations are now limited to 250 ms."
          }
        },
        {
          "name": "getHorizontalAlignment",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.HorizontalAlignmentType",
            "description": "Value of property <code>horizontalAlignment</code>"
          },
          "description": "Gets current value of property {@link #getHorizontalAlignment horizontalAlignment}.\n\nDefines the horizontal alignment of the shape within its parent container.\n\nDefault value is <code>Middle</code>."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.statusindicator.Shape."
        },
        {
          "name": "getVerticalAlignment",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.VerticalAlignmentType",
            "description": "Value of property <code>verticalAlignment</code>"
          },
          "description": "Gets current value of property {@link #getVerticalAlignment verticalAlignment}.\n\nDefines the vertical alignment of the shape within its parent container.\n\nDefault value is <code>Middle</code>."
        },
        {
          "name": "setAnimationOnChange",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.Shape",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bAnimationOnChange",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>animationOnChange</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getAnimationOnChange animationOnChange}.\n\nDefines if the change in the status indicator value should be animated or not.<br> When set to <code>true</code>, the change in value is animated.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setAnimationOnStartup",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.Shape",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bAnimationOnStartup",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>animationOnStartup</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getAnimationOnStartup animationOnStartup}.\n\nDefines if the initial value of the status indicator should be animated or directly displayed on startup. By default, it's displayed on startup without any animation.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>.",
          "deprecated": {
            "since": "1.54.1",
            "text": "Use the animationOnChange property instead."
          }
        },
        {
          "name": "setAnimationOnStartupDelay",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.Shape",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iAnimationOnStartupDelay",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>animationOnStartupDelay</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getAnimationOnStartupDelay animationOnStartupDelay}.\n\nSpecifies the delay of the initial value animation. Only applicable if the <code>animationOnStartup</code> property is set to <code>true</code>.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>0</code>.",
          "deprecated": { "text": "true" }
        },
        {
          "name": "setFillColor",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.Shape",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sFillColor",
              "type": "sap.m.ValueCSSColor",
              "optional": false,
              "description": "New value for property <code>fillColor</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getFillColor fillColor}.\n\nDefines the color of the shape's fill.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Neutral</code>."
        },
        {
          "name": "setFillingAngle",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.Shape",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iFillingAngle",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>fillingAngle</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getFillingAngle fillingAngle}.\n\nDefines the angle at which the shape is filled. This property overrides the <code>fillingDirection</code> property.<br> Accepted values include <code>0</code> through <code>360</code> degrees.<br> For example, if you set the filling angle to <code>45</code>, the shape will be filled diagonally from the lower right part of the shape to its upper left part.<br> This property can be used only when {@link sap.suite.ui.commons.statusindicator.FillingType} is set to <code>Linear</code>.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>undefined</code>."
        },
        {
          "name": "setFillingDirection",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.Shape",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sFillingDirection",
              "type": "sap.suite.ui.commons.statusindicator.FillingDirectionType",
              "optional": false,
              "description": "New value for property <code>fillingDirection</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getFillingDirection fillingDirection}.\n\nDefines the direction in which the shape is filled.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Up</code>."
        },
        {
          "name": "setFillingType",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.Shape",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sFillingType",
              "type": "sap.suite.ui.commons.statusindicator.FillingType",
              "optional": false,
              "description": "New value for property <code>fillingType</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getFillingType fillingType}.\n\nDefines the type of the shape's fill.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Linear</code>."
        },
        {
          "name": "setFullAnimationDuration",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.Shape",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iFullAnimationDuration",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>fullAnimationDuration</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getFullAnimationDuration fullAnimationDuration}.\n\nSpecifies the duration, in milliseconds, of the animation that would fill an empty shape to the full. The actual time it takes to change the shape's filling is proportional to the difference between the initial and the target status indicator's value. For example, a change from 20 percent to 70 percent takes only half of the time specified in the <code>fullAnimationDuration</code> property. If this property is set to <code>0</code>, changes are applied instantly without any animation.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>0</code>.",
          "deprecated": {
            "since": "1.54.1",
            "text": "All animations are now limited to 250 ms."
          }
        },
        {
          "name": "setHorizontalAlignment",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.Shape",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sHorizontalAlignment",
              "type": "sap.suite.ui.commons.statusindicator.HorizontalAlignmentType",
              "optional": false,
              "description": "New value for property <code>horizontalAlignment</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getHorizontalAlignment horizontalAlignment}.\n\nDefines the horizontal alignment of the shape within its parent container.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Middle</code>."
        },
        {
          "name": "setVerticalAlignment",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.Shape",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sVerticalAlignment",
              "type": "sap.suite.ui.commons.statusindicator.VerticalAlignmentType",
              "optional": false,
              "description": "New value for property <code>verticalAlignment</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getVerticalAlignment verticalAlignment}.\n\nDefines the vertical alignment of the shape within its parent container.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Middle</code>."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.statusindicator.ShapeGroup",
      "basename": "ShapeGroup",
      "resource": "sap/suite/ui/commons/statusindicator/ShapeGroup.js",
      "module": "sap/suite/ui/commons/statusindicator/ShapeGroup",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.50",
      "extends": "sap.ui.core.Control",
      "description": "Group of shapes that display status indicator value. Shapes in the group are filled in parallel, actual animation might depend on particular shape setting.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "weight",
            "type": "int",
            "defaultValue": 10,
            "group": "Misc",
            "visibility": "public",
            "description": "Weight of the group, relative to other groups in the status indicator. This property allows you to distribute the status indicator's value between groups of shapes that it contains. For example, for three groups with weights 10, 10, and 20 (total weight 40), the status indicator's value is distributed in the following way: <ul> <li>If the status indicator's value is below 25% (10 out of 40), the first group of shapes (weight 10) is partially filled, depending on the percentage value. For example, if the percentage value is 5, the first group of shapes is 1/5-full. The second and the third groups are empty.</li> <li>If the status indicator's value is at least 25% but below 50%, the first group of shapes (weight 10) is filled, the second group (also weight 10) is partially filled, and the third group (weight 20) appears empty.</li> <li>If the status indicator's value is at least 50% but below 100%, the first two groups of shapes (weight 10 each) are filled, but the third group (weight 20) is only partially filled.</li> <li>If the status indicator's value is 100, all three groups of shapes are filled.</li> </ul>",
            "methods": ["getWeight", "setWeight"]
          }
        ],
        "aggregations": [
          {
            "name": "shapes",
            "singularName": "shape",
            "type": "sap.suite.ui.commons.statusindicator.Shape",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "List of shapes that belong to this group.",
            "methods": [
              "getShapes",
              "destroyShapes",
              "insertShape",
              "addShape",
              "removeShape",
              "indexOfShape",
              "removeAllShapes"
            ]
          }
        ],
        "defaultAggregation": "shapes"
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new ShapeGroup.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "addShape",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.ShapeGroup",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oShape",
              "type": "sap.suite.ui.commons.statusindicator.Shape",
              "optional": false,
              "description": "The shape to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some shape to the aggregation {@link #getShapes shapes}."
        },
        {
          "name": "destroyShapes",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.ShapeGroup",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the shapes in the aggregation {@link #getShapes shapes}."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.statusindicator.ShapeGroup with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.statusindicator.ShapeGroup."
        },
        {
          "name": "getShapes",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.Shape[]"
          },
          "description": "Gets content of aggregation {@link #getShapes shapes}.\n\nList of shapes that belong to this group."
        },
        {
          "name": "getWeight",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>weight</code>"
          },
          "description": "Gets current value of property {@link #getWeight weight}.\n\nWeight of the group, relative to other groups in the status indicator. This property allows you to distribute the status indicator's value between groups of shapes that it contains. For example, for three groups with weights 10, 10, and 20 (total weight 40), the status indicator's value is distributed in the following way: <ul> <li>If the status indicator's value is below 25% (10 out of 40), the first group of shapes (weight 10) is partially filled, depending on the percentage value. For example, if the percentage value is 5, the first group of shapes is 1/5-full. The second and the third groups are empty.</li> <li>If the status indicator's value is at least 25% but below 50%, the first group of shapes (weight 10) is filled, the second group (also weight 10) is partially filled, and the third group (weight 20) appears empty.</li> <li>If the status indicator's value is at least 50% but below 100%, the first two groups of shapes (weight 10 each) are filled, but the third group (weight 20) is only partially filled.</li> <li>If the status indicator's value is 100, all three groups of shapes are filled.</li> </ul>\n\nDefault value is <code>10</code>."
        },
        {
          "name": "indexOfShape",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oShape",
              "type": "sap.suite.ui.commons.statusindicator.Shape",
              "optional": false,
              "description": "The shape whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.suite.ui.commons.statusindicator.Shape</code> in the aggregation {@link #getShapes shapes}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "insertShape",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.ShapeGroup",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oShape",
              "type": "sap.suite.ui.commons.statusindicator.Shape",
              "optional": false,
              "description": "The shape to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the shape should be inserted at; for a negative value of <code>iIndex</code>, the shape is inserted at position 0; for a value greater than the current size of the aggregation, the shape is inserted at the last position"
            }
          ],
          "description": "Inserts a shape into the aggregation {@link #getShapes shapes}."
        },
        {
          "name": "removeAllShapes",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.Shape[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getShapes shapes}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeShape",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.Shape",
            "description": "The removed shape or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vShape",
              "type": "int|string|sap.suite.ui.commons.statusindicator.Shape",
              "optional": false,
              "description": "The shape to remove or its index or id"
            }
          ],
          "description": "Removes a shape from the aggregation {@link #getShapes shapes}."
        },
        {
          "name": "setWeight",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.ShapeGroup",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iWeight",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>weight</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getWeight weight}.\n\nWeight of the group, relative to other groups in the status indicator. This property allows you to distribute the status indicator's value between groups of shapes that it contains. For example, for three groups with weights 10, 10, and 20 (total weight 40), the status indicator's value is distributed in the following way: <ul> <li>If the status indicator's value is below 25% (10 out of 40), the first group of shapes (weight 10) is partially filled, depending on the percentage value. For example, if the percentage value is 5, the first group of shapes is 1/5-full. The second and the third groups are empty.</li> <li>If the status indicator's value is at least 25% but below 50%, the first group of shapes (weight 10) is filled, the second group (also weight 10) is partially filled, and the third group (weight 20) appears empty.</li> <li>If the status indicator's value is at least 50% but below 100%, the first two groups of shapes (weight 10 each) are filled, but the third group (weight 20) is only partially filled.</li> <li>If the status indicator's value is 100, all three groups of shapes are filled.</li> </ul>\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>10</code>."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.statusindicator.SimpleShape",
      "basename": "SimpleShape",
      "resource": "sap/suite/ui/commons/statusindicator/SimpleShape.js",
      "module": "sap/suite/ui/commons/statusindicator/SimpleShape",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.50",
      "extends": "sap.suite.ui.commons.statusindicator.Shape",
      "description": "A simple shape that consists of a single SVG shape.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "strokeWidth",
            "type": "float",
            "defaultValue": 0.25,
            "group": "Misc",
            "visibility": "public",
            "description": "Specifies the width of the shape's outline.",
            "methods": ["getStrokeWidth", "setStrokeWidth"]
          },
          {
            "name": "strokeColor",
            "type": "sap.m.ValueCSSColor",
            "defaultValue": "Neutral",
            "group": "Misc",
            "visibility": "public",
            "description": "Specifies the color of the shape's outline.",
            "methods": ["getStrokeColor", "setStrokeColor"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new SimpleShape.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.statusindicator.SimpleShape with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.suite.ui.commons.statusindicator.Shape.extend}."
        },
        {
          "name": "getDisplayedValue",
          "visibility": "public",
          "returnValue": {
            "type": "number",
            "description": "currently displayed value"
          },
          "description": "Returns currently displayed value."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.statusindicator.SimpleShape."
        },
        {
          "name": "getStrokeColor",
          "visibility": "public",
          "returnValue": {
            "type": "sap.m.ValueCSSColor",
            "description": "Value of property <code>strokeColor</code>"
          },
          "description": "Gets current value of property {@link #getStrokeColor strokeColor}.\n\nSpecifies the color of the shape's outline.\n\nDefault value is <code>Neutral</code>."
        },
        {
          "name": "getStrokeWidth",
          "visibility": "public",
          "returnValue": {
            "type": "float",
            "description": "Value of property <code>strokeWidth</code>"
          },
          "description": "Gets current value of property {@link #getStrokeWidth strokeWidth}.\n\nSpecifies the width of the shape's outline.\n\nDefault value is <code>0.25</code>."
        },
        {
          "name": "setStrokeColor",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.SimpleShape",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sStrokeColor",
              "type": "sap.m.ValueCSSColor",
              "optional": false,
              "description": "New value for property <code>strokeColor</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getStrokeColor strokeColor}.\n\nSpecifies the color of the shape's outline.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Neutral</code>."
        },
        {
          "name": "setStrokeWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.SimpleShape",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fStrokeWidth",
              "type": "float",
              "optional": false,
              "description": "New value for property <code>strokeWidth</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getStrokeWidth strokeWidth}.\n\nSpecifies the width of the shape's outline.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>0.25</code>."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.suite.ui.commons.statusindicator.SizeType",
      "basename": "SizeType",
      "resource": "sap/suite/ui/commons/library.js",
      "module": "sap/suite/ui/commons/library",
      "export": "statusindicator.SizeType",
      "static": true,
      "visibility": "public",
      "description": "Predefined sizes of the status indicator.",
      "properties": [
        {
          "name": "ExtraLarge",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Extra large status indicator."
        },
        {
          "name": "Large",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Large status indicator."
        },
        {
          "name": "Medium",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Medium status indicator."
        },
        {
          "name": "None",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "No size settings are applied."
        },
        {
          "name": "Small",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Small status indicator."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.statusindicator.StatusIndicator",
      "basename": "StatusIndicator",
      "resource": "sap/suite/ui/commons/statusindicator/StatusIndicator.js",
      "module": "sap/suite/ui/commons/statusindicator/StatusIndicator",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.50",
      "extends": "sap.ui.core.Control",
      "description": "The status indicator control displays a value between 0 and 100.\n\nA status indicator may consist of multiple groups that gradually display the value. The shapes in the first group are filled first, the shapes in the second group second, and so on.\n\nThe value of the status indicator is distributed between the groups depending on their weight.\n\nThe filling of the shapes in the groups can be proportional to the value of the status indicator or can be based on thresholds specified in the <code>discreteThresholds</code> aggregation.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "width",
            "type": "sap.ui.core.CSSSize",
            "defaultValue": "100%",
            "group": "Dimension",
            "visibility": "public",
            "description": "Width of the status indicator. Only sets the width of the image part of the status indicator, potential label is not included. The root div of the status indicator is set as display: \"block\" and so takes up the whole space available. Wrap status indicator in {@link sap.m.FlexBox} control if you wish to control width of the whole status indicator.",
            "methods": ["getWidth", "setWidth"]
          },
          {
            "name": "height",
            "type": "sap.ui.core.CSSSize",
            "defaultValue": "auto",
            "group": "Dimension",
            "visibility": "public",
            "description": "Height of the status indicator. Only sets the height of the image part of the status indicator, potential label is not included.",
            "methods": ["getHeight", "setHeight"]
          },
          {
            "name": "value",
            "type": "int",
            "defaultValue": 0,
            "group": "Misc",
            "visibility": "public",
            "description": "Percentage value, between 0 and 100, that the status indicator reflects.",
            "methods": ["getValue", "setValue"]
          },
          {
            "name": "viewBox",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Defines the view box surrounding the shapes included in the status indicator.",
            "methods": ["getViewBox", "setViewBox"]
          },
          {
            "name": "ariaLabel",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "ARIA label for this control to be used by screen reader software.",
            "methods": ["getAriaLabel", "setAriaLabel"]
          },
          {
            "name": "size",
            "type": "sap.suite.ui.commons.statusindicator.SizeType",
            "defaultValue": "None",
            "group": "Misc",
            "visibility": "public",
            "description": "Predefined sizes for the status indicator.",
            "methods": ["getSize", "setSize"]
          },
          {
            "name": "labelPosition",
            "type": "sap.suite.ui.commons.statusindicator.LabelPositionType",
            "defaultValue": "Left",
            "group": "Misc",
            "visibility": "public",
            "methods": ["getLabelPosition", "setLabelPosition"]
          },
          {
            "name": "showLabel",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "methods": ["getShowLabel", "setShowLabel"]
          }
        ],
        "aggregations": [
          {
            "name": "groups",
            "singularName": "group",
            "type": "sap.suite.ui.commons.statusindicator.ShapeGroup",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Groups of shapes that display the status indicator's percentage value. A status indicator must always include at least one group.",
            "methods": [
              "getGroups",
              "destroyGroups",
              "insertGroup",
              "addGroup",
              "removeGroup",
              "indexOfGroup",
              "removeAllGroups"
            ]
          },
          {
            "name": "propertyThresholds",
            "singularName": "propertyThreshold",
            "type": "sap.suite.ui.commons.statusindicator.PropertyThreshold",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Defines how shapes are filled based on the status indicator's percentage value.",
            "methods": [
              "getPropertyThresholds",
              "destroyPropertyThresholds",
              "insertPropertyThreshold",
              "addPropertyThreshold",
              "removePropertyThreshold",
              "indexOfPropertyThreshold",
              "removeAllPropertyThresholds"
            ]
          },
          {
            "name": "discreteThresholds",
            "singularName": "discreteThreshold",
            "type": "sap.suite.ui.commons.statusindicator.DiscreteThreshold",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Specifies discrete thresholds for the status indicator. If discrete thresholds are set, the status indicator adjusts its appearance to the closest threshold value that is not greater than the actual percentage value of the status indicator. For example, if the following discrete thresholds are specified: <ul> <li><code>value = \"20\"</code></li> <li><code>value = \"60\"</code></li> <li><code>value = \"100\"</code></li> </ul> The status indicator displays the following percentage values: <ul> <li><code>0</code> if the actual value is 15</li> <li><code>20</code> if the actual value is 20</li> <li><code>20</code> if the actual value is 55</li> <li><code>60</code> if the actual value is 60</li> <li><code>60</code> if the actual value is 79</li> <li><code>100</code> if the actual value is 100</li> </ul> Please note that these thresholds affect only the appearance of the status inicator, not its stored value.",
            "methods": [
              "getDiscreteThresholds",
              "destroyDiscreteThresholds",
              "insertDiscreteThreshold",
              "addDiscreteThreshold",
              "removeDiscreteThreshold",
              "indexOfDiscreteThreshold",
              "removeAllDiscreteThresholds"
            ]
          },
          {
            "name": "label",
            "singularName": "label",
            "type": "sap.m.Text",
            "cardinality": "0..1",
            "visibility": "public",
            "methods": ["getLabel", "destroyLabel", "setLabel"]
          }
        ],
        "defaultAggregation": "groups",
        "associations": [
          {
            "name": "ariaDescribedBy",
            "singularName": "ariaDescribedBy",
            "type": "sap.ui.core.Control",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Controls or IDs that provide a description for this control. Can be used by screen reader software.",
            "methods": [
              "getAriaDescribedBy",
              "addAriaDescribedBy",
              "removeAriaDescribedBy",
              "removeAllAriaDescribedBy"
            ]
          },
          {
            "name": "ariaLabelledBy",
            "singularName": "ariaLabelledBy",
            "type": "sap.ui.core.Control",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Controls or IDs that label this control. Can be used by screen reader software.",
            "methods": [
              "getAriaLabelledBy",
              "addAriaLabelledBy",
              "removeAriaLabelledBy",
              "removeAllAriaLabelledBy"
            ]
          }
        ],
        "events": [
          {
            "name": "press",
            "visibility": "public",
            "description": "This event is fired when the user clicks or taps the status indicator.",
            "methods": ["attachPress", "detachPress", "firePress"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new StatusIndicator.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "press",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "This event is fired when the user clicks or taps the status indicator."
        }
      ],
      "methods": [
        {
          "name": "addAriaDescribedBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.StatusIndicator",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "vAriaDescribedBy",
              "type": "sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaDescribedBy to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some ariaDescribedBy into the association {@link #getAriaDescribedBy ariaDescribedBy}."
        },
        {
          "name": "addAriaLabelledBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.StatusIndicator",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "vAriaLabelledBy",
              "type": "sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaLabelledBy to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "addDiscreteThreshold",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.StatusIndicator",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oDiscreteThreshold",
              "type": "sap.suite.ui.commons.statusindicator.DiscreteThreshold",
              "optional": false,
              "description": "The discreteThreshold to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some discreteThreshold to the aggregation {@link #getDiscreteThresholds discreteThresholds}."
        },
        {
          "name": "addGroup",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.StatusIndicator",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oGroup",
              "type": "sap.suite.ui.commons.statusindicator.ShapeGroup",
              "optional": false,
              "description": "The group to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some group to the aggregation {@link #getGroups groups}."
        },
        {
          "name": "addPropertyThreshold",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.StatusIndicator",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oPropertyThreshold",
              "type": "sap.suite.ui.commons.statusindicator.PropertyThreshold",
              "optional": false,
              "description": "The propertyThreshold to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some propertyThreshold to the aggregation {@link #getPropertyThresholds propertyThresholds}."
        },
        {
          "name": "attachPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.StatusIndicator",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.statusindicator.StatusIndicator</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:press press} event of this <code>sap.suite.ui.commons.statusindicator.StatusIndicator</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.statusindicator.StatusIndicator</code> itself.\n\nThis event is fired when the user clicks or taps the status indicator."
        },
        {
          "name": "destroyDiscreteThresholds",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.StatusIndicator",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the discreteThresholds in the aggregation {@link #getDiscreteThresholds discreteThresholds}."
        },
        {
          "name": "destroyGroups",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.StatusIndicator",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the groups in the aggregation {@link #getGroups groups}."
        },
        {
          "name": "destroyLabel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.StatusIndicator",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the label in the aggregation {@link #getLabel label}."
        },
        {
          "name": "destroyPropertyThresholds",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.StatusIndicator",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the propertyThresholds in the aggregation {@link #getPropertyThresholds propertyThresholds}."
        },
        {
          "name": "detachPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.StatusIndicator",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:press press} event of this <code>sap.suite.ui.commons.statusindicator.StatusIndicator</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.statusindicator.StatusIndicator with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "firePress",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.StatusIndicator",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:press press} to attached listeners."
        },
        {
          "name": "getAriaDescribedBy",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.ID[]" },
          "description": "Returns array of IDs of the elements which are the current targets of the association {@link #getAriaDescribedBy ariaDescribedBy}."
        },
        {
          "name": "getAriaLabel",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>ariaLabel</code>"
          },
          "description": "Gets current value of property {@link #getAriaLabel ariaLabel}.\n\nARIA label for this control to be used by screen reader software."
        },
        {
          "name": "getAriaLabelledBy",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.ID[]" },
          "description": "Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "getDiscreteThresholds",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.DiscreteThreshold[]"
          },
          "description": "Gets content of aggregation {@link #getDiscreteThresholds discreteThresholds}.\n\nSpecifies discrete thresholds for the status indicator. If discrete thresholds are set, the status indicator adjusts its appearance to the closest threshold value that is not greater than the actual percentage value of the status indicator. For example, if the following discrete thresholds are specified: <ul> <li><code>value = \"20\"</code></li> <li><code>value = \"60\"</code></li> <li><code>value = \"100\"</code></li> </ul> The status indicator displays the following percentage values: <ul> <li><code>0</code> if the actual value is 15</li> <li><code>20</code> if the actual value is 20</li> <li><code>20</code> if the actual value is 55</li> <li><code>60</code> if the actual value is 60</li> <li><code>60</code> if the actual value is 79</li> <li><code>100</code> if the actual value is 100</li> </ul> Please note that these thresholds affect only the appearance of the status inicator, not its stored value."
        },
        {
          "name": "getGroups",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.ShapeGroup[]"
          },
          "description": "Gets content of aggregation {@link #getGroups groups}.\n\nGroups of shapes that display the status indicator's percentage value. A status indicator must always include at least one group."
        },
        {
          "name": "getHeight",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.CSSSize",
            "description": "Value of property <code>height</code>"
          },
          "description": "Gets current value of property {@link #getHeight height}.\n\nHeight of the status indicator. Only sets the height of the image part of the status indicator, potential label is not included.\n\nDefault value is <code>auto</code>."
        },
        {
          "name": "getLabel",
          "visibility": "public",
          "returnValue": { "type": "sap.m.Text" },
          "description": "Gets content of aggregation {@link #getLabel label}."
        },
        {
          "name": "getLabelPosition",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.LabelPositionType",
            "description": "Value of property <code>labelPosition</code>"
          },
          "description": "Gets current value of property {@link #getLabelPosition labelPosition}.\n\nDefault value is <code>Left</code>."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.statusindicator.StatusIndicator."
        },
        {
          "name": "getPropertyThresholds",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.PropertyThreshold[]"
          },
          "description": "Gets content of aggregation {@link #getPropertyThresholds propertyThresholds}.\n\nDefines how shapes are filled based on the status indicator's percentage value."
        },
        {
          "name": "getShowLabel",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showLabel</code>"
          },
          "description": "Gets current value of property {@link #getShowLabel showLabel}.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getSize",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.SizeType",
            "description": "Value of property <code>size</code>"
          },
          "description": "Gets current value of property {@link #getSize size}.\n\nPredefined sizes for the status indicator.\n\nDefault value is <code>None</code>."
        },
        {
          "name": "getValue",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>value</code>"
          },
          "description": "Gets current value of property {@link #getValue value}.\n\nPercentage value, between 0 and 100, that the status indicator reflects.\n\nDefault value is <code>0</code>."
        },
        {
          "name": "getViewBox",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>viewBox</code>"
          },
          "description": "Gets current value of property {@link #getViewBox viewBox}.\n\nDefines the view box surrounding the shapes included in the status indicator."
        },
        {
          "name": "getWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.CSSSize",
            "description": "Value of property <code>width</code>"
          },
          "description": "Gets current value of property {@link #getWidth width}.\n\nWidth of the status indicator. Only sets the width of the image part of the status indicator, potential label is not included. The root div of the status indicator is set as display: \"block\" and so takes up the whole space available. Wrap status indicator in {@link sap.m.FlexBox} control if you wish to control width of the whole status indicator.\n\nDefault value is <code>100%</code>."
        },
        {
          "name": "indexOfDiscreteThreshold",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oDiscreteThreshold",
              "type": "sap.suite.ui.commons.statusindicator.DiscreteThreshold",
              "optional": false,
              "description": "The discreteThreshold whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.suite.ui.commons.statusindicator.DiscreteThreshold</code> in the aggregation {@link #getDiscreteThresholds discreteThresholds}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "indexOfGroup",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oGroup",
              "type": "sap.suite.ui.commons.statusindicator.ShapeGroup",
              "optional": false,
              "description": "The group whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.suite.ui.commons.statusindicator.ShapeGroup</code> in the aggregation {@link #getGroups groups}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "indexOfPropertyThreshold",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oPropertyThreshold",
              "type": "sap.suite.ui.commons.statusindicator.PropertyThreshold",
              "optional": false,
              "description": "The propertyThreshold whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.suite.ui.commons.statusindicator.PropertyThreshold</code> in the aggregation {@link #getPropertyThresholds propertyThresholds}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "insertDiscreteThreshold",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.StatusIndicator",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oDiscreteThreshold",
              "type": "sap.suite.ui.commons.statusindicator.DiscreteThreshold",
              "optional": false,
              "description": "The discreteThreshold to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the discreteThreshold should be inserted at; for a negative value of <code>iIndex</code>, the discreteThreshold is inserted at position 0; for a value greater than the current size of the aggregation, the discreteThreshold is inserted at the last position"
            }
          ],
          "description": "Inserts a discreteThreshold into the aggregation {@link #getDiscreteThresholds discreteThresholds}."
        },
        {
          "name": "insertGroup",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.StatusIndicator",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oGroup",
              "type": "sap.suite.ui.commons.statusindicator.ShapeGroup",
              "optional": false,
              "description": "The group to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the group should be inserted at; for a negative value of <code>iIndex</code>, the group is inserted at position 0; for a value greater than the current size of the aggregation, the group is inserted at the last position"
            }
          ],
          "description": "Inserts a group into the aggregation {@link #getGroups groups}."
        },
        {
          "name": "insertPropertyThreshold",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.StatusIndicator",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oPropertyThreshold",
              "type": "sap.suite.ui.commons.statusindicator.PropertyThreshold",
              "optional": false,
              "description": "The propertyThreshold to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the propertyThreshold should be inserted at; for a negative value of <code>iIndex</code>, the propertyThreshold is inserted at position 0; for a value greater than the current size of the aggregation, the propertyThreshold is inserted at the last position"
            }
          ],
          "description": "Inserts a propertyThreshold into the aggregation {@link #getPropertyThresholds propertyThresholds}."
        },
        {
          "name": "removeAllAriaDescribedBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.ID[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls in the association named {@link #getAriaDescribedBy ariaDescribedBy}."
        },
        {
          "name": "removeAllAriaLabelledBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.ID[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "removeAllDiscreteThresholds",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.DiscreteThreshold[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getDiscreteThresholds discreteThresholds}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeAllGroups",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.ShapeGroup[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getGroups groups}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeAllPropertyThresholds",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.PropertyThreshold[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getPropertyThresholds propertyThresholds}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeAriaDescribedBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.ID",
            "description": "The removed ariaDescribedBy or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vAriaDescribedBy",
              "type": "int|sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaDescribedBy to be removed or its index or ID"
            }
          ],
          "description": "Removes an ariaDescribedBy from the association named {@link #getAriaDescribedBy ariaDescribedBy}."
        },
        {
          "name": "removeAriaLabelledBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.ID",
            "description": "The removed ariaLabelledBy or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vAriaLabelledBy",
              "type": "int|sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaLabelledBy to be removed or its index or ID"
            }
          ],
          "description": "Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "removeDiscreteThreshold",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.DiscreteThreshold",
            "description": "The removed discreteThreshold or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vDiscreteThreshold",
              "type": "int|string|sap.suite.ui.commons.statusindicator.DiscreteThreshold",
              "optional": false,
              "description": "The discreteThreshold to remove or its index or id"
            }
          ],
          "description": "Removes a discreteThreshold from the aggregation {@link #getDiscreteThresholds discreteThresholds}."
        },
        {
          "name": "removeGroup",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.ShapeGroup",
            "description": "The removed group or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vGroup",
              "type": "int|string|sap.suite.ui.commons.statusindicator.ShapeGroup",
              "optional": false,
              "description": "The group to remove or its index or id"
            }
          ],
          "description": "Removes a group from the aggregation {@link #getGroups groups}."
        },
        {
          "name": "removePropertyThreshold",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.PropertyThreshold",
            "description": "The removed propertyThreshold or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vPropertyThreshold",
              "type": "int|string|sap.suite.ui.commons.statusindicator.PropertyThreshold",
              "optional": false,
              "description": "The propertyThreshold to remove or its index or id"
            }
          ],
          "description": "Removes a propertyThreshold from the aggregation {@link #getPropertyThresholds propertyThresholds}."
        },
        {
          "name": "setAriaLabel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.StatusIndicator",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sAriaLabel",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>ariaLabel</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getAriaLabel ariaLabel}.\n\nARIA label for this control to be used by screen reader software.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setHeight",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.StatusIndicator",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sHeight",
              "type": "sap.ui.core.CSSSize",
              "optional": false,
              "description": "New value for property <code>height</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getHeight height}.\n\nHeight of the status indicator. Only sets the height of the image part of the status indicator, potential label is not included.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>auto</code>."
        },
        {
          "name": "setLabel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.StatusIndicator",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oLabel",
              "type": "sap.m.Text",
              "optional": false,
              "description": "The label to set"
            }
          ],
          "description": "Sets the aggregated {@link #getLabel label}."
        },
        {
          "name": "setLabelPosition",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.StatusIndicator",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sLabelPosition",
              "type": "sap.suite.ui.commons.statusindicator.LabelPositionType",
              "optional": false,
              "description": "New value for property <code>labelPosition</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getLabelPosition labelPosition}.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Left</code>."
        },
        {
          "name": "setShowLabel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.StatusIndicator",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowLabel",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showLabel</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowLabel showLabel}.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setSize",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.StatusIndicator",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sSize",
              "type": "sap.suite.ui.commons.statusindicator.SizeType",
              "optional": false,
              "description": "New value for property <code>size</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSize size}.\n\nPredefined sizes for the status indicator.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>None</code>."
        },
        {
          "name": "setValue",
          "visibility": "public",
          "returnValue": {
            "type": "Object",
            "description": "self Sets the status indicator percentage value."
          },
          "parameters": [
            {
              "name": "iValue",
              "type": "int",
              "optional": false,
              "description": "Value that should be displayed"
            }
          ]
        },
        {
          "name": "setViewBox",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.StatusIndicator",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sViewBox",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>viewBox</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getViewBox viewBox}.\n\nDefines the view box surrounding the shapes included in the status indicator.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.statusindicator.StatusIndicator",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sWidth",
              "type": "sap.ui.core.CSSSize",
              "optional": false,
              "description": "New value for property <code>width</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getWidth width}.\n\nWidth of the status indicator. Only sets the width of the image part of the status indicator, potential label is not included. The root div of the status indicator is set as display: \"block\" and so takes up the whole space available. Wrap status indicator in {@link sap.m.FlexBox} control if you wish to control width of the whole status indicator.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>100%</code>."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.suite.ui.commons.statusindicator.VerticalAlignmentType",
      "basename": "VerticalAlignmentType",
      "resource": "sap/suite/ui/commons/library.js",
      "module": "sap/suite/ui/commons/library",
      "export": "statusindicator.VerticalAlignmentType",
      "static": true,
      "visibility": "public",
      "description": "The vertical alignment of the status indicator within its parent container.",
      "properties": [
        {
          "name": "Bottom",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Bottom."
        },
        {
          "name": "Middle",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Middle."
        },
        {
          "name": "Top",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Top."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.taccount.TAccount",
      "basename": "TAccount",
      "resource": "sap/suite/ui/commons/taccount/TAccount.js",
      "module": "sap/suite/ui/commons/taccount/TAccount",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.58.0",
      "extends": "sap.ui.core.Control",
      "description": "The T account control displays debit and credit entries on a general ledger account. It can be used to visualize the flow of transactions through the accounts where these transactions are stored.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "measureOfUnit",
            "type": "string",
            "defaultValue": "",
            "group": "Misc",
            "visibility": "public",
            "description": "Unit of measurement. Can be set to a currency or any other applicable unit of measurement.<br> Please note that if multi-currency accounts are used, the T account control will not convert the values to the currency defined in this property.",
            "methods": ["getMeasureOfUnit", "setMeasureOfUnit"]
          },
          {
            "name": "collapsed",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "description": "Defines whether the T account should appear as collapsed.<br>By default, it appears as expanded.",
            "methods": ["getCollapsed", "setCollapsed"]
          },
          {
            "name": "title",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Title of the T account.",
            "methods": ["getTitle", "setTitle"]
          },
          {
            "name": "subtitle",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Subtitle of the T account.",
            "methods": ["getSubtitle", "setSubtitle"]
          },
          {
            "name": "orderBy",
            "type": "string",
            "defaultValue": "",
            "group": "Misc",
            "visibility": "public",
            "description": "TAccount property's key, which is used for ordering. If not set, order mode is not enabled. Only supports <code>DateTime</code> properties.",
            "methods": ["getOrderBy", "setOrderBy"]
          },
          {
            "name": "opening",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "description": "Mode with opening and closing balance of the T account.",
            "methods": ["getOpening", "setOpening"]
          },
          {
            "name": "openingDebit",
            "type": "float",
            "defaultValue": 0,
            "group": "Misc",
            "visibility": "public",
            "description": "Opening debit balance of the T account.",
            "methods": ["getOpeningDebit", "setOpeningDebit"]
          },
          {
            "name": "openingCredit",
            "type": "float",
            "defaultValue": 0,
            "group": "Misc",
            "visibility": "public",
            "description": "Opening credit balance of the T account.",
            "methods": ["getOpeningCredit", "setOpeningCredit"]
          }
        ],
        "aggregations": [
          {
            "name": "debit",
            "singularName": "debit",
            "type": "sap.suite.ui.commons.taccount.TAccountItem",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Debit entries.",
            "methods": [
              "getDebit",
              "destroyDebit",
              "insertDebit",
              "addDebit",
              "removeDebit",
              "indexOfDebit",
              "removeAllDebit"
            ]
          },
          {
            "name": "credit",
            "singularName": "credit",
            "type": "sap.suite.ui.commons.taccount.TAccountItem",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Credit entries.",
            "methods": [
              "getCredit",
              "destroyCredit",
              "insertCredit",
              "addCredit",
              "removeCredit",
              "indexOfCredit",
              "removeAllCredit"
            ]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new TAccount.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.",
        "references": [
          "{@link topic:fe6792fa673c4b0fba91d35fd6493c86 T Account}"
        ]
      },
      "methods": [
        {
          "name": "addCredit",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.taccount.TAccount",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oCredit",
              "type": "sap.suite.ui.commons.taccount.TAccountItem",
              "optional": false,
              "description": "The credit to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some credit to the aggregation {@link #getCredit credit}."
        },
        {
          "name": "addDebit",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.taccount.TAccount",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oDebit",
              "type": "sap.suite.ui.commons.taccount.TAccountItem",
              "optional": false,
              "description": "The debit to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some debit to the aggregation {@link #getDebit debit}."
        },
        {
          "name": "destroyCredit",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.taccount.TAccount",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the credit in the aggregation {@link #getCredit credit}."
        },
        {
          "name": "destroyDebit",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.taccount.TAccount",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the debit in the aggregation {@link #getDebit debit}."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.taccount.TAccount with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "getCollapsed",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>collapsed</code>"
          },
          "description": "Gets current value of property {@link #getCollapsed collapsed}.\n\nDefines whether the T account should appear as collapsed.<br>By default, it appears as expanded.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getCredit",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.taccount.TAccountItem[]"
          },
          "description": "Gets content of aggregation {@link #getCredit credit}.\n\nCredit entries."
        },
        {
          "name": "getDebit",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.taccount.TAccountItem[]"
          },
          "description": "Gets content of aggregation {@link #getDebit debit}.\n\nDebit entries."
        },
        {
          "name": "getMeasureOfUnit",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>measureOfUnit</code>"
          },
          "description": "Gets current value of property {@link #getMeasureOfUnit measureOfUnit}.\n\nUnit of measurement. Can be set to a currency or any other applicable unit of measurement.<br> Please note that if multi-currency accounts are used, the T account control will not convert the values to the currency defined in this property.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.taccount.TAccount."
        },
        {
          "name": "getOpening",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>opening</code>"
          },
          "description": "Gets current value of property {@link #getOpening opening}.\n\nMode with opening and closing balance of the T account.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getOpeningCredit",
          "visibility": "public",
          "returnValue": {
            "type": "float",
            "description": "Value of property <code>openingCredit</code>"
          },
          "description": "Gets current value of property {@link #getOpeningCredit openingCredit}.\n\nOpening credit balance of the T account.\n\nDefault value is <code>0</code>."
        },
        {
          "name": "getOpeningDebit",
          "visibility": "public",
          "returnValue": {
            "type": "float",
            "description": "Value of property <code>openingDebit</code>"
          },
          "description": "Gets current value of property {@link #getOpeningDebit openingDebit}.\n\nOpening debit balance of the T account.\n\nDefault value is <code>0</code>."
        },
        {
          "name": "getOrderBy",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>orderBy</code>"
          },
          "description": "Gets current value of property {@link #getOrderBy orderBy}.\n\nTAccount property's key, which is used for ordering. If not set, order mode is not enabled. Only supports <code>DateTime</code> properties.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "getSubtitle",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>subtitle</code>"
          },
          "description": "Gets current value of property {@link #getSubtitle subtitle}.\n\nSubtitle of the T account."
        },
        {
          "name": "getTitle",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>title</code>"
          },
          "description": "Gets current value of property {@link #getTitle title}.\n\nTitle of the T account."
        },
        {
          "name": "indexOfCredit",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oCredit",
              "type": "sap.suite.ui.commons.taccount.TAccountItem",
              "optional": false,
              "description": "The credit whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.suite.ui.commons.taccount.TAccountItem</code> in the aggregation {@link #getCredit credit}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "indexOfDebit",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oDebit",
              "type": "sap.suite.ui.commons.taccount.TAccountItem",
              "optional": false,
              "description": "The debit whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.suite.ui.commons.taccount.TAccountItem</code> in the aggregation {@link #getDebit debit}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "insertCredit",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.taccount.TAccount",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oCredit",
              "type": "sap.suite.ui.commons.taccount.TAccountItem",
              "optional": false,
              "description": "The credit to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the credit should be inserted at; for a negative value of <code>iIndex</code>, the credit is inserted at position 0; for a value greater than the current size of the aggregation, the credit is inserted at the last position"
            }
          ],
          "description": "Inserts a credit into the aggregation {@link #getCredit credit}."
        },
        {
          "name": "insertDebit",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.taccount.TAccount",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oDebit",
              "type": "sap.suite.ui.commons.taccount.TAccountItem",
              "optional": false,
              "description": "The debit to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the debit should be inserted at; for a negative value of <code>iIndex</code>, the debit is inserted at position 0; for a value greater than the current size of the aggregation, the debit is inserted at the last position"
            }
          ],
          "description": "Inserts a debit into the aggregation {@link #getDebit debit}."
        },
        {
          "name": "removeAllCredit",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.taccount.TAccountItem[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getCredit credit}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeAllDebit",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.taccount.TAccountItem[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getDebit debit}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeCredit",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.taccount.TAccountItem",
            "description": "The removed credit or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vCredit",
              "type": "int|string|sap.suite.ui.commons.taccount.TAccountItem",
              "optional": false,
              "description": "The credit to remove or its index or id"
            }
          ],
          "description": "Removes a credit from the aggregation {@link #getCredit credit}."
        },
        {
          "name": "removeDebit",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.taccount.TAccountItem",
            "description": "The removed debit or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vDebit",
              "type": "int|string|sap.suite.ui.commons.taccount.TAccountItem",
              "optional": false,
              "description": "The debit to remove or its index or id"
            }
          ],
          "description": "Removes a debit from the aggregation {@link #getDebit debit}."
        },
        {
          "name": "reset",
          "visibility": "public",
          "since": "1.68",
          "description": "Resets the internal state of the T account."
        },
        {
          "name": "setCollapsed",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.taccount.TAccount",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bCollapsed",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>collapsed</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getCollapsed collapsed}.\n\nDefines whether the T account should appear as collapsed.<br>By default, it appears as expanded.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setMeasureOfUnit",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.taccount.TAccount",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sMeasureOfUnit",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>measureOfUnit</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getMeasureOfUnit measureOfUnit}.\n\nUnit of measurement. Can be set to a currency or any other applicable unit of measurement.<br> Please note that if multi-currency accounts are used, the T account control will not convert the values to the currency defined in this property.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "setOpening",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.taccount.TAccount",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bOpening",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>opening</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getOpening opening}.\n\nMode with opening and closing balance of the T account.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setOpeningCredit",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.taccount.TAccount",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fOpeningCredit",
              "type": "float",
              "optional": false,
              "description": "New value for property <code>openingCredit</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getOpeningCredit openingCredit}.\n\nOpening credit balance of the T account.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>0</code>."
        },
        {
          "name": "setOpeningDebit",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.taccount.TAccount",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fOpeningDebit",
              "type": "float",
              "optional": false,
              "description": "New value for property <code>openingDebit</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getOpeningDebit openingDebit}.\n\nOpening debit balance of the T account.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>0</code>."
        },
        {
          "name": "setOrderBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.taccount.TAccount",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sOrderBy",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>orderBy</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getOrderBy orderBy}.\n\nTAccount property's key, which is used for ordering. If not set, order mode is not enabled. Only supports <code>DateTime</code> properties.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "setSubtitle",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.taccount.TAccount",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sSubtitle",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>subtitle</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSubtitle subtitle}.\n\nSubtitle of the T account.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setTitle",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.taccount.TAccount",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sTitle",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>title</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getTitle title}.\n\nTitle of the T account.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.taccount.TAccountGroup",
      "basename": "TAccountGroup",
      "resource": "sap/suite/ui/commons/taccount/TAccountGroup.js",
      "module": "sap/suite/ui/commons/taccount/TAccountGroup",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.58.0",
      "extends": "sap.ui.core.Control",
      "description": "The T account group control displays debit and credit entries for all {@link sap.suite.ui.commons.TAccount} controls included in the group.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "title",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Title of the group.",
            "methods": ["getTitle", "setTitle"]
          },
          {
            "name": "collapsed",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "description": "Defines whether the group should appear as collapsed. By default, it appears as expanded.",
            "methods": ["getCollapsed", "setCollapsed"]
          }
        ],
        "aggregations": [
          {
            "name": "accounts",
            "singularName": "account",
            "type": "sap.suite.ui.commons.taccount.TAccount",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "T accounts included in the group.",
            "methods": [
              "getAccounts",
              "destroyAccounts",
              "insertAccount",
              "addAccount",
              "removeAccount",
              "indexOfAccount",
              "removeAllAccounts"
            ]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new TAccountGroup.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "addAccount",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.taccount.TAccountGroup",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oAccount",
              "type": "sap.suite.ui.commons.taccount.TAccount",
              "optional": false,
              "description": "The account to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some account to the aggregation {@link #getAccounts accounts}."
        },
        {
          "name": "destroyAccounts",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.taccount.TAccountGroup",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the accounts in the aggregation {@link #getAccounts accounts}."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.taccount.TAccountGroup with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "getAccounts",
          "visibility": "public",
          "returnValue": { "type": "sap.suite.ui.commons.taccount.TAccount[]" },
          "description": "Gets content of aggregation {@link #getAccounts accounts}.\n\nT accounts included in the group."
        },
        {
          "name": "getCollapsed",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>collapsed</code>"
          },
          "description": "Gets current value of property {@link #getCollapsed collapsed}.\n\nDefines whether the group should appear as collapsed. By default, it appears as expanded.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.taccount.TAccountGroup."
        },
        {
          "name": "getTitle",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>title</code>"
          },
          "description": "Gets current value of property {@link #getTitle title}.\n\nTitle of the group."
        },
        {
          "name": "indexOfAccount",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oAccount",
              "type": "sap.suite.ui.commons.taccount.TAccount",
              "optional": false,
              "description": "The account whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.suite.ui.commons.taccount.TAccount</code> in the aggregation {@link #getAccounts accounts}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "insertAccount",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.taccount.TAccountGroup",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oAccount",
              "type": "sap.suite.ui.commons.taccount.TAccount",
              "optional": false,
              "description": "The account to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the account should be inserted at; for a negative value of <code>iIndex</code>, the account is inserted at position 0; for a value greater than the current size of the aggregation, the account is inserted at the last position"
            }
          ],
          "description": "Inserts a account into the aggregation {@link #getAccounts accounts}."
        },
        {
          "name": "removeAccount",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.taccount.TAccount",
            "description": "The removed account or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vAccount",
              "type": "int|string|sap.suite.ui.commons.taccount.TAccount",
              "optional": false,
              "description": "The account to remove or its index or id"
            }
          ],
          "description": "Removes a account from the aggregation {@link #getAccounts accounts}."
        },
        {
          "name": "removeAllAccounts",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.taccount.TAccount[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getAccounts accounts}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "reset",
          "visibility": "public",
          "since": "1.68",
          "description": "Resets the internal state of the T account group."
        },
        {
          "name": "setCollapsed",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.taccount.TAccountGroup",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bCollapsed",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>collapsed</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getCollapsed collapsed}.\n\nDefines whether the group should appear as collapsed. By default, it appears as expanded.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setTitle",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.taccount.TAccountGroup",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sTitle",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>title</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getTitle title}.\n\nTitle of the group.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.taccount.TAccountItem",
      "basename": "TAccountItem",
      "resource": "sap/suite/ui/commons/taccount/TAccountItem.js",
      "module": "sap/suite/ui/commons/taccount/TAccountItem",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.58.0",
      "extends": "sap.ui.core.Control",
      "description": "The T account item control represents a credit or debit entry on a {@link sap.suite.ui.commons.TAccount}.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "value",
            "type": "float",
            "defaultValue": 0,
            "group": "Misc",
            "visibility": "public",
            "description": "Value of the credit or debit entry.",
            "methods": ["getValue", "setValue"]
          },
          {
            "name": "color",
            "type": "sap.m.ValueCSSColor",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Color applied to the debit or credit entry.",
            "methods": ["getColor", "setColor"]
          },
          {
            "name": "group",
            "type": "string",
            "defaultValue": "",
            "group": "Misc",
            "visibility": "public",
            "description": "Group where this debit or credit entry belongs.<br> Entries that share the same group are highlighted when the user clicks or taps one of such entries.",
            "methods": ["getGroup", "setGroup"]
          },
          {
            "name": "ariaLabel",
            "type": "string",
            "defaultValue": "",
            "group": "Misc",
            "visibility": "public",
            "description": "Aria label for item.",
            "methods": ["getAriaLabel", "setAriaLabel"]
          }
        ],
        "aggregations": [
          {
            "name": "properties",
            "singularName": "property",
            "type": "sap.suite.ui.commons.taccount.TAccountItemProperty",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Additional properties that define how the entry is displayed.",
            "methods": [
              "getProperties",
              "destroyProperties",
              "insertProperty",
              "addProperty",
              "removeProperty",
              "indexOfProperty",
              "removeAllProperties"
            ]
          }
        ],
        "events": [
          {
            "name": "press",
            "visibility": "public",
            "description": "This event is fired when the user clicks or taps the entry. It highlights the entry and all other entries that belong to the same group.",
            "methods": ["attachPress", "detachPress", "firePress"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new TAccountItem.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "press",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "This event is fired when the user clicks or taps the entry. It highlights the entry and all other entries that belong to the same group."
        }
      ],
      "methods": [
        {
          "name": "addProperty",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.taccount.TAccountItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oProperty",
              "type": "sap.suite.ui.commons.taccount.TAccountItemProperty",
              "optional": false,
              "description": "The property to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some property to the aggregation {@link #getProperties properties}."
        },
        {
          "name": "attachPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.taccount.TAccountItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.taccount.TAccountItem</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:press press} event of this <code>sap.suite.ui.commons.taccount.TAccountItem</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.taccount.TAccountItem</code> itself.\n\nThis event is fired when the user clicks or taps the entry. It highlights the entry and all other entries that belong to the same group."
        },
        {
          "name": "destroyProperties",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.taccount.TAccountItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the properties in the aggregation {@link #getProperties properties}."
        },
        {
          "name": "detachPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.taccount.TAccountItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:press press} event of this <code>sap.suite.ui.commons.taccount.TAccountItem</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.taccount.TAccountItem with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "firePress",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.taccount.TAccountItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:press press} to attached listeners."
        },
        {
          "name": "getAriaLabel",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>ariaLabel</code>"
          },
          "description": "Gets current value of property {@link #getAriaLabel ariaLabel}.\n\nAria label for item.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "getColor",
          "visibility": "public",
          "returnValue": {
            "type": "sap.m.ValueCSSColor",
            "description": "Value of property <code>color</code>"
          },
          "description": "Gets current value of property {@link #getColor color}.\n\nColor applied to the debit or credit entry."
        },
        {
          "name": "getGroup",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>group</code>"
          },
          "description": "Gets current value of property {@link #getGroup group}.\n\nGroup where this debit or credit entry belongs.<br> Entries that share the same group are highlighted when the user clicks or taps one of such entries.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.taccount.TAccountItem."
        },
        {
          "name": "getProperties",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.taccount.TAccountItemProperty[]"
          },
          "description": "Gets content of aggregation {@link #getProperties properties}.\n\nAdditional properties that define how the entry is displayed."
        },
        {
          "name": "getValue",
          "visibility": "public",
          "returnValue": {
            "type": "float",
            "description": "Value of property <code>value</code>"
          },
          "description": "Gets current value of property {@link #getValue value}.\n\nValue of the credit or debit entry.\n\nDefault value is <code>0</code>."
        },
        {
          "name": "indexOfProperty",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oProperty",
              "type": "sap.suite.ui.commons.taccount.TAccountItemProperty",
              "optional": false,
              "description": "The property whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.suite.ui.commons.taccount.TAccountItemProperty</code> in the aggregation {@link #getProperties properties}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "insertProperty",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.taccount.TAccountItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oProperty",
              "type": "sap.suite.ui.commons.taccount.TAccountItemProperty",
              "optional": false,
              "description": "The property to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the property should be inserted at; for a negative value of <code>iIndex</code>, the property is inserted at position 0; for a value greater than the current size of the aggregation, the property is inserted at the last position"
            }
          ],
          "description": "Inserts a property into the aggregation {@link #getProperties properties}."
        },
        {
          "name": "removeAllProperties",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.taccount.TAccountItemProperty[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getProperties properties}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeProperty",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.taccount.TAccountItemProperty",
            "description": "The removed property or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vProperty",
              "type": "int|string|sap.suite.ui.commons.taccount.TAccountItemProperty",
              "optional": false,
              "description": "The property to remove or its index or id"
            }
          ],
          "description": "Removes a property from the aggregation {@link #getProperties properties}."
        },
        {
          "name": "setAriaLabel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.taccount.TAccountItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sAriaLabel",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>ariaLabel</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getAriaLabel ariaLabel}.\n\nAria label for item.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "setColor",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.taccount.TAccountItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sColor",
              "type": "sap.m.ValueCSSColor",
              "optional": false,
              "description": "New value for property <code>color</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getColor color}.\n\nColor applied to the debit or credit entry.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setGroup",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.taccount.TAccountItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sGroup",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>group</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getGroup group}.\n\nGroup where this debit or credit entry belongs.<br> Entries that share the same group are highlighted when the user clicks or taps one of such entries.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "setValue",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.taccount.TAccountItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fValue",
              "type": "float",
              "optional": false,
              "description": "New value for property <code>value</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getValue value}.\n\nValue of the credit or debit entry.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>0</code>."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.taccount.TAccountItemProperty",
      "basename": "TAccountItemProperty",
      "resource": "sap/suite/ui/commons/taccount/TAccountItemProperty.js",
      "module": "sap/suite/ui/commons/taccount/TAccountItemProperty",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.58.0",
      "extends": "sap.ui.core.Control",
      "description": "An additional property that defines how a {@link sap.suite.ui.commons.TAccountItem} is displayed.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "key",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Key of the property.",
            "methods": ["getKey", "setKey"]
          },
          {
            "name": "value",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Value of the property.",
            "methods": ["getValue", "setValue"]
          },
          {
            "name": "label",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Label of the property.<br>Can be hidden or displayed using the <code>displayLabel</code> property.",
            "methods": ["getLabel", "setLabel"]
          },
          {
            "name": "displayLabel",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "description": "Defines whether the label should be displayed.<br> This property can be overridden by the {@link sap.suite.ui.commons.TAccountPanel} settings.",
            "methods": ["getDisplayLabel", "setDisplayLabel"]
          },
          {
            "name": "visible",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "description": "Defines whether the T account property should be visible or hidden.",
            "methods": ["getVisible", "setVisible"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new TAccountItemProperty.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.taccount.TAccountItemProperty with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "getDisplayLabel",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>displayLabel</code>"
          },
          "description": "Gets current value of property {@link #getDisplayLabel displayLabel}.\n\nDefines whether the label should be displayed.<br> This property can be overridden by the {@link sap.suite.ui.commons.TAccountPanel} settings.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getKey",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>key</code>"
          },
          "description": "Gets current value of property {@link #getKey key}.\n\nKey of the property."
        },
        {
          "name": "getLabel",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>label</code>"
          },
          "description": "Gets current value of property {@link #getLabel label}.\n\nLabel of the property.<br>Can be hidden or displayed using the <code>displayLabel</code> property."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.taccount.TAccountItemProperty."
        },
        {
          "name": "getValue",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>value</code>"
          },
          "description": "Gets current value of property {@link #getValue value}.\n\nValue of the property."
        },
        {
          "name": "getVisible",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>visible</code>"
          },
          "description": "Gets current value of property {@link #getVisible visible}.\n\nDefines whether the T account property should be visible or hidden.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setDisplayLabel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.taccount.TAccountItemProperty",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bDisplayLabel",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>displayLabel</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getDisplayLabel displayLabel}.\n\nDefines whether the label should be displayed.<br> This property can be overridden by the {@link sap.suite.ui.commons.TAccountPanel} settings.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setKey",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.taccount.TAccountItemProperty",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sKey",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>key</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getKey key}.\n\nKey of the property.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setLabel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.taccount.TAccountItemProperty",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sLabel",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>label</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getLabel label}.\n\nLabel of the property.<br>Can be hidden or displayed using the <code>displayLabel</code> property.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setValue",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.taccount.TAccountItemProperty",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sValue",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>value</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getValue value}.\n\nValue of the property.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setVisible",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.taccount.TAccountItemProperty",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bVisible",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>visible</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getVisible visible}.\n\nDefines whether the T account property should be visible or hidden.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.taccount.TAccountPanel",
      "basename": "TAccountPanel",
      "resource": "sap/suite/ui/commons/taccount/TAccountPanel.js",
      "module": "sap/suite/ui/commons/taccount/TAccountPanel",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.58.0",
      "extends": "sap.ui.core.Control",
      "description": "A panel that acts as a container for {@link sap.suite.ui.commons.TAccountGroup} controls included in it.<br> The settings dialog of the panel can be used to modify how the {@link sap.suite.ui.commons.TAccountItem} elements in the included T accounts are displayed.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "title",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Title of the panel.",
            "methods": ["getTitle", "setTitle"]
          },
          {
            "name": "state",
            "type": "sap.suite.ui.commons.taccount.TAccountPanelState",
            "defaultValue": "Default",
            "group": "Misc",
            "visibility": "public",
            "description": "State of the panel that defines how T accounts are displayed.<br> By default, the T accounts included in the panel are displayed as T shapes with debit and credit entries on either side of the T.",
            "methods": ["getState", "setState"]
          },
          {
            "name": "showOverlay",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "description": "Indicates whether the T account panel should be covered by a translucent overlay screen.<br> This overlay screen can be used to hide the data temporarily.",
            "methods": ["getShowOverlay", "setShowOverlay"]
          }
        ],
        "aggregations": [
          {
            "name": "properties",
            "singularName": "property",
            "type": "sap.suite.ui.commons.taccount.TAccountItemProperty",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Properties of the T-account entries that can be shown or hidden using the panel's settings dialog.",
            "methods": [
              "getProperties",
              "destroyProperties",
              "insertProperty",
              "addProperty",
              "removeProperty",
              "indexOfProperty",
              "removeAllProperties"
            ]
          },
          {
            "name": "table",
            "singularName": "table",
            "type": "sap.ui.core.Control",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "Table that can be used to display additional data.",
            "methods": ["getTable", "destroyTable", "setTable"]
          }
        ],
        "events": [
          {
            "name": "stateChanged",
            "visibility": "public",
            "description": "This event is fired when the user switches between T account view and table view.",
            "parameters": {
              "state": {
                "name": "state",
                "type": "sap.suite.ui.commons.taccount.TAccountPanelState",
                "description": "Type of current state"
              }
            },
            "methods": [
              "attachStateChanged",
              "detachStateChanged",
              "fireStateChanged"
            ]
          },
          {
            "name": "settingsApplied",
            "visibility": "public",
            "description": "This event is fired when the panel's settings are applied.",
            "parameters": {
              "properties": {
                "name": "properties",
                "type": "object",
                "description": "Hash map witch changed properties"
              }
            },
            "methods": [
              "attachSettingsApplied",
              "detachSettingsApplied",
              "fireSettingsApplied"
            ]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new TAccountPanel.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "settingsApplied",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "properties": {
                      "name": "properties",
                      "type": "object",
                      "optional": false,
                      "description": "Hash map witch changed properties"
                    }
                  }
                }
              }
            }
          ],
          "description": "This event is fired when the panel's settings are applied."
        },
        {
          "name": "stateChanged",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "state": {
                      "name": "state",
                      "type": "sap.suite.ui.commons.taccount.TAccountPanelState",
                      "optional": false,
                      "description": "Type of current state"
                    }
                  }
                }
              }
            }
          ],
          "description": "This event is fired when the user switches between T account view and table view."
        }
      ],
      "methods": [
        {
          "name": "addProperty",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.taccount.TAccountPanel",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oProperty",
              "type": "sap.suite.ui.commons.taccount.TAccountItemProperty",
              "optional": false,
              "description": "The property to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some property to the aggregation {@link #getProperties properties}."
        },
        {
          "name": "attachSettingsApplied",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.taccount.TAccountPanel",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.taccount.TAccountPanel</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:settingsApplied settingsApplied} event of this <code>sap.suite.ui.commons.taccount.TAccountPanel</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.taccount.TAccountPanel</code> itself.\n\nThis event is fired when the panel's settings are applied."
        },
        {
          "name": "attachStateChanged",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.taccount.TAccountPanel",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.taccount.TAccountPanel</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:stateChanged stateChanged} event of this <code>sap.suite.ui.commons.taccount.TAccountPanel</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.taccount.TAccountPanel</code> itself.\n\nThis event is fired when the user switches between T account view and table view."
        },
        {
          "name": "destroyProperties",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.taccount.TAccountPanel",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the properties in the aggregation {@link #getProperties properties}."
        },
        {
          "name": "destroyTable",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.taccount.TAccountPanel",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the table in the aggregation {@link #getTable table}."
        },
        {
          "name": "detachSettingsApplied",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.taccount.TAccountPanel",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:settingsApplied settingsApplied} event of this <code>sap.suite.ui.commons.taccount.TAccountPanel</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachStateChanged",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.taccount.TAccountPanel",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:stateChanged stateChanged} event of this <code>sap.suite.ui.commons.taccount.TAccountPanel</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.taccount.TAccountPanel with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "fireSettingsApplied",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.taccount.TAccountPanel",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "properties": {
                  "name": "properties",
                  "type": "object",
                  "optional": true,
                  "description": "Hash map witch changed properties"
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:settingsApplied settingsApplied} to attached listeners."
        },
        {
          "name": "fireStateChanged",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.taccount.TAccountPanel",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "state": {
                  "name": "state",
                  "type": "sap.suite.ui.commons.taccount.TAccountPanelState",
                  "optional": true,
                  "description": "Type of current state"
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:stateChanged stateChanged} to attached listeners."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.taccount.TAccountPanel."
        },
        {
          "name": "getProperties",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.taccount.TAccountItemProperty[]"
          },
          "description": "Gets content of aggregation {@link #getProperties properties}.\n\nProperties of the T-account entries that can be shown or hidden using the panel's settings dialog."
        },
        {
          "name": "getSettingsDialog",
          "visibility": "public",
          "description": "Returns the settings dialog of the panel."
        },
        {
          "name": "getShowOverlay",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showOverlay</code>"
          },
          "description": "Gets current value of property {@link #getShowOverlay showOverlay}.\n\nIndicates whether the T account panel should be covered by a translucent overlay screen.<br> This overlay screen can be used to hide the data temporarily.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getState",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.taccount.TAccountPanelState",
            "description": "Value of property <code>state</code>"
          },
          "description": "Gets current value of property {@link #getState state}.\n\nState of the panel that defines how T accounts are displayed.<br> By default, the T accounts included in the panel are displayed as T shapes with debit and credit entries on either side of the T.\n\nDefault value is <code>Default</code>."
        },
        {
          "name": "getSum",
          "visibility": "public",
          "returnValue": {
            "type": "Object",
            "description": "Object that includes the sum of entries in all included T-account groups."
          },
          "description": "Gets the sum of transactions in all T-account groups included in the panel.<br>\n\nReturns a sum object that is structured as follows:<br> <code>{</code><br> <code>measure: {string}</code> Unit of measurement of the T accounts. If T accounts use different units of measurements, the last one is returned.<br> <code>sum: {number}</code> Sum of all entries in the T accounts and T-account groups included in the panel.<br> <code>correct: {boolean}</code> If <code>false</code>, the sum cannot be calculated, because the T accounts use different units of measurement.<br> <code>}</code><br>"
        },
        {
          "name": "getTable",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.Control" },
          "description": "Gets content of aggregation {@link #getTable table}.\n\nTable that can be used to display additional data."
        },
        {
          "name": "getTitle",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>title</code>"
          },
          "description": "Gets current value of property {@link #getTitle title}.\n\nTitle of the panel."
        },
        {
          "name": "getToolbar",
          "visibility": "public",
          "description": "Returns the panel's toolbar, so the app can modify it."
        },
        {
          "name": "indexOfProperty",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oProperty",
              "type": "sap.suite.ui.commons.taccount.TAccountItemProperty",
              "optional": false,
              "description": "The property whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.suite.ui.commons.taccount.TAccountItemProperty</code> in the aggregation {@link #getProperties properties}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "insertProperty",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.taccount.TAccountPanel",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oProperty",
              "type": "sap.suite.ui.commons.taccount.TAccountItemProperty",
              "optional": false,
              "description": "The property to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the property should be inserted at; for a negative value of <code>iIndex</code>, the property is inserted at position 0; for a value greater than the current size of the aggregation, the property is inserted at the last position"
            }
          ],
          "description": "Inserts a property into the aggregation {@link #getProperties properties}."
        },
        {
          "name": "openSettings",
          "visibility": "public",
          "description": "Opens the settings dialog of the panel."
        },
        {
          "name": "removeAllProperties",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.taccount.TAccountItemProperty[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getProperties properties}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeProperty",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.taccount.TAccountItemProperty",
            "description": "The removed property or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vProperty",
              "type": "int|string|sap.suite.ui.commons.taccount.TAccountItemProperty",
              "optional": false,
              "description": "The property to remove or its index or id"
            }
          ],
          "description": "Removes a property from the aggregation {@link #getProperties properties}."
        },
        {
          "name": "reset",
          "visibility": "public",
          "since": "1.68",
          "description": "Resets the internal state of the T account group."
        },
        {
          "name": "setShowOverlay",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.taccount.TAccountPanel",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowOverlay",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showOverlay</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowOverlay showOverlay}.\n\nIndicates whether the T account panel should be covered by a translucent overlay screen.<br> This overlay screen can be used to hide the data temporarily.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setState",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.taccount.TAccountPanel",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sState",
              "type": "sap.suite.ui.commons.taccount.TAccountPanelState",
              "optional": false,
              "description": "New value for property <code>state</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getState state}.\n\nState of the panel that defines how T accounts are displayed.<br> By default, the T accounts included in the panel are displayed as T shapes with debit and credit entries on either side of the T.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Default</code>."
        },
        {
          "name": "setTable",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.taccount.TAccountPanel",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oTable",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The table to set"
            }
          ],
          "description": "Sets the aggregated {@link #getTable table}."
        },
        {
          "name": "setTitle",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.taccount.TAccountPanel",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sTitle",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>title</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getTitle title}.\n\nTitle of the panel.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "switchContent",
          "visibility": "public",
          "parameters": [
            {
              "name": "showTable",
              "type": "boolean",
              "optional": false,
              "description": "Defines whether to show accounts as tables (<code>true</code>) or standard T accounts."
            }
          ],
          "description": "Switches the content displayed in the panel to either table view or T-account view."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.suite.ui.commons.taccount.TAccountPanelState",
      "basename": "TAccountPanelState",
      "resource": "sap/suite/ui/commons/library.js",
      "module": "sap/suite/ui/commons/library",
      "export": "taccount.TAccountPanelState",
      "static": true,
      "visibility": "public",
      "description": "The state of the {@link sap.suite.ui.commons.taccount.TAccountPanel} that defines how T accounts included in the panel are displayed.",
      "ui5-metamodel": true,
      "properties": [
        {
          "name": "Default",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The T account panel displays T accounts as T shapes with debit and credit entries on either side of the T."
        },
        {
          "name": "Table",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The T account panel displays T accounts as an aggregated table, with each debit and credit entry listed on a separate row."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.TargetFilter",
      "basename": "TargetFilter",
      "resource": "sap/suite/ui/commons/TargetFilter.js",
      "module": "sap/suite/ui/commons/TargetFilter",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.core.Control",
      "description": "The analytical filter control. The control works only with the OData model connected to the analytical OData service (for example, HANA XS Analytical view exposed as an OData service).",
      "deprecated": { "since": "1.34", "text": "Deprecated." },
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "entitySet",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The name of the entity set from OData service metadata. The filtering applies to this entity set.",
            "methods": ["getEntitySet", "setEntitySet"]
          }
        ],
        "aggregations": [
          {
            "name": "columns",
            "singularName": "column",
            "type": "sap.suite.ui.commons.TargetFilterColumn",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "The list of the columns.",
            "methods": [
              "getColumns",
              "destroyColumns",
              "insertColumn",
              "addColumn",
              "removeColumn",
              "indexOfColumn",
              "removeAllColumns"
            ]
          },
          {
            "name": "_countDisplay",
            "singularName": "_countDisplay",
            "type": "sap.ui.core.Control",
            "cardinality": "0..1",
            "visibility": "hidden",
            "description": "The hidden aggregation for the internal control that displays the number of entries in the filtered set.",
            "methods": [
              "get_countDisplay",
              "destroy_countDisplay",
              "set_countDisplay"
            ]
          },
          {
            "name": "_quad0",
            "singularName": "_quad0",
            "type": "sap.ui.core.Control",
            "cardinality": "0..1",
            "visibility": "hidden",
            "description": "The hidden aggregation for the internal control that represents the right top quadrant.",
            "methods": ["get_quad0", "destroy_quad0", "set_quad0"]
          },
          {
            "name": "_quad1",
            "singularName": "_quad1",
            "type": "sap.ui.core.Control",
            "cardinality": "0..1",
            "visibility": "hidden",
            "description": "The hidden aggregation for the internal control that represents the left top quadrant.",
            "methods": ["get_quad1", "destroy_quad1", "set_quad1"]
          },
          {
            "name": "_quad2",
            "singularName": "_quad2",
            "type": "sap.ui.core.Control",
            "cardinality": "0..1",
            "visibility": "hidden",
            "description": "The hidden aggregation for the internal control that represents the left bottom quadrant.",
            "methods": ["get_quad2", "destroy_quad2", "set_quad2"]
          },
          {
            "name": "_quad3",
            "singularName": "_quad3",
            "type": "sap.ui.core.Control",
            "cardinality": "0..1",
            "visibility": "hidden",
            "description": "The hidden aggregation for the internal control that represents the right bottom quadrant.",
            "methods": ["get_quad3", "destroy_quad3", "set_quad3"]
          },
          {
            "name": "measureColumn",
            "singularName": "measureColumn",
            "type": "sap.suite.ui.commons.TargetFilterMeasureColumn",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "The measure column.",
            "methods": [
              "getMeasureColumn",
              "destroyMeasureColumn",
              "setMeasureColumn"
            ]
          }
        ],
        "associations": [
          {
            "name": "selectedColumns",
            "singularName": "selectedColumn",
            "type": "sap.suite.ui.commons.TargetFilterColumn",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "The list of selected columns. The index of the columns in this list corresponds to the quadrant.",
            "methods": [
              "getSelectedColumns",
              "addSelectedColumn",
              "removeSelectedColumn",
              "removeAllSelectedColumns"
            ]
          }
        ],
        "events": [
          {
            "name": "search",
            "visibility": "public",
            "description": "This event is fired if the user chooses the Show Selected link.",
            "methods": ["attachSearch", "detachSearch", "fireSearch"]
          },
          {
            "name": "filterChange",
            "visibility": "public",
            "description": "This event is fired if the user changes a selected filter set.",
            "methods": [
              "attachFilterChange",
              "detachFilterChange",
              "fireFilterChange"
            ]
          },
          {
            "name": "cancel",
            "visibility": "public",
            "description": "This event is fired if the user changes a selected filter set to the filter set used for the last search.",
            "methods": ["attachCancel", "detachCancel", "fireCancel"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new TargetFilter.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "cancel",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "This event is fired if the user changes a selected filter set to the filter set used for the last search."
        },
        {
          "name": "filterChange",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "This event is fired if the user changes a selected filter set."
        },
        {
          "name": "search",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "This event is fired if the user chooses the Show Selected link."
        }
      ],
      "methods": [
        {
          "name": "addColumn",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.TargetFilter",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oColumn",
              "type": "sap.suite.ui.commons.TargetFilterColumn",
              "optional": false,
              "description": "The column to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some column to the aggregation {@link #getColumns columns}."
        },
        {
          "name": "addSelectedColumn",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.TargetFilter",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "vSelectedColumn",
              "type": "sap.ui.core.ID|sap.suite.ui.commons.TargetFilterColumn",
              "optional": false,
              "description": "The selectedColumns to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some selectedColumn into the association {@link #getSelectedColumns selectedColumns}."
        },
        {
          "name": "attachCancel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.TargetFilter",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.TargetFilter</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:cancel cancel} event of this <code>sap.suite.ui.commons.TargetFilter</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.TargetFilter</code> itself.\n\nThis event is fired if the user changes a selected filter set to the filter set used for the last search."
        },
        {
          "name": "attachFilterChange",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.TargetFilter",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.TargetFilter</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:filterChange filterChange} event of this <code>sap.suite.ui.commons.TargetFilter</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.TargetFilter</code> itself.\n\nThis event is fired if the user changes a selected filter set."
        },
        {
          "name": "attachSearch",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.TargetFilter",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.TargetFilter</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:search search} event of this <code>sap.suite.ui.commons.TargetFilter</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.TargetFilter</code> itself.\n\nThis event is fired if the user chooses the Show Selected link."
        },
        {
          "name": "destroyColumns",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.TargetFilter",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the columns in the aggregation {@link #getColumns columns}."
        },
        {
          "name": "destroyMeasureColumn",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.TargetFilter",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the measureColumn in the aggregation {@link #getMeasureColumn measureColumn}."
        },
        {
          "name": "detachCancel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.TargetFilter",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:cancel cancel} event of this <code>sap.suite.ui.commons.TargetFilter</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachFilterChange",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.TargetFilter",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:filterChange filterChange} event of this <code>sap.suite.ui.commons.TargetFilter</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachSearch",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.TargetFilter",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:search search} event of this <code>sap.suite.ui.commons.TargetFilter</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.TargetFilter with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "fireCancel",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.TargetFilter",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:cancel cancel} to attached listeners."
        },
        {
          "name": "fireFilterChange",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.TargetFilter",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:filterChange filterChange} to attached listeners."
        },
        {
          "name": "fireSearch",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.TargetFilter",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:search search} to attached listeners."
        },
        {
          "name": "getColumns",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.TargetFilterColumn[]"
          },
          "description": "Gets content of aggregation {@link #getColumns columns}.\n\nThe list of the columns."
        },
        {
          "name": "getEntitySet",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>entitySet</code>"
          },
          "description": "Gets current value of property {@link #getEntitySet entitySet}.\n\nThe name of the entity set from OData service metadata. The filtering applies to this entity set."
        },
        {
          "name": "getFilters",
          "visibility": "public",
          "returnValue": {
            "type": "array",
            "description": "The selected filter set."
          },
          "description": "Returns a selected filter set."
        },
        {
          "name": "getMeasureColumn",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.TargetFilterMeasureColumn"
          },
          "description": "Gets content of aggregation {@link #getMeasureColumn measureColumn}.\n\nThe measure column."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.TargetFilter."
        },
        {
          "name": "getParameters",
          "visibility": "public",
          "returnValue": {
            "type": "object",
            "description": "The binding parameters for the controls that use this control."
          },
          "description": "Returns the binding parameters for the controls that use this control."
        },
        {
          "name": "getSelectedColumns",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.ID[]" },
          "description": "Returns array of IDs of the elements which are the current targets of the association {@link #getSelectedColumns selectedColumns}."
        },
        {
          "name": "indexOfColumn",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oColumn",
              "type": "sap.suite.ui.commons.TargetFilterColumn",
              "optional": false,
              "description": "The column whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.suite.ui.commons.TargetFilterColumn</code> in the aggregation {@link #getColumns columns}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "insertColumn",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.TargetFilter",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oColumn",
              "type": "sap.suite.ui.commons.TargetFilterColumn",
              "optional": false,
              "description": "The column to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the column should be inserted at; for a negative value of <code>iIndex</code>, the column is inserted at position 0; for a value greater than the current size of the aggregation, the column is inserted at the last position"
            }
          ],
          "description": "Inserts a column into the aggregation {@link #getColumns columns}."
        },
        {
          "name": "removeAllColumns",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.TargetFilterColumn[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getColumns columns}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeAllSelectedColumns",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.ID[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls in the association named {@link #getSelectedColumns selectedColumns}."
        },
        {
          "name": "removeColumn",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.TargetFilterColumn",
            "description": "The removed column or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vColumn",
              "type": "int|string|sap.suite.ui.commons.TargetFilterColumn",
              "optional": false,
              "description": "The column to remove or its index or id"
            }
          ],
          "description": "Removes a column from the aggregation {@link #getColumns columns}."
        },
        {
          "name": "removeSelectedColumn",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.ID",
            "description": "The removed selectedColumn or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vSelectedColumn",
              "type": "int|sap.ui.core.ID|sap.suite.ui.commons.TargetFilterColumn",
              "optional": false,
              "description": "The selectedColumn to be removed or its index or ID"
            }
          ],
          "description": "Removes an selectedColumn from the association named {@link #getSelectedColumns selectedColumns}."
        },
        {
          "name": "search",
          "visibility": "public",
          "ui5-metamodel": true,
          "returnValue": {
            "type": "sap.suite.ui.commons.TargetFilter",
            "description": "This to allow method chaining"
          },
          "description": "Triggers filtering in the controls that use this control. Returns this control for the method chaining."
        },
        {
          "name": "setEntitySet",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.TargetFilter",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sEntitySet",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>entitySet</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getEntitySet entitySet}.\n\nThe name of the entity set from OData service metadata. The filtering applies to this entity set.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setMeasureColumn",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.TargetFilter",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oMeasureColumn",
              "type": "sap.suite.ui.commons.TargetFilterMeasureColumn",
              "optional": false,
              "description": "The measureColumn to set"
            }
          ],
          "description": "Sets the aggregated {@link #getMeasureColumn measureColumn}."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.TargetFilterColumn",
      "basename": "TargetFilterColumn",
      "resource": "sap/suite/ui/commons/TargetFilterColumn.js",
      "module": "sap/suite/ui/commons/TargetFilterColumn",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.core.Element",
      "description": "The configuration element for the column in the TargetFilter control.",
      "deprecated": { "since": "1.34", "text": "Deprecated." },
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "element",
        "properties": [
          {
            "name": "path",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The binding path.",
            "methods": ["getPath", "setPath"]
          },
          {
            "name": "title",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The column title.",
            "methods": ["getTitle", "setTitle"]
          },
          {
            "name": "length",
            "type": "int",
            "defaultValue": 10,
            "group": "Misc",
            "visibility": "public",
            "description": "The number of the retrieved entries for the cloud of the links in the quadrant. The quadrant can display fewer links than retrieved. The font size of the links in the quadrant depends on the measure number. The font size of the links is relative in the retrieved group.",
            "methods": ["getLength", "setLength"]
          },
          {
            "name": "type",
            "type": "any",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The type of the displayed data. The type of the property must be sap.ui.model.SimpleType or its descendants. By default, sap.ui.model.type.String. This property is used for formatting the displayed values. If sap.ui.model.type.String, the filter operator in the Search field of the column selection dialog is 'Contains'. In other cases, the filter operator is 'EQ'.",
            "methods": ["getType", "setType"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new TargetFilterColumn.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.TargetFilterColumn with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
        },
        {
          "name": "getLength",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>length</code>"
          },
          "description": "Gets current value of property {@link #getLength length}.\n\nThe number of the retrieved entries for the cloud of the links in the quadrant. The quadrant can display fewer links than retrieved. The font size of the links in the quadrant depends on the measure number. The font size of the links is relative in the retrieved group.\n\nDefault value is <code>10</code>."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.TargetFilterColumn."
        },
        {
          "name": "getPath",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>path</code>"
          },
          "description": "Gets current value of property {@link #getPath path}.\n\nThe binding path."
        },
        {
          "name": "getTitle",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>title</code>"
          },
          "description": "Gets current value of property {@link #getTitle title}.\n\nThe column title."
        },
        {
          "name": "getType",
          "visibility": "public",
          "returnValue": {
            "type": "any",
            "description": "Value of property <code>type</code>"
          },
          "description": "Gets current value of property {@link #getType type}.\n\nThe type of the displayed data. The type of the property must be sap.ui.model.SimpleType or its descendants. By default, sap.ui.model.type.String. This property is used for formatting the displayed values. If sap.ui.model.type.String, the filter operator in the Search field of the column selection dialog is 'Contains'. In other cases, the filter operator is 'EQ'."
        },
        {
          "name": "setLength",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.TargetFilterColumn",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iLength",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>length</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getLength length}.\n\nThe number of the retrieved entries for the cloud of the links in the quadrant. The quadrant can display fewer links than retrieved. The font size of the links in the quadrant depends on the measure number. The font size of the links is relative in the retrieved group.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>10</code>."
        },
        {
          "name": "setPath",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.TargetFilterColumn",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sPath",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>path</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getPath path}.\n\nThe binding path.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setTitle",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.TargetFilterColumn",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sTitle",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>title</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getTitle title}.\n\nThe column title.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setType",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.TargetFilterColumn",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oType",
              "type": "any",
              "optional": false,
              "description": "New value for property <code>type</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getType type}.\n\nThe type of the displayed data. The type of the property must be sap.ui.model.SimpleType or its descendants. By default, sap.ui.model.type.String. This property is used for formatting the displayed values. If sap.ui.model.type.String, the filter operator in the Search field of the column selection dialog is 'Contains'. In other cases, the filter operator is 'EQ'.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.TargetFilterMeasureColumn",
      "basename": "TargetFilterMeasureColumn",
      "resource": "sap/suite/ui/commons/TargetFilterMeasureColumn.js",
      "module": "sap/suite/ui/commons/TargetFilterMeasureColumn",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.core.Element",
      "description": "The configuration element for the measure column in the TargetFilter control.",
      "deprecated": { "since": "1.34", "text": "Deprecated." },
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "element",
        "properties": [
          {
            "name": "path",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The binding path.",
            "methods": ["getPath", "setPath"]
          },
          {
            "name": "type",
            "type": "any",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "This property is used for formatting the displayed values. The type of the property must be sap.ui.model.SimpleType or its descendants. By default, sap.ui.model.type.Integer with enabled grouping.",
            "methods": ["getType", "setType"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new TargetFilterMeasureColumn.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.TargetFilterMeasureColumn with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.TargetFilterMeasureColumn."
        },
        {
          "name": "getPath",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>path</code>"
          },
          "description": "Gets current value of property {@link #getPath path}.\n\nThe binding path."
        },
        {
          "name": "getType",
          "visibility": "public",
          "returnValue": {
            "type": "any",
            "description": "Value of property <code>type</code>"
          },
          "description": "Gets current value of property {@link #getType type}.\n\nThis property is used for formatting the displayed values. The type of the property must be sap.ui.model.SimpleType or its descendants. By default, sap.ui.model.type.Integer with enabled grouping."
        },
        {
          "name": "setPath",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.TargetFilterMeasureColumn",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sPath",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>path</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getPath path}.\n\nThe binding path.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setType",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.TargetFilterMeasureColumn",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oType",
              "type": "any",
              "optional": false,
              "description": "New value for property <code>type</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getType type}.\n\nThis property is used for formatting the displayed values. The type of the property must be sap.ui.model.SimpleType or its descendants. By default, sap.ui.model.type.Integer with enabled grouping.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.ThingCollection",
      "basename": "ThingCollection",
      "resource": "sap/suite/ui/commons/ThingCollection.js",
      "module": "sap/suite/ui/commons/ThingCollection",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.core.Control",
      "description": "This control contains a collection of the sap.ui.ux3.ThingViewer controls or descendants of sap.ui.ux3.ThingViewer. It allows you to navigate through them as well as delete them from the collection.",
      "deprecated": {
        "since": "1.32",
        "text": "Deprecated. Object page should be used instead."
      },
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "width",
            "type": "sap.ui.core.CSSSize",
            "defaultValue": "100%",
            "group": "Misc",
            "visibility": "public",
            "description": "The width of the control.",
            "methods": ["getWidth", "setWidth"]
          },
          {
            "name": "height",
            "type": "sap.ui.core.CSSSize",
            "defaultValue": "100%",
            "group": "Misc",
            "visibility": "public",
            "description": "The height of the control.",
            "methods": ["getHeight", "setHeight"]
          },
          {
            "name": "minWidth",
            "type": "sap.ui.core.CSSSize",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The minimal width of the control.",
            "methods": ["getMinWidth", "setMinWidth"]
          },
          {
            "name": "minHeight",
            "type": "sap.ui.core.CSSSize",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The minimal height of the control.",
            "methods": ["getMinHeight", "setMinHeight"]
          }
        ],
        "aggregations": [
          {
            "name": "content",
            "singularName": "content",
            "type": "sap.ui.ux3.ThingViewer",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Contains a collection of sap.ui.ux3.ThingViewer controls or descendants of sap.ui.ux3.ThingViewer.",
            "methods": [
              "getContent",
              "destroyContent",
              "insertContent",
              "addContent",
              "removeContent",
              "indexOfContent",
              "removeAllContent"
            ]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new ThingCollection.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "addContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ThingCollection",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oContent",
              "type": "sap.ui.ux3.ThingViewer",
              "optional": false,
              "description": "The content to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some content to the aggregation {@link #getContent content}."
        },
        {
          "name": "destroyContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ThingCollection",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the content in the aggregation {@link #getContent content}."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.ThingCollection with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "getContent",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.ux3.ThingViewer[]" },
          "description": "Gets content of aggregation {@link #getContent content}.\n\nContains a collection of sap.ui.ux3.ThingViewer controls or descendants of sap.ui.ux3.ThingViewer."
        },
        {
          "name": "getHeight",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.CSSSize",
            "description": "Value of property <code>height</code>"
          },
          "description": "Gets current value of property {@link #getHeight height}.\n\nThe height of the control.\n\nDefault value is <code>100%</code>."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.ThingCollection."
        },
        {
          "name": "getMinHeight",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.CSSSize",
            "description": "Value of property <code>minHeight</code>"
          },
          "description": "Gets current value of property {@link #getMinHeight minHeight}.\n\nThe minimal height of the control."
        },
        {
          "name": "getMinWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.CSSSize",
            "description": "Value of property <code>minWidth</code>"
          },
          "description": "Gets current value of property {@link #getMinWidth minWidth}.\n\nThe minimal width of the control."
        },
        {
          "name": "getWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.CSSSize",
            "description": "Value of property <code>width</code>"
          },
          "description": "Gets current value of property {@link #getWidth width}.\n\nThe width of the control.\n\nDefault value is <code>100%</code>."
        },
        {
          "name": "indexOfContent",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oContent",
              "type": "sap.ui.ux3.ThingViewer",
              "optional": false,
              "description": "The content whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.ui.ux3.ThingViewer</code> in the aggregation {@link #getContent content}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "insertContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ThingCollection",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oContent",
              "type": "sap.ui.ux3.ThingViewer",
              "optional": false,
              "description": "The content to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the content should be inserted at; for a negative value of <code>iIndex</code>, the content is inserted at position 0; for a value greater than the current size of the aggregation, the content is inserted at the last position"
            }
          ],
          "description": "Inserts a content into the aggregation {@link #getContent content}."
        },
        {
          "name": "removeAllContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.ux3.ThingViewer[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getContent content}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.ux3.ThingViewer",
            "description": "The removed content or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vContent",
              "type": "int|string|sap.ui.ux3.ThingViewer",
              "optional": false,
              "description": "The content to remove or its index or id"
            }
          ],
          "description": "Removes a content from the aggregation {@link #getContent content}."
        },
        {
          "name": "setHeight",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ThingCollection",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sHeight",
              "type": "sap.ui.core.CSSSize",
              "optional": false,
              "description": "New value for property <code>height</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getHeight height}.\n\nThe height of the control.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>100%</code>."
        },
        {
          "name": "setMinHeight",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ThingCollection",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sMinHeight",
              "type": "sap.ui.core.CSSSize",
              "optional": false,
              "description": "New value for property <code>minHeight</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getMinHeight minHeight}.\n\nThe minimal height of the control.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setMinWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ThingCollection",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sMinWidth",
              "type": "sap.ui.core.CSSSize",
              "optional": false,
              "description": "New value for property <code>minWidth</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getMinWidth minWidth}.\n\nThe minimal width of the control.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ThingCollection",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sWidth",
              "type": "sap.ui.core.CSSSize",
              "optional": false,
              "description": "New value for property <code>width</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getWidth width}.\n\nThe width of the control.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>100%</code>."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.suite.ui.commons.ThingGroupDesign",
      "basename": "ThingGroupDesign",
      "resource": "sap/suite/ui/commons/library.js",
      "module": "sap/suite/ui/commons/library",
      "export": "ThingGroupDesign",
      "static": true,
      "visibility": "public",
      "description": "Defines the way how UnifiedThingGroup control is rendered.",
      "deprecated": {
        "since": "1.32",
        "text": "Deprecated. Object page should be used instead."
      },
      "ui5-metamodel": true,
      "properties": [
        {
          "name": "TopIndent",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "In this design there is indentation between header and content of the group."
        },
        {
          "name": "ZeroIndent",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "In this design there is no indentation between header and content of the group."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.ThreePanelThingInspector",
      "basename": "ThreePanelThingInspector",
      "resource": "sap/suite/ui/commons/ThreePanelThingInspector.js",
      "module": "sap/suite/ui/commons/ThreePanelThingInspector",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.ux3.ThingInspector",
      "description": "This control extends the sap.ui.ux3.ThingInspector control. It displays the sap.suite.ui.commons.ThreePanelThingViewer control in the sap.ui.ux3.Overlay control.",
      "deprecated": {
        "since": "1.32",
        "text": "Deprecated. Object page should be used instead."
      },
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "showHeader",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "description": "Shows or hides a middle panel of the ThingViewer named Header that contains general information.",
            "methods": ["getShowHeader", "setShowHeader"]
          },
          {
            "name": "logo",
            "type": "sap.ui.core.URI",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "A URL of the source of the ThingViewer's key visual image.",
            "methods": ["getLogo", "setLogo"]
          },
          {
            "name": "sidebarWidth",
            "type": "sap.ui.core.CSSSize",
            "defaultValue": "224px",
            "group": "Misc",
            "visibility": "public",
            "description": "The width of the ThingViewer's navigation panel.",
            "methods": ["getSidebarWidth", "setSidebarWidth"]
          }
        ],
        "aggregations": [
          {
            "name": "menuContent",
            "singularName": "menuContent",
            "type": "sap.ui.commons.Link",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "The items of the ThingViewer's Action Menu.",
            "methods": [
              "getMenuContent",
              "destroyMenuContent",
              "insertMenuContent",
              "addMenuContent",
              "removeMenuContent",
              "indexOfMenuContent",
              "removeAllMenuContent"
            ]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new ThreePanelThingInspector.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "addMenuContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ThreePanelThingInspector",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oMenuContent",
              "type": "sap.ui.commons.Link",
              "optional": false,
              "description": "The menuContent to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some menuContent to the aggregation {@link #getMenuContent menuContent}."
        },
        {
          "name": "destroyMenuContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ThreePanelThingInspector",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the menuContent in the aggregation {@link #getMenuContent menuContent}."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.ThreePanelThingInspector with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.ux3.ThingInspector.extend}."
        },
        {
          "name": "getLogo",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.URI",
            "description": "Value of property <code>logo</code>"
          },
          "description": "Gets current value of property {@link #getLogo logo}.\n\nA URL of the source of the ThingViewer's key visual image."
        },
        {
          "name": "getMenuContent",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.commons.Link[]" },
          "description": "Gets content of aggregation {@link #getMenuContent menuContent}.\n\nThe items of the ThingViewer's Action Menu."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.ThreePanelThingInspector."
        },
        {
          "name": "getShowHeader",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showHeader</code>"
          },
          "description": "Gets current value of property {@link #getShowHeader showHeader}.\n\nShows or hides a middle panel of the ThingViewer named Header that contains general information.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getSidebarWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.CSSSize",
            "description": "Value of property <code>sidebarWidth</code>"
          },
          "description": "Gets current value of property {@link #getSidebarWidth sidebarWidth}.\n\nThe width of the ThingViewer's navigation panel.\n\nDefault value is <code>224px</code>."
        },
        {
          "name": "indexOfMenuContent",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oMenuContent",
              "type": "sap.ui.commons.Link",
              "optional": false,
              "description": "The menuContent whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.ui.commons.Link</code> in the aggregation {@link #getMenuContent menuContent}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "insertMenuContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ThreePanelThingInspector",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oMenuContent",
              "type": "sap.ui.commons.Link",
              "optional": false,
              "description": "The menuContent to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the menuContent should be inserted at; for a negative value of <code>iIndex</code>, the menuContent is inserted at position 0; for a value greater than the current size of the aggregation, the menuContent is inserted at the last position"
            }
          ],
          "description": "Inserts a menuContent into the aggregation {@link #getMenuContent menuContent}."
        },
        {
          "name": "removeAllMenuContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.commons.Link[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getMenuContent menuContent}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeMenuContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.commons.Link",
            "description": "The removed menuContent or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vMenuContent",
              "type": "int|string|sap.ui.commons.Link",
              "optional": false,
              "description": "The menuContent to remove or its index or id"
            }
          ],
          "description": "Removes a menuContent from the aggregation {@link #getMenuContent menuContent}."
        },
        {
          "name": "setLogo",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ThreePanelThingInspector",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sLogo",
              "type": "sap.ui.core.URI",
              "optional": false,
              "description": "New value for property <code>logo</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getLogo logo}.\n\nA URL of the source of the ThingViewer's key visual image.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setShowHeader",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ThreePanelThingInspector",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowHeader",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showHeader</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowHeader showHeader}.\n\nShows or hides a middle panel of the ThingViewer named Header that contains general information.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setSidebarWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ThreePanelThingInspector",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sSidebarWidth",
              "type": "sap.ui.core.CSSSize",
              "optional": false,
              "description": "New value for property <code>sidebarWidth</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSidebarWidth sidebarWidth}.\n\nThe width of the ThingViewer's navigation panel.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>224px</code>."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.ThreePanelThingViewer",
      "basename": "ThreePanelThingViewer",
      "resource": "sap/suite/ui/commons/ThreePanelThingViewer.js",
      "module": "sap/suite/ui/commons/ThreePanelThingViewer",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.ux3.ThingViewer",
      "description": "This control extends the sap.ui.ux3.ThingViewer control. The first panel can display a thing icon, a title, the Action Menu button, up to two rows of text descriptions (the first is wrapped, the second is truncated), vertical navigation bar (sap.suite.ui.commons.VerticalNavigationBar), and an image aka key visual. The second panel displays the header area as a vertical panel containing ThingGroup objects. The third panel is a main content area designed to display ThingGroup objects.",
      "deprecated": {
        "since": "1.32",
        "text": "Deprecated. Object page should be used instead."
      },
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "logo",
            "type": "sap.ui.core.URI",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "A URL of the source of an image known as key visual. This can be a company logo or other essential graphics.",
            "methods": ["getLogo", "setLogo"]
          },
          {
            "name": "showHeader",
            "type": "boolean",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Shows or hides a middle panel named Header that contains general information.",
            "methods": ["getShowHeader", "setShowHeader"]
          },
          {
            "name": "sidebarWidth",
            "type": "sap.ui.core.CSSSize",
            "defaultValue": "244px",
            "group": "Misc",
            "visibility": "public",
            "description": "The width of the first panel that contains thing's title, icon, key visual and navigation bar. The default value is \"244px\".",
            "methods": ["getSidebarWidth", "setSidebarWidth"]
          }
        ],
        "aggregations": [
          {
            "name": "menuContent",
            "singularName": "menuContent",
            "type": "sap.ui.commons.Link",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "This aggregation allows you to add sap.ui.commons.Link items to the Action Menu. The menu appears as a popup when a user chooses a button in the top title section of the navigation panel.",
            "methods": [
              "getMenuContent",
              "destroyMenuContent",
              "insertMenuContent",
              "addMenuContent",
              "removeMenuContent",
              "indexOfMenuContent",
              "removeAllMenuContent"
            ]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new ThreePanelThingViewer.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "addMenuContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ThreePanelThingViewer",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oMenuContent",
              "type": "sap.ui.commons.Link",
              "optional": false,
              "description": "The menuContent to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some menuContent to the aggregation {@link #getMenuContent menuContent}."
        },
        {
          "name": "destroyMenuContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ThreePanelThingViewer",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the menuContent in the aggregation {@link #getMenuContent menuContent}."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.ThreePanelThingViewer with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.ux3.ThingViewer.extend}."
        },
        {
          "name": "getLogo",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.URI",
            "description": "Value of property <code>logo</code>"
          },
          "description": "Gets current value of property {@link #getLogo logo}.\n\nA URL of the source of an image known as key visual. This can be a company logo or other essential graphics."
        },
        {
          "name": "getMenuContent",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.commons.Link[]" },
          "description": "Gets content of aggregation {@link #getMenuContent menuContent}.\n\nThis aggregation allows you to add sap.ui.commons.Link items to the Action Menu. The menu appears as a popup when a user chooses a button in the top title section of the navigation panel."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.ThreePanelThingViewer."
        },
        {
          "name": "getShowHeader",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showHeader</code>"
          },
          "description": "Gets current value of property {@link #getShowHeader showHeader}.\n\nShows or hides a middle panel named Header that contains general information."
        },
        {
          "name": "getSidebarWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.CSSSize",
            "description": "Value of property <code>sidebarWidth</code>"
          },
          "description": "Gets current value of property {@link #getSidebarWidth sidebarWidth}.\n\nThe width of the first panel that contains thing's title, icon, key visual and navigation bar. The default value is \"244px\".\n\nDefault value is <code>244px</code>."
        },
        {
          "name": "indexOfMenuContent",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oMenuContent",
              "type": "sap.ui.commons.Link",
              "optional": false,
              "description": "The menuContent whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.ui.commons.Link</code> in the aggregation {@link #getMenuContent menuContent}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "insertMenuContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ThreePanelThingViewer",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oMenuContent",
              "type": "sap.ui.commons.Link",
              "optional": false,
              "description": "The menuContent to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the menuContent should be inserted at; for a negative value of <code>iIndex</code>, the menuContent is inserted at position 0; for a value greater than the current size of the aggregation, the menuContent is inserted at the last position"
            }
          ],
          "description": "Inserts a menuContent into the aggregation {@link #getMenuContent menuContent}."
        },
        {
          "name": "removeAllMenuContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.commons.Link[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getMenuContent menuContent}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeMenuContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.commons.Link",
            "description": "The removed menuContent or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vMenuContent",
              "type": "int|string|sap.ui.commons.Link",
              "optional": false,
              "description": "The menuContent to remove or its index or id"
            }
          ],
          "description": "Removes a menuContent from the aggregation {@link #getMenuContent menuContent}."
        },
        {
          "name": "setLogo",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ThreePanelThingViewer",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sLogo",
              "type": "sap.ui.core.URI",
              "optional": false,
              "description": "New value for property <code>logo</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getLogo logo}.\n\nA URL of the source of an image known as key visual. This can be a company logo or other essential graphics.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setShowHeader",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ThreePanelThingViewer",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowHeader",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showHeader</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowHeader showHeader}.\n\nShows or hides a middle panel named Header that contains general information.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setSidebarWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ThreePanelThingViewer",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sSidebarWidth",
              "type": "sap.ui.core.CSSSize",
              "optional": false,
              "description": "New value for property <code>sidebarWidth</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSidebarWidth sidebarWidth}.\n\nThe width of the first panel that contains thing's title, icon, key visual and navigation bar. The default value is \"244px\".\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>244px</code>."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.TileContent",
      "basename": "TileContent",
      "resource": "sap/suite/ui/commons/TileContent.js",
      "module": "sap/suite/ui/commons/TileContent",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.m.TileContent",
      "description": "This control serves a universal container for different types of content and footer.",
      "deprecated": {
        "since": "1.34",
        "text": "this control is a mere wrapper for sap.m.TileContent."
      },
      "ui5-metamodel": true,
      "ui5-metadata": { "stereotype": "control" },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, automatically generated if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new TileContent."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.TileContent with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.m.TileContent.extend}."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.TileContent."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.TileContent2X2",
      "basename": "TileContent2X2",
      "resource": "sap/suite/ui/commons/TileContent2X2.js",
      "module": "sap/suite/ui/commons/TileContent2X2",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.core.Control",
      "description": "This control serves a universal container for different types of content and footer.",
      "deprecated": { "since": "1.34", "text": "Deprecated." },
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "footer",
            "type": "string",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "description": "The footer text of the tile.",
            "methods": ["getFooter", "setFooter"]
          },
          {
            "name": "size",
            "type": "sap.suite.ui.commons.InfoTileSize",
            "defaultValue": "Auto",
            "group": "Misc",
            "visibility": "public",
            "description": "Updates the size of the tile. If not set then the default size is applied based on the device tile.",
            "methods": ["getSize", "setSize"]
          },
          {
            "name": "unit",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The percent sign, the currency symbol, or the unit of measure.",
            "methods": ["getUnit", "setUnit"]
          },
          {
            "name": "disabled",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "description": "Disables control if true.",
            "methods": ["getDisabled", "setDisabled"]
          }
        ],
        "aggregations": [
          {
            "name": "content",
            "singularName": "content",
            "type": "sap.ui.core.Control",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "The switchable view that depends on the tile type.",
            "methods": ["getContent", "destroyContent", "setContent"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new TileContent2X2.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "destroyContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.TileContent2X2",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the content in the aggregation {@link #getContent content}."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.TileContent2X2 with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "getContent",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.Control" },
          "description": "Gets content of aggregation {@link #getContent content}.\n\nThe switchable view that depends on the tile type."
        },
        {
          "name": "getDisabled",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>disabled</code>"
          },
          "description": "Gets current value of property {@link #getDisabled disabled}.\n\nDisables control if true.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getFooter",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>footer</code>"
          },
          "description": "Gets current value of property {@link #getFooter footer}.\n\nThe footer text of the tile."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.TileContent2X2."
        },
        {
          "name": "getSize",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.InfoTileSize",
            "description": "Value of property <code>size</code>"
          },
          "description": "Gets current value of property {@link #getSize size}.\n\nUpdates the size of the tile. If not set then the default size is applied based on the device tile.\n\nDefault value is <code>Auto</code>."
        },
        {
          "name": "getUnit",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>unit</code>"
          },
          "description": "Gets current value of property {@link #getUnit unit}.\n\nThe percent sign, the currency symbol, or the unit of measure."
        },
        {
          "name": "setContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.TileContent2X2",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oContent",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The content to set"
            }
          ],
          "description": "Sets the aggregated {@link #getContent content}."
        },
        {
          "name": "setDisabled",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.TileContent2X2",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bDisabled",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>disabled</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getDisabled disabled}.\n\nDisables control if true.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setFooter",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.TileContent2X2",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sFooter",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>footer</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getFooter footer}.\n\nThe footer text of the tile.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setSize",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.TileContent2X2",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sSize",
              "type": "sap.suite.ui.commons.InfoTileSize",
              "optional": false,
              "description": "New value for property <code>size</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSize size}.\n\nUpdates the size of the tile. If not set then the default size is applied based on the device tile.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Auto</code>."
        },
        {
          "name": "setUnit",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.TileContent2X2",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sUnit",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>unit</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getUnit unit}.\n\nThe percent sign, the currency symbol, or the unit of measure.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.Timeline",
      "basename": "Timeline",
      "resource": "sap/suite/ui/commons/Timeline.js",
      "module": "sap/suite/ui/commons/Timeline",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.core.Control",
      "description": "The timeline control shows entries (such as objects, events, or posts) in chronological order. <br>A common use case is to provide information about changes to an object, or events related to an object. These entries can be generated by the system (for example, value XY changed from A to B), or added manually. <br>There are two distinct variants of the timeline: basic and social. The basic timeline is read-only, while the social timeline offers a high level of interaction and collaboration, and is integrated within SAP Jam.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "alignment",
            "type": "sap.suite.ui.commons.TimelineAlignment",
            "defaultValue": "Right",
            "group": "Misc",
            "visibility": "public",
            "description": "Defines the alignment of timeline posts relative to the timeline axis. This option can be used for single-sided timelines only. If the axisOrientation property is set to <code> Horizontal</code>, the <code>Right</code> value is interpreted as bottom alignment and the <code>Left</code> value as top alignment.",
            "methods": ["getAlignment", "setAlignment"]
          },
          {
            "name": "axisOrientation",
            "type": "sap.suite.ui.commons.TimelineAxisOrientation",
            "defaultValue": "Vertical",
            "group": "Misc",
            "visibility": "public",
            "description": "Defines the orientation of the timeline. Can be set to <code>Vertical</code> or <code>Horizontal</code>.",
            "methods": ["getAxisOrientation", "setAxisOrientation"]
          },
          {
            "name": "data",
            "type": "object",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Data for the Timeline control.",
            "deprecated": {
              "since": "1.46.0",
              "text": "As of version 1.46, this property was replaced by JSONModel context binding."
            },
            "methods": ["getData", "setData"]
          },
          {
            "name": "enableAllInFilterItem",
            "type": "boolean",
            "defaultValue": true,
            "group": "Behavior",
            "visibility": "public",
            "description": "Enables to add 'All' at the beginning of the filter list.",
            "deprecated": {
              "since": "1.46.0",
              "text": "The filter list now includes a Select All check box, so the All radio button is no longer required. This property is ignored."
            },
            "methods": ["getEnableAllInFilterItem", "setEnableAllInFilterItem"]
          },
          {
            "name": "enableBackendFilter",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "description": "Enables fetching data from backend instead of deriving filter values from the frontend values (displayed list). As of version 1.46, replaced by {@link sap.suite.ui.commons.Timeline#getEnableModelFilter}.",
            "deprecated": {
              "since": "1.46.0",
              "text": "Use the enableModelFilter property instead."
            },
            "methods": ["getEnableBackendFilter", "setEnableBackendFilter"]
          },
          {
            "name": "enableBusyIndicator",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "description": "When this property is set to <code>true</code>, the timeline displays a busy indicator when loading data. This busy indicator blocks the interaction with the items until the data loading is complete. It is strongly recommended to use this option. Loading data without a busy indicator may confuse the users.",
            "methods": ["getEnableBusyIndicator", "setEnableBusyIndicator"]
          },
          {
            "name": "enableDoubleSided",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "description": "If set to <code>true</code>, timeline posts are displayed on both sides of the timeline axis.",
            "methods": ["getEnableDoubleSided", "setEnableDoubleSided"]
          },
          {
            "name": "enableModelFilter",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "since": "1.46.0",
            "description": "Enables filtering directly on the binding level. If set to <code>true</code>, all filters are translated into the filters in the model binding. When the OData model is used, the filtering is performed on the backend side. This option is strongly recommended. If set to <code>false</code>, all entries from the model need to be fetched before they can be filtered on the frontend side. Please be aware that the <code>growingThreshold</code> property determines how many entries can be rendered. Timeline requests all entries from the model before it performs the filtering. Some models may have internal limits for the number of entries that can be used in bindings. Such limits can be set using {@link sap.ui.model.Model#setSizeLimit}.",
            "methods": ["getEnableModelFilter", "setEnableModelFilter"]
          },
          {
            "name": "enableScroll",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "description": "If set to <code>true</code>, the Timeline control has its own scroll bar, with the scrolling taking place within the Timeline control itself. Scrolling is required if you want to enable the lazyLoading property.",
            "methods": ["getEnableScroll", "setEnableScroll"]
          },
          {
            "name": "enableSocial",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "description": "Adds a <i>Reply</i> link to the posts on a social timeline that allows users to reply to posts. When a user adds a reply, an event is fired. This event should be handled by external code.",
            "methods": ["getEnableSocial", "setEnableSocial"]
          },
          {
            "name": "filterTitle",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Title for the data filter. When a filter is applied, this title is displayed in the message strip along with the filter name.",
            "methods": ["getFilterTitle", "setFilterTitle"]
          },
          {
            "name": "forceGrowing",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "description": "If set to <code>true</code>, the <i>Show More</i> button is displayed when the user scrolls along the timeline axis.",
            "methods": ["getForceGrowing", "setForceGrowing"]
          },
          {
            "name": "group",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "description": "Groups the timeline posts by year. As of version 1.46, replaced by {@link sap.suite.ui.commons.Timeline#getGroupByType}.",
            "deprecated": {
              "since": "1.46.0",
              "text": "Use the groupByType property instead."
            },
            "methods": ["getGroup", "setGroup"]
          },
          {
            "name": "groupBy",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Groups the timeline posts by a field. Only fields that contain date values are supported.",
            "methods": ["getGroupBy", "setGroupBy"]
          },
          {
            "name": "groupByType",
            "type": "sap.suite.ui.commons.TimelineGroupType",
            "defaultValue": "None",
            "group": "Misc",
            "visibility": "public",
            "description": "Groups the timeline posts by a time period, including year, quarter, month, week, and day. If set to <code>None</code>, no grouping is applied. If you specify a custom grouping function using the {@link sap.suite.ui.commons.Timeline#setCustomGrouping} method, this function overrides the groupByType property settings.",
            "methods": ["getGroupByType", "setGroupByType"]
          },
          {
            "name": "growing",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "description": "If set to <code>true</code>, the timeline displays a limited number of posts with a button to show more. The displayed posts limit can be set using the growingThreshold property. As of version 1.46, replaced by {@link sap.suite.ui.commons.Timeline#getGrowingThreshold}.",
            "deprecated": {
              "since": "1.46.0",
              "text": "Use the growingThreshold property instead, setting it to 0 to disable growing."
            },
            "methods": ["getGrowing", "setGrowing"]
          },
          {
            "name": "growingThreshold",
            "type": "int",
            "defaultValue": 5,
            "group": "Misc",
            "visibility": "public",
            "description": "Number of posts requested from the server at a time. Each time when the timeline needs to load more posts, it will request exactly this amount. The number of posts displayed in the timeline is increased by this number. If set to <code>0</code>, all posts are fetched and displayed on the initial load.",
            "methods": ["getGrowingThreshold", "setGrowingThreshold"]
          },
          {
            "name": "height",
            "type": "sap.ui.core.CSSSize",
            "defaultValue": "",
            "group": "Misc",
            "visibility": "public",
            "since": "1.46.0",
            "description": "Sets the height of the Timeline.",
            "methods": ["getHeight", "setHeight"]
          },
          {
            "name": "lazyLoading",
            "type": "boolean",
            "defaultValue": false,
            "group": "Dimension",
            "visibility": "public",
            "since": "1.46.0",
            "description": "Enables the Lazy Loading feature that automatically loads more posts as the user scrolls along the timeline axis. This feature works only when the enableScroll property is set to <code>true</code>. See also {@link sap.suite.ui.commons.Timeline#getEnableScroll}.",
            "methods": ["getLazyLoading", "setLazyLoading"]
          },
          {
            "name": "noDataText",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "This text is displayed when the control has no data. The default value is loaded from the component resource bundle.",
            "methods": ["getNoDataText", "setNoDataText"]
          },
          {
            "name": "scrollingFadeout",
            "type": "sap.suite.ui.commons.TimelineScrollingFadeout",
            "defaultValue": "None",
            "group": "Misc",
            "visibility": "public",
            "since": "1.46.0",
            "description": "If set to <code>Area</code>, the timeline fades into the visible area margin. If set to <code>AreaWithButtons</code>, the timeline fades into the visible area margin and scroll buttons are displayed. If set to <code>None</code>, the fading effect is not applied. This feature works only when the enableScroll property is set to <code>true</code>. See also {@link sap.suite.ui.commons.Timeline#getEnableScroll}.",
            "deprecated": { "since": "1.54.0", "text": "Not Fiori." },
            "methods": ["getScrollingFadeout", "setScrollingFadeout"]
          },
          {
            "name": "showFilterBar",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "description": "Sets the visibility of the filter in the timeline toolbar.<br> As of version 1.46, replaced by {@link sap.suite.ui.commons.Timeline#getShowHeaderBar}.",
            "deprecated": {
              "since": "1.46.0",
              "text": "Use the showHeaderBar property instead."
            },
            "methods": ["getShowFilterBar", "setShowFilterBar"]
          },
          {
            "name": "showHeaderBar",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "description": "Shows the timeline toolbar with search and filter options.",
            "methods": ["getShowHeaderBar", "setShowHeaderBar"]
          },
          {
            "name": "showIcons",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "description": "Shows an icon on the timeline axis as an anchor for each entry node. If set to <code>false</code>, all icons are replaced by dots.",
            "methods": ["getShowIcons", "setShowIcons"]
          },
          {
            "name": "showItemFilter",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "description": "Show item filter in filter area.",
            "methods": ["getShowItemFilter", "setShowItemFilter"]
          },
          {
            "name": "showSearch",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "description": "Sets the search field visibility on the timeline toolbar.",
            "methods": ["getShowSearch", "setShowSearch"]
          },
          {
            "name": "showSort",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "description": "Show sort icon in the header bar. For displaying this icon, sorting have to be allowed.",
            "methods": ["getShowSort", "setShowSort"]
          },
          {
            "name": "showSuggestion",
            "type": "boolean",
            "defaultValue": true,
            "group": "Behavior",
            "visibility": "public",
            "since": "1.26.1",
            "description": "If set to <code>true</code>, a suggest event is fired when the user enters text into the search field. Changing the suggestionItems aggregation in the suggest event listener will display suggestions inside a popup. As of version 1.46, replaced by {@link sap.collaboration.components.feed.Component}.",
            "deprecated": {
              "since": "1.46.0",
              "text": "Use the Group Feed Component instead."
            },
            "methods": ["getShowSuggestion", "setShowSuggestion"]
          },
          {
            "name": "showTimeFilter",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "description": "Shows the time range filter in the filter menu.",
            "methods": ["getShowTimeFilter", "setShowTimeFilter"]
          },
          {
            "name": "sort",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "description": "Indicates whether the data should be sorted. If set to <code>false</code> the data model's default sorting is applied.",
            "methods": ["getSort", "setSort"]
          },
          {
            "name": "dateTimePath",
            "type": "string",
            "defaultValue": "",
            "group": "Misc",
            "visibility": "public",
            "description": "Path for dateTime in mode binding. Use this property when you use factory function for <code>TimeLineItem</code> creation. When every item has different path or the <code>datetime</code> is calculated in factory sorting, filtering and searching has to be done manually using events. If not set for factory binding filter and sorting won't work.",
            "methods": ["getDateTimePath", "setDateTimePath"]
          },
          {
            "name": "sortOldestFirst",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "description": "Whether the oldest item will be displayed first.",
            "methods": ["getSortOldestFirst", "setSortOldestFirst"]
          },
          {
            "name": "textHeight",
            "type": "string",
            "defaultValue": "",
            "group": "Misc",
            "visibility": "public",
            "description": "Height of the timeline posts. It can be set to either of the following types of values: <ul> <li> Automatic &ndash; If set to <code>automatic</code>, the optimal post height is calculated automatically to fit the timeline height specified by the height parameter. This option works only in horizontal timelines and only when the timeline height is defined. In vertical timelines, this setting is ignored. </li> <li> Number &ndash; If set to a number, a corresponding number of text lines is displayed in every post.</li> <li> Pixels &ndash; If set to a number followed by <code>px</code>, such as <code>50px</code>, the closest number in lines is calculated and applied to the timeline posts, so that the post height corresponds to the specified number of pixels and the text lines are not cut off in the middle of a line.</li> <li> Any other valid {@link sap.ui.core.CSSSize CSSSize} value that is inserted into the text wrapper without being changed. </li> </ul>",
            "methods": ["getTextHeight", "setTextHeight"]
          },
          {
            "name": "width",
            "type": "sap.ui.core.CSSSize",
            "defaultValue": "100%",
            "group": "Dimension",
            "visibility": "public",
            "description": "Sets the width of the Timeline.",
            "methods": ["getWidth", "setWidth"]
          }
        ],
        "aggregations": [
          {
            "name": "content",
            "singularName": "content",
            "type": "sap.suite.ui.commons.TimelineItem",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "List of timeline posts.",
            "methods": [
              "getContent",
              "destroyContent",
              "insertContent",
              "addContent",
              "removeContent",
              "indexOfContent",
              "removeAllContent"
            ]
          },
          {
            "name": "customFilter",
            "singularName": "customFilter",
            "type": "sap.ui.core.Control",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "A custom filter to be used instead of the default item filter. This control must have an <code>openBy</code> or <code>open</code> function that is used by the timeline to open the control. If the control has both functions, <code>openBy</code> is used.",
            "methods": [
              "getCustomFilter",
              "destroyCustomFilter",
              "setCustomFilter"
            ]
          },
          {
            "name": "filterList",
            "singularName": "filterList",
            "type": "sap.suite.ui.commons.TimelineFilterListItem",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Custom filter criteria for the items filter.",
            "methods": [
              "getFilterList",
              "destroyFilterList",
              "insertFilterList",
              "addFilterList",
              "removeFilterList",
              "indexOfFilterList",
              "removeAllFilterList"
            ]
          },
          {
            "name": "suggestionItems",
            "singularName": "suggestionItem",
            "type": "sap.m.StandardListItem",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Items for suggestions. As of version 1.46, replaced by {@link sap.collaboration.components.feed.Component}.",
            "deprecated": {
              "since": "1.46.0",
              "text": "Use the Group Feed Component instead."
            },
            "methods": [
              "getSuggestionItems",
              "destroySuggestionItems",
              "insertSuggestionItem",
              "addSuggestionItem",
              "removeSuggestionItem",
              "indexOfSuggestionItem",
              "removeAllSuggestionItems"
            ]
          }
        ],
        "defaultAggregation": "content",
        "events": [
          {
            "name": "addPost",
            "visibility": "public",
            "description": "This event is fired when a new post is added. As of version 1.46, replaced by {@link sap.collaboration.components.feed.Component}.",
            "deprecated": {
              "since": "1.46.0",
              "text": "Use the Group Feed Component instead."
            },
            "parameters": {
              "value": {
                "name": "value",
                "type": "string",
                "description": "Post message text."
              }
            },
            "methods": ["attachAddPost", "detachAddPost", "fireAddPost"]
          },
          {
            "name": "customMessageClosed",
            "visibility": "public",
            "description": "This event is fired when the user clicks the Close button on a message strip.",
            "methods": [
              "attachCustomMessageClosed",
              "detachCustomMessageClosed",
              "fireCustomMessageClosed"
            ]
          },
          {
            "name": "filterOpen",
            "visibility": "public",
            "description": "This event is fired when the user clicks the filter icon in the timeline toolbar and opens the filter.",
            "methods": [
              "attachFilterOpen",
              "detachFilterOpen",
              "fireFilterOpen"
            ]
          },
          {
            "name": "filterSelectionChange",
            "visibility": "public",
            "description": "This event is fired when filtering is applied to timeline posts or when a search term is entered into the search field. This event can be fired only if the enableModelFilter property is set to <code>true</code>.",
            "parameters": {
              "type": {
                "name": "type",
                "type": "sap.suite.ui.commons.TimelineFilterType",
                "description": "Type of filter that has changed, can be an item filter or a time range filter."
              },
              "searchTerm": {
                "name": "searchTerm",
                "type": "string",
                "description": "Search term entered into the search field."
              },
              "selectedItem": {
                "name": "selectedItem",
                "type": "string",
                "description": "The first criteria selected in the filter criteria list (required for backward compatibility)."
              },
              "selectedItems": {
                "name": "selectedItems",
                "type": "object",
                "description": "An array with all selected filter criteria."
              },
              "timeKeys": {
                "name": "timeKeys",
                "type": "object",
                "description": "An object specifying the start date (<code>from</code>) and the end date (<code>to</code>) of the time range."
              },
              "clear": {
                "name": "clear",
                "type": "boolean",
                "description": "Is set to <code>true</code> when this event is fired by clearing the filter."
              }
            },
            "methods": [
              "attachFilterSelectionChange",
              "detachFilterSelectionChange",
              "fireFilterSelectionChange"
            ]
          },
          {
            "name": "grow",
            "visibility": "public",
            "description": "This event is fired when the \"More\" button is clicked.",
            "methods": ["attachGrow", "detachGrow", "fireGrow"]
          },
          {
            "name": "itemFiltering",
            "visibility": "public",
            "description": "This event is fired for every timeline post when data filtering is being applied. It indicates whether this post is included in the filtering and why. Can be used only when the enableModelFilter property is set to <code>false</code>.",
            "parameters": {
              "item": {
                "name": "item",
                "type": "sap.suite.ui.commons.TimelineItem",
                "description": "Timeline post that is currently being filtered."
              },
              "reasons": {
                "name": "reasons",
                "type": "object",
                "description": "Reasons why the post is being filtered. Empty if the post is not being filtered. There are three properties available in the object: <code>Search</code>, <code>Time</code>, and <code>Data</code>. You can call preventDefault to the event object to prevent the result."
              },
              "dataKeys": {
                "name": "dataKeys",
                "type": "object",
                "description": "Array with keys used for data filtering."
              },
              "timeKeys": {
                "name": "timeKeys",
                "type": "object",
                "description": "An object specifying the start date (<code>from</code>) and the end date (<code>to</code>) of the time range."
              },
              "searchTerm": {
                "name": "searchTerm",
                "type": "string",
                "description": "The text string that has been typed into the search field."
              }
            },
            "methods": [
              "attachItemFiltering",
              "detachItemFiltering",
              "fireItemFiltering"
            ]
          },
          {
            "name": "select",
            "visibility": "public",
            "description": "This event is fired when a timeline post is selected.",
            "parameters": {
              "selectedItem": {
                "name": "selectedItem",
                "type": "sap.suite.ui.commons.TimelineItem",
                "description": "The timeline post that is selected."
              },
              "userAction": {
                "name": "userAction",
                "type": "boolean",
                "description": "Indicates whether the selection was triggered by a user action or in any other way. <br>Set to <code>true</code> if the selection was triggered by a user action, for example, by clicking with a mouse or pressing the Enter key. <br>Set to <code>false</code> if the selection was triggered in a different way, for example, by shifting focus back from a Popover element or by pressing an arrow key. <br>For backward compatibility, the <code>select</code> event is fired whenever an item gets focus."
              }
            },
            "methods": ["attachSelect", "detachSelect", "fireSelect"]
          },
          {
            "name": "suggest",
            "visibility": "public",
            "since": "1.26.1",
            "description": "This event is fired when the user enters text into the search field, in cases when the showSuggestion property is set to <code>true</code>. Changing the suggestionItems aggregation will show the suggestions inside a popup.",
            "deprecated": {
              "since": "1.46.0",
              "text": "Replaced by {@link sap.collaboration.components.feed.Component}."
            },
            "parameters": {
              "suggestValue": {
                "name": "suggestValue",
                "type": "string",
                "description": "The text string that has been typed into the search field."
              }
            },
            "methods": ["attachSuggest", "detachSuggest", "fireSuggest"]
          },
          {
            "name": "suggestionItemSelected",
            "visibility": "public",
            "since": "1.26.1",
            "description": "This event is fired when a suggested post is selected in the suggestions popup list. This event is only fired when the showSuggestion property is set to <code>true</code> and there is at least one post in the suggestions popup list. See also the suggestionItems aggregation.",
            "deprecated": {
              "since": "1.46.0",
              "text": "Replaced by {@link sap.collaboration.components.feed.Component}."
            },
            "parameters": {
              "selectedItem": {
                "name": "selectedItem",
                "type": "sap.ui.core.Item",
                "description": "The item selected in the suggestions popup."
              }
            },
            "methods": [
              "attachSuggestionItemSelected",
              "detachSuggestionItemSelected",
              "fireSuggestionItemSelected"
            ]
          }
        ],
        "designtime": "true"
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new Timeline.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "addPost",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "value": {
                      "name": "value",
                      "type": "string",
                      "optional": false,
                      "description": "Post message text."
                    }
                  }
                }
              }
            }
          ],
          "description": "This event is fired when a new post is added. As of version 1.46, replaced by {@link sap.collaboration.components.feed.Component}.",
          "deprecated": {
            "since": "1.46.0",
            "text": "Use the Group Feed Component instead."
          }
        },
        {
          "name": "customMessageClosed",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "This event is fired when the user clicks the Close button on a message strip."
        },
        {
          "name": "filterOpen",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "This event is fired when the user clicks the filter icon in the timeline toolbar and opens the filter."
        },
        {
          "name": "filterSelectionChange",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "type": {
                      "name": "type",
                      "type": "sap.suite.ui.commons.TimelineFilterType",
                      "optional": false,
                      "description": "Type of filter that has changed, can be an item filter or a time range filter."
                    },
                    "searchTerm": {
                      "name": "searchTerm",
                      "type": "string",
                      "optional": false,
                      "description": "Search term entered into the search field."
                    },
                    "selectedItem": {
                      "name": "selectedItem",
                      "type": "string",
                      "optional": false,
                      "description": "The first criteria selected in the filter criteria list (required for backward compatibility)."
                    },
                    "selectedItems": {
                      "name": "selectedItems",
                      "type": "object",
                      "optional": false,
                      "description": "An array with all selected filter criteria."
                    },
                    "timeKeys": {
                      "name": "timeKeys",
                      "type": "object",
                      "optional": false,
                      "description": "An object specifying the start date (<code>from</code>) and the end date (<code>to</code>) of the time range."
                    },
                    "clear": {
                      "name": "clear",
                      "type": "boolean",
                      "optional": false,
                      "description": "Is set to <code>true</code> when this event is fired by clearing the filter."
                    }
                  }
                }
              }
            }
          ],
          "description": "This event is fired when filtering is applied to timeline posts or when a search term is entered into the search field. This event can be fired only if the enableModelFilter property is set to <code>true</code>."
        },
        {
          "name": "grow",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "This event is fired when the \"More\" button is clicked."
        },
        {
          "name": "itemFiltering",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "item": {
                      "name": "item",
                      "type": "sap.suite.ui.commons.TimelineItem",
                      "optional": false,
                      "description": "Timeline post that is currently being filtered."
                    },
                    "reasons": {
                      "name": "reasons",
                      "type": "object",
                      "optional": false,
                      "description": "Reasons why the post is being filtered. Empty if the post is not being filtered. There are three properties available in the object: <code>Search</code>, <code>Time</code>, and <code>Data</code>. You can call preventDefault to the event object to prevent the result."
                    },
                    "dataKeys": {
                      "name": "dataKeys",
                      "type": "object",
                      "optional": false,
                      "description": "Array with keys used for data filtering."
                    },
                    "timeKeys": {
                      "name": "timeKeys",
                      "type": "object",
                      "optional": false,
                      "description": "An object specifying the start date (<code>from</code>) and the end date (<code>to</code>) of the time range."
                    },
                    "searchTerm": {
                      "name": "searchTerm",
                      "type": "string",
                      "optional": false,
                      "description": "The text string that has been typed into the search field."
                    }
                  }
                }
              }
            }
          ],
          "description": "This event is fired for every timeline post when data filtering is being applied. It indicates whether this post is included in the filtering and why. Can be used only when the enableModelFilter property is set to <code>false</code>."
        },
        {
          "name": "select",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "selectedItem": {
                      "name": "selectedItem",
                      "type": "sap.suite.ui.commons.TimelineItem",
                      "optional": false,
                      "description": "The timeline post that is selected."
                    },
                    "userAction": {
                      "name": "userAction",
                      "type": "boolean",
                      "optional": false,
                      "description": "Indicates whether the selection was triggered by a user action or in any other way. <br>Set to <code>true</code> if the selection was triggered by a user action, for example, by clicking with a mouse or pressing the Enter key. <br>Set to <code>false</code> if the selection was triggered in a different way, for example, by shifting focus back from a Popover element or by pressing an arrow key. <br>For backward compatibility, the <code>select</code> event is fired whenever an item gets focus."
                    }
                  }
                }
              }
            }
          ],
          "description": "This event is fired when a timeline post is selected."
        },
        {
          "name": "suggest",
          "visibility": "public",
          "since": "1.26.1",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "suggestValue": {
                      "name": "suggestValue",
                      "type": "string",
                      "optional": false,
                      "description": "The text string that has been typed into the search field."
                    }
                  }
                }
              }
            }
          ],
          "description": "This event is fired when the user enters text into the search field, in cases when the showSuggestion property is set to <code>true</code>. Changing the suggestionItems aggregation will show the suggestions inside a popup.",
          "deprecated": {
            "since": "1.46.0",
            "text": "Replaced by {@link sap.collaboration.components.feed.Component}."
          }
        },
        {
          "name": "suggestionItemSelected",
          "visibility": "public",
          "since": "1.26.1",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "selectedItem": {
                      "name": "selectedItem",
                      "type": "sap.ui.core.Item",
                      "optional": false,
                      "description": "The item selected in the suggestions popup."
                    }
                  }
                }
              }
            }
          ],
          "description": "This event is fired when a suggested post is selected in the suggestions popup list. This event is only fired when the showSuggestion property is set to <code>true</code> and there is at least one post in the suggestions popup list. See also the suggestionItems aggregation.",
          "deprecated": {
            "since": "1.46.0",
            "text": "Replaced by {@link sap.collaboration.components.feed.Component}."
          }
        }
      ],
      "methods": [
        {
          "name": "addContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.Timeline",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oContent",
              "type": "sap.suite.ui.commons.TimelineItem",
              "optional": false,
              "description": "The content to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some content to the aggregation {@link #getContent content}."
        },
        {
          "name": "addFilterList",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.Timeline",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oFilterList",
              "type": "sap.suite.ui.commons.TimelineFilterListItem",
              "optional": false,
              "description": "The filterList to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some filterList to the aggregation {@link #getFilterList filterList}."
        },
        {
          "name": "addSuggestionItem",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.Timeline",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oSuggestionItem",
              "type": "sap.m.StandardListItem",
              "optional": false,
              "description": "The suggestionItem to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some suggestionItem to the aggregation {@link #getSuggestionItems suggestionItems}.",
          "deprecated": {
            "since": "1.46.0",
            "text": "Use the Group Feed Component instead."
          }
        },
        {
          "name": "adjustUI",
          "visibility": "public",
          "description": "Refreshes the UI."
        },
        {
          "name": "attachAddPost",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.Timeline",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.Timeline</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:addPost addPost} event of this <code>sap.suite.ui.commons.Timeline</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.Timeline</code> itself.\n\nThis event is fired when a new post is added. As of version 1.46, replaced by {@link sap.collaboration.components.feed.Component}.",
          "deprecated": {
            "since": "1.46.0",
            "text": "Use the Group Feed Component instead."
          }
        },
        {
          "name": "attachCustomMessageClosed",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.Timeline",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.Timeline</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:customMessageClosed customMessageClosed} event of this <code>sap.suite.ui.commons.Timeline</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.Timeline</code> itself.\n\nThis event is fired when the user clicks the Close button on a message strip."
        },
        {
          "name": "attachFilterOpen",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.Timeline",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.Timeline</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:filterOpen filterOpen} event of this <code>sap.suite.ui.commons.Timeline</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.Timeline</code> itself.\n\nThis event is fired when the user clicks the filter icon in the timeline toolbar and opens the filter."
        },
        {
          "name": "attachFilterSelectionChange",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.Timeline",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.Timeline</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:filterSelectionChange filterSelectionChange} event of this <code>sap.suite.ui.commons.Timeline</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.Timeline</code> itself.\n\nThis event is fired when filtering is applied to timeline posts or when a search term is entered into the search field. This event can be fired only if the enableModelFilter property is set to <code>true</code>."
        },
        {
          "name": "attachGrow",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.Timeline",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.Timeline</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:grow grow} event of this <code>sap.suite.ui.commons.Timeline</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.Timeline</code> itself.\n\nThis event is fired when the \"More\" button is clicked."
        },
        {
          "name": "attachItemFiltering",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.Timeline",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.Timeline</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:itemFiltering itemFiltering} event of this <code>sap.suite.ui.commons.Timeline</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.Timeline</code> itself.\n\nThis event is fired for every timeline post when data filtering is being applied. It indicates whether this post is included in the filtering and why. Can be used only when the enableModelFilter property is set to <code>false</code>."
        },
        {
          "name": "attachSelect",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.Timeline",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.Timeline</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:select select} event of this <code>sap.suite.ui.commons.Timeline</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.Timeline</code> itself.\n\nThis event is fired when a timeline post is selected."
        },
        {
          "name": "attachSuggest",
          "visibility": "public",
          "since": "1.26.1",
          "returnValue": {
            "type": "sap.suite.ui.commons.Timeline",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.Timeline</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:suggest suggest} event of this <code>sap.suite.ui.commons.Timeline</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.Timeline</code> itself.\n\nThis event is fired when the user enters text into the search field, in cases when the showSuggestion property is set to <code>true</code>. Changing the suggestionItems aggregation will show the suggestions inside a popup.",
          "deprecated": {
            "since": "1.46.0",
            "text": "Replaced by {@link sap.collaboration.components.feed.Component}."
          }
        },
        {
          "name": "attachSuggestionItemSelected",
          "visibility": "public",
          "since": "1.26.1",
          "returnValue": {
            "type": "sap.suite.ui.commons.Timeline",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.Timeline</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:suggestionItemSelected suggestionItemSelected} event of this <code>sap.suite.ui.commons.Timeline</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.Timeline</code> itself.\n\nThis event is fired when a suggested post is selected in the suggestions popup list. This event is only fired when the showSuggestion property is set to <code>true</code> and there is at least one post in the suggestions popup list. See also the suggestionItems aggregation.",
          "deprecated": {
            "since": "1.46.0",
            "text": "Replaced by {@link sap.collaboration.components.feed.Component}."
          }
        },
        {
          "name": "destroyCustomFilter",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.Timeline",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the customFilter in the aggregation {@link #getCustomFilter customFilter}."
        },
        {
          "name": "destroyFilterList",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.Timeline",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the filterList in the aggregation {@link #getFilterList filterList}."
        },
        {
          "name": "destroySuggestionItems",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.Timeline",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the suggestionItems in the aggregation {@link #getSuggestionItems suggestionItems}.",
          "deprecated": {
            "since": "1.46.0",
            "text": "Use the Group Feed Component instead."
          }
        },
        {
          "name": "detachAddPost",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.Timeline",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:addPost addPost} event of this <code>sap.suite.ui.commons.Timeline</code>.\n\nThe passed function and listener object must match the ones used for event registration.",
          "deprecated": {
            "since": "1.46.0",
            "text": "Use the Group Feed Component instead."
          }
        },
        {
          "name": "detachCustomMessageClosed",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.Timeline",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:customMessageClosed customMessageClosed} event of this <code>sap.suite.ui.commons.Timeline</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachFilterOpen",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.Timeline",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:filterOpen filterOpen} event of this <code>sap.suite.ui.commons.Timeline</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachFilterSelectionChange",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.Timeline",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:filterSelectionChange filterSelectionChange} event of this <code>sap.suite.ui.commons.Timeline</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachGrow",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.Timeline",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:grow grow} event of this <code>sap.suite.ui.commons.Timeline</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachItemFiltering",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.Timeline",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:itemFiltering itemFiltering} event of this <code>sap.suite.ui.commons.Timeline</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachSelect",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.Timeline",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:select select} event of this <code>sap.suite.ui.commons.Timeline</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachSuggest",
          "visibility": "public",
          "since": "1.26.1",
          "returnValue": {
            "type": "sap.suite.ui.commons.Timeline",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:suggest suggest} event of this <code>sap.suite.ui.commons.Timeline</code>.\n\nThe passed function and listener object must match the ones used for event registration.",
          "deprecated": {
            "since": "1.46.0",
            "text": "Replaced by {@link sap.collaboration.components.feed.Component}."
          }
        },
        {
          "name": "detachSuggestionItemSelected",
          "visibility": "public",
          "since": "1.26.1",
          "returnValue": {
            "type": "sap.suite.ui.commons.Timeline",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:suggestionItemSelected suggestionItemSelected} event of this <code>sap.suite.ui.commons.Timeline</code>.\n\nThe passed function and listener object must match the ones used for event registration.",
          "deprecated": {
            "since": "1.46.0",
            "text": "Replaced by {@link sap.collaboration.components.feed.Component}."
          }
        },
        {
          "name": "exit",
          "visibility": "public",
          "description": "Cleans up the element instance before destruction"
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.Timeline with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "fireAddPost",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.Timeline",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "value": {
                  "name": "value",
                  "type": "string",
                  "optional": true,
                  "description": "Post message text."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:addPost addPost} to attached listeners.",
          "deprecated": {
            "since": "1.46.0",
            "text": "Use the Group Feed Component instead."
          }
        },
        {
          "name": "fireCustomMessageClosed",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.Timeline",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:customMessageClosed customMessageClosed} to attached listeners."
        },
        {
          "name": "fireFilterOpen",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.Timeline",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:filterOpen filterOpen} to attached listeners."
        },
        {
          "name": "fireFilterSelectionChange",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.Timeline",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "type": {
                  "name": "type",
                  "type": "sap.suite.ui.commons.TimelineFilterType",
                  "optional": true,
                  "description": "Type of filter that has changed, can be an item filter or a time range filter."
                },
                "searchTerm": {
                  "name": "searchTerm",
                  "type": "string",
                  "optional": true,
                  "description": "Search term entered into the search field."
                },
                "selectedItem": {
                  "name": "selectedItem",
                  "type": "string",
                  "optional": true,
                  "description": "The first criteria selected in the filter criteria list (required for backward compatibility)."
                },
                "selectedItems": {
                  "name": "selectedItems",
                  "type": "object",
                  "optional": true,
                  "description": "An array with all selected filter criteria."
                },
                "timeKeys": {
                  "name": "timeKeys",
                  "type": "object",
                  "optional": true,
                  "description": "An object specifying the start date (<code>from</code>) and the end date (<code>to</code>) of the time range."
                },
                "clear": {
                  "name": "clear",
                  "type": "boolean",
                  "optional": true,
                  "description": "Is set to <code>true</code> when this event is fired by clearing the filter."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:filterSelectionChange filterSelectionChange} to attached listeners."
        },
        {
          "name": "fireGrow",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.Timeline",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:grow grow} to attached listeners."
        },
        {
          "name": "fireItemFiltering",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.Timeline",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "item": {
                  "name": "item",
                  "type": "sap.suite.ui.commons.TimelineItem",
                  "optional": true,
                  "description": "Timeline post that is currently being filtered."
                },
                "reasons": {
                  "name": "reasons",
                  "type": "object",
                  "optional": true,
                  "description": "Reasons why the post is being filtered. Empty if the post is not being filtered. There are three properties available in the object: <code>Search</code>, <code>Time</code>, and <code>Data</code>. You can call preventDefault to the event object to prevent the result."
                },
                "dataKeys": {
                  "name": "dataKeys",
                  "type": "object",
                  "optional": true,
                  "description": "Array with keys used for data filtering."
                },
                "timeKeys": {
                  "name": "timeKeys",
                  "type": "object",
                  "optional": true,
                  "description": "An object specifying the start date (<code>from</code>) and the end date (<code>to</code>) of the time range."
                },
                "searchTerm": {
                  "name": "searchTerm",
                  "type": "string",
                  "optional": true,
                  "description": "The text string that has been typed into the search field."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:itemFiltering itemFiltering} to attached listeners."
        },
        {
          "name": "fireSelect",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.Timeline",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "selectedItem": {
                  "name": "selectedItem",
                  "type": "sap.suite.ui.commons.TimelineItem",
                  "optional": true,
                  "description": "The timeline post that is selected."
                },
                "userAction": {
                  "name": "userAction",
                  "type": "boolean",
                  "optional": true,
                  "description": "Indicates whether the selection was triggered by a user action or in any other way. <br>Set to <code>true</code> if the selection was triggered by a user action, for example, by clicking with a mouse or pressing the Enter key. <br>Set to <code>false</code> if the selection was triggered in a different way, for example, by shifting focus back from a Popover element or by pressing an arrow key. <br>For backward compatibility, the <code>select</code> event is fired whenever an item gets focus."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:select select} to attached listeners."
        },
        {
          "name": "fireSuggest",
          "visibility": "protected",
          "since": "1.26.1",
          "returnValue": {
            "type": "sap.suite.ui.commons.Timeline",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "suggestValue": {
                  "name": "suggestValue",
                  "type": "string",
                  "optional": true,
                  "description": "The text string that has been typed into the search field."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:suggest suggest} to attached listeners.",
          "deprecated": {
            "since": "1.46.0",
            "text": "Replaced by {@link sap.collaboration.components.feed.Component}."
          }
        },
        {
          "name": "fireSuggestionItemSelected",
          "visibility": "protected",
          "since": "1.26.1",
          "returnValue": {
            "type": "sap.suite.ui.commons.Timeline",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "selectedItem": {
                  "name": "selectedItem",
                  "type": "sap.ui.core.Item",
                  "optional": true,
                  "description": "The item selected in the suggestions popup."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:suggestionItemSelected suggestionItemSelected} to attached listeners.",
          "deprecated": {
            "since": "1.46.0",
            "text": "Replaced by {@link sap.collaboration.components.feed.Component}."
          }
        },
        {
          "name": "getAggregation",
          "visibility": "protected",
          "returnValue": {
            "description": "the aggregation array in case of 0..n-aggregations or the managed object or null in case of 0..1-aggregations"
          },
          "parameters": [
            {
              "name": "sAggregationName",
              "type": "undefined",
              "optional": false,
              "description": "the name of the aggregation"
            }
          ],
          "description": "An override which exposes hidden aggregations. Hidden aggregations are used by Run Time Adaptation."
        },
        {
          "name": "getAlignment",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.TimelineAlignment",
            "description": "Value of property <code>alignment</code>"
          },
          "description": "Gets current value of property {@link #getAlignment alignment}.\n\nDefines the alignment of timeline posts relative to the timeline axis. This option can be used for single-sided timelines only. If the axisOrientation property is set to <code> Horizontal</code>, the <code>Right</code> value is interpreted as bottom alignment and the <code>Left</code> value as top alignment.\n\nDefault value is <code>Right</code>."
        },
        {
          "name": "getAxisOrientation",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.TimelineAxisOrientation",
            "description": "Value of property <code>axisOrientation</code>"
          },
          "description": "Gets current value of property {@link #getAxisOrientation axisOrientation}.\n\nDefines the orientation of the timeline. Can be set to <code>Vertical</code> or <code>Horizontal</code>.\n\nDefault value is <code>Vertical</code>."
        },
        {
          "name": "getContent",
          "visibility": "public",
          "returnValue": { "type": "sap.suite.ui.commons.TimelineItem[]" },
          "description": "Gets content of aggregation {@link #getContent content}.\n\nList of timeline posts."
        },
        {
          "name": "getCurrentFilter",
          "visibility": "public",
          "returnValue": {
            "type": "Array",
            "description": "List Applied filters"
          },
          "description": "Returns the keys of the currently applied filter criteria as an array of objects, containing filter criteria keys (<code>key</code>) and values (<code>text</code>)."
        },
        {
          "name": "getCustomFilter",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.Control" },
          "description": "Gets content of aggregation {@link #getCustomFilter customFilter}.\n\nA custom filter to be used instead of the default item filter. This control must have an <code>openBy</code> or <code>open</code> function that is used by the timeline to open the control. If the control has both functions, <code>openBy</code> is used."
        },
        {
          "name": "getData",
          "visibility": "public",
          "returnValue": {
            "type": "object",
            "description": "Value of property <code>data</code>"
          },
          "description": "Gets current value of property {@link #getData data}.\n\nData for the Timeline control.",
          "deprecated": {
            "since": "1.46.0",
            "text": "As of version 1.46, this property was replaced by JSONModel context binding."
          }
        },
        {
          "name": "getDateTimePath",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>dateTimePath</code>"
          },
          "description": "Gets current value of property {@link #getDateTimePath dateTimePath}.\n\nPath for dateTime in mode binding. Use this property when you use factory function for <code>TimeLineItem</code> creation. When every item has different path or the <code>datetime</code> is calculated in factory sorting, filtering and searching has to be done manually using events. If not set for factory binding filter and sorting won't work.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "getEnableAllInFilterItem",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>enableAllInFilterItem</code>"
          },
          "description": "Gets current value of property {@link #getEnableAllInFilterItem enableAllInFilterItem}.\n\nEnables to add 'All' at the beginning of the filter list.\n\nDefault value is <code>true</code>.",
          "deprecated": {
            "since": "1.46.0",
            "text": "The filter list now includes a Select All check box, so the All radio button is no longer required. This property is ignored."
          }
        },
        {
          "name": "getEnableBackendFilter",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>enableBackendFilter</code>"
          },
          "description": "Gets current value of property {@link #getEnableBackendFilter enableBackendFilter}.\n\nEnables fetching data from backend instead of deriving filter values from the frontend values (displayed list). As of version 1.46, replaced by {@link sap.suite.ui.commons.Timeline#getEnableModelFilter}.\n\nDefault value is <code>true</code>.",
          "deprecated": {
            "since": "1.46.0",
            "text": "Use the enableModelFilter property instead."
          }
        },
        {
          "name": "getEnableBusyIndicator",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>enableBusyIndicator</code>"
          },
          "description": "Gets current value of property {@link #getEnableBusyIndicator enableBusyIndicator}.\n\nWhen this property is set to <code>true</code>, the timeline displays a busy indicator when loading data. This busy indicator blocks the interaction with the items until the data loading is complete. It is strongly recommended to use this option. Loading data without a busy indicator may confuse the users.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getEnableDoubleSided",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>enableDoubleSided</code>"
          },
          "description": "Gets current value of property {@link #getEnableDoubleSided enableDoubleSided}.\n\nIf set to <code>true</code>, timeline posts are displayed on both sides of the timeline axis.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getEnableModelFilter",
          "visibility": "public",
          "since": "1.46.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>enableModelFilter</code>"
          },
          "description": "Gets current value of property {@link #getEnableModelFilter enableModelFilter}.\n\nEnables filtering directly on the binding level. If set to <code>true</code>, all filters are translated into the filters in the model binding. When the OData model is used, the filtering is performed on the backend side. This option is strongly recommended. If set to <code>false</code>, all entries from the model need to be fetched before they can be filtered on the frontend side. Please be aware that the <code>growingThreshold</code> property determines how many entries can be rendered. Timeline requests all entries from the model before it performs the filtering. Some models may have internal limits for the number of entries that can be used in bindings. Such limits can be set using {@link sap.ui.model.Model#setSizeLimit}.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getEnableScroll",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>enableScroll</code>"
          },
          "description": "Gets current value of property {@link #getEnableScroll enableScroll}.\n\nIf set to <code>true</code>, the Timeline control has its own scroll bar, with the scrolling taking place within the Timeline control itself. Scrolling is required if you want to enable the lazyLoading property.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getEnableSocial",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>enableSocial</code>"
          },
          "description": "Gets current value of property {@link #getEnableSocial enableSocial}.\n\nAdds a <i>Reply</i> link to the posts on a social timeline that allows users to reply to posts. When a user adds a reply, an event is fired. This event should be handled by external code.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getFilterList",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.TimelineFilterListItem[]"
          },
          "description": "Gets content of aggregation {@link #getFilterList filterList}.\n\nCustom filter criteria for the items filter."
        },
        {
          "name": "getFilterTitle",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>filterTitle</code>"
          },
          "description": "Gets current value of property {@link #getFilterTitle filterTitle}.\n\nTitle for the data filter. When a filter is applied, this title is displayed in the message strip along with the filter name."
        },
        {
          "name": "getForceGrowing",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>forceGrowing</code>"
          },
          "description": "Gets current value of property {@link #getForceGrowing forceGrowing}.\n\nIf set to <code>true</code>, the <i>Show More</i> button is displayed when the user scrolls along the timeline axis.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getGroup",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>group</code>"
          },
          "description": "Gets current value of property {@link #getGroup group}.\n\nGroups the timeline posts by year. As of version 1.46, replaced by {@link sap.suite.ui.commons.Timeline#getGroupByType}.\n\nDefault value is <code>false</code>.",
          "deprecated": {
            "since": "1.46.0",
            "text": "Use the groupByType property instead."
          }
        },
        {
          "name": "getGroupBy",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>groupBy</code>"
          },
          "description": "Gets current value of property {@link #getGroupBy groupBy}.\n\nGroups the timeline posts by a field. Only fields that contain date values are supported."
        },
        {
          "name": "getGroupByType",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.TimelineGroupType",
            "description": "Value of property <code>groupByType</code>"
          },
          "description": "Gets current value of property {@link #getGroupByType groupByType}.\n\nGroups the timeline posts by a time period, including year, quarter, month, week, and day. If set to <code>None</code>, no grouping is applied. If you specify a custom grouping function using the {@link sap.suite.ui.commons.Timeline#setCustomGrouping} method, this function overrides the groupByType property settings.\n\nDefault value is <code>None</code>."
        },
        {
          "name": "getGroups",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.Control[]",
            "description": "Timeline groups"
          },
          "description": "Returns all group items."
        },
        {
          "name": "getGrowing",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>growing</code>"
          },
          "description": "Gets current value of property {@link #getGrowing growing}.\n\nIf set to <code>true</code>, the timeline displays a limited number of posts with a button to show more. The displayed posts limit can be set using the growingThreshold property. As of version 1.46, replaced by {@link sap.suite.ui.commons.Timeline#getGrowingThreshold}.\n\nDefault value is <code>true</code>.",
          "deprecated": {
            "since": "1.46.0",
            "text": "Use the growingThreshold property instead, setting it to 0 to disable growing."
          }
        },
        {
          "name": "getGrowingThreshold",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>growingThreshold</code>"
          },
          "description": "Gets current value of property {@link #getGrowingThreshold growingThreshold}.\n\nNumber of posts requested from the server at a time. Each time when the timeline needs to load more posts, it will request exactly this amount. The number of posts displayed in the timeline is increased by this number. If set to <code>0</code>, all posts are fetched and displayed on the initial load.\n\nDefault value is <code>5</code>."
        },
        {
          "name": "getHeight",
          "visibility": "public",
          "since": "1.46.0",
          "returnValue": {
            "type": "sap.ui.core.CSSSize",
            "description": "Value of property <code>height</code>"
          },
          "description": "Gets current value of property {@link #getHeight height}.\n\nSets the height of the Timeline.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "getLazyLoading",
          "visibility": "public",
          "since": "1.46.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>lazyLoading</code>"
          },
          "description": "Gets current value of property {@link #getLazyLoading lazyLoading}.\n\nEnables the Lazy Loading feature that automatically loads more posts as the user scrolls along the timeline axis. This feature works only when the enableScroll property is set to <code>true</code>. See also {@link sap.suite.ui.commons.Timeline#getEnableScroll}.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.Timeline."
        },
        {
          "name": "getNoDataText",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>noDataText</code>"
          },
          "description": "Gets current value of property {@link #getNoDataText noDataText}.\n\nThis text is displayed when the control has no data. The default value is loaded from the component resource bundle."
        },
        {
          "name": "getScrollingFadeout",
          "visibility": "public",
          "since": "1.46.0",
          "returnValue": {
            "type": "sap.suite.ui.commons.TimelineScrollingFadeout",
            "description": "Value of property <code>scrollingFadeout</code>"
          },
          "description": "Gets current value of property {@link #getScrollingFadeout scrollingFadeout}.\n\nIf set to <code>Area</code>, the timeline fades into the visible area margin. If set to <code>AreaWithButtons</code>, the timeline fades into the visible area margin and scroll buttons are displayed. If set to <code>None</code>, the fading effect is not applied. This feature works only when the enableScroll property is set to <code>true</code>. See also {@link sap.suite.ui.commons.Timeline#getEnableScroll}.\n\nDefault value is <code>None</code>.",
          "deprecated": { "since": "1.54.0", "text": "Not Fiori." }
        },
        {
          "name": "getShowFilterBar",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showFilterBar</code>"
          },
          "description": "Gets current value of property {@link #getShowFilterBar showFilterBar}.\n\nSets the visibility of the filter in the timeline toolbar.<br> As of version 1.46, replaced by {@link sap.suite.ui.commons.Timeline#getShowHeaderBar}.\n\nDefault value is <code>true</code>.",
          "deprecated": {
            "since": "1.46.0",
            "text": "Use the showHeaderBar property instead."
          }
        },
        {
          "name": "getShowHeaderBar",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showHeaderBar</code>"
          },
          "description": "Gets current value of property {@link #getShowHeaderBar showHeaderBar}.\n\nShows the timeline toolbar with search and filter options.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getShowIcons",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showIcons</code>"
          },
          "description": "Gets current value of property {@link #getShowIcons showIcons}.\n\nShows an icon on the timeline axis as an anchor for each entry node. If set to <code>false</code>, all icons are replaced by dots.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getShowItemFilter",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showItemFilter</code>"
          },
          "description": "Gets current value of property {@link #getShowItemFilter showItemFilter}.\n\nShow item filter in filter area.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getShowSearch",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showSearch</code>"
          },
          "description": "Gets current value of property {@link #getShowSearch showSearch}.\n\nSets the search field visibility on the timeline toolbar.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getShowSort",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showSort</code>"
          },
          "description": "Gets current value of property {@link #getShowSort showSort}.\n\nShow sort icon in the header bar. For displaying this icon, sorting have to be allowed.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getShowSuggestion",
          "visibility": "public",
          "since": "1.26.1",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showSuggestion</code>"
          },
          "description": "Gets current value of property {@link #getShowSuggestion showSuggestion}.\n\nIf set to <code>true</code>, a suggest event is fired when the user enters text into the search field. Changing the suggestionItems aggregation in the suggest event listener will display suggestions inside a popup. As of version 1.46, replaced by {@link sap.collaboration.components.feed.Component}.\n\nDefault value is <code>true</code>.",
          "deprecated": {
            "since": "1.46.0",
            "text": "Use the Group Feed Component instead."
          }
        },
        {
          "name": "getShowTimeFilter",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showTimeFilter</code>"
          },
          "description": "Gets current value of property {@link #getShowTimeFilter showTimeFilter}.\n\nShows the time range filter in the filter menu.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getSort",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>sort</code>"
          },
          "description": "Gets current value of property {@link #getSort sort}.\n\nIndicates whether the data should be sorted. If set to <code>false</code> the data model's default sorting is applied.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getSortOldestFirst",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>sortOldestFirst</code>"
          },
          "description": "Gets current value of property {@link #getSortOldestFirst sortOldestFirst}.\n\nWhether the oldest item will be displayed first.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getSuggestionItems",
          "visibility": "public",
          "returnValue": { "type": "sap.m.StandardListItem[]" },
          "description": "Gets content of aggregation {@link #getSuggestionItems suggestionItems}.\n\nItems for suggestions. As of version 1.46, replaced by {@link sap.collaboration.components.feed.Component}.",
          "deprecated": {
            "since": "1.46.0",
            "text": "Use the Group Feed Component instead."
          }
        },
        {
          "name": "getTextHeight",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>textHeight</code>"
          },
          "description": "Gets current value of property {@link #getTextHeight textHeight}.\n\nHeight of the timeline posts. It can be set to either of the following types of values: <ul> <li> Automatic &ndash; If set to <code>automatic</code>, the optimal post height is calculated automatically to fit the timeline height specified by the height parameter. This option works only in horizontal timelines and only when the timeline height is defined. In vertical timelines, this setting is ignored. </li> <li> Number &ndash; If set to a number, a corresponding number of text lines is displayed in every post.</li> <li> Pixels &ndash; If set to a number followed by <code>px</code>, such as <code>50px</code>, the closest number in lines is calculated and applied to the timeline posts, so that the post height corresponds to the specified number of pixels and the text lines are not cut off in the middle of a line.</li> <li> Any other valid {@link sap.ui.core.CSSSize CSSSize} value that is inserted into the text wrapper without being changed. </li> </ul>\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "getWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.CSSSize",
            "description": "Value of property <code>width</code>"
          },
          "description": "Gets current value of property {@link #getWidth width}.\n\nSets the width of the Timeline.\n\nDefault value is <code>100%</code>."
        },
        {
          "name": "indexOfContent",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oContent",
              "type": "sap.suite.ui.commons.TimelineItem",
              "optional": false,
              "description": "The content whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.suite.ui.commons.TimelineItem</code> in the aggregation {@link #getContent content}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "indexOfFilterList",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oFilterList",
              "type": "sap.suite.ui.commons.TimelineFilterListItem",
              "optional": false,
              "description": "The filterList whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.suite.ui.commons.TimelineFilterListItem</code> in the aggregation {@link #getFilterList filterList}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "indexOfSuggestionItem",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oSuggestionItem",
              "type": "sap.m.StandardListItem",
              "optional": false,
              "description": "The suggestionItem whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.m.StandardListItem</code> in the aggregation {@link #getSuggestionItems suggestionItems}. and returns its index if found or -1 otherwise.",
          "deprecated": {
            "since": "1.46.0",
            "text": "Use the Group Feed Component instead."
          }
        },
        {
          "name": "insertContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.Timeline",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oContent",
              "type": "sap.suite.ui.commons.TimelineItem",
              "optional": false,
              "description": "The content to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the content should be inserted at; for a negative value of <code>iIndex</code>, the content is inserted at position 0; for a value greater than the current size of the aggregation, the content is inserted at the last position"
            }
          ],
          "description": "Inserts a content into the aggregation {@link #getContent content}."
        },
        {
          "name": "insertFilterList",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.Timeline",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oFilterList",
              "type": "sap.suite.ui.commons.TimelineFilterListItem",
              "optional": false,
              "description": "The filterList to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the filterList should be inserted at; for a negative value of <code>iIndex</code>, the filterList is inserted at position 0; for a value greater than the current size of the aggregation, the filterList is inserted at the last position"
            }
          ],
          "description": "Inserts a filterList into the aggregation {@link #getFilterList filterList}."
        },
        {
          "name": "insertSuggestionItem",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.Timeline",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oSuggestionItem",
              "type": "sap.m.StandardListItem",
              "optional": false,
              "description": "The suggestionItem to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the suggestionItem should be inserted at; for a negative value of <code>iIndex</code>, the suggestionItem is inserted at position 0; for a value greater than the current size of the aggregation, the suggestionItem is inserted at the last position"
            }
          ],
          "description": "Inserts a suggestionItem into the aggregation {@link #getSuggestionItems suggestionItems}.",
          "deprecated": {
            "since": "1.46.0",
            "text": "Use the Group Feed Component instead."
          }
        },
        {
          "name": "removeAllContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.TimelineItem[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getContent content}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeAllFilterList",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.TimelineFilterListItem[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getFilterList filterList}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeAllSuggestionItems",
          "visibility": "public",
          "returnValue": {
            "type": "sap.m.StandardListItem[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getSuggestionItems suggestionItems}.\n\nAdditionally, it unregisters them from the hosting UIArea.",
          "deprecated": {
            "since": "1.46.0",
            "text": "Use the Group Feed Component instead."
          }
        },
        {
          "name": "removeContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.TimelineItem",
            "description": "The removed content or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vContent",
              "type": "int|string|sap.suite.ui.commons.TimelineItem",
              "optional": false,
              "description": "The content to remove or its index or id"
            }
          ],
          "description": "Removes a content from the aggregation {@link #getContent content}."
        },
        {
          "name": "removeFilterList",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.TimelineFilterListItem",
            "description": "The removed filterList or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vFilterList",
              "type": "int|string|sap.suite.ui.commons.TimelineFilterListItem",
              "optional": false,
              "description": "The filterList to remove or its index or id"
            }
          ],
          "description": "Removes a filterList from the aggregation {@link #getFilterList filterList}."
        },
        {
          "name": "removeSuggestionItem",
          "visibility": "public",
          "returnValue": {
            "type": "sap.m.StandardListItem",
            "description": "The removed suggestionItem or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vSuggestionItem",
              "type": "int|string|sap.m.StandardListItem",
              "optional": false,
              "description": "The suggestionItem to remove or its index or id"
            }
          ],
          "description": "Removes a suggestionItem from the aggregation {@link #getSuggestionItems suggestionItems}.",
          "deprecated": {
            "since": "1.46.0",
            "text": "Use the Group Feed Component instead."
          }
        },
        {
          "name": "reset",
          "visibility": "public",
          "description": "Reset all internal settings. Use if you want the same instance with different data."
        },
        {
          "name": "resetTimeLimits",
          "visibility": "public",
          "description": "Resets the start date and end date of the timeline, so that they are calculated once again. Call this method when changing the date of a timeline post."
        },
        {
          "name": "setAlignment",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.Timeline",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sAlignment",
              "type": "sap.suite.ui.commons.TimelineAlignment",
              "optional": false,
              "description": "New value for property <code>alignment</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getAlignment alignment}.\n\nDefines the alignment of timeline posts relative to the timeline axis. This option can be used for single-sided timelines only. If the axisOrientation property is set to <code> Horizontal</code>, the <code>Right</code> value is interpreted as bottom alignment and the <code>Left</code> value as top alignment.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Right</code>."
        },
        {
          "name": "setAxisOrientation",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.Timeline",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sAxisOrientation",
              "type": "sap.suite.ui.commons.TimelineAxisOrientation",
              "optional": false,
              "description": "New value for property <code>axisOrientation</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getAxisOrientation axisOrientation}.\n\nDefines the orientation of the timeline. Can be set to <code>Vertical</code> or <code>Horizontal</code>.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Vertical</code>."
        },
        {
          "name": "setCurrentFilter",
          "visibility": "public",
          "parameters": [
            {
              "name": "aSelectedItemKeys",
              "type": "string[]",
              "optional": false,
              "description": "Filter criteria keys to select. Can be also used as a single value."
            }
          ],
          "description": "Sets filter criteria keys."
        },
        {
          "name": "setCurrentSearch",
          "visibility": "public",
          "parameters": [
            {
              "name": "sSearchTerm",
              "type": "string",
              "optional": false,
              "description": "Search term value."
            }
          ],
          "description": "Sets values for the search field."
        },
        {
          "name": "setCurrentTimeFilter",
          "visibility": "public",
          "parameters": [
            {
              "name": "mArguments",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "from": {
                  "name": "from",
                  "type": "Date",
                  "optional": true,
                  "description": "Start date of the time range filter."
                },
                "to": {
                  "name": "to",
                  "type": "Date",
                  "optional": true,
                  "description": "End date of the time range filter."
                },
                "type": {
                  "name": "type",
                  "type": "sap.suite.ui.commons.TimelineGroupType",
                  "optional": true,
                  "description": "The step of the time range filter scale. Can be set to day, month, quarter, or year. Week is currently not supported."
                }
              },
              "description": "Time filter arguments"
            }
          ],
          "description": "Sets values for the time range filter."
        },
        {
          "name": "setCustomFilter",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.Timeline",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oCustomFilter",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The customFilter to set"
            }
          ],
          "description": "Sets the aggregated {@link #getCustomFilter customFilter}."
        },
        {
          "name": "setCustomFilterMessage",
          "visibility": "public",
          "parameters": [
            {
              "name": "sMessage",
              "type": "string",
              "optional": false,
              "description": "Message to append."
            }
          ],
          "description": "Sets a custom message for the filter message strip. This message is appended to the default filter text."
        },
        {
          "name": "setCustomGrouping",
          "visibility": "public",
          "parameters": [
            {
              "name": "fnGroupBy",
              "type": "function",
              "optional": false,
              "description": "Grouping function."
            }
          ],
          "description": "Sets custom grouping function. This function must have one parameter that is a date object. This date object is used for grouping timeline posts. The function should return an object that has three properties: <ul> <li> <code>key</code> &ndash; The key of the related group. </li> <li> <code>title</code> &ndash; The title of the related group. </li> <li> <code>date</code> &ndash; The same value as the one entered in the input parameter. </li> </ul>"
        },
        {
          "name": "setCustomMessage",
          "visibility": "public",
          "parameters": [
            {
              "name": "sMsg",
              "type": "string",
              "optional": false,
              "description": "Message text."
            }
          ],
          "description": "Sets a custom message that is displayed below the timeline's header."
        },
        {
          "name": "setCustomModelFilter",
          "visibility": "public",
          "parameters": [
            {
              "name": "sFilterId",
              "type": "string",
              "optional": false,
              "description": "A unique filter ID that the caller can use to manipulate the filter after it has been created, for example, to remove it."
            },
            {
              "name": "oFilter",
              "type": "sap.ui.model.Filter",
              "optional": false,
              "description": "Filter object."
            }
          ],
          "description": "Adds a custom filter in addition to the default filters: items filter, time range filter, and search."
        },
        {
          "name": "setData",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.Timeline",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": false,
              "description": "New value for property <code>data</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getData data}.\n\nData for the Timeline control.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.",
          "deprecated": {
            "since": "1.46.0",
            "text": "As of version 1.46, this property was replaced by JSONModel context binding."
          }
        },
        {
          "name": "setDateTimePath",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.Timeline",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sDateTimePath",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>dateTimePath</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getDateTimePath dateTimePath}.\n\nPath for dateTime in mode binding. Use this property when you use factory function for <code>TimeLineItem</code> creation. When every item has different path or the <code>datetime</code> is calculated in factory sorting, filtering and searching has to be done manually using events. If not set for factory binding filter and sorting won't work.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "setEnableAllInFilterItem",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.Timeline",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bEnableAllInFilterItem",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>enableAllInFilterItem</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getEnableAllInFilterItem enableAllInFilterItem}.\n\nEnables to add 'All' at the beginning of the filter list.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>.",
          "deprecated": {
            "since": "1.46.0",
            "text": "The filter list now includes a Select All check box, so the All radio button is no longer required. This property is ignored."
          }
        },
        {
          "name": "setEnableBackendFilter",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.Timeline",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bEnableBackendFilter",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>enableBackendFilter</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getEnableBackendFilter enableBackendFilter}.\n\nEnables fetching data from backend instead of deriving filter values from the frontend values (displayed list). As of version 1.46, replaced by {@link sap.suite.ui.commons.Timeline#getEnableModelFilter}.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>.",
          "deprecated": {
            "since": "1.46.0",
            "text": "Use the enableModelFilter property instead."
          }
        },
        {
          "name": "setEnableBusyIndicator",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.Timeline",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bEnableBusyIndicator",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>enableBusyIndicator</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getEnableBusyIndicator enableBusyIndicator}.\n\nWhen this property is set to <code>true</code>, the timeline displays a busy indicator when loading data. This busy indicator blocks the interaction with the items until the data loading is complete. It is strongly recommended to use this option. Loading data without a busy indicator may confuse the users.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setEnableDoubleSided",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.Timeline",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bEnableDoubleSided",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>enableDoubleSided</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getEnableDoubleSided enableDoubleSided}.\n\nIf set to <code>true</code>, timeline posts are displayed on both sides of the timeline axis.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setEnableModelFilter",
          "visibility": "public",
          "since": "1.46.0",
          "returnValue": {
            "type": "sap.suite.ui.commons.Timeline",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bEnableModelFilter",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>enableModelFilter</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getEnableModelFilter enableModelFilter}.\n\nEnables filtering directly on the binding level. If set to <code>true</code>, all filters are translated into the filters in the model binding. When the OData model is used, the filtering is performed on the backend side. This option is strongly recommended. If set to <code>false</code>, all entries from the model need to be fetched before they can be filtered on the frontend side. Please be aware that the <code>growingThreshold</code> property determines how many entries can be rendered. Timeline requests all entries from the model before it performs the filtering. Some models may have internal limits for the number of entries that can be used in bindings. Such limits can be set using {@link sap.ui.model.Model#setSizeLimit}.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setEnableScroll",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.Timeline",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bEnableScroll",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>enableScroll</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getEnableScroll enableScroll}.\n\nIf set to <code>true</code>, the Timeline control has its own scroll bar, with the scrolling taking place within the Timeline control itself. Scrolling is required if you want to enable the lazyLoading property.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setEnableSocial",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.Timeline",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bEnableSocial",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>enableSocial</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getEnableSocial enableSocial}.\n\nAdds a <i>Reply</i> link to the posts on a social timeline that allows users to reply to posts. When a user adds a reply, an event is fired. This event should be handled by external code.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setFilterTitle",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.Timeline",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sFilterTitle",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>filterTitle</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getFilterTitle filterTitle}.\n\nTitle for the data filter. When a filter is applied, this title is displayed in the message strip along with the filter name.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setForceGrowing",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.Timeline",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bForceGrowing",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>forceGrowing</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getForceGrowing forceGrowing}.\n\nIf set to <code>true</code>, the <i>Show More</i> button is displayed when the user scrolls along the timeline axis.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setGroup",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.Timeline",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bGroup",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>group</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getGroup group}.\n\nGroups the timeline posts by year. As of version 1.46, replaced by {@link sap.suite.ui.commons.Timeline#getGroupByType}.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>.",
          "deprecated": {
            "since": "1.46.0",
            "text": "Use the groupByType property instead."
          }
        },
        {
          "name": "setGroupBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.Timeline",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sGroupBy",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>groupBy</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getGroupBy groupBy}.\n\nGroups the timeline posts by a field. Only fields that contain date values are supported.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setGroupByType",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.Timeline",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sGroupByType",
              "type": "sap.suite.ui.commons.TimelineGroupType",
              "optional": false,
              "description": "New value for property <code>groupByType</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getGroupByType groupByType}.\n\nGroups the timeline posts by a time period, including year, quarter, month, week, and day. If set to <code>None</code>, no grouping is applied. If you specify a custom grouping function using the {@link sap.suite.ui.commons.Timeline#setCustomGrouping} method, this function overrides the groupByType property settings.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>None</code>."
        },
        {
          "name": "setGrowing",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.Timeline",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bGrowing",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>growing</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getGrowing growing}.\n\nIf set to <code>true</code>, the timeline displays a limited number of posts with a button to show more. The displayed posts limit can be set using the growingThreshold property. As of version 1.46, replaced by {@link sap.suite.ui.commons.Timeline#getGrowingThreshold}.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>.",
          "deprecated": {
            "since": "1.46.0",
            "text": "Use the growingThreshold property instead, setting it to 0 to disable growing."
          }
        },
        {
          "name": "setGrowingThreshold",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.Timeline",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iGrowingThreshold",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>growingThreshold</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getGrowingThreshold growingThreshold}.\n\nNumber of posts requested from the server at a time. Each time when the timeline needs to load more posts, it will request exactly this amount. The number of posts displayed in the timeline is increased by this number. If set to <code>0</code>, all posts are fetched and displayed on the initial load.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>5</code>."
        },
        {
          "name": "setHeight",
          "visibility": "public",
          "since": "1.46.0",
          "returnValue": {
            "type": "sap.suite.ui.commons.Timeline",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sHeight",
              "type": "sap.ui.core.CSSSize",
              "optional": false,
              "description": "New value for property <code>height</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getHeight height}.\n\nSets the height of the Timeline.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "setLazyLoading",
          "visibility": "public",
          "since": "1.46.0",
          "returnValue": {
            "type": "sap.suite.ui.commons.Timeline",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bLazyLoading",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>lazyLoading</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getLazyLoading lazyLoading}.\n\nEnables the Lazy Loading feature that automatically loads more posts as the user scrolls along the timeline axis. This feature works only when the enableScroll property is set to <code>true</code>. See also {@link sap.suite.ui.commons.Timeline#getEnableScroll}.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setModelFilter",
          "visibility": "public",
          "parameters": [
            {
              "name": "mArguments",
              "type": "object",
              "optional": false,
              "parameterProperties": {
                "type": {
                  "name": "type",
                  "type": "sap.suite.ui.commons.TimelineFilterType",
                  "optional": false,
                  "description": "Type of the filter to replace."
                },
                "filter": {
                  "name": "filter",
                  "type": "sap.ui.model.Filter",
                  "optional": false,
                  "description": "Filter object to specify the filter criteria."
                },
                "refresh": {
                  "name": "refresh",
                  "type": "boolean",
                  "optional": false,
                  "description": "If set to <code>true</code> (default), filters are automatically recreated, and the content is updated."
                }
              },
              "description": "The object containing settings"
            }
          ],
          "description": "Replaces one of the default filters: items filter, time range filter, or search."
        },
        {
          "name": "setModelFilterMessage",
          "visibility": "public",
          "parameters": [
            {
              "name": "sType",
              "type": "sap.suite.ui.commons.TimelineFilterType",
              "optional": false,
              "description": "Filter type. Supports only items filter (<code>Data</code>) and time range filter (<code>Time</code>)."
            },
            {
              "name": "sMessage",
              "type": "string",
              "optional": false,
              "description": "The message that should replace the default message."
            }
          ],
          "description": "Sets the message displayed in the filter message strip. This message overwrites the default filter message."
        },
        {
          "name": "setNoDataText",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.Timeline",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sNoDataText",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>noDataText</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getNoDataText noDataText}.\n\nThis text is displayed when the control has no data. The default value is loaded from the component resource bundle.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setScrollingFadeout",
          "visibility": "public",
          "since": "1.46.0",
          "returnValue": {
            "type": "sap.suite.ui.commons.Timeline",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sScrollingFadeout",
              "type": "sap.suite.ui.commons.TimelineScrollingFadeout",
              "optional": false,
              "description": "New value for property <code>scrollingFadeout</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getScrollingFadeout scrollingFadeout}.\n\nIf set to <code>Area</code>, the timeline fades into the visible area margin. If set to <code>AreaWithButtons</code>, the timeline fades into the visible area margin and scroll buttons are displayed. If set to <code>None</code>, the fading effect is not applied. This feature works only when the enableScroll property is set to <code>true</code>. See also {@link sap.suite.ui.commons.Timeline#getEnableScroll}.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>None</code>.",
          "deprecated": { "since": "1.54.0", "text": "Not Fiori." }
        },
        {
          "name": "setShowFilterBar",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.Timeline",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowFilterBar",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showFilterBar</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowFilterBar showFilterBar}.\n\nSets the visibility of the filter in the timeline toolbar.<br> As of version 1.46, replaced by {@link sap.suite.ui.commons.Timeline#getShowHeaderBar}.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>.",
          "deprecated": {
            "since": "1.46.0",
            "text": "Use the showHeaderBar property instead."
          }
        },
        {
          "name": "setShowHeaderBar",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.Timeline",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowHeaderBar",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showHeaderBar</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowHeaderBar showHeaderBar}.\n\nShows the timeline toolbar with search and filter options.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setShowIcons",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.Timeline",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowIcons",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showIcons</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowIcons showIcons}.\n\nShows an icon on the timeline axis as an anchor for each entry node. If set to <code>false</code>, all icons are replaced by dots.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setShowItemFilter",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.Timeline",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowItemFilter",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showItemFilter</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowItemFilter showItemFilter}.\n\nShow item filter in filter area.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setShowSearch",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.Timeline",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowSearch",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showSearch</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowSearch showSearch}.\n\nSets the search field visibility on the timeline toolbar.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setShowSort",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.Timeline",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowSort",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showSort</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowSort showSort}.\n\nShow sort icon in the header bar. For displaying this icon, sorting have to be allowed.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setShowSuggestion",
          "visibility": "public",
          "since": "1.26.1",
          "returnValue": {
            "type": "sap.suite.ui.commons.Timeline",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowSuggestion",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showSuggestion</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowSuggestion showSuggestion}.\n\nIf set to <code>true</code>, a suggest event is fired when the user enters text into the search field. Changing the suggestionItems aggregation in the suggest event listener will display suggestions inside a popup. As of version 1.46, replaced by {@link sap.collaboration.components.feed.Component}.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>.",
          "deprecated": {
            "since": "1.46.0",
            "text": "Use the Group Feed Component instead."
          }
        },
        {
          "name": "setShowTimeFilter",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.Timeline",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowTimeFilter",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showTimeFilter</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowTimeFilter showTimeFilter}.\n\nShows the time range filter in the filter menu.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setSort",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.Timeline",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bSort",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>sort</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSort sort}.\n\nIndicates whether the data should be sorted. If set to <code>false</code> the data model's default sorting is applied.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setSortOldestFirst",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.Timeline",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bSortOldestFirst",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>sortOldestFirst</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSortOldestFirst sortOldestFirst}.\n\nWhether the oldest item will be displayed first.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setTextHeight",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.Timeline",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sTextHeight",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>textHeight</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getTextHeight textHeight}.\n\nHeight of the timeline posts. It can be set to either of the following types of values: <ul> <li> Automatic &ndash; If set to <code>automatic</code>, the optimal post height is calculated automatically to fit the timeline height specified by the height parameter. This option works only in horizontal timelines and only when the timeline height is defined. In vertical timelines, this setting is ignored. </li> <li> Number &ndash; If set to a number, a corresponding number of text lines is displayed in every post.</li> <li> Pixels &ndash; If set to a number followed by <code>px</code>, such as <code>50px</code>, the closest number in lines is calculated and applied to the timeline posts, so that the post height corresponds to the specified number of pixels and the text lines are not cut off in the middle of a line.</li> <li> Any other valid {@link sap.ui.core.CSSSize CSSSize} value that is inserted into the text wrapper without being changed. </li> </ul>\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "setWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.Timeline",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sWidth",
              "type": "sap.ui.core.CSSSize",
              "optional": false,
              "description": "New value for property <code>width</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getWidth width}.\n\nSets the width of the Timeline.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>100%</code>."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.suite.ui.commons.TimelineAlignment",
      "basename": "TimelineAlignment",
      "resource": "sap/suite/ui/commons/library.js",
      "module": "sap/suite/ui/commons/library",
      "export": "TimelineAlignment",
      "static": true,
      "visibility": "public",
      "description": "The alignment of timeline posts relative to the timeline axis.",
      "ui5-metamodel": true,
      "properties": [
        {
          "name": "Bottom",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Entries are displayed below the timeline axis.<br> In a vertical timeline, entries are displayed to the right of the timeline axis. Synonym for Right."
        },
        {
          "name": "Left",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Entries are displayed to the left of the timeline axis.<br> In a horizontal timeline, entries are displayed above the timeline axis. Synonym for Top."
        },
        {
          "name": "Right",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Entries are displayed to the right of the timeline axis.<br> In a horizontal timeline, entries are displayed below the timeline axis. Synonym for Bottom."
        },
        {
          "name": "Top",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Entries are displayed above the timeline axis.<br> In a vertical timeline, entries are displayed to the left of the timeline axis. Synonym for Left."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.suite.ui.commons.TimelineAxisOrientation",
      "basename": "TimelineAxisOrientation",
      "resource": "sap/suite/ui/commons/library.js",
      "module": "sap/suite/ui/commons/library",
      "export": "TimelineAxisOrientation",
      "static": true,
      "visibility": "public",
      "description": "Defines the orientation of the timeline axis.",
      "ui5-metamodel": true,
      "properties": [
        {
          "name": "Horizontal",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Horizontal timeline."
        },
        {
          "name": "Vertical",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Vertical timeline."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.TimelineFilterListItem",
      "basename": "TimelineFilterListItem",
      "resource": "sap/suite/ui/commons/TimelineFilterListItem.js",
      "module": "sap/suite/ui/commons/TimelineFilterListItem",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.core.Control",
      "description": "Provides a filter criteria list for the items filter in the Timeline control.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "key",
            "type": "string",
            "defaultValue": null,
            "group": "Data",
            "visibility": "public",
            "description": "A key for a filter criterion. Each filter criterion must have a unique key.",
            "methods": ["getKey", "setKey"]
          },
          {
            "name": "text",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "A textual label for the filter criterion. This text is displayed in the filter criteria list in the UI.",
            "methods": ["getText", "setText"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new TimelineFilterListItem.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.TimelineFilterListItem with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "getKey",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>key</code>"
          },
          "description": "Gets current value of property {@link #getKey key}.\n\nA key for a filter criterion. Each filter criterion must have a unique key."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.TimelineFilterListItem."
        },
        {
          "name": "getText",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>text</code>"
          },
          "description": "Gets current value of property {@link #getText text}.\n\nA textual label for the filter criterion. This text is displayed in the filter criteria list in the UI."
        },
        {
          "name": "setKey",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.TimelineFilterListItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sKey",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>key</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getKey key}.\n\nA key for a filter criterion. Each filter criterion must have a unique key.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setText",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.TimelineFilterListItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sText",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>text</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getText text}.\n\nA textual label for the filter criterion. This text is displayed in the filter criteria list in the UI.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.suite.ui.commons.TimelineFilterType",
      "basename": "TimelineFilterType",
      "resource": "sap/suite/ui/commons/library.js",
      "module": "sap/suite/ui/commons/library",
      "export": "TimelineFilterType",
      "static": true,
      "visibility": "public",
      "description": "Filter type for the timeline.",
      "ui5-metamodel": true,
      "properties": [
        {
          "name": "Data",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Items filter based on data, defined by the {@link sap.suite.ui.commons.TimelineItem#getFilterValue filterValue} property or by a custom value."
        },
        {
          "name": "Search",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Search results filter."
        },
        {
          "name": "Time",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Time range filter, defined by the start date (<code>from</code>) and end date (<code>to</code>) of the time range."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.suite.ui.commons.TimelineGroupType",
      "basename": "TimelineGroupType",
      "resource": "sap/suite/ui/commons/library.js",
      "module": "sap/suite/ui/commons/library",
      "export": "TimelineGroupType",
      "static": true,
      "visibility": "public",
      "description": "Type of grouping for timeline entries.",
      "ui5-metamodel": true,
      "properties": [
        {
          "name": "Day",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Data is grouped by day."
        },
        {
          "name": "Month",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Data is grouped by month."
        },
        {
          "name": "None",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "No grouping is used."
        },
        {
          "name": "Quarter",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Data is grouped by quarter."
        },
        {
          "name": "Week",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Data is grouped by week."
        },
        {
          "name": "Year",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Data is grouped by year."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.TimelineItem",
      "basename": "TimelineItem",
      "resource": "sap/suite/ui/commons/TimelineItem.js",
      "module": "sap/suite/ui/commons/TimelineItem",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.core.Control",
      "description": "An entry posted on the timeline.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "dateTime",
            "type": "any",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Date and time value of the timeline post. This value must be in one of the following formats: <ul> <li> A valid instance of the <code>Date</code> object. </li> <li> An integer representing Unix time (also known as POSIX or Epoch time) in milliseconds. </li> <li> A string with an integer representing Unix time in milliseconds. </li> <li> A string that contains <code>Date([number])</code>, where <code>[number]</code> represents Unix time in milliseconds. </li> </ul> If this property has any other format, the timeline will try to parse it using <code>Date.parse</code>. It is not recommended to use this functionality, as different web browsers implement this function differently, which may lead to unpredictable behavior.",
            "methods": ["getDateTime", "setDateTime"]
          },
          {
            "name": "filterValue",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Text for the items filter name. This text will be used as the name of the items filter in the filter popover.",
            "methods": ["getFilterValue", "setFilterValue"]
          },
          {
            "name": "icon",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Icon on the timeline axis that corresponds to the point in time when the entry was posted. Posts can be displayed in chronological or reverse chronological order.",
            "methods": ["getIcon", "setIcon"]
          },
          {
            "name": "iconTooltip",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Tooltip for an icon displayed on the timeline axis.",
            "methods": ["getIconTooltip", "setIconTooltip"]
          },
          {
            "name": "useIconTooltip",
            "type": "boolean",
            "defaultValue": true,
            "group": "Accessibility",
            "visibility": "public",
            "description": "Decides whether a default Icon tooltip should be used if no tooltip is set.",
            "methods": ["getUseIconTooltip", "setUseIconTooltip"]
          },
          {
            "name": "maxCharacters",
            "type": "int",
            "defaultValue": null,
            "group": "Behavior",
            "visibility": "public",
            "description": "The expand and collapse feature is set by default and uses 300 characters on mobile devices and 500 characters on desktop computers as limits. Based on these values, the text of the timeline post is collapsed once it reaches these character limits. In this case, only the specified number of characters is displayed. By clicking the More link, the entire text can be displayed. Clicking Less collapses the text. The application can set the value according to its needs.",
            "methods": ["getMaxCharacters", "setMaxCharacters"]
          },
          {
            "name": "replyCount",
            "type": "int",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Number of replies to a timeline post.",
            "methods": ["getReplyCount", "setReplyCount"]
          },
          {
            "name": "status",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Indicates the post status. The status affects the post's icon color. Supported values: <ul> <li> <code>Information</code> </li> <li> <code>Success</code> </li> <li> <code>Warning</code> </li> <li> <code>Error</code> </li> </ul>",
            "methods": ["getStatus", "setStatus"]
          },
          {
            "name": "title",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Text shown in the post title right after the user name.",
            "methods": ["getTitle", "setTitle"]
          },
          {
            "name": "text",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Text shown inside the timeline post.",
            "methods": ["getText", "setText"]
          },
          {
            "name": "userName",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "User name shown in the post title.",
            "methods": ["getUserName", "setUserName"]
          },
          {
            "name": "userNameClickable",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "description": "Makes the user name clickable. Clicking the name fires a userNameClicked event.",
            "methods": ["getUserNameClickable", "setUserNameClickable"]
          },
          {
            "name": "userPicture",
            "type": "sap.ui.core.URI",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Picture shown next to the user name.",
            "methods": ["getUserPicture", "setUserPicture"]
          }
        ],
        "aggregations": [
          {
            "name": "customAction",
            "singularName": "customAction",
            "type": "sap.ui.core.CustomData",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Custom actions displayed as links in the links section of the post. The key must be unique for each link. Values are used as labels for the link. When a user clicks the link, a customActionClicked event is fired.",
            "methods": [
              "getCustomAction",
              "destroyCustomAction",
              "insertCustomAction",
              "addCustomAction",
              "removeCustomAction",
              "indexOfCustomAction",
              "removeAllCustomAction"
            ]
          },
          {
            "name": "customReply",
            "singularName": "customReply",
            "type": "sap.ui.core.Control",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "A UI5 control that acts as a custom reply dialog. It is used instead of the default reply dialog that is displayed when the user clicks the Reply link. Supports UI5 controls that have an openBy method, for example, the Popup control.",
            "methods": [
              "getCustomReply",
              "destroyCustomReply",
              "setCustomReply"
            ]
          },
          {
            "name": "embeddedControl",
            "singularName": "embeddedControl",
            "type": "sap.ui.core.Control",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "A UI5 control that is displayed as a timeline post's content instead of the default content (text). Examples of such a control include the Panel control and the List control.",
            "methods": [
              "getEmbeddedControl",
              "destroyEmbeddedControl",
              "setEmbeddedControl"
            ]
          },
          {
            "name": "replyList",
            "singularName": "replyList",
            "type": "sap.m.List",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "A list of replies related to the post.",
            "methods": ["getReplyList", "destroyReplyList", "setReplyList"]
          },
          {
            "name": "suggestionItems",
            "singularName": "suggestionItem",
            "type": "sap.m.StandardListItem",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Suggested posts.<br> As of version 1.46, replaced by {@link sap.collaboration.components.feed.Component}.",
            "deprecated": {
              "since": "1.46.0",
              "text": "Use the Group Feed Component instead."
            },
            "methods": [
              "getSuggestionItems",
              "destroySuggestionItems",
              "insertSuggestionItem",
              "addSuggestionItem",
              "removeSuggestionItem",
              "indexOfSuggestionItem",
              "removeAllSuggestionItems"
            ]
          }
        ],
        "defaultAggregation": "embeddedControl",
        "events": [
          {
            "name": "userNameClicked",
            "visibility": "public",
            "description": "This event is fired when a user name is clicked in the post's header section.",
            "parameters": {
              "uiElement": {
                "name": "uiElement",
                "type": "sap.ui.core.Control",
                "description": "A clickable UI element representing the user name."
              }
            },
            "methods": [
              "attachUserNameClicked",
              "detachUserNameClicked",
              "fireUserNameClicked"
            ]
          },
          {
            "name": "replyPost",
            "visibility": "public",
            "description": "This event is fired when the Reply button is clicked in the links section of a timeline post.",
            "parameters": {
              "value": {
                "name": "value",
                "type": "string",
                "description": "Content of the reply to the post."
              }
            },
            "methods": ["attachReplyPost", "detachReplyPost", "fireReplyPost"]
          },
          {
            "name": "replyListOpen",
            "visibility": "public",
            "description": "This event is fired when the Reply link is clicked to open the reply dialog.",
            "methods": [
              "attachReplyListOpen",
              "detachReplyListOpen",
              "fireReplyListOpen"
            ]
          },
          {
            "name": "customActionClicked",
            "visibility": "public",
            "description": "Fired when custom action link is clicked.",
            "parameters": {
              "value": {
                "name": "value",
                "type": "string",
                "description": "Value of the custom action."
              },
              "key": {
                "name": "key",
                "type": "string",
                "description": "Key of the custom action."
              },
              "linkObj": {
                "name": "linkObj",
                "type": "sap.m.Link",
                "description": "Link on which the user clicked."
              }
            },
            "methods": [
              "attachCustomActionClicked",
              "detachCustomActionClicked",
              "fireCustomActionClicked"
            ]
          },
          {
            "name": "suggest",
            "visibility": "public",
            "since": "1.28.1",
            "description": "This event is fired when the user types text into the search field and showSuggestion is set to true. Changing the suggestItems aggregation will show the suggestions inside a popup.<br> As of version 1.46, replaced by {@link sap.collaboration.components.feed.Component}.",
            "deprecated": {
              "since": "1.46.0",
              "text": "Use the Group Feed Component instead."
            },
            "parameters": {
              "suggestValue": {
                "name": "suggestValue",
                "type": "string",
                "description": "The current value that has been typed into the search field."
              }
            },
            "methods": ["attachSuggest", "detachSuggest", "fireSuggest"]
          },
          {
            "name": "suggestionItemSelected",
            "visibility": "public",
            "since": "1.28.1",
            "description": "This event is fired when a suggested post is selected in the search suggestions popup. This event is fired only when the showSuggestion propery is set to <code>true</code> and there are suggested posts shown in the suggestions popup.<br> As of version 1.46, replaced by {@link sap.collaboration.components.feed.Component}.",
            "deprecated": {
              "since": "1.46.0",
              "text": "Use the Group Feed Component instead."
            },
            "parameters": {
              "selectedItem": {
                "name": "selectedItem",
                "type": "sap.ui.core.Item",
                "description": "The post selected in the suggestions popup."
              }
            },
            "methods": [
              "attachSuggestionItemSelected",
              "detachSuggestionItemSelected",
              "fireSuggestionItemSelected"
            ]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new TimelineItem.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "customActionClicked",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "value": {
                      "name": "value",
                      "type": "string",
                      "optional": false,
                      "description": "Value of the custom action."
                    },
                    "key": {
                      "name": "key",
                      "type": "string",
                      "optional": false,
                      "description": "Key of the custom action."
                    },
                    "linkObj": {
                      "name": "linkObj",
                      "type": "sap.m.Link",
                      "optional": false,
                      "description": "Link on which the user clicked."
                    }
                  }
                }
              }
            }
          ],
          "description": "Fired when custom action link is clicked."
        },
        {
          "name": "replyListOpen",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "This event is fired when the Reply link is clicked to open the reply dialog."
        },
        {
          "name": "replyPost",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "value": {
                      "name": "value",
                      "type": "string",
                      "optional": false,
                      "description": "Content of the reply to the post."
                    }
                  }
                }
              }
            }
          ],
          "description": "This event is fired when the Reply button is clicked in the links section of a timeline post."
        },
        {
          "name": "suggest",
          "visibility": "public",
          "since": "1.28.1",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "suggestValue": {
                      "name": "suggestValue",
                      "type": "string",
                      "optional": false,
                      "description": "The current value that has been typed into the search field."
                    }
                  }
                }
              }
            }
          ],
          "description": "This event is fired when the user types text into the search field and showSuggestion is set to true. Changing the suggestItems aggregation will show the suggestions inside a popup.<br> As of version 1.46, replaced by {@link sap.collaboration.components.feed.Component}.",
          "deprecated": {
            "since": "1.46.0",
            "text": "Use the Group Feed Component instead."
          }
        },
        {
          "name": "suggestionItemSelected",
          "visibility": "public",
          "since": "1.28.1",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "selectedItem": {
                      "name": "selectedItem",
                      "type": "sap.ui.core.Item",
                      "optional": false,
                      "description": "The post selected in the suggestions popup."
                    }
                  }
                }
              }
            }
          ],
          "description": "This event is fired when a suggested post is selected in the search suggestions popup. This event is fired only when the showSuggestion propery is set to <code>true</code> and there are suggested posts shown in the suggestions popup.<br> As of version 1.46, replaced by {@link sap.collaboration.components.feed.Component}.",
          "deprecated": {
            "since": "1.46.0",
            "text": "Use the Group Feed Component instead."
          }
        },
        {
          "name": "userNameClicked",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "uiElement": {
                      "name": "uiElement",
                      "type": "sap.ui.core.Control",
                      "optional": false,
                      "description": "A clickable UI element representing the user name."
                    }
                  }
                }
              }
            }
          ],
          "description": "This event is fired when a user name is clicked in the post's header section."
        }
      ],
      "methods": [
        {
          "name": "addCustomAction",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.TimelineItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oCustomAction",
              "type": "sap.ui.core.CustomData",
              "optional": false,
              "description": "The customAction to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some customAction to the aggregation {@link #getCustomAction customAction}."
        },
        {
          "name": "addSuggestionItem",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.TimelineItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oSuggestionItem",
              "type": "sap.m.StandardListItem",
              "optional": false,
              "description": "The suggestionItem to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some suggestionItem to the aggregation {@link #getSuggestionItems suggestionItems}.",
          "deprecated": {
            "since": "1.46.0",
            "text": "Use the Group Feed Component instead."
          }
        },
        {
          "name": "attachCustomActionClicked",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.TimelineItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.TimelineItem</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:customActionClicked customActionClicked} event of this <code>sap.suite.ui.commons.TimelineItem</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.TimelineItem</code> itself.\n\nFired when custom action link is clicked."
        },
        {
          "name": "attachReplyListOpen",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.TimelineItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.TimelineItem</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:replyListOpen replyListOpen} event of this <code>sap.suite.ui.commons.TimelineItem</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.TimelineItem</code> itself.\n\nThis event is fired when the Reply link is clicked to open the reply dialog."
        },
        {
          "name": "attachReplyPost",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.TimelineItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.TimelineItem</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:replyPost replyPost} event of this <code>sap.suite.ui.commons.TimelineItem</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.TimelineItem</code> itself.\n\nThis event is fired when the Reply button is clicked in the links section of a timeline post."
        },
        {
          "name": "attachSuggest",
          "visibility": "public",
          "since": "1.28.1",
          "returnValue": {
            "type": "sap.suite.ui.commons.TimelineItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.TimelineItem</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:suggest suggest} event of this <code>sap.suite.ui.commons.TimelineItem</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.TimelineItem</code> itself.\n\nThis event is fired when the user types text into the search field and showSuggestion is set to true. Changing the suggestItems aggregation will show the suggestions inside a popup.<br> As of version 1.46, replaced by {@link sap.collaboration.components.feed.Component}.",
          "deprecated": {
            "since": "1.46.0",
            "text": "Use the Group Feed Component instead."
          }
        },
        {
          "name": "attachSuggestionItemSelected",
          "visibility": "public",
          "since": "1.28.1",
          "returnValue": {
            "type": "sap.suite.ui.commons.TimelineItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.TimelineItem</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:suggestionItemSelected suggestionItemSelected} event of this <code>sap.suite.ui.commons.TimelineItem</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.TimelineItem</code> itself.\n\nThis event is fired when a suggested post is selected in the search suggestions popup. This event is fired only when the showSuggestion propery is set to <code>true</code> and there are suggested posts shown in the suggestions popup.<br> As of version 1.46, replaced by {@link sap.collaboration.components.feed.Component}.",
          "deprecated": {
            "since": "1.46.0",
            "text": "Use the Group Feed Component instead."
          }
        },
        {
          "name": "attachUserNameClicked",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.TimelineItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.TimelineItem</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:userNameClicked userNameClicked} event of this <code>sap.suite.ui.commons.TimelineItem</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.TimelineItem</code> itself.\n\nThis event is fired when a user name is clicked in the post's header section."
        },
        {
          "name": "destroyCustomAction",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.TimelineItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the customAction in the aggregation {@link #getCustomAction customAction}."
        },
        {
          "name": "destroyCustomReply",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.TimelineItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the customReply in the aggregation {@link #getCustomReply customReply}."
        },
        {
          "name": "destroyEmbeddedControl",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.TimelineItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the embeddedControl in the aggregation {@link #getEmbeddedControl embeddedControl}."
        },
        {
          "name": "destroyReplyList",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.TimelineItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the replyList in the aggregation {@link #getReplyList replyList}."
        },
        {
          "name": "destroySuggestionItems",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.TimelineItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the suggestionItems in the aggregation {@link #getSuggestionItems suggestionItems}.",
          "deprecated": {
            "since": "1.46.0",
            "text": "Use the Group Feed Component instead."
          }
        },
        {
          "name": "detachCustomActionClicked",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.TimelineItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:customActionClicked customActionClicked} event of this <code>sap.suite.ui.commons.TimelineItem</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachReplyListOpen",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.TimelineItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:replyListOpen replyListOpen} event of this <code>sap.suite.ui.commons.TimelineItem</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachReplyPost",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.TimelineItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:replyPost replyPost} event of this <code>sap.suite.ui.commons.TimelineItem</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachSuggest",
          "visibility": "public",
          "since": "1.28.1",
          "returnValue": {
            "type": "sap.suite.ui.commons.TimelineItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:suggest suggest} event of this <code>sap.suite.ui.commons.TimelineItem</code>.\n\nThe passed function and listener object must match the ones used for event registration.",
          "deprecated": {
            "since": "1.46.0",
            "text": "Use the Group Feed Component instead."
          }
        },
        {
          "name": "detachSuggestionItemSelected",
          "visibility": "public",
          "since": "1.28.1",
          "returnValue": {
            "type": "sap.suite.ui.commons.TimelineItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:suggestionItemSelected suggestionItemSelected} event of this <code>sap.suite.ui.commons.TimelineItem</code>.\n\nThe passed function and listener object must match the ones used for event registration.",
          "deprecated": {
            "since": "1.46.0",
            "text": "Use the Group Feed Component instead."
          }
        },
        {
          "name": "detachUserNameClicked",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.TimelineItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:userNameClicked userNameClicked} event of this <code>sap.suite.ui.commons.TimelineItem</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.TimelineItem with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "fireCustomActionClicked",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.TimelineItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "value": {
                  "name": "value",
                  "type": "string",
                  "optional": true,
                  "description": "Value of the custom action."
                },
                "key": {
                  "name": "key",
                  "type": "string",
                  "optional": true,
                  "description": "Key of the custom action."
                },
                "linkObj": {
                  "name": "linkObj",
                  "type": "sap.m.Link",
                  "optional": true,
                  "description": "Link on which the user clicked."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:customActionClicked customActionClicked} to attached listeners."
        },
        {
          "name": "fireReplyListOpen",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.TimelineItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:replyListOpen replyListOpen} to attached listeners."
        },
        {
          "name": "fireReplyPost",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.TimelineItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "value": {
                  "name": "value",
                  "type": "string",
                  "optional": true,
                  "description": "Content of the reply to the post."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:replyPost replyPost} to attached listeners."
        },
        {
          "name": "fireSuggest",
          "visibility": "protected",
          "since": "1.28.1",
          "returnValue": {
            "type": "sap.suite.ui.commons.TimelineItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "suggestValue": {
                  "name": "suggestValue",
                  "type": "string",
                  "optional": true,
                  "description": "The current value that has been typed into the search field."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:suggest suggest} to attached listeners.",
          "deprecated": {
            "since": "1.46.0",
            "text": "Use the Group Feed Component instead."
          }
        },
        {
          "name": "fireSuggestionItemSelected",
          "visibility": "protected",
          "since": "1.28.1",
          "returnValue": {
            "type": "sap.suite.ui.commons.TimelineItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "selectedItem": {
                  "name": "selectedItem",
                  "type": "sap.ui.core.Item",
                  "optional": true,
                  "description": "The post selected in the suggestions popup."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:suggestionItemSelected suggestionItemSelected} to attached listeners.",
          "deprecated": {
            "since": "1.46.0",
            "text": "Use the Group Feed Component instead."
          }
        },
        {
          "name": "fireUserNameClicked",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.TimelineItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "uiElement": {
                  "name": "uiElement",
                  "type": "sap.ui.core.Control",
                  "optional": true,
                  "description": "A clickable UI element representing the user name."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:userNameClicked userNameClicked} to attached listeners."
        },
        {
          "name": "getCustomAction",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.CustomData[]" },
          "description": "Gets content of aggregation {@link #getCustomAction customAction}.\n\nCustom actions displayed as links in the links section of the post. The key must be unique for each link. Values are used as labels for the link. When a user clicks the link, a customActionClicked event is fired."
        },
        {
          "name": "getCustomReply",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.Control" },
          "description": "Gets content of aggregation {@link #getCustomReply customReply}.\n\nA UI5 control that acts as a custom reply dialog. It is used instead of the default reply dialog that is displayed when the user clicks the Reply link. Supports UI5 controls that have an openBy method, for example, the Popup control."
        },
        {
          "name": "getDateTime",
          "visibility": "public",
          "returnValue": {
            "type": "any",
            "description": "Value of property <code>dateTime</code>"
          },
          "description": "Gets current value of property {@link #getDateTime dateTime}.\n\nDate and time value of the timeline post. This value must be in one of the following formats: <ul> <li> A valid instance of the <code>Date</code> object. </li> <li> An integer representing Unix time (also known as POSIX or Epoch time) in milliseconds. </li> <li> A string with an integer representing Unix time in milliseconds. </li> <li> A string that contains <code>Date([number])</code>, where <code>[number]</code> represents Unix time in milliseconds. </li> </ul> If this property has any other format, the timeline will try to parse it using <code>Date.parse</code>. It is not recommended to use this functionality, as different web browsers implement this function differently, which may lead to unpredictable behavior."
        },
        {
          "name": "getEmbeddedControl",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.Control" },
          "description": "Gets content of aggregation {@link #getEmbeddedControl embeddedControl}.\n\nA UI5 control that is displayed as a timeline post's content instead of the default content (text). Examples of such a control include the Panel control and the List control."
        },
        {
          "name": "getFilterValue",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>filterValue</code>"
          },
          "description": "Gets current value of property {@link #getFilterValue filterValue}.\n\nText for the items filter name. This text will be used as the name of the items filter in the filter popover."
        },
        {
          "name": "getIcon",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>icon</code>"
          },
          "description": "Gets current value of property {@link #getIcon icon}.\n\nIcon on the timeline axis that corresponds to the point in time when the entry was posted. Posts can be displayed in chronological or reverse chronological order."
        },
        {
          "name": "getIconTooltip",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>iconTooltip</code>"
          },
          "description": "Gets current value of property {@link #getIconTooltip iconTooltip}.\n\nTooltip for an icon displayed on the timeline axis."
        },
        {
          "name": "getMaxCharacters",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>maxCharacters</code>"
          },
          "description": "Gets current value of property {@link #getMaxCharacters maxCharacters}.\n\nThe expand and collapse feature is set by default and uses 300 characters on mobile devices and 500 characters on desktop computers as limits. Based on these values, the text of the timeline post is collapsed once it reaches these character limits. In this case, only the specified number of characters is displayed. By clicking the More link, the entire text can be displayed. Clicking Less collapses the text. The application can set the value according to its needs."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.TimelineItem."
        },
        {
          "name": "getReplyCount",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>replyCount</code>"
          },
          "description": "Gets current value of property {@link #getReplyCount replyCount}.\n\nNumber of replies to a timeline post."
        },
        {
          "name": "getReplyList",
          "visibility": "public",
          "returnValue": { "type": "sap.m.List" },
          "description": "Gets content of aggregation {@link #getReplyList replyList}.\n\nA list of replies related to the post."
        },
        {
          "name": "getStatus",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>status</code>"
          },
          "description": "Gets current value of property {@link #getStatus status}.\n\nIndicates the post status. The status affects the post's icon color. Supported values: <ul> <li> <code>Information</code> </li> <li> <code>Success</code> </li> <li> <code>Warning</code> </li> <li> <code>Error</code> </li> </ul>"
        },
        {
          "name": "getSuggestionItems",
          "visibility": "public",
          "returnValue": { "type": "sap.m.StandardListItem[]" },
          "description": "Gets content of aggregation {@link #getSuggestionItems suggestionItems}.\n\nSuggested posts.<br> As of version 1.46, replaced by {@link sap.collaboration.components.feed.Component}.",
          "deprecated": {
            "since": "1.46.0",
            "text": "Use the Group Feed Component instead."
          }
        },
        {
          "name": "getText",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>text</code>"
          },
          "description": "Gets current value of property {@link #getText text}.\n\nText shown inside the timeline post."
        },
        {
          "name": "getTitle",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>title</code>"
          },
          "description": "Gets current value of property {@link #getTitle title}.\n\nText shown in the post title right after the user name."
        },
        {
          "name": "getUseIconTooltip",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>useIconTooltip</code>"
          },
          "description": "Gets current value of property {@link #getUseIconTooltip useIconTooltip}.\n\nDecides whether a default Icon tooltip should be used if no tooltip is set.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getUserName",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>userName</code>"
          },
          "description": "Gets current value of property {@link #getUserName userName}.\n\nUser name shown in the post title."
        },
        {
          "name": "getUserNameClickable",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>userNameClickable</code>"
          },
          "description": "Gets current value of property {@link #getUserNameClickable userNameClickable}.\n\nMakes the user name clickable. Clicking the name fires a userNameClicked event.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getUserPicture",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.URI",
            "description": "Value of property <code>userPicture</code>"
          },
          "description": "Gets current value of property {@link #getUserPicture userPicture}.\n\nPicture shown next to the user name."
        },
        {
          "name": "indexOfCustomAction",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oCustomAction",
              "type": "sap.ui.core.CustomData",
              "optional": false,
              "description": "The customAction whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.ui.core.CustomData</code> in the aggregation {@link #getCustomAction customAction}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "indexOfSuggestionItem",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oSuggestionItem",
              "type": "sap.m.StandardListItem",
              "optional": false,
              "description": "The suggestionItem whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.m.StandardListItem</code> in the aggregation {@link #getSuggestionItems suggestionItems}. and returns its index if found or -1 otherwise.",
          "deprecated": {
            "since": "1.46.0",
            "text": "Use the Group Feed Component instead."
          }
        },
        {
          "name": "insertCustomAction",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.TimelineItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oCustomAction",
              "type": "sap.ui.core.CustomData",
              "optional": false,
              "description": "The customAction to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the customAction should be inserted at; for a negative value of <code>iIndex</code>, the customAction is inserted at position 0; for a value greater than the current size of the aggregation, the customAction is inserted at the last position"
            }
          ],
          "description": "Inserts a customAction into the aggregation {@link #getCustomAction customAction}."
        },
        {
          "name": "insertSuggestionItem",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.TimelineItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oSuggestionItem",
              "type": "sap.m.StandardListItem",
              "optional": false,
              "description": "The suggestionItem to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the suggestionItem should be inserted at; for a negative value of <code>iIndex</code>, the suggestionItem is inserted at position 0; for a value greater than the current size of the aggregation, the suggestionItem is inserted at the last position"
            }
          ],
          "description": "Inserts a suggestionItem into the aggregation {@link #getSuggestionItems suggestionItems}.",
          "deprecated": {
            "since": "1.46.0",
            "text": "Use the Group Feed Component instead."
          }
        },
        {
          "name": "removeAllCustomAction",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.CustomData[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getCustomAction customAction}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeAllSuggestionItems",
          "visibility": "public",
          "returnValue": {
            "type": "sap.m.StandardListItem[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getSuggestionItems suggestionItems}.\n\nAdditionally, it unregisters them from the hosting UIArea.",
          "deprecated": {
            "since": "1.46.0",
            "text": "Use the Group Feed Component instead."
          }
        },
        {
          "name": "removeCustomAction",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.CustomData",
            "description": "The removed customAction or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vCustomAction",
              "type": "int|string|sap.ui.core.CustomData",
              "optional": false,
              "description": "The customAction to remove or its index or id"
            }
          ],
          "description": "Removes a customAction from the aggregation {@link #getCustomAction customAction}."
        },
        {
          "name": "removeSuggestionItem",
          "visibility": "public",
          "returnValue": {
            "type": "sap.m.StandardListItem",
            "description": "The removed suggestionItem or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vSuggestionItem",
              "type": "int|string|sap.m.StandardListItem",
              "optional": false,
              "description": "The suggestionItem to remove or its index or id"
            }
          ],
          "description": "Removes a suggestionItem from the aggregation {@link #getSuggestionItems suggestionItems}.",
          "deprecated": {
            "since": "1.46.0",
            "text": "Use the Group Feed Component instead."
          }
        },
        {
          "name": "setCustomReply",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.TimelineItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oCustomReply",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The customReply to set"
            }
          ],
          "description": "Sets the aggregated {@link #getCustomReply customReply}."
        },
        {
          "name": "setDateTime",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.TimelineItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oDateTime",
              "type": "any",
              "optional": false,
              "description": "New value for property <code>dateTime</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getDateTime dateTime}.\n\nDate and time value of the timeline post. This value must be in one of the following formats: <ul> <li> A valid instance of the <code>Date</code> object. </li> <li> An integer representing Unix time (also known as POSIX or Epoch time) in milliseconds. </li> <li> A string with an integer representing Unix time in milliseconds. </li> <li> A string that contains <code>Date([number])</code>, where <code>[number]</code> represents Unix time in milliseconds. </li> </ul> If this property has any other format, the timeline will try to parse it using <code>Date.parse</code>. It is not recommended to use this functionality, as different web browsers implement this function differently, which may lead to unpredictable behavior.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setEmbeddedControl",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.TimelineItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oEmbeddedControl",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The embeddedControl to set"
            }
          ],
          "description": "Sets the aggregated {@link #getEmbeddedControl embeddedControl}."
        },
        {
          "name": "setFilterValue",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.TimelineItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sFilterValue",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>filterValue</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getFilterValue filterValue}.\n\nText for the items filter name. This text will be used as the name of the items filter in the filter popover.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setIcon",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.TimelineItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sIcon",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>icon</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getIcon icon}.\n\nIcon on the timeline axis that corresponds to the point in time when the entry was posted. Posts can be displayed in chronological or reverse chronological order.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setIconTooltip",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.TimelineItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sIconTooltip",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>iconTooltip</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getIconTooltip iconTooltip}.\n\nTooltip for an icon displayed on the timeline axis.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setMaxCharacters",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.TimelineItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iMaxCharacters",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>maxCharacters</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getMaxCharacters maxCharacters}.\n\nThe expand and collapse feature is set by default and uses 300 characters on mobile devices and 500 characters on desktop computers as limits. Based on these values, the text of the timeline post is collapsed once it reaches these character limits. In this case, only the specified number of characters is displayed. By clicking the More link, the entire text can be displayed. Clicking Less collapses the text. The application can set the value according to its needs.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setReplyCount",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.TimelineItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iReplyCount",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>replyCount</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getReplyCount replyCount}.\n\nNumber of replies to a timeline post.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setReplyList",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.TimelineItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oReplyList",
              "type": "sap.m.List",
              "optional": false,
              "description": "The replyList to set"
            }
          ],
          "description": "Sets the aggregated {@link #getReplyList replyList}."
        },
        {
          "name": "setStatus",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.TimelineItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sStatus",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>status</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getStatus status}.\n\nIndicates the post status. The status affects the post's icon color. Supported values: <ul> <li> <code>Information</code> </li> <li> <code>Success</code> </li> <li> <code>Warning</code> </li> <li> <code>Error</code> </li> </ul>\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setText",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.TimelineItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sText",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>text</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getText text}.\n\nText shown inside the timeline post.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setTitle",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.TimelineItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sTitle",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>title</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getTitle title}.\n\nText shown in the post title right after the user name.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setUseIconTooltip",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.TimelineItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bUseIconTooltip",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>useIconTooltip</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getUseIconTooltip useIconTooltip}.\n\nDecides whether a default Icon tooltip should be used if no tooltip is set.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setUserName",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.TimelineItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sUserName",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>userName</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getUserName userName}.\n\nUser name shown in the post title.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setUserNameClickable",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.TimelineItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bUserNameClickable",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>userNameClickable</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getUserNameClickable userNameClickable}.\n\nMakes the user name clickable. Clicking the name fires a userNameClicked event.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setUserPicture",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.TimelineItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sUserPicture",
              "type": "sap.ui.core.URI",
              "optional": false,
              "description": "New value for property <code>userPicture</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getUserPicture userPicture}.\n\nPicture shown next to the user name.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.TimelineNavigator",
      "basename": "TimelineNavigator",
      "resource": "sap/suite/ui/commons/TimelineNavigator.js",
      "module": "sap/suite/ui/commons/TimelineNavigator",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.core.delegate.ItemNavigation",
      "description": "TimelineNavigator An extension of ItemNavigator for Timeline.",
      "ui5-metadata": { "stereotype": "object" },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "oDomRef",
            "type": "Element",
            "optional": false,
            "description": "The root DOM reference that includes all items"
          },
          {
            "name": "aItemDomRefs",
            "type": "Element[]",
            "optional": false,
            "description": "Array of DOM references representing the items for the navigation"
          },
          {
            "name": "bNotInTabChain",
            "type": "boolean",
            "optional": true,
            "defaultValue": false,
            "description": "Whether the selected element should be in the tab chain or not"
          },
          {
            "name": "aRows",
            "type": "Element[]",
            "optional": false,
            "description": "2D array of navigation items to navigate in. If not defined navigation will fallback to aItemDomRefs."
          }
        ],
        "description": "Creates an instance of TimelineNavigator."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.TimelineNavigator with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.delegate.ItemNavigation.extend}."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.TimelineNavigator."
        },
        {
          "name": "setItemDomRefs",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.delegate.ItemNavigation",
            "description": "<code>this</code> to allow method chaining"
          },
          "parameters": [
            {
              "name": "aItemDomRefs",
              "type": "Element[]",
              "optional": false,
              "description": "Array of DOM references representing the items"
            }
          ],
          "description": "Sets the item DOM references as an array for the items"
        },
        {
          "name": "updateReferences",
          "visibility": "public",
          "parameters": [
            {
              "name": "oDomRef",
              "type": "Element",
              "optional": false,
              "description": "The root DOM reference that includes all items"
            },
            {
              "name": "aItemDomRefs",
              "type": "Element[]",
              "optional": false,
              "description": "Array of DOM references representing the items for the navigation"
            },
            {
              "name": "aRows",
              "type": "Element[]",
              "optional": false,
              "description": "2D array of navigation items to navigate in. If not defined navigation will fallback to aItemDomRefs."
            }
          ],
          "description": "Update references to navigation objects."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.suite.ui.commons.TimelineScrollingFadeout",
      "basename": "TimelineScrollingFadeout",
      "resource": "sap/suite/ui/commons/library.js",
      "module": "sap/suite/ui/commons/library",
      "export": "TimelineScrollingFadeout",
      "static": true,
      "visibility": "public",
      "description": "Type of the fadeout effect applied to the upper and lower margins of the visible timeline area.",
      "deprecated": { "since": "1.54.0", "text": "Not Fiori." },
      "ui5-metamodel": true,
      "properties": [
        {
          "name": "Area",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Timeline fades into the lower and upper margins of the visible area, but no scroll buttons are displayed."
        },
        {
          "name": "AreaWithButtons",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Timeline fades into the lower and upper margins of the visible area, and scroll buttons are displayed."
        },
        {
          "name": "None",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Timeline does not fade out."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.UnifiedThingGroup",
      "basename": "UnifiedThingGroup",
      "resource": "sap/suite/ui/commons/UnifiedThingGroup.js",
      "module": "sap/suite/ui/commons/UnifiedThingGroup",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.core.Control",
      "description": "This control is used in UnifiedThingInspector to display the facet header information.",
      "deprecated": {
        "since": "1.32",
        "text": "Deprecated. Object page should be used instead."
      },
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "title",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The title of the group.",
            "methods": ["getTitle", "setTitle"]
          },
          {
            "name": "description",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The description of the group.",
            "methods": ["getDescription", "setDescription"]
          },
          {
            "name": "design",
            "type": "sap.suite.ui.commons.ThingGroupDesign",
            "defaultValue": "ZeroIndent",
            "group": "Misc",
            "visibility": "public",
            "description": "Defines how the control is rendered.",
            "methods": ["getDesign", "setDesign"]
          }
        ],
        "aggregations": [
          {
            "name": "content",
            "singularName": "content",
            "type": "sap.ui.core.Control",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "The content of the group.",
            "methods": ["getContent", "destroyContent", "setContent"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new UnifiedThingGroup.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "destroyContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.UnifiedThingGroup",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the content in the aggregation {@link #getContent content}."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.UnifiedThingGroup with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "getContent",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.Control" },
          "description": "Gets content of aggregation {@link #getContent content}.\n\nThe content of the group."
        },
        {
          "name": "getDescription",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>description</code>"
          },
          "description": "Gets current value of property {@link #getDescription description}.\n\nThe description of the group."
        },
        {
          "name": "getDesign",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ThingGroupDesign",
            "description": "Value of property <code>design</code>"
          },
          "description": "Gets current value of property {@link #getDesign design}.\n\nDefines how the control is rendered.\n\nDefault value is <code>ZeroIndent</code>."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.UnifiedThingGroup."
        },
        {
          "name": "getTitle",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>title</code>"
          },
          "description": "Gets current value of property {@link #getTitle title}.\n\nThe title of the group."
        },
        {
          "name": "setContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.UnifiedThingGroup",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oContent",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The content to set"
            }
          ],
          "description": "Sets the aggregated {@link #getContent content}."
        },
        {
          "name": "setDescription",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.UnifiedThingGroup",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sDescription",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>description</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getDescription description}.\n\nThe description of the group.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setDesign",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.UnifiedThingGroup",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sDesign",
              "type": "sap.suite.ui.commons.ThingGroupDesign",
              "optional": false,
              "description": "New value for property <code>design</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getDesign design}.\n\nDefines how the control is rendered.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>ZeroIndent</code>."
        },
        {
          "name": "setTitle",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.UnifiedThingGroup",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sTitle",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>title</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getTitle title}.\n\nThe title of the group.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.UnifiedThingInspector",
      "basename": "UnifiedThingInspector",
      "resource": "sap/suite/ui/commons/UnifiedThingInspector.js",
      "module": "sap/suite/ui/commons/UnifiedThingInspector",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.core.Control",
      "description": "This control provides an ability to display a thing (for example, object factsheet) on the desktop, tablet, and phone devices in a Fiori style.",
      "deprecated": {
        "since": "1.32",
        "text": "Deprecated. Object page should be used instead."
      },
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "height",
            "type": "sap.ui.core.CSSSize",
            "defaultValue": "100%",
            "group": "Misc",
            "visibility": "public",
            "description": "The height of the control.",
            "methods": ["getHeight", "setHeight"]
          },
          {
            "name": "title",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The title of the thing.",
            "methods": ["getTitle", "setTitle"]
          },
          {
            "name": "name",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The name of the thing.",
            "methods": ["getName", "setName"]
          },
          {
            "name": "description",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The description of the thing.",
            "methods": ["getDescription", "setDescription"]
          },
          {
            "name": "icon",
            "type": "sap.ui.core.URI",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The icon to be displayed as a graphical element within the header. This can be an image or an icon from the icon font.",
            "methods": ["getIcon", "setIcon"]
          },
          {
            "name": "transactionsVisible",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "description": "If set to true, the Transaction button appears.",
            "methods": ["getTransactionsVisible", "setTransactionsVisible"]
          },
          {
            "name": "actionsVisible",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "description": "If set to true, the Actions button appears.",
            "methods": ["getActionsVisible", "setActionsVisible"]
          },
          {
            "name": "destroyPageOnBack",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "description": "If set to true, destroys a page when the user chooses the Back button to leave this page.",
            "methods": ["getDestroyPageOnBack", "setDestroyPageOnBack"]
          },
          {
            "name": "configurationVisible",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "description": "If set to true, the Configuration button appears.",
            "methods": ["getConfigurationVisible", "setConfigurationVisible"]
          }
        ],
        "aggregations": [
          {
            "name": "facets",
            "singularName": "facet",
            "type": "sap.suite.ui.commons.FacetOverview",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "The list of the sap.suite.ui.commons.FacetOverview objects.",
            "methods": [
              "getFacets",
              "destroyFacets",
              "insertFacet",
              "addFacet",
              "removeFacet",
              "indexOfFacet",
              "removeAllFacets"
            ]
          },
          {
            "name": "facetContent",
            "singularName": "facetContent",
            "type": "sap.ui.core.Control",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "The content that appears on the detail page of the UnifiedThingInspector.",
            "methods": [
              "getFacetContent",
              "destroyFacetContent",
              "insertFacetContent",
              "addFacetContent",
              "removeFacetContent",
              "indexOfFacetContent",
              "removeAllFacetContent"
            ]
          },
          {
            "name": "navContainer",
            "singularName": "navContainer",
            "type": "sap.m.NavContainer",
            "cardinality": "0..1",
            "visibility": "hidden",
            "description": "The hidden aggregation for the sap.m.NavContainer control.",
            "methods": [
              "getNavContainer",
              "destroyNavContainer",
              "setNavContainer"
            ]
          },
          {
            "name": "kpis",
            "singularName": "kpi",
            "type": "sap.suite.ui.commons.KpiTile",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "A set of the KPI tiles to be shown in the header. Currently only 3 tiles from the list are displayed on the desktop and tablet. On the phone, all tiles are displayed in a swipeable container.",
            "methods": [
              "getKpis",
              "destroyKpis",
              "insertKpi",
              "addKpi",
              "removeKpi",
              "indexOfKpi",
              "removeAllKpis"
            ]
          },
          {
            "name": "transactions",
            "singularName": "transaction",
            "type": "sap.ui.core.Control",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Menu items for transaction popup.",
            "deprecated": {
              "since": "1.18.2",
              "text": "Deprecated due to the incorrect work with data binding. Open the popup in the transactionsButtonPress event handler instead."
            },
            "methods": [
              "getTransactions",
              "destroyTransactions",
              "insertTransaction",
              "addTransaction",
              "removeTransaction",
              "indexOfTransaction",
              "removeAllTransactions"
            ]
          },
          {
            "name": "actions",
            "singularName": "action",
            "type": "sap.m.Button",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Action sheet controls.",
            "deprecated": {
              "since": "1.18.2",
              "text": "Deprecated due to the incorrect work with data binding. Open the popup in the actionsButtonPress event handler instead."
            },
            "methods": [
              "getActions",
              "destroyActions",
              "insertAction",
              "addAction",
              "removeAction",
              "indexOfAction",
              "removeAllActions"
            ]
          },
          {
            "name": "pages",
            "singularName": "page",
            "type": "sap.ui.core.Control",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Contains pages except for Master and Detail.",
            "methods": [
              "getPages",
              "destroyPages",
              "insertPage",
              "addPage",
              "removePage",
              "indexOfPage",
              "removeAllPages"
            ]
          },
          {
            "name": "objectHeader",
            "singularName": "objectHeader",
            "type": "sap.m.ObjectHeader",
            "cardinality": "0..1",
            "visibility": "hidden",
            "description": "The hidden aggregation for the sap.m.ObjectHeader control.",
            "methods": [
              "getObjectHeader",
              "destroyObjectHeader",
              "setObjectHeader"
            ]
          }
        ],
        "events": [
          {
            "name": "backAction",
            "visibility": "public",
            "description": "The event is fired when the user chooses the Back button.",
            "methods": [
              "attachBackAction",
              "detachBackAction",
              "fireBackAction"
            ]
          },
          {
            "name": "transactionsButtonPress",
            "visibility": "public",
            "description": "The event is fired when the user chooses the Transactions button.",
            "parameters": {
              "caller": {
                "name": "caller",
                "type": "object",
                "description": "The object that initiated the event."
              }
            },
            "methods": [
              "attachTransactionsButtonPress",
              "detachTransactionsButtonPress",
              "fireTransactionsButtonPress"
            ]
          },
          {
            "name": "actionsButtonPress",
            "visibility": "public",
            "description": "The event is fired when the user chooses the Actions button.",
            "parameters": {
              "caller": {
                "name": "caller",
                "type": "object",
                "description": "The object that initiated the event."
              }
            },
            "methods": [
              "attachActionsButtonPress",
              "detachActionsButtonPress",
              "fireActionsButtonPress"
            ]
          },
          {
            "name": "configurationButtonPress",
            "visibility": "public",
            "description": "The event is fired when the user chooses the Configuration button.",
            "parameters": {
              "caller": {
                "name": "caller",
                "type": "object",
                "description": "The object that initiated the event."
              }
            },
            "methods": [
              "attachConfigurationButtonPress",
              "detachConfigurationButtonPress",
              "fireConfigurationButtonPress"
            ]
          },
          {
            "name": "navigate",
            "visibility": "public",
            "description": "The event is fired when navigation between two pages has been triggered. The transition (if any) to the new page has not started yet. This event can be aborted by the application with preventDefault(), which means that there will be no navigation. This event is propogated from the inner NavContainer. The event can also return internal Master and Detail pages.",
            "parameters": {
              "from": {
                "name": "from",
                "type": "sap.ui.core.Control",
                "description": "The page that was shown before the current navigation."
              },
              "fromId": {
                "name": "fromId",
                "type": "string",
                "description": "The ID of the page that was shown before the current navigation."
              },
              "to": {
                "name": "to",
                "type": "sap.ui.core.Control",
                "description": "The page that will be shown after the current navigation."
              },
              "toId": {
                "name": "toId",
                "type": "string",
                "description": "The ID of the page that will be shown after the current navigation."
              },
              "firstTime": {
                "name": "firstTime",
                "type": "boolean",
                "description": "Whether the \"to\" page (more precisely: a control with the ID of the page that is currently navigated to) has not been shown/navigated to before."
              },
              "isTo": {
                "name": "isTo",
                "type": "boolean",
                "description": "Whether this is a forward navigation, triggered by \"to()\"."
              },
              "isBack": {
                "name": "isBack",
                "type": "boolean",
                "description": "Whether this is a back navigation, triggered by \"back()\"."
              },
              "isBackToTop": {
                "name": "isBackToTop",
                "type": "boolean",
                "description": "Whether this is a navigation to the root page, triggered by \"backToTop()\"."
              },
              "isBackToPage": {
                "name": "isBackToPage",
                "type": "boolean",
                "since": "1.7.2",
                "description": "Whether this was a navigation to the root page, triggered by \"backToTop()\"."
              },
              "direction": {
                "name": "direction",
                "type": "string",
                "description": "How the navigation was triggered, possible values are: \"to\", \"back\", and \"backToTop\"."
              }
            },
            "methods": ["attachNavigate", "detachNavigate", "fireNavigate"]
          },
          {
            "name": "afterNavigate",
            "visibility": "public",
            "description": "The event is fired when navigation between two pages has completed. In case of animated transitions this event is fired with some delay after the \"navigate\" event. This event is propogated from the inner NavContainer. The event can also return internal Master and Detail pages.",
            "parameters": {
              "from": {
                "name": "from",
                "type": "sap.ui.core.Control",
                "description": "The page that had been shown before navigation."
              },
              "fromId": {
                "name": "fromId",
                "type": "string",
                "description": "The ID of the page that had been shown before navigation."
              },
              "to": {
                "name": "to",
                "type": "sap.ui.core.Control",
                "description": "The page that is now shown after navigation."
              },
              "toId": {
                "name": "toId",
                "type": "string",
                "description": "The ID of the page that is now shown after navigation."
              },
              "firstTime": {
                "name": "firstTime",
                "type": "boolean",
                "description": "Whether the \"to\" page (more precisely: a control with the ID of the page that has been navigated to) had not been shown/navigated to before."
              },
              "isTo": {
                "name": "isTo",
                "type": "boolean",
                "description": "Whether was a forward navigation, triggered by \"to()\"."
              },
              "isBack": {
                "name": "isBack",
                "type": "boolean",
                "description": "Whether this was a back navigation, triggered by \"back()\"."
              },
              "isBackToTop": {
                "name": "isBackToTop",
                "type": "boolean",
                "description": "Whether this was a navigation to the root page, triggered by \"backToTop()\"."
              },
              "isBackToPage": {
                "name": "isBackToPage",
                "type": "boolean",
                "since": "1.7.2",
                "description": "Whether this was a navigation to the root page, triggered by \"backToTop()\"."
              },
              "direction": {
                "name": "direction",
                "type": "string",
                "description": "How the navigation was triggered, possible values are: \"to\", \"back\", and \"backToTop\"."
              }
            },
            "methods": [
              "attachAfterNavigate",
              "detachAfterNavigate",
              "fireAfterNavigate"
            ]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new UnifiedThingInspector.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "actionsButtonPress",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "caller": {
                      "name": "caller",
                      "type": "object",
                      "optional": false,
                      "description": "The object that initiated the event."
                    }
                  }
                }
              }
            }
          ],
          "description": "The event is fired when the user chooses the Actions button."
        },
        {
          "name": "afterNavigate",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "from": {
                      "name": "from",
                      "type": "sap.ui.core.Control",
                      "optional": false,
                      "description": "The page that had been shown before navigation."
                    },
                    "fromId": {
                      "name": "fromId",
                      "type": "string",
                      "optional": false,
                      "description": "The ID of the page that had been shown before navigation."
                    },
                    "to": {
                      "name": "to",
                      "type": "sap.ui.core.Control",
                      "optional": false,
                      "description": "The page that is now shown after navigation."
                    },
                    "toId": {
                      "name": "toId",
                      "type": "string",
                      "optional": false,
                      "description": "The ID of the page that is now shown after navigation."
                    },
                    "firstTime": {
                      "name": "firstTime",
                      "type": "boolean",
                      "optional": false,
                      "description": "Whether the \"to\" page (more precisely: a control with the ID of the page that has been navigated to) had not been shown/navigated to before."
                    },
                    "isTo": {
                      "name": "isTo",
                      "type": "boolean",
                      "optional": false,
                      "description": "Whether was a forward navigation, triggered by \"to()\"."
                    },
                    "isBack": {
                      "name": "isBack",
                      "type": "boolean",
                      "optional": false,
                      "description": "Whether this was a back navigation, triggered by \"back()\"."
                    },
                    "isBackToTop": {
                      "name": "isBackToTop",
                      "type": "boolean",
                      "optional": false,
                      "description": "Whether this was a navigation to the root page, triggered by \"backToTop()\"."
                    },
                    "isBackToPage": {
                      "name": "isBackToPage",
                      "type": "boolean",
                      "optional": false,
                      "description": "Whether this was a navigation to the root page, triggered by \"backToTop()\"."
                    },
                    "direction": {
                      "name": "direction",
                      "type": "string",
                      "optional": false,
                      "description": "How the navigation was triggered, possible values are: \"to\", \"back\", and \"backToTop\"."
                    }
                  }
                }
              }
            }
          ],
          "description": "The event is fired when navigation between two pages has completed. In case of animated transitions this event is fired with some delay after the \"navigate\" event. This event is propogated from the inner NavContainer. The event can also return internal Master and Detail pages."
        },
        {
          "name": "backAction",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "The event is fired when the user chooses the Back button."
        },
        {
          "name": "configurationButtonPress",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "caller": {
                      "name": "caller",
                      "type": "object",
                      "optional": false,
                      "description": "The object that initiated the event."
                    }
                  }
                }
              }
            }
          ],
          "description": "The event is fired when the user chooses the Configuration button."
        },
        {
          "name": "navigate",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "from": {
                      "name": "from",
                      "type": "sap.ui.core.Control",
                      "optional": false,
                      "description": "The page that was shown before the current navigation."
                    },
                    "fromId": {
                      "name": "fromId",
                      "type": "string",
                      "optional": false,
                      "description": "The ID of the page that was shown before the current navigation."
                    },
                    "to": {
                      "name": "to",
                      "type": "sap.ui.core.Control",
                      "optional": false,
                      "description": "The page that will be shown after the current navigation."
                    },
                    "toId": {
                      "name": "toId",
                      "type": "string",
                      "optional": false,
                      "description": "The ID of the page that will be shown after the current navigation."
                    },
                    "firstTime": {
                      "name": "firstTime",
                      "type": "boolean",
                      "optional": false,
                      "description": "Whether the \"to\" page (more precisely: a control with the ID of the page that is currently navigated to) has not been shown/navigated to before."
                    },
                    "isTo": {
                      "name": "isTo",
                      "type": "boolean",
                      "optional": false,
                      "description": "Whether this is a forward navigation, triggered by \"to()\"."
                    },
                    "isBack": {
                      "name": "isBack",
                      "type": "boolean",
                      "optional": false,
                      "description": "Whether this is a back navigation, triggered by \"back()\"."
                    },
                    "isBackToTop": {
                      "name": "isBackToTop",
                      "type": "boolean",
                      "optional": false,
                      "description": "Whether this is a navigation to the root page, triggered by \"backToTop()\"."
                    },
                    "isBackToPage": {
                      "name": "isBackToPage",
                      "type": "boolean",
                      "optional": false,
                      "description": "Whether this was a navigation to the root page, triggered by \"backToTop()\"."
                    },
                    "direction": {
                      "name": "direction",
                      "type": "string",
                      "optional": false,
                      "description": "How the navigation was triggered, possible values are: \"to\", \"back\", and \"backToTop\"."
                    }
                  }
                }
              }
            }
          ],
          "description": "The event is fired when navigation between two pages has been triggered. The transition (if any) to the new page has not started yet. This event can be aborted by the application with preventDefault(), which means that there will be no navigation. This event is propogated from the inner NavContainer. The event can also return internal Master and Detail pages."
        },
        {
          "name": "transactionsButtonPress",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "caller": {
                      "name": "caller",
                      "type": "object",
                      "optional": false,
                      "description": "The object that initiated the event."
                    }
                  }
                }
              }
            }
          ],
          "description": "The event is fired when the user chooses the Transactions button."
        }
      ],
      "methods": [
        {
          "name": "addAction",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.UnifiedThingInspector",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oAction",
              "type": "sap.m.Button",
              "optional": false,
              "description": "The action to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some action to the aggregation {@link #getActions actions}.",
          "deprecated": {
            "since": "1.18.2",
            "text": "Deprecated due to the incorrect work with data binding. Open the popup in the actionsButtonPress event handler instead."
          }
        },
        {
          "name": "addFacet",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.UnifiedThingInspector",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oFacet",
              "type": "sap.suite.ui.commons.FacetOverview",
              "optional": false,
              "description": "The facet to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some facet to the aggregation {@link #getFacets facets}."
        },
        {
          "name": "addFacetContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.UnifiedThingInspector",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oFacetContent",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The facetContent to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some facetContent to the aggregation {@link #getFacetContent facetContent}."
        },
        {
          "name": "addKpi",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.UnifiedThingInspector",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oKpi",
              "type": "sap.suite.ui.commons.KpiTile",
              "optional": false,
              "description": "The kpi to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some kpi to the aggregation {@link #getKpis kpis}."
        },
        {
          "name": "addPage",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.UnifiedThingInspector",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oPage",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The page to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some page to the aggregation {@link #getPages pages}."
        },
        {
          "name": "addTransaction",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.UnifiedThingInspector",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oTransaction",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The transaction to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some transaction to the aggregation {@link #getTransactions transactions}.",
          "deprecated": {
            "since": "1.18.2",
            "text": "Deprecated due to the incorrect work with data binding. Open the popup in the transactionsButtonPress event handler instead."
          }
        },
        {
          "name": "attachActionsButtonPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.UnifiedThingInspector",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.UnifiedThingInspector</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:actionsButtonPress actionsButtonPress} event of this <code>sap.suite.ui.commons.UnifiedThingInspector</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.UnifiedThingInspector</code> itself.\n\nThe event is fired when the user chooses the Actions button."
        },
        {
          "name": "attachAfterNavigate",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.UnifiedThingInspector",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.UnifiedThingInspector</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:afterNavigate afterNavigate} event of this <code>sap.suite.ui.commons.UnifiedThingInspector</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.UnifiedThingInspector</code> itself.\n\nThe event is fired when navigation between two pages has completed. In case of animated transitions this event is fired with some delay after the \"navigate\" event. This event is propogated from the inner NavContainer. The event can also return internal Master and Detail pages."
        },
        {
          "name": "attachBackAction",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.UnifiedThingInspector",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.UnifiedThingInspector</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:backAction backAction} event of this <code>sap.suite.ui.commons.UnifiedThingInspector</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.UnifiedThingInspector</code> itself.\n\nThe event is fired when the user chooses the Back button."
        },
        {
          "name": "attachConfigurationButtonPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.UnifiedThingInspector",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.UnifiedThingInspector</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:configurationButtonPress configurationButtonPress} event of this <code>sap.suite.ui.commons.UnifiedThingInspector</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.UnifiedThingInspector</code> itself.\n\nThe event is fired when the user chooses the Configuration button."
        },
        {
          "name": "attachNavigate",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.UnifiedThingInspector",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.UnifiedThingInspector</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:navigate navigate} event of this <code>sap.suite.ui.commons.UnifiedThingInspector</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.UnifiedThingInspector</code> itself.\n\nThe event is fired when navigation between two pages has been triggered. The transition (if any) to the new page has not started yet. This event can be aborted by the application with preventDefault(), which means that there will be no navigation. This event is propogated from the inner NavContainer. The event can also return internal Master and Detail pages."
        },
        {
          "name": "attachTransactionsButtonPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.UnifiedThingInspector",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.UnifiedThingInspector</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:transactionsButtonPress transactionsButtonPress} event of this <code>sap.suite.ui.commons.UnifiedThingInspector</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.UnifiedThingInspector</code> itself.\n\nThe event is fired when the user chooses the Transactions button."
        },
        {
          "name": "destroyActions",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.UnifiedThingInspector",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the actions in the aggregation {@link #getActions actions}.",
          "deprecated": {
            "since": "1.18.2",
            "text": "Deprecated due to the incorrect work with data binding. Open the popup in the actionsButtonPress event handler instead."
          }
        },
        {
          "name": "destroyFacetContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.UnifiedThingInspector",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the facetContent in the aggregation {@link #getFacetContent facetContent}."
        },
        {
          "name": "destroyFacets",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.UnifiedThingInspector",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the facets in the aggregation {@link #getFacets facets}."
        },
        {
          "name": "destroyKpis",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.UnifiedThingInspector",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the kpis in the aggregation {@link #getKpis kpis}."
        },
        {
          "name": "destroyPages",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.UnifiedThingInspector",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the pages in the aggregation {@link #getPages pages}."
        },
        {
          "name": "destroyTransactions",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.UnifiedThingInspector",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the transactions in the aggregation {@link #getTransactions transactions}.",
          "deprecated": {
            "since": "1.18.2",
            "text": "Deprecated due to the incorrect work with data binding. Open the popup in the transactionsButtonPress event handler instead."
          }
        },
        {
          "name": "detachActionsButtonPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.UnifiedThingInspector",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:actionsButtonPress actionsButtonPress} event of this <code>sap.suite.ui.commons.UnifiedThingInspector</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachAfterNavigate",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.UnifiedThingInspector",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:afterNavigate afterNavigate} event of this <code>sap.suite.ui.commons.UnifiedThingInspector</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachBackAction",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.UnifiedThingInspector",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:backAction backAction} event of this <code>sap.suite.ui.commons.UnifiedThingInspector</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachConfigurationButtonPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.UnifiedThingInspector",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:configurationButtonPress configurationButtonPress} event of this <code>sap.suite.ui.commons.UnifiedThingInspector</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachNavigate",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.UnifiedThingInspector",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:navigate navigate} event of this <code>sap.suite.ui.commons.UnifiedThingInspector</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachTransactionsButtonPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.UnifiedThingInspector",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:transactionsButtonPress transactionsButtonPress} event of this <code>sap.suite.ui.commons.UnifiedThingInspector</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.UnifiedThingInspector with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "fireActionsButtonPress",
          "visibility": "protected",
          "returnValue": {
            "type": "boolean",
            "description": "Whether or not to prevent the default action"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "caller": {
                  "name": "caller",
                  "type": "object",
                  "optional": true,
                  "description": "The object that initiated the event."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:actionsButtonPress actionsButtonPress} to attached listeners.\n\nListeners may prevent the default action of this event by using the <code>preventDefault</code>-method on the event object."
        },
        {
          "name": "fireAfterNavigate",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.UnifiedThingInspector",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "from": {
                  "name": "from",
                  "type": "sap.ui.core.Control",
                  "optional": true,
                  "description": "The page that had been shown before navigation."
                },
                "fromId": {
                  "name": "fromId",
                  "type": "string",
                  "optional": true,
                  "description": "The ID of the page that had been shown before navigation."
                },
                "to": {
                  "name": "to",
                  "type": "sap.ui.core.Control",
                  "optional": true,
                  "description": "The page that is now shown after navigation."
                },
                "toId": {
                  "name": "toId",
                  "type": "string",
                  "optional": true,
                  "description": "The ID of the page that is now shown after navigation."
                },
                "firstTime": {
                  "name": "firstTime",
                  "type": "boolean",
                  "optional": true,
                  "description": "Whether the \"to\" page (more precisely: a control with the ID of the page that has been navigated to) had not been shown/navigated to before."
                },
                "isTo": {
                  "name": "isTo",
                  "type": "boolean",
                  "optional": true,
                  "description": "Whether was a forward navigation, triggered by \"to()\"."
                },
                "isBack": {
                  "name": "isBack",
                  "type": "boolean",
                  "optional": true,
                  "description": "Whether this was a back navigation, triggered by \"back()\"."
                },
                "isBackToTop": {
                  "name": "isBackToTop",
                  "type": "boolean",
                  "optional": true,
                  "description": "Whether this was a navigation to the root page, triggered by \"backToTop()\"."
                },
                "isBackToPage": {
                  "name": "isBackToPage",
                  "type": "boolean",
                  "optional": true,
                  "description": "Whether this was a navigation to the root page, triggered by \"backToTop()\"."
                },
                "direction": {
                  "name": "direction",
                  "type": "string",
                  "optional": true,
                  "description": "How the navigation was triggered, possible values are: \"to\", \"back\", and \"backToTop\"."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:afterNavigate afterNavigate} to attached listeners."
        },
        {
          "name": "fireBackAction",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.UnifiedThingInspector",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:backAction backAction} to attached listeners."
        },
        {
          "name": "fireConfigurationButtonPress",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.UnifiedThingInspector",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "caller": {
                  "name": "caller",
                  "type": "object",
                  "optional": true,
                  "description": "The object that initiated the event."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:configurationButtonPress configurationButtonPress} to attached listeners."
        },
        {
          "name": "fireNavigate",
          "visibility": "protected",
          "returnValue": {
            "type": "boolean",
            "description": "Whether or not to prevent the default action"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "from": {
                  "name": "from",
                  "type": "sap.ui.core.Control",
                  "optional": true,
                  "description": "The page that was shown before the current navigation."
                },
                "fromId": {
                  "name": "fromId",
                  "type": "string",
                  "optional": true,
                  "description": "The ID of the page that was shown before the current navigation."
                },
                "to": {
                  "name": "to",
                  "type": "sap.ui.core.Control",
                  "optional": true,
                  "description": "The page that will be shown after the current navigation."
                },
                "toId": {
                  "name": "toId",
                  "type": "string",
                  "optional": true,
                  "description": "The ID of the page that will be shown after the current navigation."
                },
                "firstTime": {
                  "name": "firstTime",
                  "type": "boolean",
                  "optional": true,
                  "description": "Whether the \"to\" page (more precisely: a control with the ID of the page that is currently navigated to) has not been shown/navigated to before."
                },
                "isTo": {
                  "name": "isTo",
                  "type": "boolean",
                  "optional": true,
                  "description": "Whether this is a forward navigation, triggered by \"to()\"."
                },
                "isBack": {
                  "name": "isBack",
                  "type": "boolean",
                  "optional": true,
                  "description": "Whether this is a back navigation, triggered by \"back()\"."
                },
                "isBackToTop": {
                  "name": "isBackToTop",
                  "type": "boolean",
                  "optional": true,
                  "description": "Whether this is a navigation to the root page, triggered by \"backToTop()\"."
                },
                "isBackToPage": {
                  "name": "isBackToPage",
                  "type": "boolean",
                  "optional": true,
                  "description": "Whether this was a navigation to the root page, triggered by \"backToTop()\"."
                },
                "direction": {
                  "name": "direction",
                  "type": "string",
                  "optional": true,
                  "description": "How the navigation was triggered, possible values are: \"to\", \"back\", and \"backToTop\"."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:navigate navigate} to attached listeners.\n\nListeners may prevent the default action of this event by using the <code>preventDefault</code>-method on the event object."
        },
        {
          "name": "fireTransactionsButtonPress",
          "visibility": "protected",
          "returnValue": {
            "type": "boolean",
            "description": "Whether or not to prevent the default action"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "caller": {
                  "name": "caller",
                  "type": "object",
                  "optional": true,
                  "description": "The object that initiated the event."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:transactionsButtonPress transactionsButtonPress} to attached listeners.\n\nListeners may prevent the default action of this event by using the <code>preventDefault</code>-method on the event object."
        },
        {
          "name": "getActions",
          "visibility": "public",
          "returnValue": { "type": "sap.m.Button[]" },
          "description": "Gets content of aggregation {@link #getActions actions}.\n\nAction sheet controls.",
          "deprecated": {
            "since": "1.18.2",
            "text": "Deprecated due to the incorrect work with data binding. Open the popup in the actionsButtonPress event handler instead."
          }
        },
        {
          "name": "getActionsVisible",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>actionsVisible</code>"
          },
          "description": "Gets current value of property {@link #getActionsVisible actionsVisible}.\n\nIf set to true, the Actions button appears.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getConfigurationVisible",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>configurationVisible</code>"
          },
          "description": "Gets current value of property {@link #getConfigurationVisible configurationVisible}.\n\nIf set to true, the Configuration button appears.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getDescription",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>description</code>"
          },
          "description": "Gets current value of property {@link #getDescription description}.\n\nThe description of the thing."
        },
        {
          "name": "getDestroyPageOnBack",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>destroyPageOnBack</code>"
          },
          "description": "Gets current value of property {@link #getDestroyPageOnBack destroyPageOnBack}.\n\nIf set to true, destroys a page when the user chooses the Back button to leave this page.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getFacetContent",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.Control[]" },
          "description": "Gets content of aggregation {@link #getFacetContent facetContent}.\n\nThe content that appears on the detail page of the UnifiedThingInspector."
        },
        {
          "name": "getFacets",
          "visibility": "public",
          "returnValue": { "type": "sap.suite.ui.commons.FacetOverview[]" },
          "description": "Gets content of aggregation {@link #getFacets facets}.\n\nThe list of the sap.suite.ui.commons.FacetOverview objects."
        },
        {
          "name": "getHeight",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.CSSSize",
            "description": "Value of property <code>height</code>"
          },
          "description": "Gets current value of property {@link #getHeight height}.\n\nThe height of the control.\n\nDefault value is <code>100%</code>."
        },
        {
          "name": "getIcon",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.URI",
            "description": "Value of property <code>icon</code>"
          },
          "description": "Gets current value of property {@link #getIcon icon}.\n\nThe icon to be displayed as a graphical element within the header. This can be an image or an icon from the icon font."
        },
        {
          "name": "getKpis",
          "visibility": "public",
          "returnValue": { "type": "sap.suite.ui.commons.KpiTile[]" },
          "description": "Gets content of aggregation {@link #getKpis kpis}.\n\nA set of the KPI tiles to be shown in the header. Currently only 3 tiles from the list are displayed on the desktop and tablet. On the phone, all tiles are displayed in a swipeable container."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.UnifiedThingInspector."
        },
        {
          "name": "getName",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>name</code>"
          },
          "description": "Gets current value of property {@link #getName name}.\n\nThe name of the thing."
        },
        {
          "name": "getPages",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.Control[]" },
          "description": "Gets content of aggregation {@link #getPages pages}.\n\nContains pages except for Master and Detail."
        },
        {
          "name": "getTitle",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>title</code>"
          },
          "description": "Gets current value of property {@link #getTitle title}.\n\nThe title of the thing."
        },
        {
          "name": "getTransactions",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.Control[]" },
          "description": "Gets content of aggregation {@link #getTransactions transactions}.\n\nMenu items for transaction popup.",
          "deprecated": {
            "since": "1.18.2",
            "text": "Deprecated due to the incorrect work with data binding. Open the popup in the transactionsButtonPress event handler instead."
          }
        },
        {
          "name": "getTransactionsVisible",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>transactionsVisible</code>"
          },
          "description": "Gets current value of property {@link #getTransactionsVisible transactionsVisible}.\n\nIf set to true, the Transaction button appears.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "indexOfAction",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oAction",
              "type": "sap.m.Button",
              "optional": false,
              "description": "The action whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.m.Button</code> in the aggregation {@link #getActions actions}. and returns its index if found or -1 otherwise.",
          "deprecated": {
            "since": "1.18.2",
            "text": "Deprecated due to the incorrect work with data binding. Open the popup in the actionsButtonPress event handler instead."
          }
        },
        {
          "name": "indexOfFacet",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oFacet",
              "type": "sap.suite.ui.commons.FacetOverview",
              "optional": false,
              "description": "The facet whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.suite.ui.commons.FacetOverview</code> in the aggregation {@link #getFacets facets}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "indexOfFacetContent",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oFacetContent",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The facetContent whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.ui.core.Control</code> in the aggregation {@link #getFacetContent facetContent}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "indexOfKpi",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oKpi",
              "type": "sap.suite.ui.commons.KpiTile",
              "optional": false,
              "description": "The kpi whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.suite.ui.commons.KpiTile</code> in the aggregation {@link #getKpis kpis}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "indexOfPage",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oPage",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The page whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.ui.core.Control</code> in the aggregation {@link #getPages pages}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "indexOfTransaction",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oTransaction",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The transaction whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.ui.core.Control</code> in the aggregation {@link #getTransactions transactions}. and returns its index if found or -1 otherwise.",
          "deprecated": {
            "since": "1.18.2",
            "text": "Deprecated due to the incorrect work with data binding. Open the popup in the transactionsButtonPress event handler instead."
          }
        },
        {
          "name": "insertAction",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.UnifiedThingInspector",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oAction",
              "type": "sap.m.Button",
              "optional": false,
              "description": "The action to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the action should be inserted at; for a negative value of <code>iIndex</code>, the action is inserted at position 0; for a value greater than the current size of the aggregation, the action is inserted at the last position"
            }
          ],
          "description": "Inserts a action into the aggregation {@link #getActions actions}.",
          "deprecated": {
            "since": "1.18.2",
            "text": "Deprecated due to the incorrect work with data binding. Open the popup in the actionsButtonPress event handler instead."
          }
        },
        {
          "name": "insertFacet",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.UnifiedThingInspector",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oFacet",
              "type": "sap.suite.ui.commons.FacetOverview",
              "optional": false,
              "description": "The facet to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the facet should be inserted at; for a negative value of <code>iIndex</code>, the facet is inserted at position 0; for a value greater than the current size of the aggregation, the facet is inserted at the last position"
            }
          ],
          "description": "Inserts a facet into the aggregation {@link #getFacets facets}."
        },
        {
          "name": "insertFacetContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.UnifiedThingInspector",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oFacetContent",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The facetContent to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the facetContent should be inserted at; for a negative value of <code>iIndex</code>, the facetContent is inserted at position 0; for a value greater than the current size of the aggregation, the facetContent is inserted at the last position"
            }
          ],
          "description": "Inserts a facetContent into the aggregation {@link #getFacetContent facetContent}."
        },
        {
          "name": "insertKpi",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.UnifiedThingInspector",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oKpi",
              "type": "sap.suite.ui.commons.KpiTile",
              "optional": false,
              "description": "The kpi to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the kpi should be inserted at; for a negative value of <code>iIndex</code>, the kpi is inserted at position 0; for a value greater than the current size of the aggregation, the kpi is inserted at the last position"
            }
          ],
          "description": "Inserts a kpi into the aggregation {@link #getKpis kpis}."
        },
        {
          "name": "insertPage",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.UnifiedThingInspector",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oPage",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The page to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the page should be inserted at; for a negative value of <code>iIndex</code>, the page is inserted at position 0; for a value greater than the current size of the aggregation, the page is inserted at the last position"
            }
          ],
          "description": "Inserts a page into the aggregation {@link #getPages pages}."
        },
        {
          "name": "insertTransaction",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.UnifiedThingInspector",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oTransaction",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The transaction to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the transaction should be inserted at; for a negative value of <code>iIndex</code>, the transaction is inserted at position 0; for a value greater than the current size of the aggregation, the transaction is inserted at the last position"
            }
          ],
          "description": "Inserts a transaction into the aggregation {@link #getTransactions transactions}.",
          "deprecated": {
            "since": "1.18.2",
            "text": "Deprecated due to the incorrect work with data binding. Open the popup in the transactionsButtonPress event handler instead."
          }
        },
        {
          "name": "removeAction",
          "visibility": "public",
          "returnValue": {
            "type": "sap.m.Button",
            "description": "The removed action or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vAction",
              "type": "int|string|sap.m.Button",
              "optional": false,
              "description": "The action to remove or its index or id"
            }
          ],
          "description": "Removes a action from the aggregation {@link #getActions actions}.",
          "deprecated": {
            "since": "1.18.2",
            "text": "Deprecated due to the incorrect work with data binding. Open the popup in the actionsButtonPress event handler instead."
          }
        },
        {
          "name": "removeAllActions",
          "visibility": "public",
          "returnValue": {
            "type": "sap.m.Button[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getActions actions}.\n\nAdditionally, it unregisters them from the hosting UIArea.",
          "deprecated": {
            "since": "1.18.2",
            "text": "Deprecated due to the incorrect work with data binding. Open the popup in the actionsButtonPress event handler instead."
          }
        },
        {
          "name": "removeAllFacetContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.Control[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getFacetContent facetContent}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeAllFacets",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.FacetOverview[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getFacets facets}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeAllKpis",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.KpiTile[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getKpis kpis}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeAllPages",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.Control[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getPages pages}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeAllTransactions",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.Control[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getTransactions transactions}.\n\nAdditionally, it unregisters them from the hosting UIArea.",
          "deprecated": {
            "since": "1.18.2",
            "text": "Deprecated due to the incorrect work with data binding. Open the popup in the transactionsButtonPress event handler instead."
          }
        },
        {
          "name": "removeFacet",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.FacetOverview",
            "description": "The removed facet or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vFacet",
              "type": "int|string|sap.suite.ui.commons.FacetOverview",
              "optional": false,
              "description": "The facet to remove or its index or id"
            }
          ],
          "description": "Removes a facet from the aggregation {@link #getFacets facets}."
        },
        {
          "name": "removeFacetContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.Control",
            "description": "The removed facetContent or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vFacetContent",
              "type": "int|string|sap.ui.core.Control",
              "optional": false,
              "description": "The facetContent to remove or its index or id"
            }
          ],
          "description": "Removes a facetContent from the aggregation {@link #getFacetContent facetContent}."
        },
        {
          "name": "removeKpi",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.KpiTile",
            "description": "The removed kpi or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vKpi",
              "type": "int|string|sap.suite.ui.commons.KpiTile",
              "optional": false,
              "description": "The kpi to remove or its index or id"
            }
          ],
          "description": "Removes a kpi from the aggregation {@link #getKpis kpis}."
        },
        {
          "name": "removePage",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.Control",
            "description": "The removed page or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vPage",
              "type": "int|string|sap.ui.core.Control",
              "optional": false,
              "description": "The page to remove or its index or id"
            }
          ],
          "description": "Removes a page from the aggregation {@link #getPages pages}."
        },
        {
          "name": "removeTransaction",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.Control",
            "description": "The removed transaction or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vTransaction",
              "type": "int|string|sap.ui.core.Control",
              "optional": false,
              "description": "The transaction to remove or its index or id"
            }
          ],
          "description": "Removes a transaction from the aggregation {@link #getTransactions transactions}.",
          "deprecated": {
            "since": "1.18.2",
            "text": "Deprecated due to the incorrect work with data binding. Open the popup in the transactionsButtonPress event handler instead."
          }
        },
        {
          "name": "setActionsVisible",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.UnifiedThingInspector",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bActionsVisible",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>actionsVisible</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getActionsVisible actionsVisible}.\n\nIf set to true, the Actions button appears.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setConfigurationVisible",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.UnifiedThingInspector",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bConfigurationVisible",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>configurationVisible</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getConfigurationVisible configurationVisible}.\n\nIf set to true, the Configuration button appears.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setDescription",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.UnifiedThingInspector",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sDescription",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>description</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getDescription description}.\n\nThe description of the thing.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setDestroyPageOnBack",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.UnifiedThingInspector",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bDestroyPageOnBack",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>destroyPageOnBack</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getDestroyPageOnBack destroyPageOnBack}.\n\nIf set to true, destroys a page when the user chooses the Back button to leave this page.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setHeight",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.UnifiedThingInspector",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sHeight",
              "type": "sap.ui.core.CSSSize",
              "optional": false,
              "description": "New value for property <code>height</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getHeight height}.\n\nThe height of the control.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>100%</code>."
        },
        {
          "name": "setIcon",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.UnifiedThingInspector",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sIcon",
              "type": "sap.ui.core.URI",
              "optional": false,
              "description": "New value for property <code>icon</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getIcon icon}.\n\nThe icon to be displayed as a graphical element within the header. This can be an image or an icon from the icon font.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setName",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.UnifiedThingInspector",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sName",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>name</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getName name}.\n\nThe name of the thing.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setTitle",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.UnifiedThingInspector",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sTitle",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>title</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getTitle title}.\n\nThe title of the thing.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setTransactionsVisible",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.UnifiedThingInspector",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bTransactionsVisible",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>transactionsVisible</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getTransactionsVisible transactionsVisible}.\n\nIf set to true, the Transaction button appears.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.util.HtmlElement",
      "basename": "HtmlElement",
      "resource": "sap/suite/ui/commons/util/HtmlElement.js",
      "module": "sap/suite/ui/commons/util/HtmlElement",
      "export": "",
      "static": true,
      "visibility": "protected",
      "extends": "sap.ui.base.Object",
      "description": "HtmlElement A model class for holding information about one HTML tag.",
      "ui5-metadata": { "stereotype": "object" },
      "constructor": {
        "visibility": "protected",
        "parameters": [
          {
            "name": "sName",
            "type": "string",
            "optional": false,
            "description": "Tag name (eg. div, ul etc.)."
          }
        ],
        "description": "Creates a HtmlElement which resembles one HTML tag."
      },
      "methods": [
        {
          "name": "addChild",
          "visibility": "protected",
          "parameters": [
            {
              "name": "oChild",
              "type": "string|sap.suite.ui.commons.util.HtmlElement|sap.ui.core.Control",
              "optional": false,
              "description": "Child to add."
            }
          ],
          "description": "Adds a child to the element. A child can be either text, another HtmlElement or a Control. Children will e rendered as a content of this element."
        },
        {
          "name": "addChildEscaped",
          "visibility": "protected",
          "parameters": [
            {
              "name": "sText",
              "type": "string",
              "optional": false,
              "description": "Text to add."
            },
            {
              "name": "bConvertLineBreakToBr",
              "type": "boolean",
              "optional": false,
              "description": "If true, \\n will be converted to <br>."
            }
          ],
          "description": "Adds a string child and escapes it using encodeHTML."
        },
        {
          "name": "addClass",
          "visibility": "protected",
          "parameters": [
            {
              "name": "sClass",
              "type": "string",
              "optional": false,
              "description": "CSS class to add."
            }
          ],
          "description": "Adds a class."
        },
        {
          "name": "addControlData",
          "visibility": "protected",
          "parameters": [
            {
              "name": "oControl",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "Control to load data from. Usually the control which resembles this element."
            }
          ],
          "description": "Adds all html relevant data from UI5 control. It sets ID, adds all custom data and adds custom style classes. This function should be called on the element which resembles the rendered control. It's usually the top element."
        },
        {
          "name": "addStyle",
          "visibility": "protected",
          "parameters": [
            {
              "name": "sName",
              "type": "string",
              "optional": false,
              "description": "Name of the style (eg. margin, color)."
            },
            {
              "name": "oValue",
              "type": "string|number",
              "optional": false,
              "description": "Value of the style."
            }
          ],
          "description": "Adds a HTML style (eg. \"color:red\")."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.util.HtmlElement with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.util.HtmlElement."
        },
        {
          "name": "getRenderer",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.util.HtmlElementRenderer",
            "description": "The newly created renderer instance"
          },
          "description": "Returns a renderer for this tag."
        },
        {
          "name": "setAttribute",
          "visibility": "protected",
          "parameters": [
            {
              "name": "sKey",
              "type": "string",
              "optional": false,
              "description": "Attribute name."
            },
            {
              "name": "oValue",
              "type": "string|number|boolean",
              "optional": false,
              "description": "Value of an attribute."
            },
            {
              "name": "bEscape",
              "type": "boolean",
              "optional": true,
              "defaultValue": "\"false\"",
              "description": "Tells if the value should be escaped using encodeHTML."
            }
          ],
          "description": "Sets an attribute."
        },
        {
          "name": "setId",
          "visibility": "protected",
          "parameters": [
            {
              "name": "sId",
              "type": "string",
              "optional": false,
              "description": "Id to set."
            },
            {
              "name": "bAddSapUi",
              "type": "boolean",
              "optional": true,
              "defaultValue": "\"false\"",
              "description": "If true, data-sap-ui will be set to the Id as well."
            }
          ],
          "description": "Sets id attribute."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.util.HtmlElementRenderer",
      "basename": "HtmlElementRenderer",
      "resource": "sap/suite/ui/commons/util/HtmlElementRenderer.js",
      "module": "sap/suite/ui/commons/util/HtmlElementRenderer",
      "export": "",
      "static": true,
      "visibility": "protected",
      "extends": "sap.ui.base.Object",
      "description": "HtmlElementRenderer A renderer for HtmlElement.",
      "ui5-metadata": { "stereotype": "object" },
      "constructor": {
        "visibility": "protected",
        "parameters": [
          {
            "name": "oHtmlElement",
            "type": "sap.suite.ui.commons.util.HtmlElement",
            "optional": false,
            "description": "Html element to render."
          }
        ],
        "description": "Creates a renderer for HtmlElement."
      },
      "methods": [
        {
          "name": "_renderAttributes",
          "visibility": "protected",
          "parameters": [
            {
              "name": "oRm",
              "type": "sap.ui.core.RenderManager",
              "optional": false,
              "description": "RenderManager used for outputting content."
            }
          ],
          "description": "Renders all attributes of parent tag."
        },
        {
          "name": "_renderChildren",
          "visibility": "protected",
          "parameters": [
            {
              "name": "oRm",
              "type": "sap.ui.core.RenderManager",
              "optional": false,
              "description": "RenderManager used for outputting content."
            }
          ],
          "description": "Renders children of given node."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.util.HtmlElementRenderer with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.util.HtmlElementRenderer."
        },
        {
          "name": "render",
          "visibility": "protected",
          "parameters": [
            {
              "name": "oRm",
              "type": "sap.ui.core.RenderManager",
              "optional": false,
              "description": "RenderManager used for outputting content."
            }
          ],
          "description": "Renders HtmlElement to given render manager."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.util.ManagedObjectRegister",
      "basename": "ManagedObjectRegister",
      "resource": "sap/suite/ui/commons/util/ManagedObjectRegister.js",
      "module": "sap/suite/ui/commons/util/ManagedObjectRegister",
      "export": "",
      "static": true,
      "visibility": "protected",
      "extends": "sap.ui.base.Object",
      "description": "A registry which keeps a set of managed objects and allows you to lazy load them and destroy them at once. A lot of controls keep those object as private properties and destroies them one by one. Instead you can just use: <pre><code>\nthis._objectRegister = new ManagedObjectRegister();\nthis._objectRegister.register(\"Button\", function() {\n return new Button(...);\n});\n\nthis._objectRegister.getButton()...\n\nthis._objectRegister.destroyAll();\n</code></pre>",
      "ui5-metadata": { "stereotype": "object" },
      "constructor": {
        "visibility": "protected",
        "description": "Creates an object registry for storing references to managed objects."
      },
      "methods": [
        {
          "name": "destroyAll",
          "visibility": "protected",
          "description": "Destroys all objects in the registry and removes it's definition."
        },
        {
          "name": "destroyObject",
          "visibility": "protected",
          "parameters": [
            {
              "name": "sKey",
              "type": "string",
              "optional": false,
              "description": "Key of the object."
            }
          ],
          "description": "Destroys an object and removes it from the registry."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.util.ManagedObjectRegister with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.util.ManagedObjectRegister."
        },
        {
          "name": "getObject",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.base.ManagedObject",
            "description": "An object from the register. If the object doesn't exist it will get created by it's factory function."
          },
          "parameters": [
            {
              "name": "sKey",
              "type": "string",
              "optional": true,
              "defaultValue": "\"Object\"",
              "description": "Key of the object."
            }
          ],
          "description": "Returns a stored object. If called without parameters it will return object registered with key \"Object\"."
        },
        {
          "name": "isObjectInitialized",
          "visibility": "protected",
          "returnValue": {
            "type": "boolean",
            "description": "True for existing object"
          },
          "parameters": [
            {
              "name": "sKey",
              "type": "string",
              "optional": true,
              "defaultValue": "\"Object\"",
              "description": "Key of the object."
            }
          ],
          "description": "Returns true if there is the object registered and created. If there is not triggered factory function, returns false."
        },
        {
          "name": "register",
          "visibility": "protected",
          "parameters": [
            {
              "name": "sKey",
              "type": "string",
              "optional": false,
              "description": "Key of the object. Should start with capital letter."
            },
            {
              "name": "oFactoryFunction",
              "type": "function|sap.ui.base.ManagedObject",
              "optional": false,
              "description": "A managed object to register or a factory function which can build the object. Factory function can be used for lazy loading of the object. Register will pass sKey to the function, so it can be shared for more objects."
            }
          ],
          "description": "Registers an object. Registry will automatically create a getter for the object."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.suite.ui.commons.ValueStatus",
      "basename": "ValueStatus",
      "resource": "sap/suite/ui/commons/library.js",
      "module": "sap/suite/ui/commons/library",
      "export": "ValueStatus",
      "static": true,
      "visibility": "public",
      "description": "Marker for the key value status.",
      "deprecated": {
        "since": "1.32",
        "text": "Deprecated. Numeric content or any other standard Fiori control should be used instead."
      },
      "ui5-metamodel": true,
      "properties": [
        {
          "name": "Bad",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Bad value."
        },
        {
          "name": "Critical",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Critical value."
        },
        {
          "name": "Good",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Good value."
        },
        {
          "name": "Neutral",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Positive value."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.VerticalNavigationBar",
      "basename": "VerticalNavigationBar",
      "resource": "sap/suite/ui/commons/VerticalNavigationBar.js",
      "module": "sap/suite/ui/commons/VerticalNavigationBar",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.ux3.NavigationBar",
      "description": "This control extends the sap.ui.ux3.NavigationBar and allows you to display navigation items vertically. The navigation list can contain sap.ui.ux3.NavigationItem or sap.suite.ui.commons.CountingNavigationItem controls.",
      "deprecated": {
        "since": "1.32",
        "text": "Deprecated. sap.uxap.ObjectPageLayout should be used instead."
      },
      "ui5-metamodel": true,
      "ui5-metadata": { "stereotype": "control" },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new VerticalNavigationBar."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.VerticalNavigationBar with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.ux3.NavigationBar.extend}."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.VerticalNavigationBar."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.commons.ViewRepeater",
      "basename": "ViewRepeater",
      "resource": "sap/suite/ui/commons/ViewRepeater.js",
      "module": "sap/suite/ui/commons/ViewRepeater",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.commons.RowRepeater",
      "description": "This control extends the sap.ui.commons.RowRepeater control providing an ability to change data representation by switching between a number of views. The data can be displayed not only in rows but also in tiles that are adjusted to fill the entire horizontal space in a row.",
      "deprecated": {
        "since": "1.32",
        "text": "Deprecated. Standard Fiori technology should be used."
      },
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "itemMinWidth",
            "type": "int",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The minimal width of the tile for the current view. Only applicable if \"responsive\" property is set to true.",
            "methods": ["getItemMinWidth", "setItemMinWidth"]
          },
          {
            "name": "responsive",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "description": "This parameter indicates whether the content is shown in rows or tiles. If false, the content is shown in rows just like in core sap.ui.commons.RowRepeater. If true, the content is shown in tiles (similar to sap.ui.ux3.DataSet control) that have minimal width defined by the \"itemMinWidth\" property. The number of columns depends on the parent control's width. If you resize the control, the number of columns may change respectively so that the content tiles can fill the entire space of a row.",
            "methods": ["getResponsive", "setResponsive"]
          },
          {
            "name": "defaultViewIndex",
            "type": "int",
            "defaultValue": 0,
            "group": "Misc",
            "visibility": "public",
            "description": "The index of the default view starting from 0. The view is selected on the initial rendering of the control. If the index is greater than the total quantity of the views, the last view is selected.",
            "methods": ["getDefaultViewIndex", "setDefaultViewIndex"]
          },
          {
            "name": "showSearchField",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "description": "Indicates if the search field panel is shown.",
            "methods": ["getShowSearchField", "setShowSearchField"]
          },
          {
            "name": "showViews",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "description": "Indicates if the view selector panel is shown.",
            "methods": ["getShowViews", "setShowViews"]
          },
          {
            "name": "external",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "description": "Indicates if the external representation of the current view is rendered.",
            "methods": ["getExternal", "setExternal"]
          },
          {
            "name": "itemHeight",
            "type": "int",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The height of the tile in the current view in pixels. Only applicable if the responsive property is set to true. This value is used for calculating the number of tile rows.",
            "methods": ["getItemHeight", "setItemHeight"]
          },
          {
            "name": "height",
            "type": "sap.ui.core.CSSSize",
            "defaultValue": "100%",
            "group": "Misc",
            "visibility": "public",
            "description": "The height of the control. Only applicable if the responsive property is set to true.",
            "methods": ["getHeight", "setHeight"]
          }
        ],
        "aggregations": [
          {
            "name": "views",
            "singularName": "view",
            "type": "sap.suite.ui.commons.RepeaterViewConfiguration",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "The list of views for the data representation.",
            "methods": [
              "getViews",
              "destroyViews",
              "insertView",
              "addView",
              "removeView",
              "indexOfView",
              "removeAllViews"
            ]
          }
        ],
        "associations": [
          {
            "name": "externalRepresentation",
            "singularName": "externalRepresentation",
            "type": "sap.ui.core.Control",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "The control to be rendered instead of the repeater's own content.",
            "methods": [
              "getExternalRepresentation",
              "setExternalRepresentation"
            ]
          }
        ],
        "events": [
          {
            "name": "search",
            "visibility": "public",
            "description": "This event is fired when the user performs a search.",
            "parameters": {
              "query": {
                "name": "query",
                "type": "string",
                "description": "The search query."
              }
            },
            "methods": ["attachSearch", "detachSearch", "fireSearch"]
          },
          {
            "name": "changeView",
            "visibility": "public",
            "description": "This event is fired when a user switches between views.",
            "parameters": {
              "oldViewIndex": {
                "name": "oldViewIndex",
                "type": "int",
                "description": "Contains an index of the previous view in the Views aggregation."
              },
              "newViewIndex": {
                "name": "newViewIndex",
                "type": "int",
                "description": "Contains an index of the new view in the Views aggregation."
              },
              "filterId": {
                "name": "filterId",
                "type": "string",
                "description": "Contains an ID of the filter in the Filters aggregation."
              },
              "sorterId": {
                "name": "sorterId",
                "type": "string",
                "description": "Contains an ID of the sorter in the Sorters aggregation."
              },
              "page": {
                "name": "page",
                "type": "int",
                "description": "Contains a page number."
              }
            },
            "methods": [
              "attachChangeView",
              "detachChangeView",
              "fireChangeView"
            ]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new ViewRepeater.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "changeView",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "oldViewIndex": {
                      "name": "oldViewIndex",
                      "type": "int",
                      "optional": false,
                      "description": "Contains an index of the previous view in the Views aggregation."
                    },
                    "newViewIndex": {
                      "name": "newViewIndex",
                      "type": "int",
                      "optional": false,
                      "description": "Contains an index of the new view in the Views aggregation."
                    },
                    "filterId": {
                      "name": "filterId",
                      "type": "string",
                      "optional": false,
                      "description": "Contains an ID of the filter in the Filters aggregation."
                    },
                    "sorterId": {
                      "name": "sorterId",
                      "type": "string",
                      "optional": false,
                      "description": "Contains an ID of the sorter in the Sorters aggregation."
                    },
                    "page": {
                      "name": "page",
                      "type": "int",
                      "optional": false,
                      "description": "Contains a page number."
                    }
                  }
                }
              }
            }
          ],
          "description": "This event is fired when a user switches between views."
        },
        {
          "name": "search",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "query": {
                      "name": "query",
                      "type": "string",
                      "optional": false,
                      "description": "The search query."
                    }
                  }
                }
              }
            }
          ],
          "description": "This event is fired when the user performs a search."
        }
      ],
      "methods": [
        {
          "name": "addView",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ViewRepeater",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oView",
              "type": "sap.suite.ui.commons.RepeaterViewConfiguration",
              "optional": false,
              "description": "The view to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some view to the aggregation {@link #getViews views}."
        },
        {
          "name": "attachChangeView",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ViewRepeater",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.ViewRepeater</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:changeView changeView} event of this <code>sap.suite.ui.commons.ViewRepeater</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.ViewRepeater</code> itself.\n\nThis event is fired when a user switches between views."
        },
        {
          "name": "attachSearch",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ViewRepeater",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.ViewRepeater</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:search search} event of this <code>sap.suite.ui.commons.ViewRepeater</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.ViewRepeater</code> itself.\n\nThis event is fired when the user performs a search."
        },
        {
          "name": "destroyViews",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ViewRepeater",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the views in the aggregation {@link #getViews views}."
        },
        {
          "name": "detachChangeView",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ViewRepeater",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:changeView changeView} event of this <code>sap.suite.ui.commons.ViewRepeater</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachSearch",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ViewRepeater",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:search search} event of this <code>sap.suite.ui.commons.ViewRepeater</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.commons.ViewRepeater with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.commons.RowRepeater.extend}."
        },
        {
          "name": "fireChangeView",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.ViewRepeater",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "oldViewIndex": {
                  "name": "oldViewIndex",
                  "type": "int",
                  "optional": true,
                  "description": "Contains an index of the previous view in the Views aggregation."
                },
                "newViewIndex": {
                  "name": "newViewIndex",
                  "type": "int",
                  "optional": true,
                  "description": "Contains an index of the new view in the Views aggregation."
                },
                "filterId": {
                  "name": "filterId",
                  "type": "string",
                  "optional": true,
                  "description": "Contains an ID of the filter in the Filters aggregation."
                },
                "sorterId": {
                  "name": "sorterId",
                  "type": "string",
                  "optional": true,
                  "description": "Contains an ID of the sorter in the Sorters aggregation."
                },
                "page": {
                  "name": "page",
                  "type": "int",
                  "optional": true,
                  "description": "Contains a page number."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:changeView changeView} to attached listeners."
        },
        {
          "name": "fireSearch",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.commons.ViewRepeater",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "query": {
                  "name": "query",
                  "type": "string",
                  "optional": true,
                  "description": "The search query."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:search search} to attached listeners."
        },
        {
          "name": "getDefaultViewIndex",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>defaultViewIndex</code>"
          },
          "description": "Gets current value of property {@link #getDefaultViewIndex defaultViewIndex}.\n\nThe index of the default view starting from 0. The view is selected on the initial rendering of the control. If the index is greater than the total quantity of the views, the last view is selected.\n\nDefault value is <code>0</code>."
        },
        {
          "name": "getExternal",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>external</code>"
          },
          "description": "Gets current value of property {@link #getExternal external}.\n\nIndicates if the external representation of the current view is rendered.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getExternalRepresentation",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.ID" },
          "description": "ID of the element which is the current target of the association {@link #getExternalRepresentation externalRepresentation}, or <code>null</code>."
        },
        {
          "name": "getHeight",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.CSSSize",
            "description": "Value of property <code>height</code>"
          },
          "description": "Gets current value of property {@link #getHeight height}.\n\nThe height of the control. Only applicable if the responsive property is set to true.\n\nDefault value is <code>100%</code>."
        },
        {
          "name": "getItemHeight",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>itemHeight</code>"
          },
          "description": "Gets current value of property {@link #getItemHeight itemHeight}.\n\nThe height of the tile in the current view in pixels. Only applicable if the responsive property is set to true. This value is used for calculating the number of tile rows."
        },
        {
          "name": "getItemMinWidth",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>itemMinWidth</code>"
          },
          "description": "Gets current value of property {@link #getItemMinWidth itemMinWidth}.\n\nThe minimal width of the tile for the current view. Only applicable if \"responsive\" property is set to true."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.commons.ViewRepeater."
        },
        {
          "name": "getResponsive",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>responsive</code>"
          },
          "description": "Gets current value of property {@link #getResponsive responsive}.\n\nThis parameter indicates whether the content is shown in rows or tiles. If false, the content is shown in rows just like in core sap.ui.commons.RowRepeater. If true, the content is shown in tiles (similar to sap.ui.ux3.DataSet control) that have minimal width defined by the \"itemMinWidth\" property. The number of columns depends on the parent control's width. If you resize the control, the number of columns may change respectively so that the content tiles can fill the entire space of a row.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getShowSearchField",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showSearchField</code>"
          },
          "description": "Gets current value of property {@link #getShowSearchField showSearchField}.\n\nIndicates if the search field panel is shown.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getShowViews",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showViews</code>"
          },
          "description": "Gets current value of property {@link #getShowViews showViews}.\n\nIndicates if the view selector panel is shown.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getViews",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.RepeaterViewConfiguration[]"
          },
          "description": "Gets content of aggregation {@link #getViews views}.\n\nThe list of views for the data representation."
        },
        {
          "name": "indexOfView",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oView",
              "type": "sap.suite.ui.commons.RepeaterViewConfiguration",
              "optional": false,
              "description": "The view whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.suite.ui.commons.RepeaterViewConfiguration</code> in the aggregation {@link #getViews views}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "insertView",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ViewRepeater",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oView",
              "type": "sap.suite.ui.commons.RepeaterViewConfiguration",
              "optional": false,
              "description": "The view to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the view should be inserted at; for a negative value of <code>iIndex</code>, the view is inserted at position 0; for a value greater than the current size of the aggregation, the view is inserted at the last position"
            }
          ],
          "description": "Inserts a view into the aggregation {@link #getViews views}."
        },
        {
          "name": "removeAllViews",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.RepeaterViewConfiguration[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getViews views}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeView",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.RepeaterViewConfiguration",
            "description": "The removed view or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vView",
              "type": "int|string|sap.suite.ui.commons.RepeaterViewConfiguration",
              "optional": false,
              "description": "The view to remove or its index or id"
            }
          ],
          "description": "Removes a view from the aggregation {@link #getViews views}."
        },
        {
          "name": "setDefaultViewIndex",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ViewRepeater",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iDefaultViewIndex",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>defaultViewIndex</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getDefaultViewIndex defaultViewIndex}.\n\nThe index of the default view starting from 0. The view is selected on the initial rendering of the control. If the index is greater than the total quantity of the views, the last view is selected.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>0</code>."
        },
        {
          "name": "setExternal",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ViewRepeater",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bExternal",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>external</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getExternal external}.\n\nIndicates if the external representation of the current view is rendered.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setExternalRepresentation",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ViewRepeater",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oExternalRepresentation",
              "type": "sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "ID of an element which becomes the new target of this externalRepresentation association; alternatively, an element instance may be given"
            }
          ],
          "description": "Sets the associated {@link #getExternalRepresentation externalRepresentation}."
        },
        {
          "name": "setHeight",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ViewRepeater",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sHeight",
              "type": "sap.ui.core.CSSSize",
              "optional": false,
              "description": "New value for property <code>height</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getHeight height}.\n\nThe height of the control. Only applicable if the responsive property is set to true.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>100%</code>."
        },
        {
          "name": "setItemHeight",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ViewRepeater",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iItemHeight",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>itemHeight</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getItemHeight itemHeight}.\n\nThe height of the tile in the current view in pixels. Only applicable if the responsive property is set to true. This value is used for calculating the number of tile rows.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setItemMinWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ViewRepeater",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iItemMinWidth",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>itemMinWidth</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getItemMinWidth itemMinWidth}.\n\nThe minimal width of the tile for the current view. Only applicable if \"responsive\" property is set to true.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setResponsive",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ViewRepeater",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bResponsive",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>responsive</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getResponsive responsive}.\n\nThis parameter indicates whether the content is shown in rows or tiles. If false, the content is shown in rows just like in core sap.ui.commons.RowRepeater. If true, the content is shown in tiles (similar to sap.ui.ux3.DataSet control) that have minimal width defined by the \"itemMinWidth\" property. The number of columns depends on the parent control's width. If you resize the control, the number of columns may change respectively so that the content tiles can fill the entire space of a row.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setShowSearchField",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ViewRepeater",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowSearchField",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showSearchField</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowSearchField showSearchField}.\n\nIndicates if the search field panel is shown.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setShowViews",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.commons.ViewRepeater",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowViews",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showViews</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowViews showViews}.\n\nIndicates if the view selector panel is shown.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        }
      ]
    }
  ]
}
