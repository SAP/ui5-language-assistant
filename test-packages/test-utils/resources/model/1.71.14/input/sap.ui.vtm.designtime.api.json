{
  "$schema-ref": "http://schemas.sap.com/sapui5/designtime/api.json/1.0",
  "version": "1.71.0",
  "library": "sap.ui.vtm",
  "symbols": [
    {
      "kind": "namespace",
      "name": "sap.ui.vtm",
      "basename": "vtm",
      "resource": "sap/ui/vtm/library.js",
      "module": "sap/ui/vtm/library",
      "export": "",
      "static": true,
      "visibility": "public",
      "description": "SAPUI5 library with controls to visualize, map and restructure hierarchical business data that maps to 3D objects.",
      "experimental": {
        "since": "1.50.0",
        "text": "This library is experimental and might be modified or removed in future versions."
      },
      "properties": [
        {
          "name": "AXIS1X",
          "module": "sap/ui/vtm/MatrixComponent",
          "visibility": "public",
          "static": true,
          "type": "int",
          "description": "The <code>AXIS1X<code> component.",
          "resource": "sap/ui/vtm/MatrixComponent.js"
        },
        {
          "name": "AXIS1Y",
          "module": "sap/ui/vtm/MatrixComponent",
          "visibility": "public",
          "static": true,
          "type": "int",
          "description": "The <code>AXIS1Y<code> component.",
          "resource": "sap/ui/vtm/MatrixComponent.js"
        },
        {
          "name": "AXIS1Z",
          "module": "sap/ui/vtm/MatrixComponent",
          "visibility": "public",
          "static": true,
          "type": "int",
          "description": "The <code>AXIS1Z<code> component.",
          "resource": "sap/ui/vtm/MatrixComponent.js"
        },
        {
          "name": "AXIS2X",
          "module": "sap/ui/vtm/MatrixComponent",
          "visibility": "public",
          "static": true,
          "type": "int",
          "description": "The <code>AXIS2X<code> component.",
          "resource": "sap/ui/vtm/MatrixComponent.js"
        },
        {
          "name": "AXIS2Y",
          "module": "sap/ui/vtm/MatrixComponent",
          "visibility": "public",
          "static": true,
          "type": "int",
          "description": "The <code>AXIS2Y<code> component.",
          "resource": "sap/ui/vtm/MatrixComponent.js"
        },
        {
          "name": "AXIS2Z",
          "module": "sap/ui/vtm/MatrixComponent",
          "visibility": "public",
          "static": true,
          "type": "int",
          "description": "The <code>AXIS2Z<code> component.",
          "resource": "sap/ui/vtm/MatrixComponent.js"
        },
        {
          "name": "AXIS3X",
          "module": "sap/ui/vtm/MatrixComponent",
          "visibility": "public",
          "static": true,
          "type": "int",
          "description": "The <code>AXIS3X<code> component.",
          "resource": "sap/ui/vtm/MatrixComponent.js"
        },
        {
          "name": "AXIS3Y",
          "module": "sap/ui/vtm/MatrixComponent",
          "visibility": "public",
          "static": true,
          "type": "int",
          "description": "The <code>AXIS3Y<code> component.",
          "resource": "sap/ui/vtm/MatrixComponent.js"
        },
        {
          "name": "AXIS3Z",
          "module": "sap/ui/vtm/MatrixComponent",
          "visibility": "public",
          "static": true,
          "type": "int",
          "description": "The <code>AXIS3Z<code> component.",
          "resource": "sap/ui/vtm/MatrixComponent.js"
        },
        {
          "name": "LOCX",
          "module": "sap/ui/vtm/MatrixComponent",
          "visibility": "public",
          "static": true,
          "type": "int",
          "description": "The <code>LOCX<code> (X axis translation) component.",
          "resource": "sap/ui/vtm/MatrixComponent.js"
        },
        {
          "name": "LOCY",
          "module": "sap/ui/vtm/MatrixComponent",
          "visibility": "public",
          "static": true,
          "type": "int",
          "description": "The <code>LOCY<code> (Y axis translation) component.",
          "resource": "sap/ui/vtm/MatrixComponent.js"
        },
        {
          "name": "LOCZ",
          "module": "sap/ui/vtm/MatrixComponent",
          "visibility": "public",
          "static": true,
          "type": "int",
          "description": "The <code>LOCZ<code> (Z axis translation) component.",
          "resource": "sap/ui/vtm/MatrixComponent.js"
        },
        {
          "name": "SCALE",
          "module": "sap/ui/vtm/MatrixComponent",
          "visibility": "public",
          "static": true,
          "type": "int",
          "description": "The <code>SCALE<code> component (there is only one scale component for all axes).",
          "resource": "sap/ui/vtm/MatrixComponent.js"
        }
      ],
      "methods": [
        {
          "name": "createVtm",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.vtm.Vtm",
            "description": "The created instance of {@link sap.ui.vtm.Vtm}."
          },
          "parameters": [
            {
              "name": "sId",
              "type": "string",
              "optional": false,
              "description": "The id to pass to the {@link sap.ui.vtm.Vtm} constructor."
            },
            {
              "name": "mSettings",
              "type": "object",
              "optional": false,
              "description": "The settings to pass to the {@link sap.ui.vtm.Vtm} constructor. Any extensions specified in the settings will be replaced with a default set."
            }
          ],
          "description": "Creates an instance of {@link sap.ui.vtm.Vtm} with a default set of extensions.\n\nThe {@link sap.ui.vtm.Vtm} constructor can be used to create an instance of {@link sap.ui.vtm.Vtm} with a specific set of extensions."
        }
      ]
    },
    {
      "kind": "namespace",
      "name": "sap.ui.vtm.ArrayUtilities",
      "basename": "ArrayUtilities",
      "resource": "sap/ui/vtm/ArrayUtilities.js",
      "module": "sap/ui/vtm/ArrayUtilities",
      "export": "",
      "static": true,
      "visibility": "public",
      "description": "A set of utility functions for working with arrays.",
      "experimental": {
        "since": "1.50.0",
        "text": "This class is experimental and might be modified or removed in future versions."
      },
      "methods": [
        {
          "name": "areEqual",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "boolean",
            "description": "<code>true</code> if the all the arrays are equal."
          },
          "parameters": [
            {
              "name": "arrayOfArrays",
              "type": "Array",
              "optional": false,
              "description": "The array of arrays to compare."
            },
            {
              "name": "equalityFunc",
              "type": "function",
              "optional": false,
              "description": "A function that takes two parameters and returns a boolean value indicating whether the parameter values are equal."
            }
          ],
          "description": "Returns <code>true</code> if a group of arrays are equal."
        },
        {
          "name": "deepClone",
          "visibility": "public",
          "static": true,
          "returnValue": { "type": "Array", "description": "The cloned array" },
          "parameters": [
            {
              "name": "array",
              "type": "Array",
              "optional": false,
              "description": "The array to clone."
            },
            {
              "name": "itemCloneFunc",
              "type": "function",
              "optional": false,
              "description": "A function used to clone an item of the array. The function has an argument that takes an item of the type stored in the array and returns an item of the same type."
            }
          ],
          "description": "Creates a copy of an array in which the items are cloned."
        },
        {
          "name": "find",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "any|undefined",
            "description": "The matching item or undefined if no match was found."
          },
          "parameters": [
            {
              "name": "array",
              "type": "Array",
              "optional": false,
              "description": "The array to search."
            },
            {
              "name": "predicate",
              "type": "function",
              "optional": false,
              "description": "A function that takes a value of the type stored in the array and returns a boolean value (true if the item is a match."
            }
          ],
          "description": "Returns the first item in an array that matches the supplied predicate or returns undefined if no match is found."
        },
        {
          "name": "findIndex",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "number",
            "description": "The index of the matching item or -1 if no match was found."
          },
          "parameters": [
            {
              "name": "array",
              "type": "Array",
              "optional": false,
              "description": "The array to search."
            },
            {
              "name": "predicate",
              "type": "function",
              "optional": false,
              "description": "A function that takes a value of the type stored in the array and returns a boolean value (true if the item is a match."
            }
          ],
          "description": "Returns the index of the first item in an array that matches the supplied predicate or returns -1 if no match is found."
        },
        {
          "name": "flatten",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "Array",
            "description": "A flattened array."
          },
          "parameters": [
            {
              "name": "arrayOfArrays",
              "type": "Array",
              "optional": false,
              "description": "An array of arrays."
            }
          ],
          "description": "Flattens an array of arrays down to an array."
        },
        {
          "name": "fromArrayLike",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "Array",
            "description": "The array containing the same values as the array-like object."
          },
          "parameters": [
            {
              "name": "arrayLike",
              "type": "object",
              "optional": false,
              "description": "The array-like object to convert to an array."
            }
          ],
          "description": "Converts from an array-like object (an object that supports indexing and has a length) to an array."
        },
        {
          "name": "fromSet",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "Array",
            "description": "The array containing the same set of unique items as the Set."
          },
          "parameters": [
            {
              "name": "set",
              "type": "Set",
              "optional": false,
              "description": "The Set to convert to an array."
            }
          ],
          "description": "Converts an ES6 Set to an array."
        },
        {
          "name": "haveIntersection",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "boolean",
            "description": "Whether the arrays have a non empty set intersection."
          },
          "parameters": [
            {
              "name": "arrayOfArrays",
              "type": "Array",
              "optional": false,
              "description": "An array of arrays to check for the existence of a set intersection."
            },
            {
              "name": "equalityFunction",
              "type": "function",
              "optional": false,
              "description": "A function that returns a Boolean value to compare values within arrays. When not specified, strict equality (<code>===</code>) is used to compare values."
            }
          ],
          "description": "Returns whether a group of arrays have a non empty set intersection."
        },
        {
          "name": "intersect",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "Array",
            "description": "The set intersection of the arrays."
          },
          "parameters": [
            {
              "name": "arrayOfArrays",
              "type": "Array",
              "optional": false,
              "description": "An array of arrays to to find the set intersection of."
            },
            {
              "name": "equalityFunction",
              "type": "function",
              "optional": false,
              "description": "A function that returns a Boolean value to compare values within arrays. When not specified, strict equality (<code>===</code>) is used to compare values."
            }
          ],
          "description": "Returns the set intersection of a group of arrays."
        },
        {
          "name": "shallowClone",
          "visibility": "public",
          "static": true,
          "returnValue": { "type": "Array", "description": "The cloned array" },
          "parameters": [
            {
              "name": "array",
              "type": "Array",
              "optional": false,
              "description": "The array to clone."
            }
          ],
          "description": "Creates a copy of an array in which the items are copied by reference rather than being cloned."
        },
        {
          "name": "toSet",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "Set",
            "description": "The Set containing the same set of unique items as the array."
          },
          "parameters": [
            {
              "name": "array",
              "type": "Array",
              "optional": false,
              "description": "The array to convert to a Set."
            }
          ],
          "description": "Converts an array to an ES6 Set."
        },
        {
          "name": "union",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "Array",
            "description": "The set union of the arrays."
          },
          "parameters": [
            {
              "name": "arrayOfArrays",
              "type": "Array",
              "optional": false,
              "description": "An array of arrays to find the set union of."
            },
            {
              "name": "equalityFunction",
              "type": "function",
              "optional": false,
              "description": "A function that returns a Boolean value to compare values within arrays. When not specified, strict equality (<code>===</code>) is used to compare values."
            }
          ],
          "description": "Returns the set union (as an array) of a group of arrays."
        },
        {
          "name": "unwrap",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "any|Array|undefined",
            "description": "The unwrapped value."
          },
          "parameters": [
            {
              "name": "item",
              "type": "any",
              "optional": false,
              "description": "The item to unwrap."
            }
          ],
          "description": "The inverse of {@link sap.ui.vtm.ArrayUtilities.wrap}.\n\n<ul> <li>If the parameter is not an array, the parameter is returned.</li> <li>If the parameter is an array of length 0, <code>undefined</code> is returned.</li> <li>If the parameter is an array of length 1, the first element of the array is returned.</li> <li>Otherwise if the parameter is an array of length > 1, the parameter is returned (as an array).</li> </ul>"
        },
        {
          "name": "wrap",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "Array",
            "description": "The parameter if it is an array, otherwise returns a single element array containing the parameter value"
          },
          "parameters": [
            {
              "name": "item",
              "type": "any",
              "optional": false,
              "description": "The item to wrap as an array if it is not already an array."
            }
          ],
          "description": "Wraps an item in an array if it is not already an array.\n\n<ul> <li>If the parameter is an array, the parameter is returned.</li> <li>If the parameter is <code>undefined</code> an empty array is returned.</li> <li>Otherwise a single element array containing the parameter value is returned.</li> </ul>"
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.ui.vtm.ChildCollectionType",
      "basename": "ChildCollectionType",
      "resource": "sap/ui/vtm/ChildCollectionType.js",
      "module": "sap/ui/vtm/ChildCollectionType",
      "export": "",
      "static": true,
      "visibility": "public",
      "description": "Enumeration specifying which tree item child collections an operation should apply to.",
      "experimental": {
        "since": "1.50.0",
        "text": "This type is experimental and might be modified or removed in future versions."
      },
      "ui5-metamodel": true,
      "properties": [
        {
          "name": "Excluded",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The operation should apply to the <code>excludedChildren</code> collection of the tree item only."
        },
        {
          "name": "Included",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The operation should apply to the <code>includedChildren</code> collection of the tree item only."
        },
        {
          "name": "IncludedAndExcluded",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The operation should apply to the <code>includedChildren</code> and the <code>excludedChildren</code> collection of the tree item."
        },
        {
          "name": "None",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The operation should not apply to either the <code>includedChildren</code> or <code>excludedChildren</code> collection of the tree item."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.vtm.Column",
      "basename": "Column",
      "resource": "sap/ui/vtm/Column.js",
      "module": "sap/ui/vtm/Column",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.core.Element",
      "description": "Represents a data column for a {@link sap.ui.vtm.Tree}.",
      "experimental": {
        "since": "1.50.0",
        "text": "This class is experimental and might be modified or removed in future versions."
      },
      "ui5-metadata": {
        "stereotype": "element",
        "properties": [
          {
            "name": "type",
            "type": "sap.ui.vtm.ColumnType",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The type of column.",
            "methods": ["getType", "setType"]
          },
          {
            "name": "descriptor",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The descriptor is a JSON string identifying the column.\n\nWhen the type property has a value of {@link sap.ui.vtm.ColumnType.Metadata} the descriptor property has the following form: <code>'{\"category\":\"SAP\",\"field\":\"MATERIAL\"}'</code><br> Such descriptors can be constructed using {@link sap.ui.vtm.DescriptorUtilities.createMetadataDescriptor}.\n\nWhen the type property has a value of {@link sap.ui.vtm.ColumnType.Identifier} the descriptor property has the following form: <code>'{\"source\":\"SAP\",\"type\":\"VE_COMPONENT\"}'</code><br> Such descriptors can be constructed using {@link sap.ui.vtm.DescriptorUtilities.createIdentifierDescriptor}.\n\nWhen the type property has a value of {@link sap.ui.vtm.ColumnType.AppData} the descriptor property has the following form: <code>'bomId'</code>",
            "methods": ["getDescriptor", "setDescriptor"]
          },
          {
            "name": "tooltip",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "A localized string to show in the column header tooltip. If unspecified, the label value will be used as the column header tooltip.",
            "methods": ["getTooltip", "setTooltip"]
          },
          {
            "name": "hAlign",
            "type": "sap.ui.core.HorizontalAlign",
            "defaultValue": "Left",
            "group": "Misc",
            "visibility": "public",
            "description": "The horizontal alignment for the tree column.",
            "methods": ["getHAlign", "setHAlign"]
          },
          {
            "name": "width",
            "type": "sap.ui.core.CSSSize",
            "defaultValue": "200px",
            "group": "Misc",
            "visibility": "public",
            "description": "The width of the tree column.",
            "methods": ["getWidth", "setWidth"]
          },
          {
            "name": "resizable",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "description": "If set to true, the column can be resized.",
            "methods": ["getResizable", "setResizable"]
          },
          {
            "name": "label",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "A textual name for the column. This is also used in the {@link sap.ui.vtm.ColumnSelectionDialog}, so it should be included whether or not the <code>labelControl</code> property is used.",
            "methods": ["getLabel", "setLabel"]
          },
          {
            "name": "labelControl",
            "type": "object",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "A {@link sap.ui.core.Control} that is used in the column header. When specified, this is used in preference to the <code>label</code> property as the column header content. However the <code>label</code> property should also be specified since it is used in the used in the {@link sap.ui.vtm.ColumnSelectionDialog}.",
            "methods": ["getLabelControl", "setLabelControl"]
          },
          {
            "name": "valueFormatter",
            "type": "any",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "If defined, this is a function that specifies the formatting of cell content text for this column.<br/> The function must return a string containing the text to display in the cell (or null) for a given tree item.<br/> The first parameter to the function (which may not always be defined) is the tree item for the tree table row.",
            "methods": ["getValueFormatter", "setValueFormatter"]
          },
          {
            "name": "tooltipFormatter",
            "type": "any",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "If defined, this is a function that specifies the formatting of cell content tooltips for this column (overriding the default behaviour).<br/> Not used if a custom template is specified.<br/> The function must return a string containing the text to display in the tooltip (or null) for a given tree item.<br/> The first parameter to the function (which may not always be defined) is the tree item for the tree table row.",
            "methods": ["getTooltipFormatter", "setTooltipFormatter"]
          },
          {
            "name": "template",
            "type": "sap.ui.core.Control",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "If defined, overrides the cell template for the column.<br/> If this is defined, the <code>valueFormatter</code> and <code>tooltipFormatter</code> properties are ignored.",
            "methods": ["getTemplate", "setTemplate"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": false,
            "description": "An optional ID for the {@link sap.ui.vtm.Column}."
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": false,
            "description": "An optional object with initial settings for the new {@link sap.ui.vtm.Column} instance."
          }
        ],
        "description": "Constructor for a new Column.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.vtm.Column with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
        },
        {
          "name": "getDescriptor",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>descriptor</code>"
          },
          "description": "Gets current value of property {@link #getDescriptor descriptor}.\n\nThe descriptor is a JSON string identifying the column.\n\nWhen the type property has a value of {@link sap.ui.vtm.ColumnType.Metadata} the descriptor property has the following form: <code>'{\"category\":\"SAP\",\"field\":\"MATERIAL\"}'</code><br> Such descriptors can be constructed using {@link sap.ui.vtm.DescriptorUtilities.createMetadataDescriptor}.\n\nWhen the type property has a value of {@link sap.ui.vtm.ColumnType.Identifier} the descriptor property has the following form: <code>'{\"source\":\"SAP\",\"type\":\"VE_COMPONENT\"}'</code><br> Such descriptors can be constructed using {@link sap.ui.vtm.DescriptorUtilities.createIdentifierDescriptor}.\n\nWhen the type property has a value of {@link sap.ui.vtm.ColumnType.AppData} the descriptor property has the following form: <code>'bomId'</code>"
        },
        {
          "name": "getHAlign",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.HorizontalAlign",
            "description": "Value of property <code>hAlign</code>"
          },
          "description": "Gets current value of property {@link #getHAlign hAlign}.\n\nThe horizontal alignment for the tree column.\n\nDefault value is <code>Left</code>."
        },
        {
          "name": "getLabel",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>label</code>"
          },
          "description": "Gets current value of property {@link #getLabel label}.\n\nA textual name for the column. This is also used in the {@link sap.ui.vtm.ColumnSelectionDialog}, so it should be included whether or not the <code>labelControl</code> property is used."
        },
        {
          "name": "getLabelControl",
          "visibility": "public",
          "returnValue": {
            "type": "object",
            "description": "Value of property <code>labelControl</code>"
          },
          "description": "Gets current value of property {@link #getLabelControl labelControl}.\n\nA {@link sap.ui.core.Control} that is used in the column header. When specified, this is used in preference to the <code>label</code> property as the column header content. However the <code>label</code> property should also be specified since it is used in the used in the {@link sap.ui.vtm.ColumnSelectionDialog}."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.vtm.Column."
        },
        {
          "name": "getResizable",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>resizable</code>"
          },
          "description": "Gets current value of property {@link #getResizable resizable}.\n\nIf set to true, the column can be resized.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getTemplate",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.Control",
            "description": "Value of property <code>template</code>"
          },
          "description": "Gets current value of property {@link #getTemplate template}.\n\nIf defined, overrides the cell template for the column.<br/> If this is defined, the <code>valueFormatter</code> and <code>tooltipFormatter</code> properties are ignored."
        },
        {
          "name": "getTooltip",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>tooltip</code>"
          },
          "description": "Gets current value of property {@link #getTooltip tooltip}.\n\nA localized string to show in the column header tooltip. If unspecified, the label value will be used as the column header tooltip."
        },
        {
          "name": "getTooltipFormatter",
          "visibility": "public",
          "returnValue": {
            "type": "any",
            "description": "Value of property <code>tooltipFormatter</code>"
          },
          "description": "Gets current value of property {@link #getTooltipFormatter tooltipFormatter}.\n\nIf defined, this is a function that specifies the formatting of cell content tooltips for this column (overriding the default behaviour).<br/> Not used if a custom template is specified.<br/> The function must return a string containing the text to display in the tooltip (or null) for a given tree item.<br/> The first parameter to the function (which may not always be defined) is the tree item for the tree table row."
        },
        {
          "name": "getType",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.ColumnType",
            "description": "Value of property <code>type</code>"
          },
          "description": "Gets current value of property {@link #getType type}.\n\nThe type of column."
        },
        {
          "name": "getValueFormatter",
          "visibility": "public",
          "returnValue": {
            "type": "any",
            "description": "Value of property <code>valueFormatter</code>"
          },
          "description": "Gets current value of property {@link #getValueFormatter valueFormatter}.\n\nIf defined, this is a function that specifies the formatting of cell content text for this column.<br/> The function must return a string containing the text to display in the cell (or null) for a given tree item.<br/> The first parameter to the function (which may not always be defined) is the tree item for the tree table row."
        },
        {
          "name": "getWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.CSSSize",
            "description": "Value of property <code>width</code>"
          },
          "description": "Gets current value of property {@link #getWidth width}.\n\nThe width of the tree column.\n\nDefault value is <code>200px</code>."
        },
        {
          "name": "setDescriptor",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Column",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sDescriptor",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>descriptor</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getDescriptor descriptor}.\n\nThe descriptor is a JSON string identifying the column.\n\nWhen the type property has a value of {@link sap.ui.vtm.ColumnType.Metadata} the descriptor property has the following form: <code>'{\"category\":\"SAP\",\"field\":\"MATERIAL\"}'</code><br> Such descriptors can be constructed using {@link sap.ui.vtm.DescriptorUtilities.createMetadataDescriptor}.\n\nWhen the type property has a value of {@link sap.ui.vtm.ColumnType.Identifier} the descriptor property has the following form: <code>'{\"source\":\"SAP\",\"type\":\"VE_COMPONENT\"}'</code><br> Such descriptors can be constructed using {@link sap.ui.vtm.DescriptorUtilities.createIdentifierDescriptor}.\n\nWhen the type property has a value of {@link sap.ui.vtm.ColumnType.AppData} the descriptor property has the following form: <code>'bomId'</code>\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setHAlign",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Column",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sHAlign",
              "type": "sap.ui.core.HorizontalAlign",
              "optional": false,
              "description": "New value for property <code>hAlign</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getHAlign hAlign}.\n\nThe horizontal alignment for the tree column.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Left</code>."
        },
        {
          "name": "setLabel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Column",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sLabel",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>label</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getLabel label}.\n\nA textual name for the column. This is also used in the {@link sap.ui.vtm.ColumnSelectionDialog}, so it should be included whether or not the <code>labelControl</code> property is used.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setLabelControl",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Column",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oLabelControl",
              "type": "object",
              "optional": false,
              "description": "New value for property <code>labelControl</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getLabelControl labelControl}.\n\nA {@link sap.ui.core.Control} that is used in the column header. When specified, this is used in preference to the <code>label</code> property as the column header content. However the <code>label</code> property should also be specified since it is used in the used in the {@link sap.ui.vtm.ColumnSelectionDialog}.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setResizable",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Column",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bResizable",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>resizable</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getResizable resizable}.\n\nIf set to true, the column can be resized.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setTemplate",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Column",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sTemplate",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "New value for property <code>template</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getTemplate template}.\n\nIf defined, overrides the cell template for the column.<br/> If this is defined, the <code>valueFormatter</code> and <code>tooltipFormatter</code> properties are ignored.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setTooltip",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Column",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sTooltip",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>tooltip</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getTooltip tooltip}.\n\nA localized string to show in the column header tooltip. If unspecified, the label value will be used as the column header tooltip.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setTooltipFormatter",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Column",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oTooltipFormatter",
              "type": "any",
              "optional": false,
              "description": "New value for property <code>tooltipFormatter</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getTooltipFormatter tooltipFormatter}.\n\nIf defined, this is a function that specifies the formatting of cell content tooltips for this column (overriding the default behaviour).<br/> Not used if a custom template is specified.<br/> The function must return a string containing the text to display in the tooltip (or null) for a given tree item.<br/> The first parameter to the function (which may not always be defined) is the tree item for the tree table row.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setType",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Column",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sType",
              "type": "sap.ui.vtm.ColumnType",
              "optional": false,
              "description": "New value for property <code>type</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getType type}.\n\nThe type of column.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setValueFormatter",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Column",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oValueFormatter",
              "type": "any",
              "optional": false,
              "description": "New value for property <code>valueFormatter</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getValueFormatter valueFormatter}.\n\nIf defined, this is a function that specifies the formatting of cell content text for this column.<br/> The function must return a string containing the text to display in the cell (or null) for a given tree item.<br/> The first parameter to the function (which may not always be defined) is the tree item for the tree table row.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Column",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sWidth",
              "type": "sap.ui.core.CSSSize",
              "optional": false,
              "description": "New value for property <code>width</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getWidth width}.\n\nThe width of the tree column.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>200px</code>."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.ui.vtm.ColumnType",
      "basename": "ColumnType",
      "resource": "sap/ui/vtm/ColumnType.js",
      "module": "sap/ui/vtm/ColumnType",
      "export": "",
      "static": true,
      "visibility": "public",
      "description": "Enumeration specifying types of {@link sap.ui.vtm.Column}.",
      "experimental": {
        "since": "1.50.0",
        "text": "This type is experimental and might be modified or removed in future versions."
      },
      "ui5-metamodel": true,
      "properties": [
        {
          "name": "AppData",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The AppData (application data) column type. This type of column represents application data that is neither metadata nor identifier data."
        },
        {
          "name": "Identifier",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The Identifier column type. This type of column represents identifiers retrieved from viewables (or metadata values supplied by the application which will be present in exported viewables)."
        },
        {
          "name": "Internal",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The Internal column type. Columns of this type: <ul> <li>Should not be used for application data (all columns of this type are defined by VTM).</li> <li>Is not normally expected to be used by end users (columns of this type are typically expected to be used for development/debugging).</li> </ul>"
        },
        {
          "name": "Metadata",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The Metadata column type. This type of column represents metadata retrieved from viewables (or metadata values supplied by the application which will be present in exported viewables)."
        }
      ]
    },
    {
      "kind": "namespace",
      "name": "sap.ui.vtm.DescriptorUtilities",
      "basename": "DescriptorUtilities",
      "resource": "sap/ui/vtm/DescriptorUtilities.js",
      "module": "sap/ui/vtm/DescriptorUtilities",
      "export": "",
      "static": true,
      "visibility": "public",
      "description": "A set of utility functions for working with metadata and identifier descriptors.",
      "experimental": {
        "since": "1.50.0",
        "text": "This class is experimental and might be modified or removed in future versions."
      },
      "methods": [
        {
          "name": "createIdentifierDescriptor",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "string",
            "description": "The descriptor representing the identifier."
          },
          "parameters": [
            {
              "name": "source",
              "type": "string",
              "optional": false,
              "description": "The identifier source."
            },
            {
              "name": "type",
              "type": "string",
              "optional": false,
              "description": "The identifier type."
            }
          ],
          "description": "Creates a descriptor for an identifier."
        },
        {
          "name": "createMetadataDescriptor",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "string",
            "description": "The descriptor representing the metadata field."
          },
          "parameters": [
            {
              "name": "category",
              "type": "string",
              "optional": false,
              "description": "The category name."
            },
            {
              "name": "field",
              "type": "string",
              "optional": false,
              "description": "The field name."
            }
          ],
          "description": "Creates a descriptor for a metadata field."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.vtm.DisplayGroup",
      "basename": "DisplayGroup",
      "resource": "sap/ui/vtm/DisplayGroup.js",
      "module": "sap/ui/vtm/DisplayGroup",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.core.Element",
      "description": "This class is used to represent display states for a set of scene nodes. The same display state need not be used for all of the scene nodes in the set.",
      "experimental": {
        "since": "1.50.0",
        "text": "This class is experimental and might be modified or removed in future versions."
      },
      "ui5-metadata": {
        "stereotype": "element",
        "properties": [
          {
            "name": "displayStatesBySceneNodeId",
            "type": "object",
            "defaultValue": {},
            "group": "Misc",
            "visibility": "public",
            "description": "A plain object map that uses scene node id as the key and a display state object as the value. The display state is a plain JavaScript object that can contain the following properties: <ul> <li>visibility - If defined, this boolean value specifies the scene node visibility</li> <li>opacity - If defined, this numeric value between 0 and 100 inclusive defines the scene node opacity.<br/> </li> <li>highlightColor - If defined, this string value defines the scene node highlight color.</li> If an empty string (<code>\"\"</code>) is used, the highlight color is cleared, otherwise the value is expected to be a {@link sap.ui.core.CSSColor}.</li> <li>recursive - If <code>true</code> this display state will be applied to the scene node and its descendants.</li> </ul> For example: <code><pre>\n{\n  visibility: true,\n  opacity: 100,\n  highlightColor: \"red\",\n  recursive: false\n}</pre></code> Display state objects can be reused multiple times in the map to reduce memory usage.",
            "methods": [
              "getDisplayStatesBySceneNodeId",
              "setDisplayStatesBySceneNodeId"
            ]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "{string",
            "type": "undefined",
            "optional": false,
            "description": "sId An optional ID for the {@link sap.ui.vtm.DisplayGroup}."
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "An optional object with initial settings for the new {@link sap.ui.vtm.DisplayGroup} instance."
          }
        ],
        "description": "Constructor for a new DisplayGroup.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.vtm.DisplayGroup with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
        },
        {
          "name": "getDisplayStatesBySceneNodeId",
          "visibility": "public",
          "returnValue": {
            "type": "object",
            "description": "Value of property <code>displayStatesBySceneNodeId</code>"
          },
          "description": "Gets current value of property {@link #getDisplayStatesBySceneNodeId displayStatesBySceneNodeId}.\n\nA plain object map that uses scene node id as the key and a display state object as the value. The display state is a plain JavaScript object that can contain the following properties: <ul> <li>visibility - If defined, this boolean value specifies the scene node visibility</li> <li>opacity - If defined, this numeric value between 0 and 100 inclusive defines the scene node opacity.<br/> </li> <li>highlightColor - If defined, this string value defines the scene node highlight color.</li> If an empty string (<code>\"\"</code>) is used, the highlight color is cleared, otherwise the value is expected to be a {@link sap.ui.core.CSSColor}.</li> <li>recursive - If <code>true</code> this display state will be applied to the scene node and its descendants.</li> </ul> For example: <code><pre>\n{\n  visibility: true,\n  opacity: 100,\n  highlightColor: \"red\",\n  recursive: false\n}</pre></code> Display state objects can be reused multiple times in the map to reduce memory usage.\n\nDefault value is <code>[object Object]</code>."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.vtm.DisplayGroup."
        },
        {
          "name": "setDisplayStatesBySceneNodeId",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.DisplayGroup",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oDisplayStatesBySceneNodeId",
              "type": "object",
              "optional": false,
              "description": "New value for property <code>displayStatesBySceneNodeId</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getDisplayStatesBySceneNodeId displayStatesBySceneNodeId}.\n\nA plain object map that uses scene node id as the key and a display state object as the value. The display state is a plain JavaScript object that can contain the following properties: <ul> <li>visibility - If defined, this boolean value specifies the scene node visibility</li> <li>opacity - If defined, this numeric value between 0 and 100 inclusive defines the scene node opacity.<br/> </li> <li>highlightColor - If defined, this string value defines the scene node highlight color.</li> If an empty string (<code>\"\"</code>) is used, the highlight color is cleared, otherwise the value is expected to be a {@link sap.ui.core.CSSColor}.</li> <li>recursive - If <code>true</code> this display state will be applied to the scene node and its descendants.</li> </ul> For example: <code><pre>\n{\n  visibility: true,\n  opacity: 100,\n  highlightColor: \"red\",\n  recursive: false\n}</pre></code> Display state objects can be reused multiple times in the map to reduce memory usage.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>[object Object]</code>."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.vtm.Extension",
      "basename": "Extension",
      "resource": "sap/ui/vtm/Extension.js",
      "module": "sap/ui/vtm/Extension",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.core.Element",
      "description": "A base class for extensions.\n\nExtensions provide an extensibility mechanism through which behaviors can be added, allowing for a default set of behaviors that can be overridden by application developers. Extensions react to events raised by VTM elements/controls or other extensions.\n\nDerived classes should provide their own {@link #initialize} implementation. Extensions are expected to be as independent from one another as possible.\n\nExtensions implement interfaces to indicate the functional role(s) that they fulfill. Extensions can be found by interface calling {@link sap.ui.vtm.Vtm#getExtensionByInterface getExtensionByInterface}. Specific extensions can be found using {@link sap.ui.vtm.Vtm#getExtensionByName getExtensionByName}. Typically extensions are retrieved using these methods in order to get or set their <code>enabled</code> property.",
      "experimental": {
        "since": "1.50.0",
        "text": "This class is experimental and might be modified or removed in future versions."
      },
      "ui5-metadata": {
        "stereotype": "element",
        "properties": [
          {
            "name": "enabled",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "bindable": true,
            "description": "Controls whether the extension is enabled.",
            "methods": [
              "getEnabled",
              "setEnabled",
              "bindEnabled",
              "unbindEnabled"
            ]
          }
        ],
        "events": [
          {
            "name": "enabledChanged",
            "visibility": "public",
            "description": "Fired when the enabled property is changed.",
            "methods": [
              "attachEnabledChanged",
              "detachEnabledChanged",
              "fireEnabledChanged"
            ]
          },
          {
            "name": "initialized",
            "visibility": "public",
            "description": "Fired when initialization has completed.",
            "methods": [
              "attachInitialized",
              "detachInitialized",
              "fireInitialized"
            ]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": false,
            "description": "id for the new {@link sap.m.Extension} instance."
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": false,
            "description": "Object with initial property values, aggregated objects etc. for the new {@link sap.m.Extension} instance."
          }
        ],
        "description": "This class is an abstract class that is not intended to be instantiated directly.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "enabledChanged",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "Fired when the enabled property is changed."
        },
        {
          "name": "initialized",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "Fired when initialization has completed."
        }
      ],
      "methods": [
        {
          "name": "applyPanelHandler",
          "visibility": "public",
          "parameters": [
            {
              "name": "panelHandler",
              "type": "function",
              "optional": false,
              "description": "A function that takes one {@link sap.ui.vtm.Panel} argument."
            }
          ],
          "description": "Calls a function once for each panel that is attached (currently or in the future) to the {@link sap.ui.vtm.Vtm} instance that owns this extension.\n\nThis function should only be used after the Promise returned by {@link #getVtmPromise} has resolved."
        },
        {
          "name": "attachEnabledChanged",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Extension",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.vtm.Extension</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:enabledChanged enabledChanged} event of this <code>sap.ui.vtm.Extension</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.vtm.Extension</code> itself.\n\nFired when the enabled property is changed."
        },
        {
          "name": "attachInitialized",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Extension",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.vtm.Extension</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:initialized initialized} event of this <code>sap.ui.vtm.Extension</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.vtm.Extension</code> itself.\n\nFired when initialization has completed."
        },
        {
          "name": "bindEnabled",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Extension",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oBindingInfo",
              "type": "object",
              "optional": false,
              "description": "The binding information"
            }
          ],
          "description": "Binds property {@link #getEnabled enabled} to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindProperty ManagedObject.bindProperty} for a detailed description of the possible properties of <code>oBindingInfo</code>"
        },
        {
          "name": "detachEnabledChanged",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Extension",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:enabledChanged enabledChanged} event of this <code>sap.ui.vtm.Extension</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachInitialized",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Extension",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:initialized initialized} event of this <code>sap.ui.vtm.Extension</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.vtm.Extension with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
        },
        {
          "name": "fireEnabledChanged",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.vtm.Extension",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:enabledChanged enabledChanged} to attached listeners."
        },
        {
          "name": "fireInitialized",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.vtm.Extension",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:initialized initialized} to attached listeners."
        },
        {
          "name": "getEnabled",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>enabled</code>"
          },
          "description": "Gets current value of property {@link #getEnabled enabled}.\n\nControls whether the extension is enabled.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getInitializedPromise",
          "visibility": "public",
          "returnValue": {
            "type": "Promise",
            "description": "A {@link Promise} that is resolved after the {@link #initialize initialize} method has been called for the extension."
          },
          "description": "Gets a {@link Promise} that resolves after the {@link #initialize initialize} method has been called for the extension.\n\nThe {@link #initialize initialize} method is called after the {@link Promise} returned by {@link #getVtmPromise getVtmPromise} resolves."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.vtm.Extension."
        },
        {
          "name": "getVtmPromise",
          "visibility": "public",
          "returnValue": {
            "type": "Promise",
            "description": "A {@link Promise} that is resolved when the extension is added to the <code>extensions</code> aggregation of an {@link sap.ui.vtm.Vtm} instance."
          },
          "description": "Gets a {@link Promise} that resolves when the extension is added to the <code>extensions</code> aggregation of an {@link sap.ui.vtm.Vtm} instance.\n\nThe relevant {@link sap.ui.vtm.Vtm} instance is passed to the resolve handler."
        },
        {
          "name": "initialize",
          "visibility": "public",
          "parameters": [
            {
              "name": "vtm",
              "type": "sap.ui.vtm.Vtm",
              "optional": false,
              "description": "The {@link sap.ui.vtm.Vtm} instance that this extension belongs to."
            }
          ],
          "description": "Contains initialization code for the extension. Derived classes must redefine this method."
        },
        {
          "name": "setEnabled",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Extension",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bEnabled",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>enabled</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getEnabled enabled}.\n\nControls whether the extension is enabled.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "unbindEnabled",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Extension",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Unbinds property {@link #getEnabled enabled} from model data."
        }
      ]
    },
    {
      "kind": "namespace",
      "name": "sap.ui.vtm.extensions",
      "basename": "extensions",
      "resource": "sap/ui/vtm/library.js",
      "module": "sap/ui/vtm/library",
      "export": "extensions",
      "static": true,
      "visibility": "public",
      "description": "Namespace for extensions that are provided with the sap.ui.vtm library.",
      "experimental": {
        "since": "1.50.0",
        "text": "This library is experimental and might be modified or removed in future versions."
      }
    },
    {
      "kind": "class",
      "name": "sap.ui.vtm.extensions.DisplayStateCalculationExtension",
      "basename": "DisplayStateCalculationExtension",
      "resource": "sap/ui/vtm/extensions/DisplayStateCalculationExtension.js",
      "module": "sap/ui/vtm/extensions/DisplayStateCalculationExtension",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.vtm.Extension",
      "implements": ["sap.ui.vtm.interfaces.IDisplayStateCalculationExtension"],
      "description": "Adds a behavior that calculates display state (visibility, opacity, highlight color) for the scene nodes in a viewport using information in the tree items, context display groups and override display groups.\n\nExcluded tree items are ignored when calculating display state since visible scene nodes that are not visible due to a context or override display group should relate to one or more selectable tree items in the tree.",
      "experimental": {
        "since": "1.50.0",
        "text": "This class is experimental and might be modified or removed in future versions."
      },
      "ui5-metadata": { "stereotype": "element" },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": false,
            "description": "id for the new {@link sap.ui.vtm.extensions.DisplayStateCalculationExtension} instance."
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": false,
            "description": "Object with initial property values, aggregated objects etc. for the new {@link sap.ui.vtm.extensions.DisplayStateCalculationExtension} instance."
          }
        ],
        "description": "Constructor for a new DisplayStateCalculationExtension."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.vtm.extensions.DisplayStateCalculationExtension with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.vtm.Extension.extend}."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.vtm.extensions.DisplayStateCalculationExtension."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.vtm.extensions.InitialViewExtension",
      "basename": "InitialViewExtension",
      "resource": "sap/ui/vtm/extensions/InitialViewExtension.js",
      "module": "sap/ui/vtm/extensions/InitialViewExtension",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.vtm.Extension",
      "implements": ["sap.ui.vtm.interfaces.IInitialViewExtension"],
      "description": "Adds a behavior that zooms to all (or a specific view) after the first viewable has loaded successfully.",
      "experimental": {
        "since": "1.50.0",
        "text": "This class is experimental and might be modified or removed in future versions."
      },
      "ui5-metadata": {
        "stereotype": "element",
        "properties": [
          {
            "name": "predefinedView",
            "type": "sap.ui.vtm.PredefinedView",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Specifies a predefined view to use. If a specific view is not specified this extension will zoom to fit all geometry without changing the camera angle.",
            "methods": ["getPredefinedView", "setPredefinedView"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": false,
            "description": "id for the new {@link sap.ui.vtm.extensions.InitialViewExtension} instance."
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": false,
            "description": "Object with initial property values, aggregated objects etc. for the new {@link sap.ui.vtm.extensions.InitialViewExtension} instance."
          }
        ],
        "description": "Constructor for a new InitialViewExtension.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.vtm.extensions.InitialViewExtension with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.vtm.Extension.extend}."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.vtm.extensions.InitialViewExtension."
        },
        {
          "name": "getPredefinedView",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.PredefinedView",
            "description": "Value of property <code>predefinedView</code>"
          },
          "description": "Gets current value of property {@link #getPredefinedView predefinedView}.\n\nSpecifies a predefined view to use. If a specific view is not specified this extension will zoom to fit all geometry without changing the camera angle."
        },
        {
          "name": "setPredefinedView",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.extensions.InitialViewExtension",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sPredefinedView",
              "type": "sap.ui.vtm.PredefinedView",
              "optional": false,
              "description": "New value for property <code>predefinedView</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getPredefinedView predefinedView}.\n\nSpecifies a predefined view to use. If a specific view is not specified this extension will zoom to fit all geometry without changing the camera angle.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.vtm.extensions.LoadProgressExtension",
      "basename": "LoadProgressExtension",
      "resource": "sap/ui/vtm/extensions/LoadProgressExtension.js",
      "module": "sap/ui/vtm/extensions/LoadProgressExtension",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.vtm.Extension",
      "implements": [
        "sap.ui.vtm.interfaces.ILoadProgressExtension",
        "sap.ui.vtm.interfaces.IDownloadProgressExtension"
      ],
      "description": "Adds a behavior that shows a progress dialog when downloading/loading of viewables is occurring.",
      "experimental": {
        "since": "1.50.0",
        "text": "This class is experimental and might be modified or removed in future versions."
      },
      "ui5-metadata": { "stereotype": "element" },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": false,
            "description": "id for the new {@link sap.ui.vtm.extensions.LoadProgressExtension} instance."
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": false,
            "description": "Object with initial property values, aggregated objects etc. for the new {@link sap.ui.vtm.extensions.LoadProgressExtension} instance."
          }
        ],
        "description": "Constructor for a new LoadProgressExtension."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.vtm.extensions.LoadProgressExtension with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.vtm.Extension.extend}."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.vtm.extensions.LoadProgressExtension."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.vtm.extensions.MessageStatusCalculationExtension",
      "basename": "MessageStatusCalculationExtension",
      "resource": "sap/ui/vtm/extensions/MessageStatusCalculationExtension.js",
      "module": "sap/ui/vtm/extensions/MessageStatusCalculationExtension",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.vtm.Extension",
      "implements": [
        "sap.ui.vtm.interfaces.IMessageStatusCalculationExtension"
      ],
      "description": "Adds a behavior that calculates the properties of the message status icons. The behavior: <ul> <li>Allows for error, warning and information messages.</li> <li>Uses red icons for error related indications.</li> <li>Uses yellow icons for warning related indications.</li> <li>Uses grey informational icons for informational indications.</li> <li>Uses solid icons to indicate errors or warnings that apply directly to a tree item.</li> <li>Uses hollow icons to indicate that an error or warning applies to a descendant of a tree item.</li> <li>The highest priority status that applies to a tree item or a descendant tree item is indicated on each tree item.</li> <li>When the highest priority status that applies to a tree item is the same as the highest priority status that applies to any descendant tree, the highest priority message that applies directly to the tree item is indicated.</li> <li>Error messages on descendants are given higher priority than warning or information messages that apply to the tree item itself</li> <li>Warning messages on descendants are given a higher priority than information messages that apply to the tree item</li> <li>Information messages are not cascaded up the tree</li> </ul>",
      "experimental": {
        "since": "1.50.0",
        "text": "This class is experimental and might be modified or removed in future versions."
      },
      "ui5-metadata": { "stereotype": "element" },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": false,
            "description": "id for the new {@link sap.m.MessageStatusCalculationExtension} instance."
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": false,
            "description": "Object with initial property values, aggregated objects etc. for the new {@link sap.m.MessageStatusCalculationExtension} instance."
          }
        ],
        "description": "Constructor for a new MessageStatusCalculationExtension."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.vtm.extensions.MessageStatusCalculationExtension with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.vtm.Extension.extend}."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.vtm.extensions.MessageStatusCalculationExtension."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.vtm.extensions.MessageStatusIconClickExtension",
      "basename": "MessageStatusIconClickExtension",
      "resource": "sap/ui/vtm/extensions/MessageStatusIconClickExtension.js",
      "module": "sap/ui/vtm/extensions/MessageStatusIconClickExtension",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.vtm.Extension",
      "implements": ["sap.ui.vtm.interfaces.IMessageStatusIconClickExtension"],
      "description": "Adds a behavior that shows a {@link sap.ui.vtm.MessagesPopover} when a message status icon is clicked.",
      "experimental": {
        "since": "1.50.0",
        "text": "This class is experimental and might be modified or removed in future versions."
      },
      "ui5-metadata": { "stereotype": "element" },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": false,
            "description": "id for the new {@link sap.m.MessageStatusIconClickExtension} instance."
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": false,
            "description": "Object with initial property values, aggregated objects etc. for the new {@link sap.m.MessageStatusIconClickExtension} instance."
          }
        ],
        "description": "Constructor for a new MessageStatusIconClickExtension."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.vtm.extensions.MessageStatusIconClickExtension with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.vtm.Extension.extend}."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.vtm.extensions.MessageStatusIconClickExtension."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.vtm.extensions.SceneNodeHoverHighlightExtension",
      "basename": "SceneNodeHoverHighlightExtension",
      "resource": "sap/ui/vtm/extensions/SceneNodeHoverHighlightExtension.js",
      "module": "sap/ui/vtm/extensions/SceneNodeHoverHighlightExtension",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.vtm.Extension",
      "implements": ["sap.ui.vtm.interfaces.ISceneNodeHoverHighlightExtension"],
      "description": "Adds a behaviour which highlights a scene node when the mouse hovers over it.",
      "experimental": {
        "since": "1.50.0",
        "text": "This class is experimental and might be modified or removed in future versions."
      },
      "ui5-metadata": {
        "stereotype": "element",
        "properties": [
          {
            "name": "highlightColor",
            "type": "sap.ui.core.CSSColor",
            "defaultValue": "rgba(0, 0, 255, 0.7)",
            "group": "Misc",
            "visibility": "public",
            "description": "The highlight color to use for the scene node being hovered over.",
            "methods": ["getHighlightColor", "setHighlightColor"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": false,
            "description": "id for the new instance."
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": false,
            "description": "Object with initial property values, aggregated objects etc. for the new instance."
          }
        ],
        "description": "Constructor for a new SceneNodeHoverTooltipExtension.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.vtm.extensions.SceneNodeHoverHighlightExtension with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.vtm.Extension.extend}."
        },
        {
          "name": "getHighlightColor",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.CSSColor",
            "description": "Value of property <code>highlightColor</code>"
          },
          "description": "Gets current value of property {@link #getHighlightColor highlightColor}.\n\nThe highlight color to use for the scene node being hovered over.\n\nDefault value is <code>rgba(0, 0, 255, 0.7)</code>."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.vtm.extensions.SceneNodeHoverHighlightExtension."
        },
        {
          "name": "setHighlightColor",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.extensions.SceneNodeHoverHighlightExtension",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sHighlightColor",
              "type": "sap.ui.core.CSSColor",
              "optional": false,
              "description": "New value for property <code>highlightColor</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getHighlightColor highlightColor}.\n\nThe highlight color to use for the scene node being hovered over.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>rgba(0, 0, 255, 0.7)</code>."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.vtm.extensions.SceneNodeHoverTooltipExtension",
      "basename": "SceneNodeHoverTooltipExtension",
      "resource": "sap/ui/vtm/extensions/SceneNodeHoverTooltipExtension.js",
      "module": "sap/ui/vtm/extensions/SceneNodeHoverTooltipExtension",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.vtm.Extension",
      "implements": ["sap.ui.vtm.interfaces.ISceneNodeHoverTooltipExtension"],
      "description": "Adds a behaviour in which a tooltip (which can be specified by application code using a callback function) is displayed when the mouse is hovering over a scene node.",
      "experimental": {
        "since": "1.50.0",
        "text": "This class is experimental and might be modified or removed in future versions."
      },
      "ui5-metadata": {
        "stereotype": "element",
        "properties": [
          {
            "name": "tooltipCallback",
            "type": "any",
            "defaultValue": null,
            "group": "Behavior",
            "visibility": "public",
            "description": "A callback function that gets a tooltip for a given {@link sap.ui.vtm.SceneNode}. If unspecified, the scene node name is used for the tooltip text.\n\nThe first parameter is the {@link sap.ui.vtm.SceneNode} under cursor.<br> The function should return an object containing a tooltip text for the specified scene node. <pre>\n  {\n    text: [string]\n  }\n</pre> If function returns null no tooltip will be displayed.",
            "methods": ["getTooltipCallback", "setTooltipCallback"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": false,
            "description": "id for the new instance."
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": false,
            "description": "Object with initial property values, aggregated objects etc. for the new instance."
          }
        ],
        "description": "Constructor for a new SceneNodeHoverTooltipExtension.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.vtm.extensions.SceneNodeHoverTooltipExtension with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.vtm.Extension.extend}."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.vtm.extensions.SceneNodeHoverTooltipExtension."
        },
        {
          "name": "getTooltipCallback",
          "visibility": "public",
          "returnValue": {
            "type": "any",
            "description": "Value of property <code>tooltipCallback</code>"
          },
          "description": "Gets current value of property {@link #getTooltipCallback tooltipCallback}.\n\nA callback function that gets a tooltip for a given {@link sap.ui.vtm.SceneNode}. If unspecified, the scene node name is used for the tooltip text.\n\nThe first parameter is the {@link sap.ui.vtm.SceneNode} under cursor.<br> The function should return an object containing a tooltip text for the specified scene node. <pre>\n  {\n    text: [string]\n  }\n</pre> If function returns null no tooltip will be displayed."
        },
        {
          "name": "setTooltipCallback",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.extensions.SceneNodeHoverTooltipExtension",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oTooltipCallback",
              "type": "any",
              "optional": false,
              "description": "New value for property <code>tooltipCallback</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getTooltipCallback tooltipCallback}.\n\nA callback function that gets a tooltip for a given {@link sap.ui.vtm.SceneNode}. If unspecified, the scene node name is used for the tooltip text.\n\nThe first parameter is the {@link sap.ui.vtm.SceneNode} under cursor.<br> The function should return an object containing a tooltip text for the specified scene node. <pre>\n  {\n    text: [string]\n  }\n</pre> If function returns null no tooltip will be displayed.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.vtm.extensions.SelectionLinkingExtension",
      "basename": "SelectionLinkingExtension",
      "resource": "sap/ui/vtm/extensions/SelectionLinkingExtension.js",
      "module": "sap/ui/vtm/extensions/SelectionLinkingExtension",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.vtm.Extension",
      "implements": ["sap.ui.vtm.interfaces.ISelectionLinkingExtension"],
      "description": "Adds a behavior that links items the visibility of tree items in a {@link sap.ui.vtm.Tree} with the visibility of their associated scene nodes in the {@link sap.ui.vtm.Viewport} in the same {@link sap.ui.vtm.Panel}.",
      "experimental": {
        "since": "1.50.0",
        "text": "This class is experimental and might be modified or removed in future versions."
      },
      "ui5-metadata": {
        "stereotype": "element",
        "properties": [
          {
            "name": "findMatchingTreeItems",
            "type": "any",
            "defaultValue": null,
            "group": "Behavior",
            "visibility": "public",
            "description": "The value is a callback function that finds tree items in a particular tree that match a given tree item.\n\nThe first parameter is the tree item to match against.<br> The second parameter is the {@link sap.ui.vtm.Tree} containing the specified tree item being matched against.<br> The third parameter is the {@link sap.ui.vtm.Tree} to search for matches in.<br> The function returns an array of tree items that match the specified tree item.",
            "methods": ["getFindMatchingTreeItems", "setFindMatchingTreeItems"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": false,
            "description": "id for the new {@link sap.ui.vtm.extensions.SelectionLinkingExtension} instance."
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": false,
            "description": "Object with initial property values, aggregated objects etc. for the new {@link sap.ui.vtm.extensions.SelectionLinkingExtension} instance."
          }
        ],
        "description": "Constructor for a new SelectionLinkingExtension.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.vtm.extensions.SelectionLinkingExtension with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.vtm.Extension.extend}."
        },
        {
          "name": "getFindMatchingTreeItems",
          "visibility": "public",
          "returnValue": {
            "type": "any",
            "description": "Value of property <code>findMatchingTreeItems</code>"
          },
          "description": "Gets current value of property {@link #getFindMatchingTreeItems findMatchingTreeItems}.\n\nThe value is a callback function that finds tree items in a particular tree that match a given tree item.\n\nThe first parameter is the tree item to match against.<br> The second parameter is the {@link sap.ui.vtm.Tree} containing the specified tree item being matched against.<br> The third parameter is the {@link sap.ui.vtm.Tree} to search for matches in.<br> The function returns an array of tree items that match the specified tree item."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.vtm.extensions.SelectionLinkingExtension."
        },
        {
          "name": "setFindMatchingTreeItems",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.extensions.SelectionLinkingExtension",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oFindMatchingTreeItems",
              "type": "any",
              "optional": false,
              "description": "New value for property <code>findMatchingTreeItems</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getFindMatchingTreeItems findMatchingTreeItems}.\n\nThe value is a callback function that finds tree items in a particular tree that match a given tree item.\n\nThe first parameter is the tree item to match against.<br> The second parameter is the {@link sap.ui.vtm.Tree} containing the specified tree item being matched against.<br> The third parameter is the {@link sap.ui.vtm.Tree} to search for matches in.<br> The function returns an array of tree items that match the specified tree item.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.vtm.extensions.ViewLinkingExtension",
      "basename": "ViewLinkingExtension",
      "resource": "sap/ui/vtm/extensions/ViewLinkingExtension.js",
      "module": "sap/ui/vtm/extensions/ViewLinkingExtension",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.vtm.Extension",
      "implements": ["sap.ui.vtm.interfaces.IViewLinkingExtension"],
      "description": "Adds a behavior that links the camera views for all the {@link sap.ui.vtm.Viewport} instances associated with a {@link sap.ui.vtm.Vtm} instance.",
      "experimental": {
        "since": "1.50.0",
        "text": "This class is experimental and might be modified or removed in future versions."
      },
      "ui5-metadata": { "stereotype": "element" },
      "constructor": {
        "visibility": "public",
        "description": "Constructor for the ViewLinkingExtension."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.vtm.extensions.ViewLinkingExtension with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.vtm.Extension.extend}."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.vtm.extensions.ViewLinkingExtension."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.vtm.extensions.ViewportSelectionLinkingExtension",
      "basename": "ViewportSelectionLinkingExtension",
      "resource": "sap/ui/vtm/extensions/ViewportSelectionLinkingExtension.js",
      "module": "sap/ui/vtm/extensions/ViewportSelectionLinkingExtension",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.vtm.Extension",
      "implements": [
        "sap.ui.vtm.interfaces.IViewportSelectionLinkingExtension"
      ],
      "description": "Adds a behavior that links the selection state of tree items in a {@link sap.ui.vtm.Tree} with their corresponding scene nodes in the {@link sap.ui.vtm.Viewport} in the same {@link sap.ui.vtm.Panel}.",
      "experimental": {
        "since": "1.50.0",
        "text": "This class is experimental and might be modified or removed in future versions."
      },
      "ui5-metadata": { "stereotype": "element" },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": false,
            "description": "id for the new {@link sap.ui.vtm.extensions.ViewportSelectionLinkingExtension} instance."
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": false,
            "description": "Object with initial property values, aggregated objects etc. for the new {@link sap.ui.vtm.extensions.ViewportSelectionLinkingExtension} instance."
          }
        ],
        "description": "Constructor for a new ViewportSelectionLinkingExtension."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.vtm.extensions.ViewportSelectionLinkingExtension with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.vtm.Extension.extend}."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.vtm.extensions.ViewportSelectionLinkingExtension."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.vtm.extensions.VisibilityIconClickExtension",
      "basename": "VisibilityIconClickExtension",
      "resource": "sap/ui/vtm/extensions/VisibilityIconClickExtension.js",
      "module": "sap/ui/vtm/extensions/VisibilityIconClickExtension",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.vtm.Extension",
      "implements": [
        "sap.ui.vtm.interfaces.IVisibilityIconClickExtension",
        "sap.ui.vtm.interfaces.IVisibilityHeaderIconClickExtension"
      ],
      "description": "Adds a behavior that updates visibility in the {@link sap.ui.vtm.Tree} when a visibility checkbox (eye) is clicked.",
      "experimental": {
        "since": "1.50.0",
        "text": "This class is experimental and might be modified or removed in future versions."
      },
      "ui5-metadata": { "stereotype": "element" },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": false,
            "description": "id for the new {@link sap.ui.vtm.extensions.VisibilityIconClickExtension} instance."
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": false,
            "description": "Object with initial property values, aggregated objects etc. for the new {@link sap.ui.vtm.extensions.VisibilityIconClickExtension} instance."
          }
        ],
        "description": "Constructor for a new VisibilityIconClickExtension."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.vtm.extensions.VisibilityIconClickExtension with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.vtm.Extension.extend}."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.vtm.extensions.VisibilityIconClickExtension."
        }
      ]
    },
    {
      "kind": "namespace",
      "name": "sap.ui.vtm.HashUtilities",
      "basename": "HashUtilities",
      "resource": "sap/ui/vtm/HashUtilities.js",
      "module": "sap/ui/vtm/HashUtilities",
      "export": "",
      "static": true,
      "visibility": "public",
      "description": "A set of utility functions for working with hash values.",
      "experimental": {
        "since": "1.50.0",
        "text": "This class is experimental and might be modified or removed in future versions."
      },
      "methods": [
        {
          "name": "combineHashes",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "int",
            "description": "The combined hash code."
          },
          "parameters": [
            {
              "name": "hashValues",
              "type": "int[]",
              "optional": false,
              "description": "A set of hash code values to combine."
            },
            {
              "name": "upperLimit",
              "type": "int",
              "optional": false,
              "description": "An upper bound for the hash code. Defaults to 50000."
            }
          ],
          "description": "Creates a single hash code from a set of hash code values and normalizes it using {@link sap.ui.vtm.HashUtilities.normalizeHash}."
        },
        {
          "name": "hashMatrix",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "int",
            "description": "The hash code for the specified transformation matrix."
          },
          "parameters": [
            {
              "name": "vtmMatrix",
              "type": "sap.ui.vtm.Matrix",
              "optional": false,
              "description": "The matrix to hash."
            }
          ],
          "description": "Creates a hash code for a {@link sap.ui.vtm.Matrix} value.\n\nThe resulting hash value can be any integer value. Use {@link sap.ui.vtm.HashUtilities.normalizeHash} on the result to create a hash code that is useful as a key in a {@link sap.ui.vtm.Lookup}."
        },
        {
          "name": "hashString",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "int",
            "description": "The hash code value for the string."
          },
          "parameters": [
            {
              "name": "stringToHash",
              "type": "string",
              "optional": false,
              "description": "The string to hash."
            }
          ],
          "description": "Creates a hash code for a string.\n\nThe resulting hash value can be any integer value. Use {@link sap.ui.vtm.HashUtilities.normalizeHash} on the result to create a hash code that is useful as a key in a {@link sap.ui.vtm.Lookup}."
        },
        {
          "name": "normalizeHash",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "int",
            "description": "The normalized hash code."
          },
          "parameters": [
            {
              "name": "hashValue",
              "type": "int",
              "optional": false,
              "description": "A hash code to normalize."
            },
            {
              "name": "upperLimit",
              "type": "int",
              "optional": false,
              "description": "An upper bound for the hash code value. Defaults to 50000."
            }
          ],
          "description": "Normalizes a hash code to a range between 0 and an upper bound. Useful for creating a hash code that can be used as a key in a {@link sap.ui.vtm.Lookup} (to limit the number of buckets in the lookup)."
        }
      ]
    },
    {
      "kind": "namespace",
      "name": "sap.ui.vtm.interfaces",
      "basename": "interfaces",
      "resource": "sap/ui/vtm/library.js",
      "module": "sap/ui/vtm/library",
      "export": "interfaces",
      "static": true,
      "visibility": "public",
      "description": "Namespace for interfaces that are provided with the sap.ui.vtm library.",
      "experimental": {
        "since": "1.50.0",
        "text": "This library is experimental and might be modified or removed in future versions."
      }
    },
    {
      "kind": "interface",
      "name": "sap.ui.vtm.interfaces.IDisplayStateCalculationExtension",
      "basename": "IDisplayStateCalculationExtension",
      "resource": "sap/ui/vtm/library.js",
      "module": "sap/ui/vtm/library",
      "export": "interfaces.IDisplayStateCalculationExtension",
      "static": true,
      "visibility": "public",
      "since": "1.50",
      "description": "Interface for extensions which manage the display state (visibility, opacity, highlight color) of the scene nodes in the VTM viewports.",
      "experimental": {
        "since": "1.50.0",
        "text": "This library is experimental and might be modified or removed in future versions."
      },
      "ui5-metamodel": true
    },
    {
      "kind": "interface",
      "name": "sap.ui.vtm.interfaces.IDownloadProgressExtension",
      "basename": "IDownloadProgressExtension",
      "resource": "sap/ui/vtm/library.js",
      "module": "sap/ui/vtm/library",
      "export": "interfaces.IDownloadProgressExtension",
      "static": true,
      "visibility": "public",
      "since": "1.50",
      "description": "Interface for extensions which indicate progress while viewables are being downloaded.",
      "experimental": {
        "since": "1.50.0",
        "text": "This library is experimental and might be modified or removed in future versions."
      },
      "ui5-metamodel": true
    },
    {
      "kind": "interface",
      "name": "sap.ui.vtm.interfaces.IInitialViewExtension",
      "basename": "IInitialViewExtension",
      "resource": "sap/ui/vtm/library.js",
      "module": "sap/ui/vtm/library",
      "export": "interfaces.IInitialViewExtension",
      "static": true,
      "visibility": "public",
      "since": "1.50",
      "description": "Interface for extensions which manage the initial view in the VTM viewports after loading an initial set of viewables.",
      "experimental": {
        "since": "1.50.0",
        "text": "This library is experimental and might be modified or removed in future versions."
      },
      "ui5-metamodel": true
    },
    {
      "kind": "interface",
      "name": "sap.ui.vtm.interfaces.ILoadProgressExtension",
      "basename": "ILoadProgressExtension",
      "resource": "sap/ui/vtm/library.js",
      "module": "sap/ui/vtm/library",
      "export": "interfaces.ILoadProgressExtension",
      "static": true,
      "visibility": "public",
      "since": "1.50",
      "description": "Interface for extensions which indicate progress while viewables are being loaded.",
      "experimental": {
        "since": "1.50.0",
        "text": "This library is experimental and might be modified or removed in future versions."
      },
      "ui5-metamodel": true
    },
    {
      "kind": "interface",
      "name": "sap.ui.vtm.interfaces.IMessageStatusCalculationExtension",
      "basename": "IMessageStatusCalculationExtension",
      "resource": "sap/ui/vtm/library.js",
      "module": "sap/ui/vtm/library",
      "export": "interfaces.IMessageStatusCalculationExtension",
      "static": true,
      "visibility": "public",
      "since": "1.50",
      "description": "Interface for extensions which calculate the icon to show for each tree item in the {@link sap.ui.vtm.InternalColumnDescriptor.MessageStatus} column.",
      "experimental": {
        "since": "1.50.0",
        "text": "This library is experimental and might be modified or removed in future versions."
      },
      "ui5-metamodel": true
    },
    {
      "kind": "interface",
      "name": "sap.ui.vtm.interfaces.IMessageStatusHeaderIconClickExtension",
      "basename": "IMessageStatusHeaderIconClickExtension",
      "resource": "sap/ui/vtm/library.js",
      "module": "sap/ui/vtm/library",
      "export": "interfaces.IMessageStatusHeaderIconClickExtension",
      "static": true,
      "visibility": "public",
      "since": "1.50",
      "description": "Interface for extensions which provide a behaviour when the icon in the column header for the {@link sap.ui.vtm.InternalColumnDescriptor.MessageStatus} column is clicked.",
      "experimental": {
        "since": "1.50.0",
        "text": "This library is experimental and might be modified or removed in future versions."
      },
      "ui5-metamodel": true
    },
    {
      "kind": "interface",
      "name": "sap.ui.vtm.interfaces.IMessageStatusIconClickExtension",
      "basename": "IMessageStatusIconClickExtension",
      "resource": "sap/ui/vtm/library.js",
      "module": "sap/ui/vtm/library",
      "export": "interfaces.IMessageStatusIconClickExtension",
      "static": true,
      "visibility": "public",
      "since": "1.50",
      "description": "Interface for extensions which provide a behaviour when an icon in the {@link sap.ui.vtm.InternalColumnDescriptor.MessageStatus} column is clicked.",
      "experimental": {
        "since": "1.50.0",
        "text": "This library is experimental and might be modified or removed in future versions."
      },
      "ui5-metamodel": true
    },
    {
      "kind": "interface",
      "name": "sap.ui.vtm.interfaces.ISceneNodeHoverHighlightExtension",
      "basename": "ISceneNodeHoverHighlightExtension",
      "resource": "sap/ui/vtm/library.js",
      "module": "sap/ui/vtm/library",
      "export": "interfaces.ISceneNodeHoverHighlightExtension",
      "static": true,
      "visibility": "public",
      "since": "1.50",
      "description": "Interface for extensions which highlight the scene node that is being hovered over in a viewport.",
      "experimental": {
        "since": "1.50.0",
        "text": "This library is experimental and might be modified or removed in future versions."
      },
      "ui5-metamodel": true
    },
    {
      "kind": "interface",
      "name": "sap.ui.vtm.interfaces.ISceneNodeHoverTooltipExtension",
      "basename": "ISceneNodeHoverTooltipExtension",
      "resource": "sap/ui/vtm/library.js",
      "module": "sap/ui/vtm/library",
      "export": "interfaces.ISceneNodeHoverTooltipExtension",
      "static": true,
      "visibility": "public",
      "since": "1.50",
      "description": "Interface for extensions which show a tooltip for the scene node that is being hovered over in a viewport.",
      "experimental": {
        "since": "1.50.0",
        "text": "This library is experimental and might be modified or removed in future versions."
      },
      "ui5-metamodel": true
    },
    {
      "kind": "interface",
      "name": "sap.ui.vtm.interfaces.ISelectionLinkingExtension",
      "basename": "ISelectionLinkingExtension",
      "resource": "sap/ui/vtm/library.js",
      "module": "sap/ui/vtm/library",
      "export": "interfaces.ISelectionLinkingExtension",
      "static": true,
      "visibility": "public",
      "since": "1.50",
      "description": "Interface for extensions which link the selections in trees across panels.",
      "experimental": {
        "since": "1.50.0",
        "text": "This library is experimental and might be modified or removed in future versions."
      },
      "ui5-metamodel": true
    },
    {
      "kind": "interface",
      "name": "sap.ui.vtm.interfaces.IViewLinkingExtension",
      "basename": "IViewLinkingExtension",
      "resource": "sap/ui/vtm/library.js",
      "module": "sap/ui/vtm/library",
      "export": "interfaces.IViewLinkingExtension",
      "static": true,
      "visibility": "public",
      "since": "1.50",
      "description": "Interface for extensions which link the views (camera positions) across VTM viewports.",
      "experimental": {
        "since": "1.50.0",
        "text": "This library is experimental and might be modified or removed in future versions."
      },
      "ui5-metamodel": true
    },
    {
      "kind": "interface",
      "name": "sap.ui.vtm.interfaces.IViewportSelectionLinkingExtension",
      "basename": "IViewportSelectionLinkingExtension",
      "resource": "sap/ui/vtm/library.js",
      "module": "sap/ui/vtm/library",
      "export": "interfaces.IViewportSelectionLinkingExtension",
      "static": true,
      "visibility": "public",
      "since": "1.50",
      "description": "Interface for extensions which link the selection state between the tree and the viewport in each VTM panel.",
      "experimental": {
        "since": "1.50.0",
        "text": "This library is experimental and might be modified or removed in future versions."
      },
      "ui5-metamodel": true
    },
    {
      "kind": "interface",
      "name": "sap.ui.vtm.interfaces.IVisibilityHeaderIconClickExtension",
      "basename": "IVisibilityHeaderIconClickExtension",
      "resource": "sap/ui/vtm/library.js",
      "module": "sap/ui/vtm/library",
      "export": "interfaces.IVisibilityHeaderIconClickExtension",
      "static": true,
      "visibility": "public",
      "since": "1.50",
      "description": "Interface for extensions which provide a behaviour when the icon in the column header for the {@link sap.ui.vtm.InternalColumnDescriptor.Visibility} column is clicked.",
      "experimental": {
        "since": "1.50.0",
        "text": "This library is experimental and might be modified or removed in future versions."
      },
      "ui5-metamodel": true
    },
    {
      "kind": "interface",
      "name": "sap.ui.vtm.interfaces.IVisibilityIconClickExtension",
      "basename": "IVisibilityIconClickExtension",
      "resource": "sap/ui/vtm/library.js",
      "module": "sap/ui/vtm/library",
      "export": "interfaces.IVisibilityIconClickExtension",
      "static": true,
      "visibility": "public",
      "since": "1.50",
      "description": "Interface for extensions which provide a behaviour when an icon in the {@link sap.ui.vtm.InternalColumnDescriptor.Visibility} column is clicked.",
      "experimental": {
        "since": "1.50.0",
        "text": "This library is experimental and might be modified or removed in future versions."
      },
      "ui5-metamodel": true
    },
    {
      "kind": "enum",
      "name": "sap.ui.vtm.InternalColumnDescriptor",
      "basename": "InternalColumnDescriptor",
      "resource": "sap/ui/vtm/InternalColumnDescriptor.js",
      "module": "sap/ui/vtm/InternalColumnDescriptor",
      "export": "",
      "static": true,
      "visibility": "public",
      "description": "Enumeration specifying descriptors for {@link sap.ui.vtm.Column} objects of type {@link sap.ui.vtm.ColumnType.Internal}.",
      "experimental": {
        "since": "1.50.0",
        "text": "This type is experimental and might be modified or removed in future versions."
      },
      "ui5-metamodel": true,
      "properties": [
        {
          "name": "AbsoluteMatrix",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "A column showing the <code>absoluteMatrix</code> field of the tree item."
        },
        {
          "name": "HighlightColor",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "A column showing the <code>highlightColor</code> field of the tree item."
        },
        {
          "name": "MessageStatus",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The column that is used to provide an indication of the messages that apply to the tree item and its descendants."
        },
        {
          "name": "Opacity",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "A column showing the <code>opacity</code> field of the tree item."
        },
        {
          "name": "RelativeMatrix",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "A column showing the <code>relativeMatrix</code> field of the tree item."
        },
        {
          "name": "SceneNodeIds",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "A column showing the <code>sceneNodeIds</code> field of the tree item."
        },
        {
          "name": "Tree",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The column that contains the tree item name and the tree type icon. This must always be the first column."
        },
        {
          "name": "TreeItemId",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "A column containing the <code>id</code> field of the tree item."
        },
        {
          "name": "Visibility",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The column that is used to indicate and control visibility of the scene nodes associated with the tree item."
        }
      ]
    },
    {
      "kind": "namespace",
      "name": "sap.ui.vtm.InternalColumns",
      "basename": "InternalColumns",
      "resource": "sap/ui/vtm/InternalColumns.js",
      "module": "sap/ui/vtm/InternalColumns",
      "export": "",
      "static": true,
      "visibility": "public",
      "description": "A set of utility functions for creating internal tree columns.",
      "experimental": {
        "since": "1.50.0",
        "text": "This class is experimental and might be modified or removed in future versions."
      },
      "methods": [
        {
          "name": "createAbsoluteMatrixColumn",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.vtm.Column",
            "description": "The {@link sap.ui.vtm.InternalColumnDescriptor.AbsoluteMatrix} column."
          },
          "description": "Creates a {@link sap.ui.vtm.InternalColumnDescriptor.AbsoluteMatrix} column."
        },
        {
          "name": "createMessageStatusColumn",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.vtm.Column",
            "description": "The {@link sap.ui.vtm.InternalColumnDescriptor.MessageStatus} internal column."
          },
          "description": "Creates a {@link sap.ui.vtm.InternalColumnDescriptor.MessageStatus} internal column."
        },
        {
          "name": "createOpacityColumn",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.vtm.Column",
            "description": "The {@link sap.ui.vtm.InternalColumnDescriptor.Opacity} column."
          },
          "description": "Creates an {@link sap.ui.vtm.InternalColumnDescriptor.Opacity} column."
        },
        {
          "name": "createRelativeMatrixColumn",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.vtm.Column",
            "description": "The {@link sap.ui.vtm.InternalColumnDescriptor.RelativeMatrix} column."
          },
          "description": "Creates a {@link sap.ui.vtm.InternalColumnDescriptor.RelativeMatrix} column."
        },
        {
          "name": "createSceneNodeIdsColumn",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.vtm.Column",
            "description": "The {@link sap.ui.vtm.InternalColumnDescriptor.SceneNodeIds} column."
          },
          "description": "Creates a {@link sap.ui.vtm.InternalColumnDescriptor.SceneNodeIds} column."
        },
        {
          "name": "createTreeColumn",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.vtm.Column",
            "description": "The {@link sap.ui.vtm.InternalColumnDescriptor.Tree} internal column."
          },
          "description": "Creates a {@link sap.ui.vtm.InternalColumnDescriptor.Tree} internal column."
        },
        {
          "name": "createTreeItemIdColumn",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.vtm.Column",
            "description": "The {@link sap.ui.vtm.InternalColumnDescriptor.TreeItemId} column."
          },
          "description": "Creates a {@link sap.ui.vtm.InternalColumnDescriptor.TreeItemId} column."
        },
        {
          "name": "createVisibilityColumn",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.vtm.Column",
            "description": "The {@link sap.ui.vtm.InternalColumnDescriptor.Visibility} internal column."
          },
          "description": "Creates a {@link sap.ui.vtm.InternalColumnDescriptor.Visibility} internal column."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.vtm.Lookup",
      "basename": "Lookup",
      "resource": "sap/ui/vtm/Lookup.js",
      "module": "sap/ui/vtm/Lookup",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.core.Element",
      "description": "A map that can contain multiple values per key value. This is a utility class that can be used as a data structure for: <ul> <li>Maintaining a lookup containing scene nodes keyed by a particular value in order to determine the scene nodes that should be associated with a particular tree item</li> <li>Maintaining lookups (one for each tree) of tree items keyed by a particular value in order to determine the tree items in one tree that are associated with tree items in another tree</li> </ul> A typical usage would be to use a {@link sap.ui.vtm.Lookup} that is keyed using a hash code constructed from some or all of the information needed to match a particular tree item or scene node. In this scenario the {@link sap.ui.vtm.Lookup} is used to return a set of possible matches which are then filtered to find the actual matches. The usage of the {@link sap.ui.vtm.Lookup} with a suitable key can drastically reduces the number of items that need to be compared when performing a search. This is important when there are large numbers of searches that need to be performed within a large set of items.",
      "experimental": {
        "since": "1.50.0",
        "text": "This class is experimental and might be modified or removed in future versions."
      },
      "ui5-metadata": { "stereotype": "element" },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "equalsFunc",
            "type": "function",
            "optional": false,
            "description": "A function to compare two values for equality (takes two values as parameters and returns true if they are equal)."
          }
        ],
        "description": "Constructor for a new Lookup.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "addValue",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Lookup",
            "description": "<code>this</code> for method chaining."
          },
          "parameters": [
            {
              "name": "key",
              "type": "any",
              "optional": false,
              "description": "The key."
            },
            {
              "name": "value",
              "type": "any",
              "optional": false,
              "description": "The value."
            }
          ],
          "description": "Adds a value to the set of values stored against a given key."
        },
        {
          "name": "clear",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Lookup",
            "description": "<code>this</code> for method chaining."
          },
          "description": "Clears the Lookup."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.vtm.Lookup with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
        },
        {
          "name": "forEach",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Lookup",
            "description": "<code>this</code> for method chaining."
          },
          "parameters": [
            {
              "name": "callback",
              "type": "function",
              "optional": false,
              "description": "The callback function to call for each key/value array pair. The first argument to the callback function is the value array and the second parameter is the key."
            }
          ],
          "description": "Loops over the key/value array pairs calling the callback function for each pair."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.vtm.Lookup."
        },
        {
          "name": "getValues",
          "visibility": "public",
          "returnValue": {
            "type": "any[]",
            "description": "The values (if any) associated with the given key."
          },
          "parameters": [
            {
              "name": "key",
              "type": "any",
              "optional": false,
              "description": "The key to use to index the Lookup."
            }
          ],
          "description": "Gets the values stored against a given key."
        },
        {
          "name": "hasValue",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "<code>true</code> if there are any values stored against the given key."
          },
          "parameters": [
            {
              "name": "key",
              "type": "any",
              "optional": false,
              "description": "The key."
            }
          ],
          "description": "Returns whether there are any values stored against the given key."
        },
        {
          "name": "removeValue",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Lookup",
            "description": "<code>this</code> for method chaining."
          },
          "parameters": [
            {
              "name": "key",
              "type": "any",
              "optional": false,
              "description": "The key."
            },
            {
              "name": "value",
              "type": "any",
              "optional": false,
              "description": "The value."
            },
            {
              "name": "equalsFunc",
              "type": "function",
              "optional": false,
              "description": "A function to compare two values for equality (takes two values as parameters and returns true if they are equal)."
            }
          ],
          "description": "Removes a particular value."
        }
      ]
    },
    {
      "kind": "namespace",
      "name": "sap.ui.vtm.Matrix",
      "basename": "Matrix",
      "resource": "sap/ui/vtm/library.js",
      "module": "sap/ui/vtm/library",
      "export": "Matrix",
      "final": true,
      "static": true,
      "visibility": "public",
      "description": "A float[] type representing a transformation matrix in a ISO 10303-42 format (in a 1 dimensional array of 13 numbers).\n\nThe {@link sap.ui.vtm.MatrixComponent} enumeration enumerates the array indices of the matrix components for this type",
      "experimental": {
        "since": "1.0.0",
        "text": "This class is experimental and might be modified or removed in future versions."
      },
      "ui5-metamodel": true
    },
    {
      "kind": "namespace",
      "name": "sap.ui.vtm.MatrixUtilities",
      "basename": "MatrixUtilities",
      "resource": "sap/ui/vtm/MatrixUtilities.js",
      "module": "sap/ui/vtm/MatrixUtilities",
      "export": "",
      "static": true,
      "visibility": "public",
      "description": "A set of utility functions for working with transformation matrices in a ISO 10303-42 format (in the form of a 1 dimensional array of 13 numbers)",
      "experimental": {
        "since": "1.50.0",
        "text": "This class is experimental and might be modified or removed in future versions."
      },
      "methods": [
        {
          "name": "areEqual",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "boolean",
            "description": "<code>true</code> if the two matrix parameters are equal."
          },
          "parameters": [
            {
              "name": "vtmMatrixA",
              "type": "sap.ui.vtm.Matrix",
              "optional": false,
              "description": "One matrix to compare."
            },
            {
              "name": "vtmMatrixB",
              "type": "sap.ui.vtm.Matrix",
              "optional": false,
              "description": "The other matrix to compare."
            }
          ],
          "description": "Returns true when the two matrix parameters are equal."
        },
        {
          "name": "createIdentity",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.vtm.Matrix",
            "description": "A new identity transformation matrix."
          },
          "description": "Returns an identity transformation matrix."
        },
        {
          "name": "from4x4Matrix",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.vtm.Matrix",
            "description": "The {@link sap.ui.vtm.Matrix} value."
          },
          "parameters": [
            {
              "name": "mat4x4",
              "type": "number[]",
              "optional": false,
              "description": "The 4x4 matrix (represented as an array of arrays of numbers) to convert."
            }
          ],
          "description": "Converts a 4x4 transformation matrix to a {@link sap.ui.vtm.Matrix}."
        },
        {
          "name": "fromVkMatrix",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.vtm.Matrix",
            "description": "The {@link sap.ui.vtm.Matrix} value."
          },
          "parameters": [
            {
              "name": "vkMatrix",
              "type": "sap.ui.vk.TransformationMatrix",
              "optional": false,
              "description": "The VIT transformation matrix."
            }
          ],
          "description": "Converts a {@link sap.ui.vk.TransformationMatrix} (as used by the sap.ui.vk library) to a {@link sap.ui.vtm.Matrix} value."
        },
        {
          "name": "fromVsmMatrixString",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.vtm.Matrix",
            "description": "The {@link sap.ui.vtm.Matrix} value."
          },
          "parameters": [
            {
              "name": "vsmMatrixString",
              "type": "string",
              "optional": false,
              "description": "The VSM transformation matrix string."
            }
          ],
          "description": "Converts a VSM transformation matrix string to a {@link sap.ui.vtm.Matrix} value."
        },
        {
          "name": "invert",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.vtm.Matrix",
            "description": "The inverse of the specified matrix."
          },
          "parameters": [
            {
              "name": "vtmMatrix",
              "type": "sap.ui.vtm.Matrix",
              "optional": false,
              "description": "The matrix to invert."
            }
          ],
          "description": "Returns the inverse of the passed matrix without modifying the passed matrix."
        },
        {
          "name": "isInvertible",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "boolean",
            "description": "Whether the matrix is invertible."
          },
          "parameters": [
            {
              "name": "vtmMatrix",
              "type": "sap.ui.vtm.Matrix",
              "optional": false,
              "description": "The matrix to check."
            }
          ],
          "description": "Returns whether a matrix is invertible."
        },
        {
          "name": "isValid",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "boolean",
            "description": "true if the parameter represents a valid transformation matrix."
          },
          "parameters": [
            {
              "name": "vtmMatrix",
              "type": "sap.ui.vtm.Matrix",
              "optional": false,
              "description": "The transformation matrix to check."
            },
            {
              "name": "checkInvertibility",
              "type": "boolean",
              "optional": false,
              "description": "Checks whether the matrix is invertible.<br/> Matrices must be invertible to be used as transformation matrices.<br/> This check is optional due to the additional cost of performing it."
            }
          ],
          "description": "Returns true if the parameter represents a valid transformation matrix."
        },
        {
          "name": "multiply",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.vtm.Matrix",
            "description": "The matrix representing the multiplication result."
          },
          "parameters": [
            {
              "name": "vtmMatrixA",
              "type": "sap.ui.vtm.Matrix",
              "optional": false,
              "description": "One multiplicand."
            },
            {
              "name": "vtmMatrixB",
              "type": "sap.ui.vtm.Matrix",
              "optional": false,
              "description": "The other multiplicand."
            }
          ],
          "description": "Returns the result of multiplying two matrices (without modifying the passed matrices)."
        },
        {
          "name": "to4x4Matrix",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "number[]",
            "description": "A 4x4 transformation matrix (represented as an array of arrays of numbers)."
          },
          "parameters": [
            {
              "name": "vtmMatrix",
              "type": "sap.ui.vtm.Matrix",
              "optional": false,
              "description": "The {@link sap.ui.vtm.Matrix} value to convert."
            }
          ],
          "description": "Converts a {@link sap.ui.vtm.Matrix} to a 4x4 transformation matrix."
        },
        {
          "name": "toVkMatrix",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.vk.TransformationMatrix",
            "description": "The {@link sap.ui.vk.TransformationMatrix} value."
          },
          "parameters": [
            {
              "name": "vtmMatrix",
              "type": "sap.ui.vtm.Matrix",
              "optional": false,
              "description": "The {@link sap.ui.vtm.Matrix} value"
            }
          ],
          "description": "Converts a {@link sap.ui.vtm.Matrix} value to a {@link sap.ui.vk.TransformationMatrix} as used by the sap.ui.vk library."
        },
        {
          "name": "toVsmMatrixString",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "string",
            "description": "The VSM transformation matrix string."
          },
          "parameters": [
            {
              "name": "vtmMatrix",
              "type": "sap.ui.vtm.Matrix",
              "optional": false,
              "description": "The {@link sap.ui.vtm.Matrix} value."
            }
          ],
          "description": "Converts a {@link sap.ui.vtm.Matrix} value to a VSM transformation matrix string."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.vtm.MessagesPopover",
      "basename": "MessagesPopover",
      "resource": "sap/ui/vtm/MessagesPopover.js",
      "module": "sap/ui/vtm/MessagesPopover",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.m.Popover",
      "description": "A control that can be used to show messages applied to a tree item.",
      "experimental": {
        "since": "1.50.0",
        "text": "This class is experimental and might be modified or removed in future versions."
      },
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "messages",
            "type": "object[]",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The set of {@link sap.ui.core.Message} objects to display.\n\nOnly the following properties of each message will be used: <ul> <li><code>level</code></li> <li><code>text</code></li> <li><code>icon</code></li> </ul>",
            "methods": ["getMessages", "setMessages"]
          },
          {
            "name": "maxHeight",
            "type": "sap.ui.core.CSSSize",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Maximum height of status window.",
            "methods": ["getMaxHeight", "setMaxHeight"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "description": "Constructor for a new MessagesPopover.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.vtm.MessagesPopover with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.m.Popover.extend}."
        },
        {
          "name": "getMaxHeight",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.CSSSize",
            "description": "Value of property <code>maxHeight</code>"
          },
          "description": "Gets current value of property {@link #getMaxHeight maxHeight}.\n\nMaximum height of status window."
        },
        {
          "name": "getMessages",
          "visibility": "public",
          "returnValue": {
            "type": "object[]",
            "description": "Value of property <code>messages</code>"
          },
          "description": "Gets current value of property {@link #getMessages messages}.\n\nThe set of {@link sap.ui.core.Message} objects to display.\n\nOnly the following properties of each message will be used: <ul> <li><code>level</code></li> <li><code>text</code></li> <li><code>icon</code></li> </ul>"
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.vtm.MessagesPopover."
        },
        {
          "name": "setMaxHeight",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.MessagesPopover",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sMaxHeight",
              "type": "sap.ui.core.CSSSize",
              "optional": false,
              "description": "New value for property <code>maxHeight</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getMaxHeight maxHeight}.\n\nMaximum height of status window.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setMessages",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.MessagesPopover",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sMessages",
              "type": "object[]",
              "optional": false,
              "description": "New value for property <code>messages</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getMessages messages}.\n\nThe set of {@link sap.ui.core.Message} objects to display.\n\nOnly the following properties of each message will be used: <ul> <li><code>level</code></li> <li><code>text</code></li> <li><code>icon</code></li> </ul>\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.vtm.Panel",
      "basename": "Panel",
      "resource": "sap/ui/vtm/Panel.js",
      "module": "sap/ui/vtm/Panel",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.core.Control",
      "description": "A control that represents a VTM panel. Contains: <ul> <li>A header area containing a title and optionally a set of application controls</li> <li>A sap.ui.vtm.Tree and a sap.ui.vtm.Viewport separated by a splitter</li> </ul>",
      "experimental": {
        "since": "1.50.0",
        "text": "This class is experimental and might be modified or removed in future versions."
      },
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "title",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The text to show in the title bar for this panel.",
            "methods": ["getTitle", "setTitle"]
          },
          {
            "name": "showViewport",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "description": "Controls whether the viewport will be shown for this panel.",
            "methods": ["getShowViewport", "setShowViewport"]
          },
          {
            "name": "treeWidth",
            "type": "sap.ui.core.CSSSize",
            "defaultValue": "50%",
            "group": "Misc",
            "visibility": "public",
            "description": "The width of the tree.",
            "methods": ["getTreeWidth", "setTreeWidth"]
          },
          {
            "name": "height",
            "type": "sap.ui.core.CSSSize",
            "defaultValue": "inherit",
            "group": "Misc",
            "visibility": "public",
            "description": "The height of the panel.",
            "methods": ["getHeight", "setHeight"]
          }
        ],
        "aggregations": [
          {
            "name": "_panel",
            "singularName": "_panel",
            "type": "sap.m.VBox",
            "cardinality": "0..1",
            "visibility": "hidden",
            "methods": ["get_panel", "destroy_panel", "set_panel"]
          },
          {
            "name": "titleControls",
            "singularName": "titleControl",
            "type": "sap.ui.core.Control",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "The set of controls to render in the title bar area.",
            "methods": [
              "getTitleControls",
              "destroyTitleControls",
              "insertTitleControl",
              "addTitleControl",
              "removeTitleControl",
              "indexOfTitleControl",
              "removeAllTitleControls"
            ]
          },
          {
            "name": "treeHeaderControls",
            "singularName": "treeHeaderControl",
            "type": "sap.ui.core.Control",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "The set of controls to render in the tree header area.",
            "methods": [
              "getTreeHeaderControls",
              "destroyTreeHeaderControls",
              "insertTreeHeaderControl",
              "addTreeHeaderControl",
              "removeTreeHeaderControl",
              "indexOfTreeHeaderControl",
              "removeAllTreeHeaderControls"
            ]
          },
          {
            "name": "viewportHeaderControls",
            "singularName": "viewportHeaderControl",
            "type": "sap.ui.core.Control",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "The set of controls to render in the viewport header area.",
            "methods": [
              "getViewportHeaderControls",
              "destroyViewportHeaderControls",
              "insertViewportHeaderControl",
              "addViewportHeaderControl",
              "removeViewportHeaderControl",
              "indexOfViewportHeaderControl",
              "removeAllViewportHeaderControls"
            ]
          }
        ],
        "associations": [
          {
            "name": "vtmId",
            "singularName": "vtmId",
            "type": "sap.ui.vtm.Vtm",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "The {@link sap.ui.vtm.Vtm} instance this panel is associated with.",
            "methods": ["getVtmId", "setVtmId"]
          }
        ],
        "events": [
          {
            "name": "initialized",
            "visibility": "public",
            "description": "Raised when the panel is initialized.",
            "methods": [
              "attachInitialized",
              "detachInitialized",
              "fireInitialized"
            ]
          },
          {
            "name": "contextMenu",
            "visibility": "public",
            "description": "Raised when the web browser <code>contextmenu</code> event is raised. To prevent the default browser context menu from being shown call preventDefault() on the event.",
            "parameters": {
              "clientX": {
                "name": "clientX",
                "type": "int",
                "description": "The X coordinate of the mouse pointer in local (DOM content) coordinates."
              },
              "clientY": {
                "name": "clientY",
                "type": "int",
                "description": "The Y coordinate of the mouse pointer in local (DOM content) coordinates."
              },
              "pageX": {
                "name": "pageX",
                "type": "int",
                "description": "The X coordinate of the mouse pointer in page coordinates."
              },
              "pageY": {
                "name": "pageY",
                "type": "int",
                "description": "The X coordinate of the mouse pointer in page coordinates."
              },
              "screenX": {
                "name": "screenX",
                "type": "int",
                "description": "The X coordinate of the mouse pointer in screen coordinates."
              },
              "screenY": {
                "name": "screenY",
                "type": "int",
                "description": "The X coordinate of the mouse pointer in screen coordinates."
              },
              "eventData": {
                "name": "eventData",
                "type": "object",
                "description": "The jQuery event object."
              }
            },
            "methods": [
              "attachContextMenu",
              "detachContextMenu",
              "fireContextMenu"
            ]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": false,
            "description": "id for the new {@link sap.ui.vtm.Panel} instance."
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": false,
            "description": "Object with initial property values, aggregated objects etc. for the new {@link sap.ui.vtm.Panel} instance.<br/> The <code>vtmId</code> association needs to be set in order for the panel to be associated with a {@link sap.ui.vtm.Vtm} instance.<br/> {@link sap.ui.vtm.Vtm#createPanel createPanel} creates a {@link sap.ui.vtm.Panel} instance and populates the <code>vtmId</code> association."
          }
        ],
        "description": "Constructor for a new Panel.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "contextMenu",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "clientX": {
                      "name": "clientX",
                      "type": "int",
                      "optional": false,
                      "description": "The X coordinate of the mouse pointer in local (DOM content) coordinates."
                    },
                    "clientY": {
                      "name": "clientY",
                      "type": "int",
                      "optional": false,
                      "description": "The Y coordinate of the mouse pointer in local (DOM content) coordinates."
                    },
                    "pageX": {
                      "name": "pageX",
                      "type": "int",
                      "optional": false,
                      "description": "The X coordinate of the mouse pointer in page coordinates."
                    },
                    "pageY": {
                      "name": "pageY",
                      "type": "int",
                      "optional": false,
                      "description": "The X coordinate of the mouse pointer in page coordinates."
                    },
                    "screenX": {
                      "name": "screenX",
                      "type": "int",
                      "optional": false,
                      "description": "The X coordinate of the mouse pointer in screen coordinates."
                    },
                    "screenY": {
                      "name": "screenY",
                      "type": "int",
                      "optional": false,
                      "description": "The X coordinate of the mouse pointer in screen coordinates."
                    },
                    "eventData": {
                      "name": "eventData",
                      "type": "object",
                      "optional": false,
                      "description": "The jQuery event object."
                    }
                  }
                }
              }
            }
          ],
          "description": "Raised when the web browser <code>contextmenu</code> event is raised. To prevent the default browser context menu from being shown call preventDefault() on the event."
        },
        {
          "name": "initialized",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "Raised when the panel is initialized."
        }
      ],
      "methods": [
        {
          "name": "addTitleControl",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Panel",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oTitleControl",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The titleControl to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some titleControl to the aggregation {@link #getTitleControls titleControls}."
        },
        {
          "name": "addTreeHeaderControl",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Panel",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oTreeHeaderControl",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The treeHeaderControl to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some treeHeaderControl to the aggregation {@link #getTreeHeaderControls treeHeaderControls}."
        },
        {
          "name": "addViewportHeaderControl",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Panel",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oViewportHeaderControl",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The viewportHeaderControl to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some viewportHeaderControl to the aggregation {@link #getViewportHeaderControls viewportHeaderControls}."
        },
        {
          "name": "attachContextMenu",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Panel",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.vtm.Panel</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:contextMenu contextMenu} event of this <code>sap.ui.vtm.Panel</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.vtm.Panel</code> itself.\n\nRaised when the web browser <code>contextmenu</code> event is raised. To prevent the default browser context menu from being shown call preventDefault() on the event."
        },
        {
          "name": "attachInitialized",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Panel",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.vtm.Panel</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:initialized initialized} event of this <code>sap.ui.vtm.Panel</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.vtm.Panel</code> itself.\n\nRaised when the panel is initialized."
        },
        {
          "name": "destroyTitleControls",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Panel",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the titleControls in the aggregation {@link #getTitleControls titleControls}."
        },
        {
          "name": "destroyTreeHeaderControls",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Panel",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the treeHeaderControls in the aggregation {@link #getTreeHeaderControls treeHeaderControls}."
        },
        {
          "name": "destroyViewportHeaderControls",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Panel",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the viewportHeaderControls in the aggregation {@link #getViewportHeaderControls viewportHeaderControls}."
        },
        {
          "name": "detachContextMenu",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Panel",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:contextMenu contextMenu} event of this <code>sap.ui.vtm.Panel</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachInitialized",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Panel",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:initialized initialized} event of this <code>sap.ui.vtm.Panel</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.vtm.Panel with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "fireContextMenu",
          "visibility": "protected",
          "returnValue": {
            "type": "boolean",
            "description": "Whether or not to prevent the default action"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "clientX": {
                  "name": "clientX",
                  "type": "int",
                  "optional": true,
                  "description": "The X coordinate of the mouse pointer in local (DOM content) coordinates."
                },
                "clientY": {
                  "name": "clientY",
                  "type": "int",
                  "optional": true,
                  "description": "The Y coordinate of the mouse pointer in local (DOM content) coordinates."
                },
                "pageX": {
                  "name": "pageX",
                  "type": "int",
                  "optional": true,
                  "description": "The X coordinate of the mouse pointer in page coordinates."
                },
                "pageY": {
                  "name": "pageY",
                  "type": "int",
                  "optional": true,
                  "description": "The X coordinate of the mouse pointer in page coordinates."
                },
                "screenX": {
                  "name": "screenX",
                  "type": "int",
                  "optional": true,
                  "description": "The X coordinate of the mouse pointer in screen coordinates."
                },
                "screenY": {
                  "name": "screenY",
                  "type": "int",
                  "optional": true,
                  "description": "The X coordinate of the mouse pointer in screen coordinates."
                },
                "eventData": {
                  "name": "eventData",
                  "type": "object",
                  "optional": true,
                  "description": "The jQuery event object."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:contextMenu contextMenu} to attached listeners.\n\nListeners may prevent the default action of this event by using the <code>preventDefault</code>-method on the event object."
        },
        {
          "name": "fireInitialized",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.vtm.Panel",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:initialized initialized} to attached listeners."
        },
        {
          "name": "getHeight",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.CSSSize",
            "description": "Value of property <code>height</code>"
          },
          "description": "Gets current value of property {@link #getHeight height}.\n\nThe height of the panel.\n\nDefault value is <code>inherit</code>."
        },
        {
          "name": "getIsActive",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "<code>true</code> if this is the active panel."
          },
          "description": "Gets whether this is the active {@link sap.ui.vtm.Panel}."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.vtm.Panel."
        },
        {
          "name": "getShowViewport",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showViewport</code>"
          },
          "description": "Gets current value of property {@link #getShowViewport showViewport}.\n\nControls whether the viewport will be shown for this panel.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getTitle",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>title</code>"
          },
          "description": "Gets current value of property {@link #getTitle title}.\n\nThe text to show in the title bar for this panel."
        },
        {
          "name": "getTitleControls",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.Control[]" },
          "description": "Gets content of aggregation {@link #getTitleControls titleControls}.\n\nThe set of controls to render in the title bar area."
        },
        {
          "name": "getTree",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Tree",
            "description": "The tree owned by this panel."
          },
          "description": "Gets the tree owned by this panel."
        },
        {
          "name": "getTreeHeaderControls",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.Control[]" },
          "description": "Gets content of aggregation {@link #getTreeHeaderControls treeHeaderControls}.\n\nThe set of controls to render in the tree header area."
        },
        {
          "name": "getTreeWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.CSSSize",
            "description": "Value of property <code>treeWidth</code>"
          },
          "description": "Gets current value of property {@link #getTreeWidth treeWidth}.\n\nThe width of the tree.\n\nDefault value is <code>50%</code>."
        },
        {
          "name": "getViewport",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Viewport",
            "description": "The viewport owned by this panel."
          },
          "description": "Gets the viewport owned by this panel."
        },
        {
          "name": "getViewportHeaderControls",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.Control[]" },
          "description": "Gets content of aggregation {@link #getViewportHeaderControls viewportHeaderControls}.\n\nThe set of controls to render in the viewport header area."
        },
        {
          "name": "getVtm",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Vtm",
            "description": "The {@link sap.ui.vtm.Vtm} instance that owns this panel."
          },
          "description": "Gets the {@link sap.ui.vtm.Vtm} instance that owns this panel."
        },
        {
          "name": "getVtmId",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.ID" },
          "description": "ID of the element which is the current target of the association {@link #getVtmId vtmId}, or <code>null</code>."
        },
        {
          "name": "indexOfTitleControl",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oTitleControl",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The titleControl whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.ui.core.Control</code> in the aggregation {@link #getTitleControls titleControls}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "indexOfTreeHeaderControl",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oTreeHeaderControl",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The treeHeaderControl whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.ui.core.Control</code> in the aggregation {@link #getTreeHeaderControls treeHeaderControls}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "indexOfViewportHeaderControl",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oViewportHeaderControl",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The viewportHeaderControl whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.ui.core.Control</code> in the aggregation {@link #getViewportHeaderControls viewportHeaderControls}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "insertTitleControl",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Panel",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oTitleControl",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The titleControl to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the titleControl should be inserted at; for a negative value of <code>iIndex</code>, the titleControl is inserted at position 0; for a value greater than the current size of the aggregation, the titleControl is inserted at the last position"
            }
          ],
          "description": "Inserts a titleControl into the aggregation {@link #getTitleControls titleControls}."
        },
        {
          "name": "insertTreeHeaderControl",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Panel",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oTreeHeaderControl",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The treeHeaderControl to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the treeHeaderControl should be inserted at; for a negative value of <code>iIndex</code>, the treeHeaderControl is inserted at position 0; for a value greater than the current size of the aggregation, the treeHeaderControl is inserted at the last position"
            }
          ],
          "description": "Inserts a treeHeaderControl into the aggregation {@link #getTreeHeaderControls treeHeaderControls}."
        },
        {
          "name": "insertViewportHeaderControl",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Panel",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oViewportHeaderControl",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The viewportHeaderControl to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the viewportHeaderControl should be inserted at; for a negative value of <code>iIndex</code>, the viewportHeaderControl is inserted at position 0; for a value greater than the current size of the aggregation, the viewportHeaderControl is inserted at the last position"
            }
          ],
          "description": "Inserts a viewportHeaderControl into the aggregation {@link #getViewportHeaderControls viewportHeaderControls}."
        },
        {
          "name": "removeAllTitleControls",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.Control[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getTitleControls titleControls}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeAllTreeHeaderControls",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.Control[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getTreeHeaderControls treeHeaderControls}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeAllViewportHeaderControls",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.Control[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getViewportHeaderControls viewportHeaderControls}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeTitleControl",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.Control",
            "description": "The removed titleControl or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vTitleControl",
              "type": "int|string|sap.ui.core.Control",
              "optional": false,
              "description": "The titleControl to remove or its index or id"
            }
          ],
          "description": "Removes a titleControl from the aggregation {@link #getTitleControls titleControls}."
        },
        {
          "name": "removeTreeHeaderControl",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.Control",
            "description": "The removed treeHeaderControl or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vTreeHeaderControl",
              "type": "int|string|sap.ui.core.Control",
              "optional": false,
              "description": "The treeHeaderControl to remove or its index or id"
            }
          ],
          "description": "Removes a treeHeaderControl from the aggregation {@link #getTreeHeaderControls treeHeaderControls}."
        },
        {
          "name": "removeViewportHeaderControl",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.Control",
            "description": "The removed viewportHeaderControl or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vViewportHeaderControl",
              "type": "int|string|sap.ui.core.Control",
              "optional": false,
              "description": "The viewportHeaderControl to remove or its index or id"
            }
          ],
          "description": "Removes a viewportHeaderControl from the aggregation {@link #getViewportHeaderControls viewportHeaderControls}."
        },
        {
          "name": "setHeight",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Panel",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sHeight",
              "type": "sap.ui.core.CSSSize",
              "optional": false,
              "description": "New value for property <code>height</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getHeight height}.\n\nThe height of the panel.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>inherit</code>."
        },
        {
          "name": "setShowViewport",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Panel",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowViewport",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showViewport</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowViewport showViewport}.\n\nControls whether the viewport will be shown for this panel.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setTitle",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Panel",
            "description": "Returns <code>this</code> for method chaining."
          },
          "parameters": [
            {
              "name": "title",
              "type": "string",
              "optional": false,
              "description": "The panel title text"
            }
          ],
          "description": "Sets the panel title."
        },
        {
          "name": "setTreeWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Panel",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sTreeWidth",
              "type": "sap.ui.core.CSSSize",
              "optional": false,
              "description": "New value for property <code>treeWidth</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getTreeWidth treeWidth}.\n\nThe width of the tree.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>50%</code>."
        },
        {
          "name": "setVtmId",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Panel",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oVtmId",
              "type": "sap.ui.core.ID|sap.ui.vtm.Vtm",
              "optional": false,
              "description": "ID of an element which becomes the new target of this vtmId association; alternatively, an element instance may be given"
            }
          ],
          "description": "Sets the associated {@link #getVtmId vtmId}."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.ui.vtm.PredefinedView",
      "basename": "PredefinedView",
      "resource": "sap/ui/vtm/PredefinedView.js",
      "module": "sap/ui/vtm/PredefinedView",
      "export": "",
      "static": true,
      "visibility": "public",
      "description": "Enumeration specifying predefined views.",
      "experimental": {
        "since": "1.50.0",
        "text": "This type is experimental and might be modified or removed in future versions."
      },
      "ui5-metamodel": true,
      "properties": [
        {
          "name": "Back",
          "visibility": "public",
          "static": true,
          "type": "undefined",
          "description": "The view from the back."
        },
        {
          "name": "Bottom",
          "visibility": "public",
          "static": true,
          "type": "undefined",
          "description": "The view from the bottom."
        },
        {
          "name": "Front",
          "visibility": "public",
          "static": true,
          "type": "undefined",
          "description": "The view from the front."
        },
        {
          "name": "Left",
          "visibility": "public",
          "static": true,
          "type": "undefined",
          "description": "The view from the left."
        },
        {
          "name": "Right",
          "visibility": "public",
          "static": true,
          "type": "undefined",
          "description": "The view from the right."
        },
        {
          "name": "Top",
          "visibility": "public",
          "static": true,
          "type": "undefined",
          "description": "The view from the top."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.vtm.ProgressDialog",
      "basename": "ProgressDialog",
      "resource": "sap/ui/vtm/ProgressDialog.js",
      "module": "sap/ui/vtm/ProgressDialog",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.core.Control",
      "description": "A progress control to show viewable download and load progress.",
      "experimental": {
        "since": "1.50.0",
        "text": "This class is experimental and might be modified or removed in future versions."
      },
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "progressText",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The text to display in the progress dialog.",
            "methods": ["getProgressText", "setProgressText"]
          },
          {
            "name": "percentComplete",
            "type": "int",
            "defaultValue": 0,
            "group": "Misc",
            "visibility": "public",
            "description": "The percentage (0-100) to show in the progress bar (if visible).",
            "methods": ["getPercentComplete", "setPercentComplete"]
          },
          {
            "name": "progressBarVisible",
            "type": "boolean",
            "defaultValue": "true",
            "group": "Misc",
            "visibility": "public",
            "description": "Whether the progress bar is visible.",
            "methods": ["getProgressBarVisible", "setProgressBarVisible"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "scene",
            "type": "sap.ui.vtm.Scene",
            "optional": false,
            "description": "The scene that is being used to load viewables."
          }
        ],
        "description": "Constructor for a new ProgressDialog.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "close",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.ProgressDialog",
            "description": "<code>this</code> for method chaining."
          },
          "description": "Closes the dialog."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.vtm.ProgressDialog with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.vtm.ProgressDialog."
        },
        {
          "name": "getPercentComplete",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>percentComplete</code>"
          },
          "description": "Gets current value of property {@link #getPercentComplete percentComplete}.\n\nThe percentage (0-100) to show in the progress bar (if visible).\n\nDefault value is <code>0</code>."
        },
        {
          "name": "getProgressBarVisible",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>progressBarVisible</code>"
          },
          "description": "Gets current value of property {@link #getProgressBarVisible progressBarVisible}.\n\nWhether the progress bar is visible.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getProgressText",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>progressText</code>"
          },
          "description": "Gets current value of property {@link #getProgressText progressText}.\n\nThe text to display in the progress dialog."
        },
        {
          "name": "isOpen",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "<code>true</code> when the dialog is open."
          },
          "description": "Returns whether the dialog is open."
        },
        {
          "name": "open",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.ProgressDialog",
            "description": "<code>this</code> for method chaining."
          },
          "description": "Opens the dialog."
        },
        {
          "name": "setPercentComplete",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.ProgressDialog",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iPercentComplete",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>percentComplete</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getPercentComplete percentComplete}.\n\nThe percentage (0-100) to show in the progress bar (if visible).\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>0</code>."
        },
        {
          "name": "setProgressBarVisible",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.ProgressDialog",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bProgressBarVisible",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>progressBarVisible</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getProgressBarVisible progressBarVisible}.\n\nWhether the progress bar is visible.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setProgressText",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.ProgressDialog",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sProgressText",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>progressText</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getProgressText progressText}.\n\nThe text to display in the progress dialog.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.vtm.Scene",
      "basename": "Scene",
      "resource": "sap/ui/vtm/Scene.js",
      "module": "sap/ui/vtm/Scene",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.core.Element",
      "description": "Allows access to scene nodes in the scene. A single {@link sap.ui.vtm.Scene} is shared by the {@link sap.ui.vtm.Viewport} objects in all the {@link sap.ui.vtm.Panel} objects associated with a {@link sap.ui.vtm.Vtm} instance. Visibility, selection, highlighting and opacity can be controlled for each scene node separately in each {@link sap.ui.vtm.Viewport}.",
      "experimental": {
        "since": "1.50.0",
        "text": "This class is experimental and might be modified or removed in future versions."
      },
      "ui5-metadata": {
        "stereotype": "element",
        "events": [
          {
            "name": "downloadProgress",
            "visibility": "public",
            "description": "Raised to indicate download progress of a viewable while viewables are being downloaded",
            "parameters": {
              "viewable": {
                "name": "viewable",
                "type": "sap.ui.vtm.Viewable",
                "description": "The viewable that is being downloaded."
              },
              "downloadedBytes": {
                "name": "downloadedBytes",
                "type": "int",
                "description": "The number of bytes that have been downloaded."
              },
              "totalBytes": {
                "name": "totalBytes",
                "type": "int",
                "description": "The total number of bytes that need to be downloaded."
              }
            },
            "methods": [
              "attachDownloadProgress",
              "detachDownloadProgress",
              "fireDownloadProgress"
            ]
          },
          {
            "name": "downloadStarted",
            "visibility": "public",
            "description": "Raised when starting a download of a set of viewables.",
            "parameters": {
              "viewableLoadInfos": {
                "name": "viewableLoadInfos",
                "type": "sap.ui.vtm.ViewableLoadInfo[]",
                "description": "A set of {@link sap.ui.vtm.ViewableLoadInfo} objects that describe the status of each {@link sap.ui.vtm.Viewable} passed to the {@link #loadViewablesAsync} call."
              }
            },
            "methods": [
              "attachDownloadStarted",
              "detachDownloadStarted",
              "fireDownloadStarted"
            ]
          },
          {
            "name": "downloadCompleted",
            "visibility": "public",
            "description": "Raised when viewables have been downloaded (successfully or unsuccessfully) as a result of a call to {@link #loadViewablesAsync}.\n\nIf no viewables have been successfully downloaded, none of the viewables will be loaded, so no subsequent {@link sap.ui.vtm.Scene.loadStarted}, {@link sap.ui.vtm.Scene.loadProgress} or {@link sap.ui.vtm.Scene.loadCompleted} will occur as a result of the call to {@link #loadViewablesAsync} that resulted in the {@link sap.ui.vtm.Scene.downloadCompleted} event being raised.",
            "parameters": {
              "viewableLoadInfos": {
                "name": "viewableLoadInfos",
                "type": "sap.ui.vtm.ViewableLoadInfo[]",
                "description": "A set of {@link sap.ui.vtm.ViewableLoadInfo} objects that describe the status of each {@link sap.ui.vtm.Viewable} passed to the {@link #loadViewablesAsync} call."
              },
              "downloadedViewables": {
                "name": "downloadedViewables",
                "type": "sap.ui.vtm.Viewable[]",
                "description": "The set of viewables that were downloaded successfully in the call to {@link #loadViewablesAsync} that resulted in this event being raised."
              }
            },
            "methods": [
              "attachDownloadCompleted",
              "detachDownloadCompleted",
              "fireDownloadCompleted"
            ]
          },
          {
            "name": "loadStarted",
            "visibility": "public",
            "description": "Raised when starting to load a set of viewables.",
            "parameters": {
              "viewableLoadInfos": {
                "name": "viewableLoadInfos",
                "type": "sap.ui.vtm.ViewableLoadInfo[]",
                "description": "A set of {@link sap.ui.vtm.ViewableLoadInfo} objects that describe the status of each {@link sap.ui.vtm.Viewable} passed to the {@link #loadViewablesAsync} call."
              }
            },
            "methods": [
              "attachLoadStarted",
              "detachLoadStarted",
              "fireLoadStarted"
            ]
          },
          {
            "name": "loadProgress",
            "visibility": "public",
            "description": "Raised to provide progress information for a viewable that is being loaded.",
            "methods": [
              "attachLoadProgress",
              "detachLoadProgress",
              "fireLoadProgress"
            ]
          },
          {
            "name": "loadCompleted",
            "visibility": "public",
            "description": "Raised when all viewables specified in a call to {@link #loadViewablesAsync} have either loaded or failed to load.",
            "parameters": {
              "succeeeded": {
                "name": "succeeeded",
                "type": "boolean",
                "description": "Indicates whether the scene was built/updated successfully. It is possible that this can be <code>false</code> when all the content resources apparently loaded successfully."
              },
              "viewableLoadInfos": {
                "name": "viewableLoadInfos",
                "type": "sap.ui.vtm.ViewableLoadInfo[]",
                "description": "A set of {@link sap.ui.vtm.ViewableLoadInfo} objects that describe the status of each {@link sap.ui.vtm.Viewable} passed to the {@link #loadViewablesAsync} call."
              },
              "loadedViewables": {
                "name": "loadedViewables",
                "type": "sap.ui.vtm.Viewable[]",
                "description": "The set of viewables that were loaded successfully in the call to {@link #loadViewablesAsync} that resulted in this event being raised."
              }
            },
            "methods": [
              "attachLoadCompleted",
              "detachLoadCompleted",
              "fireLoadCompleted"
            ]
          },
          {
            "name": "hierarchyChanged",
            "visibility": "public",
            "description": "Raised when the scene hierarchy has been modified.",
            "methods": [
              "attachHierarchyChanged",
              "detachHierarchyChanged",
              "fireHierarchyChanged"
            ]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "description": "This class is not intended to be directly instantiated by application code. A {@link sap.ui.vtm.Scene} object is created when a {@link sap.ui.vtm.Vtm} object is created.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "downloadCompleted",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "viewableLoadInfos": {
                      "name": "viewableLoadInfos",
                      "type": "sap.ui.vtm.ViewableLoadInfo[]",
                      "optional": false,
                      "description": "A set of {@link sap.ui.vtm.ViewableLoadInfo} objects that describe the status of each {@link sap.ui.vtm.Viewable} passed to the {@link #loadViewablesAsync} call."
                    },
                    "downloadedViewables": {
                      "name": "downloadedViewables",
                      "type": "sap.ui.vtm.Viewable[]",
                      "optional": false,
                      "description": "The set of viewables that were downloaded successfully in the call to {@link #loadViewablesAsync} that resulted in this event being raised."
                    }
                  }
                }
              }
            }
          ],
          "description": "Raised when viewables have been downloaded (successfully or unsuccessfully) as a result of a call to {@link #loadViewablesAsync}.\n\nIf no viewables have been successfully downloaded, none of the viewables will be loaded, so no subsequent {@link sap.ui.vtm.Scene.loadStarted}, {@link sap.ui.vtm.Scene.loadProgress} or {@link sap.ui.vtm.Scene.loadCompleted} will occur as a result of the call to {@link #loadViewablesAsync} that resulted in the {@link sap.ui.vtm.Scene.downloadCompleted} event being raised."
        },
        {
          "name": "downloadProgress",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "viewable": {
                      "name": "viewable",
                      "type": "sap.ui.vtm.Viewable",
                      "optional": false,
                      "description": "The viewable that is being downloaded."
                    },
                    "downloadedBytes": {
                      "name": "downloadedBytes",
                      "type": "int",
                      "optional": false,
                      "description": "The number of bytes that have been downloaded."
                    },
                    "totalBytes": {
                      "name": "totalBytes",
                      "type": "int",
                      "optional": false,
                      "description": "The total number of bytes that need to be downloaded."
                    }
                  }
                }
              }
            }
          ],
          "description": "Raised to indicate download progress of a viewable while viewables are being downloaded"
        },
        {
          "name": "downloadStarted",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "viewableLoadInfos": {
                      "name": "viewableLoadInfos",
                      "type": "sap.ui.vtm.ViewableLoadInfo[]",
                      "optional": false,
                      "description": "A set of {@link sap.ui.vtm.ViewableLoadInfo} objects that describe the status of each {@link sap.ui.vtm.Viewable} passed to the {@link #loadViewablesAsync} call."
                    }
                  }
                }
              }
            }
          ],
          "description": "Raised when starting a download of a set of viewables."
        },
        {
          "name": "hierarchyChanged",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "Raised when the scene hierarchy has been modified."
        },
        {
          "name": "loadCompleted",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "succeeeded": {
                      "name": "succeeeded",
                      "type": "boolean",
                      "optional": false,
                      "description": "Indicates whether the scene was built/updated successfully. It is possible that this can be <code>false</code> when all the content resources apparently loaded successfully."
                    },
                    "viewableLoadInfos": {
                      "name": "viewableLoadInfos",
                      "type": "sap.ui.vtm.ViewableLoadInfo[]",
                      "optional": false,
                      "description": "A set of {@link sap.ui.vtm.ViewableLoadInfo} objects that describe the status of each {@link sap.ui.vtm.Viewable} passed to the {@link #loadViewablesAsync} call."
                    },
                    "loadedViewables": {
                      "name": "loadedViewables",
                      "type": "sap.ui.vtm.Viewable[]",
                      "optional": false,
                      "description": "The set of viewables that were loaded successfully in the call to {@link #loadViewablesAsync} that resulted in this event being raised."
                    }
                  }
                }
              }
            }
          ],
          "description": "Raised when all viewables specified in a call to {@link #loadViewablesAsync} have either loaded or failed to load."
        },
        {
          "name": "loadProgress",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "Raised to provide progress information for a viewable that is being loaded."
        },
        {
          "name": "loadStarted",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "viewableLoadInfos": {
                      "name": "viewableLoadInfos",
                      "type": "sap.ui.vtm.ViewableLoadInfo[]",
                      "optional": false,
                      "description": "A set of {@link sap.ui.vtm.ViewableLoadInfo} objects that describe the status of each {@link sap.ui.vtm.Viewable} passed to the {@link #loadViewablesAsync} call."
                    }
                  }
                }
              }
            }
          ],
          "description": "Raised when starting to load a set of viewables."
        }
      ],
      "methods": [
        {
          "name": "attachDownloadCompleted",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Scene",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.vtm.Scene</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:downloadCompleted downloadCompleted} event of this <code>sap.ui.vtm.Scene</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.vtm.Scene</code> itself.\n\nRaised when viewables have been downloaded (successfully or unsuccessfully) as a result of a call to {@link #loadViewablesAsync}.\n\nIf no viewables have been successfully downloaded, none of the viewables will be loaded, so no subsequent {@link sap.ui.vtm.Scene.loadStarted}, {@link sap.ui.vtm.Scene.loadProgress} or {@link sap.ui.vtm.Scene.loadCompleted} will occur as a result of the call to {@link #loadViewablesAsync} that resulted in the {@link sap.ui.vtm.Scene.downloadCompleted} event being raised."
        },
        {
          "name": "attachDownloadProgress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Scene",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.vtm.Scene</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:downloadProgress downloadProgress} event of this <code>sap.ui.vtm.Scene</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.vtm.Scene</code> itself.\n\nRaised to indicate download progress of a viewable while viewables are being downloaded"
        },
        {
          "name": "attachDownloadStarted",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Scene",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.vtm.Scene</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:downloadStarted downloadStarted} event of this <code>sap.ui.vtm.Scene</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.vtm.Scene</code> itself.\n\nRaised when starting a download of a set of viewables."
        },
        {
          "name": "attachHierarchyChanged",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Scene",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.vtm.Scene</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:hierarchyChanged hierarchyChanged} event of this <code>sap.ui.vtm.Scene</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.vtm.Scene</code> itself.\n\nRaised when the scene hierarchy has been modified."
        },
        {
          "name": "attachLoadCompleted",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Scene",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.vtm.Scene</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:loadCompleted loadCompleted} event of this <code>sap.ui.vtm.Scene</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.vtm.Scene</code> itself.\n\nRaised when all viewables specified in a call to {@link #loadViewablesAsync} have either loaded or failed to load."
        },
        {
          "name": "attachLoadProgress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Scene",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.vtm.Scene</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:loadProgress loadProgress} event of this <code>sap.ui.vtm.Scene</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.vtm.Scene</code> itself.\n\nRaised to provide progress information for a viewable that is being loaded."
        },
        {
          "name": "attachLoadStarted",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Scene",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.vtm.Scene</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:loadStarted loadStarted} event of this <code>sap.ui.vtm.Scene</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.vtm.Scene</code> itself.\n\nRaised when starting to load a set of viewables."
        },
        {
          "name": "cloneNode",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "The scene node ID of the created node."
          },
          "parameters": [
            {
              "name": "nodeIdToClone",
              "type": "string",
              "optional": false,
              "description": "The ID of the node to clone."
            },
            {
              "name": "parentNodeId",
              "type": "string",
              "optional": false,
              "description": "The ID of the node that will be the parent of the created node. If <code>null</code> the newly created node is a top level node."
            },
            {
              "name": "insertBeforeNodeId",
              "type": "string",
              "optional": false,
              "description": "The created node is added before this specified node. If <code>null</code> the newly created node is added at the end of the parent's list of nodes."
            },
            {
              "name": "name",
              "type": "string",
              "optional": false,
              "description": "The name of the new node."
            },
            {
              "name": "recursive",
              "type": "boolean",
              "optional": false,
              "description": "If <code>true</code>, the descendants of the scene node will also be cloned. Defaults to <code>true</code>."
            }
          ],
          "description": "Clones a scene node."
        },
        {
          "name": "createNode",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "The scene node ID of the created node."
          },
          "parameters": [
            {
              "name": "parentNodeId",
              "type": "string",
              "optional": false,
              "description": "The ID of the node that will be the parent of the created node. If <code>null</code> the newly created node is a top level node."
            },
            {
              "name": "insertBeforeNodeId",
              "type": "string",
              "optional": false,
              "description": "The created node is added before this specified node. If <code>null</code> the newly created node is added at the end of the parent's list of nodes."
            },
            {
              "name": "name",
              "type": "string",
              "optional": false,
              "description": "The name of the new node."
            }
          ],
          "description": "Creates a scene node."
        },
        {
          "name": "deleteNode",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Scene",
            "description": "<code>this</code> for method chaining."
          },
          "parameters": [
            {
              "name": "nodeId",
              "type": "string",
              "optional": false,
              "description": "The ID of the node to delete."
            }
          ],
          "description": "Deletes a node from the scene."
        },
        {
          "name": "detachDownloadCompleted",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Scene",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:downloadCompleted downloadCompleted} event of this <code>sap.ui.vtm.Scene</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachDownloadProgress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Scene",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:downloadProgress downloadProgress} event of this <code>sap.ui.vtm.Scene</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachDownloadStarted",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Scene",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:downloadStarted downloadStarted} event of this <code>sap.ui.vtm.Scene</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachHierarchyChanged",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Scene",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:hierarchyChanged hierarchyChanged} event of this <code>sap.ui.vtm.Scene</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachLoadCompleted",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Scene",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:loadCompleted loadCompleted} event of this <code>sap.ui.vtm.Scene</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachLoadProgress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Scene",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:loadProgress loadProgress} event of this <code>sap.ui.vtm.Scene</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachLoadStarted",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Scene",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:loadStarted loadStarted} event of this <code>sap.ui.vtm.Scene</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.vtm.Scene with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
        },
        {
          "name": "fireDownloadCompleted",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.vtm.Scene",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "viewableLoadInfos": {
                  "name": "viewableLoadInfos",
                  "type": "sap.ui.vtm.ViewableLoadInfo[]",
                  "optional": true,
                  "description": "A set of {@link sap.ui.vtm.ViewableLoadInfo} objects that describe the status of each {@link sap.ui.vtm.Viewable} passed to the {@link #loadViewablesAsync} call."
                },
                "downloadedViewables": {
                  "name": "downloadedViewables",
                  "type": "sap.ui.vtm.Viewable[]",
                  "optional": true,
                  "description": "The set of viewables that were downloaded successfully in the call to {@link #loadViewablesAsync} that resulted in this event being raised."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:downloadCompleted downloadCompleted} to attached listeners."
        },
        {
          "name": "fireDownloadProgress",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.vtm.Scene",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "viewable": {
                  "name": "viewable",
                  "type": "sap.ui.vtm.Viewable",
                  "optional": true,
                  "description": "The viewable that is being downloaded."
                },
                "downloadedBytes": {
                  "name": "downloadedBytes",
                  "type": "int",
                  "optional": true,
                  "description": "The number of bytes that have been downloaded."
                },
                "totalBytes": {
                  "name": "totalBytes",
                  "type": "int",
                  "optional": true,
                  "description": "The total number of bytes that need to be downloaded."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:downloadProgress downloadProgress} to attached listeners."
        },
        {
          "name": "fireDownloadStarted",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.vtm.Scene",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "viewableLoadInfos": {
                  "name": "viewableLoadInfos",
                  "type": "sap.ui.vtm.ViewableLoadInfo[]",
                  "optional": true,
                  "description": "A set of {@link sap.ui.vtm.ViewableLoadInfo} objects that describe the status of each {@link sap.ui.vtm.Viewable} passed to the {@link #loadViewablesAsync} call."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:downloadStarted downloadStarted} to attached listeners."
        },
        {
          "name": "fireHierarchyChanged",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.vtm.Scene",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:hierarchyChanged hierarchyChanged} to attached listeners."
        },
        {
          "name": "fireLoadCompleted",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.vtm.Scene",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "succeeeded": {
                  "name": "succeeeded",
                  "type": "boolean",
                  "optional": true,
                  "description": "Indicates whether the scene was built/updated successfully. It is possible that this can be <code>false</code> when all the content resources apparently loaded successfully."
                },
                "viewableLoadInfos": {
                  "name": "viewableLoadInfos",
                  "type": "sap.ui.vtm.ViewableLoadInfo[]",
                  "optional": true,
                  "description": "A set of {@link sap.ui.vtm.ViewableLoadInfo} objects that describe the status of each {@link sap.ui.vtm.Viewable} passed to the {@link #loadViewablesAsync} call."
                },
                "loadedViewables": {
                  "name": "loadedViewables",
                  "type": "sap.ui.vtm.Viewable[]",
                  "optional": true,
                  "description": "The set of viewables that were loaded successfully in the call to {@link #loadViewablesAsync} that resulted in this event being raised."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:loadCompleted loadCompleted} to attached listeners."
        },
        {
          "name": "fireLoadProgress",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.vtm.Scene",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:loadProgress loadProgress} to attached listeners."
        },
        {
          "name": "fireLoadStarted",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.vtm.Scene",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "viewableLoadInfos": {
                  "name": "viewableLoadInfos",
                  "type": "sap.ui.vtm.ViewableLoadInfo[]",
                  "optional": true,
                  "description": "A set of {@link sap.ui.vtm.ViewableLoadInfo} objects that describe the status of each {@link sap.ui.vtm.Viewable} passed to the {@link #loadViewablesAsync} call."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:loadStarted loadStarted} to attached listeners."
        },
        {
          "name": "getAllIds",
          "visibility": "public",
          "returnValue": {
            "type": "string[]",
            "description": "The scene node IDs of all the scene nodes in the scene."
          },
          "description": "Gets the scene node IDs of all the scene nodes in the scene."
        },
        {
          "name": "getAncestorIds",
          "visibility": "public",
          "returnValue": {
            "type": "string[]",
            "description": "The scene node IDs of the ancestors of the scene node."
          },
          "parameters": [
            {
              "name": "sceneNodeId",
              "type": "string",
              "optional": false,
              "description": "The scene node to find the ancestors of."
            }
          ],
          "description": "Gets the scene node IDs of the ancestors of the specified scene node. The root scene node is the first item in the array and the parent is the last."
        },
        {
          "name": "getCachedIds",
          "visibility": "public",
          "returnValue": {
            "type": "string[]",
            "description": "The set of all scene node IDs in the scene that have been discovered via scene traversal performed by the application."
          },
          "description": "Gets set of all scene node IDs in the scene that have been discovered via scene traversal performed by the application.\n\nAccurate population of this value requires application support (whereas {@link #getAllIds} always returns the exact set of all scene nodes in the scene).\n\nScene node IDs are added to this set as they are discovered through methods the application calls: <ul> <li>{@link #getAllIds}</li> <li>{@link #getRootIds}</li> <li>{@link #getParentIds}</li> <li>{@link #getAncestorIds}</li> <li>{@link #getChildIds}</li> <li>{@link #getDescendantIds}</li> </ul>\n\nThe methods above are also used by the following methods: <ul> <li>{@link #traverseTree}</li> <li>{@link #traverseBranch}</li> </ul>\n\nAll of the scene nodes that have been traversed by these traversal methods will be included in the cached set. If during a call to {@link #traverseTree} or {@link #traverseBranch} the application stops traversal of a particular branch of the scene tree by returning <code>false</code> in the callback for a particular scene node, the application can call {@link #getDescendantIds} for that scene node to ensure that all the scene node IDs for the descendants of that scene node are included in the set of cached IDs.\n\nScene nodes are also added/removed from the to the cached set as required when the following methods are called: <li>{@link #createNode}</li> <li>{@link #cloneNode}</li> <li>{@link #deleteNode}</li> </ul>\n\nIf this method is called before any scene traversal has occurred, it populates the set of cached scene node IDs using {@link #getAllIds}."
        },
        {
          "name": "getChildIds",
          "visibility": "public",
          "returnValue": {
            "type": "string[]",
            "description": "The scene node IDs of the children of the specified scene node."
          },
          "parameters": [
            {
              "name": "sceneNodeId",
              "type": "string",
              "optional": false,
              "description": "The scene node to find the children of."
            }
          ],
          "description": "Gets the scene node IDs of the children of the specified scene node."
        },
        {
          "name": "getDescendantIds",
          "visibility": "public",
          "returnValue": {
            "type": "string[]",
            "description": "The scene node IDs of the descendants of the specified scene node."
          },
          "parameters": [
            {
              "name": "sceneNodeId",
              "type": "string",
              "optional": false,
              "description": "The scene node to find the descendants of."
            }
          ],
          "description": "Gets the scene node IDs of the descendants of the specified scene node."
        },
        {
          "name": "getDownloadedViewables",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Viewable[]",
            "description": "The set of downloaded viewables."
          },
          "description": "Gets the set of downloaded viewables."
        },
        {
          "name": "getLoadedViewables",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Viewable[]",
            "description": "The set of loaded viewables."
          },
          "description": "Gets the set of loaded viewables."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.vtm.Scene."
        },
        {
          "name": "getParentId",
          "visibility": "public",
          "returnValue": {
            "type": "string|null",
            "description": "The scene node ID of the parent scene node of the specified scene node or null if the specified scene node is a root scene node."
          },
          "parameters": [
            {
              "name": "sceneNodeId",
              "type": "string",
              "optional": false,
              "description": "The scene node to find the parent of."
            }
          ],
          "description": "Gets the scene node ID of the parent node of the specified scene node or null if the specified scene node is a root scene node."
        },
        {
          "name": "getRootIds",
          "visibility": "public",
          "returnValue": {
            "type": "string[]",
            "description": "The root scene node IDs."
          },
          "description": "Gets the IDs of the the root scene nodes."
        },
        {
          "name": "getViewableLoadInfos",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.ViewableLoadInfo[]",
            "description": "The set of {@link sap.ui.vtm.ViewableLoadInfo} objects that describe the status of each {@link sap.ui.vtm.Viewable} that has been passed to a {@link #loadViewablesAsyc} call made on this {@link sap.ui.vtm.Scene} instance."
          },
          "description": "Gets the set of {@link sap.ui.vtm.ViewableLoadInfo} objects that describe the status of each {@link sap.ui.vtm.Viewable} that has been passed to a {@link #loadViewablesAsyc} call made on this {@link sap.ui.vtm.Scene} instance."
        },
        {
          "name": "getVtm",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Vtm",
            "description": "The {@link sap.ui.vtm.Vtm} instance that owns this scene."
          },
          "description": "Gets the {@link sap.ui.vtm.Vtm} instance that owns this scene."
        },
        {
          "name": "loadViewablesAsync",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Scene",
            "description": "<code>this</code> for method chaining."
          },
          "parameters": [
            {
              "name": "viewables",
              "type": "sap.ui.vtm.Viewable|sap.ui.vtm.Viewable[]",
              "optional": false,
              "description": "The set of viewables to load."
            }
          ],
          "description": "Load a set of viewables asynchronously. Progress is indicated by the <code>progress</code> event and completion is indicated by the <code>loadComplete</code> event."
        },
        {
          "name": "traverseBranch",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Scene",
            "description": "<code>this</code for method chaining."
          },
          "parameters": [
            {
              "name": "sceneNodeId",
              "type": "string",
              "optional": false,
              "description": "The ID of the scene node that represents the root of the branch to traverse."
            },
            {
              "name": "callback",
              "type": "function",
              "optional": false,
              "description": "The function to apply to the traversed scene nodes.<br/> The first parameter to the callback function is of type {@link sap.ui.vtm.SceneNode}.<br/> The second parameter to the callback function is an array of IDs of ancestors of the scene node being processed.<br/> When the function returns <code>false</code>, the descendants of the scene node passed as the parameter are not traversed."
            }
          ],
          "description": "Recursively traverses a scene tree branch calling a function on each scene node.\n\nDoes not traverse the descendants of closed nodes."
        },
        {
          "name": "traverseNodes",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Scene",
            "description": "<code>this</code for method chaining."
          },
          "parameters": [
            {
              "name": "sceneNodeIds",
              "type": "string|string[]",
              "optional": false,
              "description": "The IDs of the scene nodes to traverse."
            },
            {
              "name": "callback",
              "type": "function",
              "optional": false,
              "description": "The function to apply to the traversed scene nodes.<br/> The function takes two parameters.<br/> The first parameter to the function is of type {@link sap.ui.vtm.SceneNode}. The second parameter to the function is the zero based index of the current scene node in the traversal. Traversal stops if the function returns <code>false</code>."
            }
          ],
          "description": "Traverses a set of scene nodes specified by scene node ID, calling a function on each scene node."
        },
        {
          "name": "traverseTree",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Scene",
            "description": "<code>this</code for method chaining."
          },
          "parameters": [
            {
              "name": "callback",
              "type": "function",
              "optional": false,
              "description": "The function to apply to the traversed scene nodes. The first parameter to the callback function is of type {@link sap.ui.vtm.SceneNode}.<br/> The second parameter to the callback function is an array of IDs of ancestors of the scene node being processed.<br/> When the function returns <code>false</code>, the descendants of the scene node passed as the parameter are not traversed."
            }
          ],
          "description": "Recursively traverses the scene tree calling a function on each scene node."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.vtm.SceneNode",
      "basename": "SceneNode",
      "resource": "sap/ui/vtm/SceneNode.js",
      "module": "sap/ui/vtm/SceneNode",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.core.Element",
      "description": "This class provides access to the data for a scene node. Objects of this type are transient. Long lived references to such objects should not be kept. A single {@link sap.ui.vtm.SceneNode} object can be reused to refer to a different scene node by changing the value of the <code>sceneNodeId</code> property. Scene traversal methods typically reuse a single {@link sap.ui.vtm.SceneNode} object to avoid construction and destruction. Applications are expected to use their own data structures to store data extracted from scene nodes that needs to be accessed efficiently.",
      "experimental": {
        "since": "1.50.0",
        "text": "This class is experimental and might be modified or removed in future versions."
      },
      "ui5-metadata": {
        "stereotype": "element",
        "properties": [
          {
            "name": "sceneNodeId",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The scene node id.\n\nThis is a transient identifier that exists in the context of the current scene. It should not be persisted.",
            "methods": ["getSceneNodeId", "setSceneNodeId"]
          },
          {
            "name": "scene",
            "type": "object",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The {@link sap.ui.vtm.Scene} for the scene node.",
            "methods": ["getScene", "setScene"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "{string",
            "type": "undefined",
            "optional": false,
            "description": "sId An optional ID for the {@link sap.ui.vtm.SceneNode}."
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "An optional object with initial settings for the new {@link sap.ui.vtm.SceneNode} instance."
          }
        ],
        "description": "This class is not intended to be directly instantiated by application code. The scene traversal methods ({@link sap.ui.vtm.Scene#traverseTree traverseTree}, {@link sap.ui.vtm.Scene#traverseBranch traverseBranch}, {@link sap.ui.vtm.Scene#traverseNodes traverseNodes}) should be used to access scene nodes\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.vtm.SceneNode with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
        },
        {
          "name": "getAbsoluteMatrix",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Matrix",
            "description": "The absolute transformation matrix that applies to the scene node in ISO 10303-42 format."
          },
          "description": "Gets the absolute transformation matrix that applies to the scene node in ISO 10303-42 format."
        },
        {
          "name": "getClosed",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Whether this scene node is closed."
          },
          "description": "Gets whether this scene node is closed. When a scene node is closed, the closed scene node and its descendants are treated as a single scene node (at least in terms of selection)."
        },
        {
          "name": "getIdentifiers",
          "visibility": "public",
          "returnValue": {
            "type": "object",
            "description": "The plain JavaScript object map of identifier values."
          },
          "description": "Gets a plain JavaScript object map of identifier values. <p>Keys are in the form: <code>['{\"source\":\"SAP\",\"type\":\"VE_COMPONENT\"}'</code>.</p> <p>Values are strings or arrays of strings in the form: <code>'[{\"name\":\"ID\", \"value\":\"_moto_x_asm\"},{\"name\":\"version\", \"value\": \"00\"},{\"name\": \"timestamp\", \"value\":\"2016-05-18 03:44:53.93\"}]'</code>.</p>"
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.vtm.SceneNode."
        },
        {
          "name": "getName",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "The scene node name."
          },
          "description": "Gets the name of the scene node."
        },
        {
          "name": "getNodeMetadata",
          "visibility": "public",
          "returnValue": {
            "type": "object",
            "description": "The plain JavaScript object map of metadata values."
          },
          "description": "Gets a plain JavaScript object map of metadata values. <p>Keys are in the form: <code>'{\"category\":\"SAP\",\"field\":\"MATERIAL\"}'</code>.</p> <p>Values are in the form of strings or arrays of strings.</p>"
        },
        {
          "name": "getRelativeMatrix",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Matrix",
            "description": "The relative transformation matrix that applies to the scene node in ISO 10303-42 format."
          },
          "description": "Gets the relative transformation matrix that applies to the scene node in ISO 10303-42 format."
        },
        {
          "name": "getScene",
          "visibility": "public",
          "returnValue": {
            "type": "object",
            "description": "Value of property <code>scene</code>"
          },
          "description": "Gets current value of property {@link #getScene scene}.\n\nThe {@link sap.ui.vtm.Scene} for the scene node."
        },
        {
          "name": "getSceneNodeId",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>sceneNodeId</code>"
          },
          "description": "Gets current value of property {@link #getSceneNodeId sceneNodeId}.\n\nThe scene node id.\n\nThis is a transient identifier that exists in the context of the current scene. It should not be persisted."
        },
        {
          "name": "setAbsoluteMatrix",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.SceneNode",
            "description": "<code>this</code> for method chaining."
          },
          "parameters": [
            {
              "name": "matrix",
              "type": "sap.ui.vtm.Matrix",
              "optional": false,
              "description": "The absolute transformation matrix that applies to the scene node in ISO 10303-42 format."
            }
          ],
          "description": "Sets the absolute transformation matrix that applies to the scene node in ISO 10303-42 format."
        },
        {
          "name": "setRelativeMatrix",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.SceneNode",
            "description": "<code>this</code> for method chaining."
          },
          "parameters": [
            {
              "name": "matrix",
              "type": "sap.ui.vtm.Matrix",
              "optional": false,
              "description": "The relative transformation matrix that applies to the scene node in ISO 10303-42 format."
            }
          ],
          "description": "Sets the relative transformation matrix that applies to the scene node in ISO 10303-42 format."
        },
        {
          "name": "setScene",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.SceneNode",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oScene",
              "type": "object",
              "optional": false,
              "description": "New value for property <code>scene</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getScene scene}.\n\nThe {@link sap.ui.vtm.Scene} for the scene node.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setSceneNodeId",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.SceneNode",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sSceneNodeId",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>sceneNodeId</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSceneNodeId sceneNodeId}.\n\nThe scene node id.\n\nThis is a transient identifier that exists in the context of the current scene. It should not be persisted.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.vtm.SelectColumnsDialog",
      "basename": "SelectColumnsDialog",
      "resource": "sap/ui/vtm/SelectColumnsDialog.js",
      "module": "sap/ui/vtm/SelectColumnsDialog",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.core.Control",
      "description": "A dialog used to select the columns to display in a {@link sap.ui.vtm.Tree}.",
      "experimental": {
        "since": "1.50.0",
        "text": "This class is experimental and might be modified or removed in future versions."
      },
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "tree",
            "type": "object",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The {@link sap.ui.vtm.Tree} that column selection is being performed for.",
            "methods": ["getTree", "setTree"]
          },
          {
            "name": "selectableColumns",
            "type": "sap.ui.vtm.Column[]",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The set of columns that should be shown in the dialog that may be selected for display.",
            "methods": ["getSelectableColumns", "setSelectableColumns"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "description": "Constructor for a new SelectColumnsDialog.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.vtm.SelectColumnsDialog with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.vtm.SelectColumnsDialog."
        },
        {
          "name": "getSelectableColumns",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Column[]",
            "description": "Value of property <code>selectableColumns</code>"
          },
          "description": "Gets current value of property {@link #getSelectableColumns selectableColumns}.\n\nThe set of columns that should be shown in the dialog that may be selected for display."
        },
        {
          "name": "getTree",
          "visibility": "public",
          "returnValue": {
            "type": "object",
            "description": "Value of property <code>tree</code>"
          },
          "description": "Gets current value of property {@link #getTree tree}.\n\nThe {@link sap.ui.vtm.Tree} that column selection is being performed for."
        },
        {
          "name": "open",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.SelectColumnsDialog",
            "description": "<code>this</code> for method chaining."
          },
          "description": "Opens the dialog. The dialog applies the updated set of columns to the tree if confirmed."
        },
        {
          "name": "setSelectableColumns",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.SelectColumnsDialog",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sSelectableColumns",
              "type": "sap.ui.vtm.Column[]",
              "optional": false,
              "description": "New value for property <code>selectableColumns</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSelectableColumns selectableColumns}.\n\nThe set of columns that should be shown in the dialog that may be selected for display.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setTree",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.SelectColumnsDialog",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oTree",
              "type": "object",
              "optional": false,
              "description": "New value for property <code>tree</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getTree tree}.\n\nThe {@link sap.ui.vtm.Tree} that column selection is being performed for.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.ui.vtm.SelectionMode",
      "basename": "SelectionMode",
      "resource": "sap/ui/vtm/SelectionMode.js",
      "module": "sap/ui/vtm/SelectionMode",
      "export": "",
      "static": true,
      "visibility": "public",
      "description": "Enumeration specifying row selection modes for a {@link sap.ui.vtm.Tree}.",
      "experimental": {
        "since": "1.50.0",
        "text": "This type is experimental and might be modified or removed in future versions."
      },
      "ui5-metamodel": true,
      "properties": [
        {
          "name": "MultiToggle",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "A multiple selection mode that toggles the selection state of a row when it is clicked."
        },
        {
          "name": "Single",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Single selection mode."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.ui.vtm.TextColor",
      "basename": "TextColor",
      "resource": "sap/ui/vtm/TextColor.js",
      "module": "sap/ui/vtm/TextColor",
      "export": "",
      "static": true,
      "visibility": "public",
      "description": "Enumeration specifying text colors.",
      "experimental": {
        "since": "1.50.0",
        "text": "This type is experimental and might be modified or removed in future versions."
      },
      "ui5-metamodel": true,
      "properties": [
        {
          "name": "Default",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The default text color."
        },
        {
          "name": "Gray",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Gray."
        },
        {
          "name": "Grey",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Grey. A synonym for Gray."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.vtm.Tree",
      "basename": "Tree",
      "resource": "sap/ui/vtm/Tree.js",
      "module": "sap/ui/vtm/Tree",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.core.Control",
      "description": "A control that contains a tree and associated data columns and provides helper methods for tree manipulation. <br/> Call {@link #setRootItems} to provide a tree model.<br/> Call {@link #updateCollections} after making changes to the tree hierarchy.<br/> Call {@link #updateModel} after making changes to the tree model (either changes to the the tree hierarchy or changes to properties of tree items).<br/>\n\nItems in the tree are plain JavaScript objects that have the following set of properties: <ul> <li><code>id</code> - The unique id for the tree item. This is the only required field in the tree item object.</li> <li><code>name</code> - The tree item name.</li> <li><code>iconUrl</code> - The URL string for the icon to show in the \"tree\" column.</li> <li><code>iconColor</code> - The color for the icon to show in the \"tree\" column.</li> <li><code>iconTooltip</code> - A tooltip for the icon to show in the \"tree\" column.</li> <li><code>absoluteMatrix</code> - An array of 13 numbers in ISO 10303-42 format representing an absolute transformation matrix.</li> <li><code>relativeMatrix</code> - An array of 13 numbers in ISO 10303-42 format representing a relative transformation matrix.</li> <li><code>includedChildren</code> - An array of tree items containing the children of this tree item that can be displayed in the tree.</li> <li><code>excludedChildren</code> - An array of tree items containing the children of this tree item that are not displayed in the tree.</li> <li><code>metadata</code> - A plain JavaScript object map containing metadata values for the tree item.<br/> Keys are JSON strings that can be parsed using JSON.parse() to get an object with category and field string properties.<br/> Values can be of the following types: <code>string, <code>string[]</code>, <code>number</code>, <code>number[]</code>, <code>boolean</code>, <code>boolean[]</code>, <code>object</code>, <code>object[]</code>.</li> <li><code>identifiers</code> - A plain JavaScript object map containing VE9 identifier values for the tree item.<br/> Keys are JSON strings that can be parsed using JSON.parse() to get an object with source and type string properties.<br/> Values can be of the following types: string, string[].<br/> Each value string is a JSON string that can be parsed using JSON.parse to get an array of name/value pairs.<br/> The value in each name/value pair is optional.</li> <li><code>appData</code> - A plain JavaScript object map containing application data values for the tree item.<br/> Keys are application defined strings.<br/> Values can be of the following types: <code>string, <code>string[]</code>, <code>number</code>, <code>number[]</code>, <code>boolean</code>, <code>boolean[]</code>, <code>object</code>, <code>object[]</code>.</li> <li><code>textColor</code> - A {@link sap.ui.vtm.TextColor} value that specifies the color of the text for the tree item in the Name data column (defaults to {@link sap.ui.vtm.TextColor.Default}).</li> <li><code>sceneNodeIds</code> - A string or array of strings containing the IDs of scene nodes to associate with this tree item.</li> <li><code>visibility</code> - Used to determine visibility of associated scene nodes and control a visibility icon shown in the {@link sap.ui.vtm.InternalColumnDescriptor.Visibility} column.<br/> When <code>true</code> associated scene nodes should be visible in the viewport (when their visibility is not overridden).<br/> When <code>false</code> associated scene nodes should not be visible in the viewport (when their visibility is not overridden).<br/> When <code>null</code> or <code>undefined</code> no visibility icon is shown for the tree item and associated scene nodes should not be visible in the viewport (when their visibility is not overridden).</li> <li><code>opacity</code> - A numeric value between 0 and 1 (inclusive) that specifies the opacity to apply to associated scene nodes (when their opacity is not overridden).</li> <li><code>highlightColor</code> - A sap.ui.core.CSSColor that specifies a highlight color to apply to associated scene nodes (when their highlight color is not overridden). The alpha component specifies the blend ratio between the highlight color and the scene node color.</li> <li><code>messages</code> A string that can be parsed using JSON.parse() to produce an array of objects that can be used to construct {@link sap.ui.core.Message} objects.<br/> Refer to the documentation for the <code>mSettings</code> parameter of the {@link sap.ui.core.Message} constructor for valid values.</li> <li><code>messageStatusIconUrl</code> The URL of the icon to display in the message status column. If an extension implementing {@link sap.ui.vtm.interfaces.IMessageStatusCalculationExtension} is being used, only that extension should set values for this field.</li> <li><code>messageStatusIconColor</code> The {@link sap.ui.core.CSSColor} color of the icon to display in the message status column. If an extension implementing {@link sap.ui.vtm.interfaces.IMessageStatusCalculationExtension} is being used, only that extension should set values for this field.</li> <li><code>messageStatusIconTooltip</code> The tooltip for the icon in the message status column. If an extension implementing {@link sap.ui.vtm.interfaces.IMessageStatusCalculationExtension} is being used, only that extension should set values for this field.</li> </ul>\n\nThe <code>sceneNodeIds</code>, <code>visibility</code>, <code>opacity</code> and <code>highlightColor</code> properties are used by the extension implementing {@link sap.ui.vtm.interfaces.IDisplayStateCalculationExtension} to determine the display state of scene nodes shown in the {@link sap.ui.vtm.Viewport} associated with the {@link sap.ui.vtm.Tree}.\n\nExample: <pre><code>{\n     id: jQuery.sap.uid(),\n     name: \"Tree item name\",\n     iconUrl: \"sap-icon://tree\",\n     iconTooltip: \"Group\"\n     absoluteMatrix: [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1],\n     relativeMatrix: [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1],\n     includedChildren: [],\n     metadata:{\n        '{\"category\":\"SAP\",\"field\":\"MATERIAL\"}': [\"mat1\", \"mat2\"]]\n     },\n     identifiers: {\n         '{\"source\":\"SAP\",\"type\":\"VE_COMPONENT\"}': '[{\"name\":\"ID\", \"value\":\"_moto_x_asm\"},{\"name\":\"version\", \"value\": \"00\"},{\"name\": \"timestamp\", \"value\":\"2016-05-18 03:44:53.93\"}]',\n         '{\"source\":\"SAP\",\"type\":\"MATERIAL\"}': ['[{\"name\":\"ID\", \"value\":\"mat1\"}]', '[{\"name\":\"ID\", \"value\":\"mat2\"}]']\n     },\n     appData:{\n         \"bomId: \"bom1\",\n         \"bomItemId: \"bomItem1\",\n     },\n     textColor: sap.ui.vtm.TextColor.Gray,\n     sceneNodeIds: [\"iffffffff01021520\", \"iffffffff01021528\"],\n     visibility: true,\n     opacity: 0.3,\n     highlightColor: \"rgba(0,255,0,0.8)\"\n     messages: '[{\"level\":\"Error\",\"text\":\"some error\"},{\"level\":\"Error\",\"text\":\"Another error\"},{\"level\":\"Warning\",\"A warning\"}]',\n     messageStatusIconUrl: \"sap-icon://error\",\n     messageStatusIconColor: \"red\",\n     messageStatusIconTooltip: \"Error\"\n }</code></pre>",
      "experimental": {
        "since": "1.50.0",
        "text": "This class is experimental and might be modified or removed in future versions."
      },
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "selectionMode",
            "type": "sap.ui.vtm.SelectionMode",
            "defaultValue": "Single",
            "group": "Misc",
            "visibility": "public",
            "description": "The tree selection mode.",
            "methods": ["getSelectionMode", "setSelectionMode"]
          }
        ],
        "aggregations": [
          {
            "name": "_treeTable",
            "singularName": "_treeTable",
            "type": "sap.ui.table.TreeTable",
            "cardinality": "0..1",
            "visibility": "hidden",
            "methods": ["get_treeTable", "destroy_treeTable", "set_treeTable"]
          },
          {
            "name": "headerControls",
            "singularName": "headerControl",
            "type": "sap.ui.core.Control",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "A set of controls such as toolbars to show above the tree.",
            "methods": [
              "getHeaderControls",
              "destroyHeaderControls",
              "insertHeaderControl",
              "addHeaderControl",
              "removeHeaderControl",
              "indexOfHeaderControl",
              "removeAllHeaderControls"
            ]
          }
        ],
        "events": [
          {
            "name": "dragStart",
            "visibility": "public",
            "description": "Raised when a tree item drag is initiated. To prevent a drag from being initiated call preventDefault() on the event.",
            "parameters": {
              "dragItem": {
                "name": "dragItem",
                "type": "object",
                "description": "The tree item that was dragged."
              },
              "dragTree": {
                "name": "dragTree",
                "type": "sap.ui.vtm.Tree",
                "description": "The tree of the tree item that was dragged."
              }
            },
            "methods": ["attachDragStart", "detachDragStart", "fireDragStart"]
          },
          {
            "name": "dragOver",
            "visibility": "public",
            "description": "Raised when a tree item is dragged over a tree item or an unpopulated row in a tree. To allow a drop to occur call preventDefault() on the event.",
            "parameters": {
              "dragItem": {
                "name": "dragItem",
                "type": "object",
                "description": "The tree item that was dragged."
              },
              "dragTree": {
                "name": "dragTree",
                "type": "sap.ui.vtm.Tree",
                "description": "The tree of the tree item that was dragged."
              },
              "dragOverItem": {
                "name": "dragOverItem",
                "type": "object",
                "description": "The tree item being dragged over or null if the tree item is being dragged over an unpopulated row."
              },
              "dragOverTree": {
                "name": "dragOverTree",
                "type": "sap.ui.vtm.Tree",
                "description": "The tree being dragged over."
              }
            },
            "methods": ["attachDragOver", "detachDragOver", "fireDragOver"]
          },
          {
            "name": "drop",
            "visibility": "public",
            "description": "Raised when a tree item is dropped on a tree item or an unpopulated row in a tree. A drop cannot occur unless preventDefault() is called on the sap.ui.base.Event object in the preceding dragOver event.",
            "parameters": {
              "dragItem": {
                "name": "dragItem",
                "type": "object",
                "description": "The tree item that was dragged."
              },
              "dragTree": {
                "name": "dragTree",
                "type": "sap.ui.vtm.Tree",
                "description": "The tree of the tree item that was dragged."
              },
              "dropItem": {
                "name": "dropItem",
                "type": "object",
                "description": "The tree item that the drop occurred on or null if the item was not dropped on a tree item."
              },
              "dropTree": {
                "name": "dropTree",
                "type": "sap.ui.vtm.Tree",
                "description": "The tree that the drop occurred on."
              }
            },
            "methods": ["attachDrop", "detachDrop", "fireDrop"]
          },
          {
            "name": "selectionChanged",
            "visibility": "public",
            "description": "Raised when the set of selected tree items for a tree changes.",
            "parameters": {
              "addedItems": {
                "name": "addedItems",
                "type": "object[]",
                "description": "The tree items that were added to the selection set for the tree."
              },
              "removedItems": {
                "name": "removedItems",
                "type": "object[]",
                "description": "The tree items that were removed from the selection set for the tree."
              },
              "userInteraction": {
                "name": "userInteraction",
                "type": "boolean",
                "description": "Indicates that the event was fired due to an explicit user interaction"
              }
            },
            "methods": [
              "attachSelectionChanged",
              "detachSelectionChanged",
              "fireSelectionChanged"
            ]
          },
          {
            "name": "visibilityHeaderIconClicked",
            "visibility": "public",
            "description": "Raised when the icon in the visibility column header is clicked.",
            "parameters": {
              "visibility": {
                "name": "visibility",
                "type": "boolean",
                "description": "The visibility state of the tree item."
              },
              "control": {
                "name": "control",
                "type": "sap.ui.core.Control",
                "description": "The visibility header icon control that was clicked."
              }
            },
            "methods": [
              "attachVisibilityHeaderIconClicked",
              "detachVisibilityHeaderIconClicked",
              "fireVisibilityHeaderIconClicked"
            ]
          },
          {
            "name": "visibilityIconClicked",
            "visibility": "public",
            "description": "Raised when an icon in the visibility column is clicked.",
            "parameters": {
              "item": {
                "name": "item",
                "type": "object",
                "description": "The tree item whose visibility icon was clicked."
              },
              "visibility": {
                "name": "visibility",
                "type": "boolean",
                "description": "The visibility state of the tree item."
              },
              "control": {
                "name": "control",
                "type": "sap.ui.core.Control",
                "description": "The visibility icon control that was clicked."
              }
            },
            "methods": [
              "attachVisibilityIconClicked",
              "detachVisibilityIconClicked",
              "fireVisibilityIconClicked"
            ]
          },
          {
            "name": "expandedChanged",
            "visibility": "public",
            "description": "Raised when a tree item entry is expanded or collapsed.",
            "parameters": {
              "item": {
                "name": "item",
                "type": "object",
                "description": "The tree item associated with the row that was expanded or collapsed."
              },
              "expanded": {
                "name": "expanded",
                "type": "boolean",
                "description": "If <code>true</code>, the row was expanded, otherwise it was collapsed."
              },
              "userInteraction": {
                "name": "userInteraction",
                "type": "boolean",
                "description": "Indicates that the event was fired due to the user clicking an expander."
              }
            },
            "methods": [
              "attachExpandedChanged",
              "detachExpandedChanged",
              "fireExpandedChanged"
            ]
          },
          {
            "name": "fixedColumnsChanged",
            "visibility": "public",
            "description": "Raised when the fixed columns are updated.",
            "methods": [
              "attachFixedColumnsChanged",
              "detachFixedColumnsChanged",
              "fireFixedColumnsChanged"
            ]
          },
          {
            "name": "dataColumnsChanged",
            "visibility": "public",
            "description": "Raised when the data columns are updated.",
            "methods": [
              "attachDataColumnsChanged",
              "detachDataColumnsChanged",
              "fireDataColumnsChanged"
            ]
          },
          {
            "name": "beforeModelUpdated",
            "visibility": "public",
            "description": "Raised before the model is updated.",
            "methods": [
              "attachBeforeModelUpdated",
              "detachBeforeModelUpdated",
              "fireBeforeModelUpdated"
            ]
          },
          {
            "name": "modelUpdated",
            "visibility": "public",
            "description": "Raised after the model has been updated.",
            "methods": [
              "attachModelUpdated",
              "detachModelUpdated",
              "fireModelUpdated"
            ]
          },
          {
            "name": "messageStatusIconClicked",
            "visibility": "public",
            "description": "Raised when a tree item message status icon is clicked.",
            "parameters": {
              "items": {
                "name": "items",
                "type": "object",
                "description": "The associated tree item."
              },
              "control": {
                "name": "control",
                "type": "sap.ui.core.Control",
                "description": "The message status icon control that was clicked."
              }
            },
            "methods": [
              "attachMessageStatusIconClicked",
              "detachMessageStatusIconClicked",
              "fireMessageStatusIconClicked"
            ]
          },
          {
            "name": "messageStatusHeaderIconClicked",
            "visibility": "public",
            "description": "Raised when a tree item message status icon is clicked.",
            "methods": [
              "attachMessageStatusHeaderIconClicked",
              "detachMessageStatusHeaderIconClicked",
              "fireMessageStatusHeaderIconClicked"
            ]
          },
          {
            "name": "hierarchyChanged",
            "visibility": "public",
            "description": "Raised when the tree hierarchy (the set of parent child relationships) changes.",
            "methods": [
              "attachHierarchyChanged",
              "detachHierarchyChanged",
              "fireHierarchyChanged"
            ]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": false,
            "description": "id for the new {@link sap.ui.vtm.Tree}."
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": false,
            "description": "Object with initial property values, aggregated objects etc. for the new {@link sap.ui.vtm.Tree}."
          }
        ],
        "description": "This class is not intended to be instantiated directly by application code. A {@link sap.ui.vtm.Tree} object is created when a {@link sap.ui.vtm.Panel} object is instantiated.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "beforeModelUpdated",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "Raised before the model is updated."
        },
        {
          "name": "dataColumnsChanged",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "Raised when the data columns are updated."
        },
        {
          "name": "dragOver",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "dragItem": {
                      "name": "dragItem",
                      "type": "object",
                      "optional": false,
                      "description": "The tree item that was dragged."
                    },
                    "dragTree": {
                      "name": "dragTree",
                      "type": "sap.ui.vtm.Tree",
                      "optional": false,
                      "description": "The tree of the tree item that was dragged."
                    },
                    "dragOverItem": {
                      "name": "dragOverItem",
                      "type": "object",
                      "optional": false,
                      "description": "The tree item being dragged over or null if the tree item is being dragged over an unpopulated row."
                    },
                    "dragOverTree": {
                      "name": "dragOverTree",
                      "type": "sap.ui.vtm.Tree",
                      "optional": false,
                      "description": "The tree being dragged over."
                    }
                  }
                }
              }
            }
          ],
          "description": "Raised when a tree item is dragged over a tree item or an unpopulated row in a tree. To allow a drop to occur call preventDefault() on the event."
        },
        {
          "name": "dragStart",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "dragItem": {
                      "name": "dragItem",
                      "type": "object",
                      "optional": false,
                      "description": "The tree item that was dragged."
                    },
                    "dragTree": {
                      "name": "dragTree",
                      "type": "sap.ui.vtm.Tree",
                      "optional": false,
                      "description": "The tree of the tree item that was dragged."
                    }
                  }
                }
              }
            }
          ],
          "description": "Raised when a tree item drag is initiated. To prevent a drag from being initiated call preventDefault() on the event."
        },
        {
          "name": "drop",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "dragItem": {
                      "name": "dragItem",
                      "type": "object",
                      "optional": false,
                      "description": "The tree item that was dragged."
                    },
                    "dragTree": {
                      "name": "dragTree",
                      "type": "sap.ui.vtm.Tree",
                      "optional": false,
                      "description": "The tree of the tree item that was dragged."
                    },
                    "dropItem": {
                      "name": "dropItem",
                      "type": "object",
                      "optional": false,
                      "description": "The tree item that the drop occurred on or null if the item was not dropped on a tree item."
                    },
                    "dropTree": {
                      "name": "dropTree",
                      "type": "sap.ui.vtm.Tree",
                      "optional": false,
                      "description": "The tree that the drop occurred on."
                    }
                  }
                }
              }
            }
          ],
          "description": "Raised when a tree item is dropped on a tree item or an unpopulated row in a tree. A drop cannot occur unless preventDefault() is called on the sap.ui.base.Event object in the preceding dragOver event."
        },
        {
          "name": "expandedChanged",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "item": {
                      "name": "item",
                      "type": "object",
                      "optional": false,
                      "description": "The tree item associated with the row that was expanded or collapsed."
                    },
                    "expanded": {
                      "name": "expanded",
                      "type": "boolean",
                      "optional": false,
                      "description": "If <code>true</code>, the row was expanded, otherwise it was collapsed."
                    },
                    "userInteraction": {
                      "name": "userInteraction",
                      "type": "boolean",
                      "optional": false,
                      "description": "Indicates that the event was fired due to the user clicking an expander."
                    }
                  }
                }
              }
            }
          ],
          "description": "Raised when a tree item entry is expanded or collapsed."
        },
        {
          "name": "fixedColumnsChanged",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "Raised when the fixed columns are updated."
        },
        {
          "name": "hierarchyChanged",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "Raised when the tree hierarchy (the set of parent child relationships) changes."
        },
        {
          "name": "messageStatusHeaderIconClicked",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "Raised when a tree item message status icon is clicked."
        },
        {
          "name": "messageStatusIconClicked",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "items": {
                      "name": "items",
                      "type": "object",
                      "optional": false,
                      "description": "The associated tree item."
                    },
                    "control": {
                      "name": "control",
                      "type": "sap.ui.core.Control",
                      "optional": false,
                      "description": "The message status icon control that was clicked."
                    }
                  }
                }
              }
            }
          ],
          "description": "Raised when a tree item message status icon is clicked."
        },
        {
          "name": "modelUpdated",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "Raised after the model has been updated."
        },
        {
          "name": "selectionChanged",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "addedItems": {
                      "name": "addedItems",
                      "type": "object[]",
                      "optional": false,
                      "description": "The tree items that were added to the selection set for the tree."
                    },
                    "removedItems": {
                      "name": "removedItems",
                      "type": "object[]",
                      "optional": false,
                      "description": "The tree items that were removed from the selection set for the tree."
                    },
                    "userInteraction": {
                      "name": "userInteraction",
                      "type": "boolean",
                      "optional": false,
                      "description": "Indicates that the event was fired due to an explicit user interaction"
                    }
                  }
                }
              }
            }
          ],
          "description": "Raised when the set of selected tree items for a tree changes."
        },
        {
          "name": "visibilityHeaderIconClicked",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "visibility": {
                      "name": "visibility",
                      "type": "boolean",
                      "optional": false,
                      "description": "The visibility state of the tree item."
                    },
                    "control": {
                      "name": "control",
                      "type": "sap.ui.core.Control",
                      "optional": false,
                      "description": "The visibility header icon control that was clicked."
                    }
                  }
                }
              }
            }
          ],
          "description": "Raised when the icon in the visibility column header is clicked."
        },
        {
          "name": "visibilityIconClicked",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "item": {
                      "name": "item",
                      "type": "object",
                      "optional": false,
                      "description": "The tree item whose visibility icon was clicked."
                    },
                    "visibility": {
                      "name": "visibility",
                      "type": "boolean",
                      "optional": false,
                      "description": "The visibility state of the tree item."
                    },
                    "control": {
                      "name": "control",
                      "type": "sap.ui.core.Control",
                      "optional": false,
                      "description": "The visibility icon control that was clicked."
                    }
                  }
                }
              }
            }
          ],
          "description": "Raised when an icon in the visibility column is clicked."
        }
      ],
      "methods": [
        {
          "name": "addHeaderControl",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Tree",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oHeaderControl",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The headerControl to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some headerControl to the aggregation {@link #getHeaderControls headerControls}."
        },
        {
          "name": "addRoot",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Tree",
            "description": "<code>this</code> to allow method chaining."
          },
          "parameters": [
            {
              "name": "rootItemToAdd",
              "type": "object",
              "optional": false,
              "description": "The root tree item to remove."
            }
          ],
          "description": "Adds a root item to the tree."
        },
        {
          "name": "attachBeforeModelUpdated",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Tree",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.vtm.Tree</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:beforeModelUpdated beforeModelUpdated} event of this <code>sap.ui.vtm.Tree</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.vtm.Tree</code> itself.\n\nRaised before the model is updated."
        },
        {
          "name": "attachDataColumnsChanged",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Tree",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.vtm.Tree</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:dataColumnsChanged dataColumnsChanged} event of this <code>sap.ui.vtm.Tree</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.vtm.Tree</code> itself.\n\nRaised when the data columns are updated."
        },
        {
          "name": "attachDragOver",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Tree",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.vtm.Tree</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:dragOver dragOver} event of this <code>sap.ui.vtm.Tree</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.vtm.Tree</code> itself.\n\nRaised when a tree item is dragged over a tree item or an unpopulated row in a tree. To allow a drop to occur call preventDefault() on the event."
        },
        {
          "name": "attachDragStart",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Tree",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.vtm.Tree</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:dragStart dragStart} event of this <code>sap.ui.vtm.Tree</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.vtm.Tree</code> itself.\n\nRaised when a tree item drag is initiated. To prevent a drag from being initiated call preventDefault() on the event."
        },
        {
          "name": "attachDrop",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Tree",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.vtm.Tree</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:drop drop} event of this <code>sap.ui.vtm.Tree</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.vtm.Tree</code> itself.\n\nRaised when a tree item is dropped on a tree item or an unpopulated row in a tree. A drop cannot occur unless preventDefault() is called on the sap.ui.base.Event object in the preceding dragOver event."
        },
        {
          "name": "attachExpandedChanged",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Tree",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.vtm.Tree</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:expandedChanged expandedChanged} event of this <code>sap.ui.vtm.Tree</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.vtm.Tree</code> itself.\n\nRaised when a tree item entry is expanded or collapsed."
        },
        {
          "name": "attachFixedColumnsChanged",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Tree",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.vtm.Tree</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:fixedColumnsChanged fixedColumnsChanged} event of this <code>sap.ui.vtm.Tree</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.vtm.Tree</code> itself.\n\nRaised when the fixed columns are updated."
        },
        {
          "name": "attachHierarchyChanged",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Tree",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.vtm.Tree</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:hierarchyChanged hierarchyChanged} event of this <code>sap.ui.vtm.Tree</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.vtm.Tree</code> itself.\n\nRaised when the tree hierarchy (the set of parent child relationships) changes."
        },
        {
          "name": "attachMessageStatusHeaderIconClicked",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Tree",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.vtm.Tree</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:messageStatusHeaderIconClicked messageStatusHeaderIconClicked} event of this <code>sap.ui.vtm.Tree</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.vtm.Tree</code> itself.\n\nRaised when a tree item message status icon is clicked."
        },
        {
          "name": "attachMessageStatusIconClicked",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Tree",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.vtm.Tree</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:messageStatusIconClicked messageStatusIconClicked} event of this <code>sap.ui.vtm.Tree</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.vtm.Tree</code> itself.\n\nRaised when a tree item message status icon is clicked."
        },
        {
          "name": "attachModelUpdated",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Tree",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.vtm.Tree</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:modelUpdated modelUpdated} event of this <code>sap.ui.vtm.Tree</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.vtm.Tree</code> itself.\n\nRaised after the model has been updated."
        },
        {
          "name": "attachSelectionChanged",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Tree",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.vtm.Tree</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:selectionChanged selectionChanged} event of this <code>sap.ui.vtm.Tree</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.vtm.Tree</code> itself.\n\nRaised when the set of selected tree items for a tree changes."
        },
        {
          "name": "attachVisibilityHeaderIconClicked",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Tree",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.vtm.Tree</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:visibilityHeaderIconClicked visibilityHeaderIconClicked} event of this <code>sap.ui.vtm.Tree</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.vtm.Tree</code> itself.\n\nRaised when the icon in the visibility column header is clicked."
        },
        {
          "name": "attachVisibilityIconClicked",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Tree",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.vtm.Tree</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:visibilityIconClicked visibilityIconClicked} event of this <code>sap.ui.vtm.Tree</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.vtm.Tree</code> itself.\n\nRaised when an icon in the visibility column is clicked."
        },
        {
          "name": "collapseAll",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Tree",
            "description": "Returns <code>this</code> for method chaining."
          },
          "description": "Expands all tree items in the tree."
        },
        {
          "name": "destroyHeaderControls",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Tree",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the headerControls in the aggregation {@link #getHeaderControls headerControls}."
        },
        {
          "name": "detachBeforeModelUpdated",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Tree",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:beforeModelUpdated beforeModelUpdated} event of this <code>sap.ui.vtm.Tree</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachDataColumnsChanged",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Tree",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:dataColumnsChanged dataColumnsChanged} event of this <code>sap.ui.vtm.Tree</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachDragOver",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Tree",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:dragOver dragOver} event of this <code>sap.ui.vtm.Tree</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachDragStart",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Tree",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:dragStart dragStart} event of this <code>sap.ui.vtm.Tree</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachDrop",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Tree",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:drop drop} event of this <code>sap.ui.vtm.Tree</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachExpandedChanged",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Tree",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:expandedChanged expandedChanged} event of this <code>sap.ui.vtm.Tree</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachFixedColumnsChanged",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Tree",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:fixedColumnsChanged fixedColumnsChanged} event of this <code>sap.ui.vtm.Tree</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachHierarchyChanged",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Tree",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:hierarchyChanged hierarchyChanged} event of this <code>sap.ui.vtm.Tree</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachMessageStatusHeaderIconClicked",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Tree",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:messageStatusHeaderIconClicked messageStatusHeaderIconClicked} event of this <code>sap.ui.vtm.Tree</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachMessageStatusIconClicked",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Tree",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:messageStatusIconClicked messageStatusIconClicked} event of this <code>sap.ui.vtm.Tree</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachModelUpdated",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Tree",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:modelUpdated modelUpdated} event of this <code>sap.ui.vtm.Tree</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachSelectionChanged",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Tree",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:selectionChanged selectionChanged} event of this <code>sap.ui.vtm.Tree</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachVisibilityHeaderIconClicked",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Tree",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:visibilityHeaderIconClicked visibilityHeaderIconClicked} event of this <code>sap.ui.vtm.Tree</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachVisibilityIconClicked",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Tree",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:visibilityIconClicked visibilityIconClicked} event of this <code>sap.ui.vtm.Tree</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "expandAll",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Tree",
            "description": "Returns <code>this</code> for method chaining."
          },
          "description": "Expands all tree items in the tree."
        },
        {
          "name": "expandAncestors",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Tree",
            "description": "Returns <code>this</code> for method chaining."
          },
          "parameters": [
            {
              "name": "treeItem",
              "type": "object",
              "optional": false,
              "description": "Tree item."
            }
          ],
          "description": "Expands all ancestors of specified tree item.\n\nThis method relies on {@link #updateCollections} being called after the tree is populated/changed."
        },
        {
          "name": "expandToLevel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Tree",
            "description": "Returns <code>this</code> for method chaining."
          },
          "parameters": [
            {
              "name": "iLevel",
              "type": "int",
              "optional": false,
              "description": "The tree level to expand to."
            }
          ],
          "description": "Expands tree items in the tree from the root down to the given level."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.vtm.Tree with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "fireBeforeModelUpdated",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.vtm.Tree",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:beforeModelUpdated beforeModelUpdated} to attached listeners."
        },
        {
          "name": "fireDataColumnsChanged",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.vtm.Tree",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:dataColumnsChanged dataColumnsChanged} to attached listeners."
        },
        {
          "name": "fireDragOver",
          "visibility": "protected",
          "returnValue": {
            "type": "boolean",
            "description": "Whether or not to prevent the default action"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "dragItem": {
                  "name": "dragItem",
                  "type": "object",
                  "optional": true,
                  "description": "The tree item that was dragged."
                },
                "dragTree": {
                  "name": "dragTree",
                  "type": "sap.ui.vtm.Tree",
                  "optional": true,
                  "description": "The tree of the tree item that was dragged."
                },
                "dragOverItem": {
                  "name": "dragOverItem",
                  "type": "object",
                  "optional": true,
                  "description": "The tree item being dragged over or null if the tree item is being dragged over an unpopulated row."
                },
                "dragOverTree": {
                  "name": "dragOverTree",
                  "type": "sap.ui.vtm.Tree",
                  "optional": true,
                  "description": "The tree being dragged over."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:dragOver dragOver} to attached listeners.\n\nListeners may prevent the default action of this event by using the <code>preventDefault</code>-method on the event object."
        },
        {
          "name": "fireDragStart",
          "visibility": "protected",
          "returnValue": {
            "type": "boolean",
            "description": "Whether or not to prevent the default action"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "dragItem": {
                  "name": "dragItem",
                  "type": "object",
                  "optional": true,
                  "description": "The tree item that was dragged."
                },
                "dragTree": {
                  "name": "dragTree",
                  "type": "sap.ui.vtm.Tree",
                  "optional": true,
                  "description": "The tree of the tree item that was dragged."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:dragStart dragStart} to attached listeners.\n\nListeners may prevent the default action of this event by using the <code>preventDefault</code>-method on the event object."
        },
        {
          "name": "fireDrop",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.vtm.Tree",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "dragItem": {
                  "name": "dragItem",
                  "type": "object",
                  "optional": true,
                  "description": "The tree item that was dragged."
                },
                "dragTree": {
                  "name": "dragTree",
                  "type": "sap.ui.vtm.Tree",
                  "optional": true,
                  "description": "The tree of the tree item that was dragged."
                },
                "dropItem": {
                  "name": "dropItem",
                  "type": "object",
                  "optional": true,
                  "description": "The tree item that the drop occurred on or null if the item was not dropped on a tree item."
                },
                "dropTree": {
                  "name": "dropTree",
                  "type": "sap.ui.vtm.Tree",
                  "optional": true,
                  "description": "The tree that the drop occurred on."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:drop drop} to attached listeners."
        },
        {
          "name": "fireExpandedChanged",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.vtm.Tree",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "item": {
                  "name": "item",
                  "type": "object",
                  "optional": true,
                  "description": "The tree item associated with the row that was expanded or collapsed."
                },
                "expanded": {
                  "name": "expanded",
                  "type": "boolean",
                  "optional": true,
                  "description": "If <code>true</code>, the row was expanded, otherwise it was collapsed."
                },
                "userInteraction": {
                  "name": "userInteraction",
                  "type": "boolean",
                  "optional": true,
                  "description": "Indicates that the event was fired due to the user clicking an expander."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:expandedChanged expandedChanged} to attached listeners."
        },
        {
          "name": "fireFixedColumnsChanged",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.vtm.Tree",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:fixedColumnsChanged fixedColumnsChanged} to attached listeners."
        },
        {
          "name": "fireHierarchyChanged",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.vtm.Tree",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:hierarchyChanged hierarchyChanged} to attached listeners."
        },
        {
          "name": "fireMessageStatusHeaderIconClicked",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.vtm.Tree",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:messageStatusHeaderIconClicked messageStatusHeaderIconClicked} to attached listeners."
        },
        {
          "name": "fireMessageStatusIconClicked",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.vtm.Tree",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "items": {
                  "name": "items",
                  "type": "object",
                  "optional": true,
                  "description": "The associated tree item."
                },
                "control": {
                  "name": "control",
                  "type": "sap.ui.core.Control",
                  "optional": true,
                  "description": "The message status icon control that was clicked."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:messageStatusIconClicked messageStatusIconClicked} to attached listeners."
        },
        {
          "name": "fireModelUpdated",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.vtm.Tree",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:modelUpdated modelUpdated} to attached listeners."
        },
        {
          "name": "fireSelectionChanged",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.vtm.Tree",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "addedItems": {
                  "name": "addedItems",
                  "type": "object[]",
                  "optional": true,
                  "description": "The tree items that were added to the selection set for the tree."
                },
                "removedItems": {
                  "name": "removedItems",
                  "type": "object[]",
                  "optional": true,
                  "description": "The tree items that were removed from the selection set for the tree."
                },
                "userInteraction": {
                  "name": "userInteraction",
                  "type": "boolean",
                  "optional": true,
                  "description": "Indicates that the event was fired due to an explicit user interaction"
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:selectionChanged selectionChanged} to attached listeners."
        },
        {
          "name": "fireVisibilityHeaderIconClicked",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.vtm.Tree",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "visibility": {
                  "name": "visibility",
                  "type": "boolean",
                  "optional": true,
                  "description": "The visibility state of the tree item."
                },
                "control": {
                  "name": "control",
                  "type": "sap.ui.core.Control",
                  "optional": true,
                  "description": "The visibility header icon control that was clicked."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:visibilityHeaderIconClicked visibilityHeaderIconClicked} to attached listeners."
        },
        {
          "name": "fireVisibilityIconClicked",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.vtm.Tree",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "item": {
                  "name": "item",
                  "type": "object",
                  "optional": true,
                  "description": "The tree item whose visibility icon was clicked."
                },
                "visibility": {
                  "name": "visibility",
                  "type": "boolean",
                  "optional": true,
                  "description": "The visibility state of the tree item."
                },
                "control": {
                  "name": "control",
                  "type": "sap.ui.core.Control",
                  "optional": true,
                  "description": "The visibility icon control that was clicked."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:visibilityIconClicked visibilityIconClicked} to attached listeners."
        },
        {
          "name": "getAllItems",
          "visibility": "public",
          "returnValue": {
            "type": "object[]",
            "description": "All the tree items in the tree."
          },
          "parameters": [
            {
              "name": "treeItemType",
              "type": "sap.ui.vtm.TreeItemType",
              "optional": false,
              "description": "Indicates the types of tree item to match. Defaults to {@link sap.ui.vtm.TreeItemType.Included}."
            }
          ],
          "description": "Finds all tree items in the tree of a given type.\n\nThis method relies on {@link #updateCollections} being called after the tree is populated/changed."
        },
        {
          "name": "getAncestorItems",
          "visibility": "public",
          "returnValue": {
            "type": "object[]",
            "description": "The ancestors of the tree item."
          },
          "parameters": [
            {
              "name": "treeItem",
              "type": "object|string",
              "optional": false,
              "description": "The tree item or id of the tree item to get the ancestors of."
            }
          ],
          "description": "Finds all ancestors of a tree item.\n\nAn empty array will be returned for root items.<br/> Otherwise an array of ancestor tree items will be returned.<br/> The array will be ordered such that: <ul> <li>The root item will be first element in the array.</li> <li>The parent item will be last element in the array.</li> </ul>\n\nThis method relies on {@link #updateCollections} being called after the tree is populated/changed."
        },
        {
          "name": "getDataColumns",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Column[]",
            "description": "The data columns for the tree."
          },
          "description": "Gets the set of data columns for the tree."
        },
        {
          "name": "getDescendantItems",
          "visibility": "public",
          "returnValue": {
            "type": "object[]|undefined",
            "description": "The descendants of the tree item or undefined if the tree item is not found."
          },
          "parameters": [
            {
              "name": "treeItem",
              "type": "object|string",
              "optional": false,
              "description": "The tree item or id of the tree item to get the descendants of."
            },
            {
              "name": "treeItemType",
              "type": "sap.ui.vtm.TreeItemType",
              "optional": false,
              "description": "Indicates the types of tree item to match. Defaults to {@link sap.ui.vtm.TreeItemType.Included}."
            }
          ],
          "description": "Gets the descendants of a tree item.\n\nThis method relies on {@link #updateCollections} being called after the tree is populated/changed."
        },
        {
          "name": "getExpanded",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Whether the row associated with the specified tree item is expanded."
          },
          "parameters": [
            {
              "name": "oTreeItem",
              "type": "object",
              "optional": false,
              "description": "The tree item."
            }
          ],
          "description": "Gets whether the row associated with a tree item is expanded.\n\nThis method relies on {@link #updateCollections} being called after the tree is populated/changed."
        },
        {
          "name": "getFixedColumns",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Column[]",
            "description": "The fixed columns."
          },
          "description": "Gets the fixed columns for the tree."
        },
        {
          "name": "getHeaderControls",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.Control[]" },
          "description": "Gets content of aggregation {@link #getHeaderControls headerControls}.\n\nA set of controls such as toolbars to show above the tree."
        },
        {
          "name": "getHighlightColor",
          "visibility": "public",
          "returnValue": {
            "type": "string|string[]",
            "description": "A single value or an array of values representing the highlight color values of the tree item(s) passed in."
          },
          "parameters": [
            {
              "name": "treeItems",
              "type": "object|object[]",
              "optional": false,
              "description": "The tree item or the array of tree items."
            }
          ],
          "description": "Gets the <code>highlightColor</code> property of a tree item or array of tree items.\n\nIf a single tree item is passed to the method then a single value is returned.<br/> If an array of tree items is passed to the method then an array is returned."
        },
        {
          "name": "getItem",
          "visibility": "public",
          "returnValue": {
            "type": "object|undefined",
            "description": "The tree item matching the specified id or undefined if no match was found."
          },
          "parameters": [
            {
              "name": "treeItemId",
              "type": "string",
              "optional": false,
              "description": "The tree item id to look for."
            }
          ],
          "description": "Finds a tree item by id or returns undefined if it is not found.</br> This method relies on {@link #updateCollections} being called after the tree is populated/changed."
        },
        {
          "name": "getItemByBindingContextPath",
          "visibility": "public",
          "returnValue": {
            "type": "object|undefined",
            "description": "The tree item matching the specified binding context path or undefined if no match was found."
          },
          "parameters": [
            {
              "name": "bindingContextPath",
              "type": "string",
              "optional": false,
              "description": "The binding context path to look for."
            }
          ],
          "description": "Finds a tree item by binding context path or returns undefined if it is not found. This is typically used to find the corresponding tree item in event handlers for custom column template controls."
        },
        {
          "name": "getItemsBySceneNodeId",
          "visibility": "public",
          "returnValue": {
            "type": "object[]",
            "description": "The set of tree items that have a <code>sceneNodeIds</code> property that contains the specified scene node id."
          },
          "parameters": [
            {
              "name": "sceneNodeIds",
              "type": "string|string[]",
              "optional": false,
              "description": "The scene node ID or IDs to find."
            },
            {
              "name": "treeItemType",
              "type": "sap.ui.vtm.TreeItemType",
              "optional": false,
              "description": "Indicates the types of tree item to match. Defaults to {@link sap.ui.vtm.TreeItemType.Included}."
            }
          ],
          "description": "Finds the set of tree items that are associated with a particular scene node id.\n\nThis method relies on {@link #updateCollections} being called after the tree is populated/changed."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.vtm.Tree."
        },
        {
          "name": "getOpacity",
          "visibility": "public",
          "returnValue": {
            "type": "float|float[]",
            "description": "A single value or an array of values representing the opacity values of the tree item(s) passed in."
          },
          "parameters": [
            {
              "name": "treeItems",
              "type": "object|object[]",
              "optional": false,
              "description": "The tree item or the array of tree items."
            }
          ],
          "description": "Gets the <code>opacity</code> property of a tree item or array of tree items.\n\nIf a single tree item is passed to the method then a single value is returned.<br/> If an array of tree items is passed to the method then an array is returned."
        },
        {
          "name": "getPanel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Panel",
            "description": "The panel this tree belongs to."
          },
          "description": "Gets the panel this tree belongs to."
        },
        {
          "name": "getParentItem",
          "visibility": "public",
          "returnValue": {
            "type": "object|undefined",
            "description": "The parent tree item or undefined if no match was found."
          },
          "parameters": [
            {
              "name": "treeItem",
              "type": "object|string",
              "optional": false,
              "description": "The child tree item or child tree item id."
            }
          ],
          "description": "Finds a parent tree item or returns undefined if it is not found.\n\nThis method relies on {@link #updateCollections} being called after the tree is populated/changed."
        },
        {
          "name": "getRootItems",
          "visibility": "public",
          "returnValue": {
            "type": "object[]",
            "description": "The root tree items."
          },
          "description": "Gets the root tree items."
        },
        {
          "name": "getSelectedItems",
          "visibility": "public",
          "returnValue": {
            "type": "object[]",
            "description": "The selected tree items."
          },
          "description": "Gets the selected tree items."
        },
        {
          "name": "getSelectionMode",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.SelectionMode",
            "description": "Value of property <code>selectionMode</code>"
          },
          "description": "Gets current value of property {@link #getSelectionMode selectionMode}.\n\nThe tree selection mode.\n\nDefault value is <code>Single</code>."
        },
        {
          "name": "getVisibility",
          "visibility": "public",
          "returnValue": {
            "type": "boolean|boolean[]",
            "description": "A single value or an array of values where the value is <code>true</code> if the tree item is visible, <code>false</code> otherwise."
          },
          "parameters": [
            {
              "name": "treeItems",
              "type": "object|object[]",
              "optional": false,
              "description": "The tree item or the array of tree items."
            }
          ],
          "description": "Gets the <code>visibility</code> property of a tree item or array of tree items.\n\nIf a single tree item is passed to the method then a single value is returned.<br/> If an array of tree items is passed to the method then an array is returned."
        },
        {
          "name": "indexOfHeaderControl",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oHeaderControl",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The headerControl whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.ui.core.Control</code> in the aggregation {@link #getHeaderControls headerControls}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "insertHeaderControl",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Tree",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oHeaderControl",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The headerControl to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the headerControl should be inserted at; for a negative value of <code>iIndex</code>, the headerControl is inserted at position 0; for a value greater than the current size of the aggregation, the headerControl is inserted at the last position"
            }
          ],
          "description": "Inserts a headerControl into the aggregation {@link #getHeaderControls headerControls}."
        },
        {
          "name": "isEmpty",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Whether the tree is empty."
          },
          "description": "Returns whether the tree is empty."
        },
        {
          "name": "isExcludedItem",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Whether a tree item object is an included tree item in this tree."
          },
          "parameters": [
            {
              "name": "treeItem",
              "type": "object|string",
              "optional": false,
              "description": "The tree item or tree item id to check."
            }
          ],
          "description": "Returns whether a tree item object is an excluded tree item in the tree model of this {@link sap.ui.vtm.Tree}.\n\nThis method relies on {@link #updateCollections} being called after the tree is populated/changed."
        },
        {
          "name": "isIncludedItem",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Whether a tree item object is an included tree item in this tree."
          },
          "parameters": [
            {
              "name": "treeItem",
              "type": "object|string",
              "optional": false,
              "description": "The tree item or tree item id to check."
            }
          ],
          "description": "Returns whether a tree item object is an included tree item in the tree model of this {@link sap.ui.vtm.Tree}.\n\nThis method relies on {@link #updateCollections} being called after the tree is populated/changed."
        },
        {
          "name": "removeAllHeaderControls",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.Control[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getHeaderControls headerControls}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeHeaderControl",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.Control",
            "description": "The removed headerControl or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vHeaderControl",
              "type": "int|string|sap.ui.core.Control",
              "optional": false,
              "description": "The headerControl to remove or its index or id"
            }
          ],
          "description": "Removes a headerControl from the aggregation {@link #getHeaderControls headerControls}."
        },
        {
          "name": "removeRoot",
          "visibility": "public",
          "returnValue": {
            "type": "object|undefined",
            "description": "Returns the deleted item or undefined if no item was removed."
          },
          "parameters": [
            {
              "name": "rootItemToRemove",
              "type": "string|object",
              "optional": false,
              "description": "The root tree item to remove (or its id)."
            }
          ],
          "description": "Removes a root item from the tree."
        },
        {
          "name": "scrollIntoView",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Tree",
            "description": "Returns <code>this</code> for method chaining."
          },
          "parameters": [
            {
              "name": "treeItem",
              "type": "object",
              "optional": false,
              "description": "The tree item to scroll into view."
            }
          ],
          "description": "Brings specified tree item to view, expanding the tree if necessary.\n\nThis method relies on {@link #updateCollections} being called after the tree is populated/changed."
        },
        {
          "name": "setDataColumns",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Tree",
            "description": "Returns <code>this</code> for method chaining."
          },
          "parameters": [
            {
              "name": "dataColumns",
              "type": "sap.ui.vtm.Column[]",
              "optional": false,
              "description": "The data columns for the tree."
            }
          ],
          "description": "Sets the data columns for the tree."
        },
        {
          "name": "setExpanded",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Tree",
            "description": "A reference to <code>this</code> for method chaining."
          },
          "parameters": [
            {
              "name": "oTreeItem",
              "type": "object",
              "optional": false,
              "description": "The tree item."
            },
            {
              "name": "bExpanded",
              "type": "boolean",
              "optional": false,
              "description": "If <code>true</code> the row will be expanded otherwise it will be collapsed."
            }
          ],
          "description": "Expands or collapses the row associated with a tree item.\n\nThis method relies on {@link #updateCollections} being called after the tree is populated/changed."
        },
        {
          "name": "setFixedColumns",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Tree",
            "description": "Returns <code>this</code> for method chaining."
          },
          "parameters": [
            {
              "name": "fixedColumns",
              "type": "sap.ui.vtm.Column[]",
              "optional": false,
              "description": "The fixed columns."
            }
          ],
          "description": "Sets the fixed columns for the tree."
        },
        {
          "name": "setHighlightColor",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Tree",
            "description": "<code>this</code> to allow method chaining."
          },
          "parameters": [
            {
              "name": "treeItems",
              "type": "object|object[]",
              "optional": false,
              "description": "The tree item or the array of tree items."
            },
            {
              "name": "highlightColor",
              "type": "sap.ui.core.CSSColor",
              "optional": false,
              "description": "The new highlight color value of the tree items."
            },
            {
              "name": "recursive",
              "type": "boolean",
              "optional": false,
              "description": "If <code>true</code> changes are applied recursively to included and excluded descendant tree items. Default value is <code>true</code>."
            },
            {
              "name": "visualOnly",
              "type": "boolean",
              "optional": false,
              "description": "If <code>true</code> changes are only made to tree items that have a defined <code>visibility</code> property value. Default value is <code>true</code>."
            },
            {
              "name": "refresh",
              "type": "boolean",
              "optional": false,
              "description": "If <code>true<code>, {@link #updateModel} is called to refresh the tree (so the check eye icons are updated) and {@link sap.ui.vtm.Viewport#refresh} is called on the corresponding {@link sap.ui.vtm.Viewport} to recalculate the display state. Default value is <code>true</code>."
            }
          ],
          "description": "Sets the <code>highlightColor</code> property of some tree items."
        },
        {
          "name": "setOpacity",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Tree",
            "description": "<code>this</code> to allow method chaining."
          },
          "parameters": [
            {
              "name": "treeItems",
              "type": "object|object[]",
              "optional": false,
              "description": "The tree item or the array of tree items."
            },
            {
              "name": "opacity",
              "type": "float",
              "optional": false,
              "description": "The new opacity value of the tree items (between 0.0 and 1.0 inclusive)."
            },
            {
              "name": "recursive",
              "type": "boolean",
              "optional": false,
              "description": "If <code>true</code> changes are applied recursively to included and excluded descendant tree items. Default value is <code>true</code>."
            },
            {
              "name": "visualOnly",
              "type": "boolean",
              "optional": false,
              "description": "If <code>true</code> changes are only made to tree items that have a defined <code>visibility</code> property value. Default value is <code>true</code>."
            },
            {
              "name": "refresh",
              "type": "boolean",
              "optional": false,
              "description": "If <code>true<code>, {@link #updateModel} is called to refresh the tree (so the check eye icons are updated) and {@link sap.ui.vtm.Viewport#refresh} is called on the corresponding {@link sap.ui.vtm.Viewport} to recalculate the display state. Default value is <code>true</code>."
            }
          ],
          "description": "Sets the <code>opacity</code> property of some tree items."
        },
        {
          "name": "setRootItems",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Tree",
            "description": "Returns <code>this</code> for method chaining."
          },
          "parameters": [
            {
              "name": "rootItems",
              "type": "object[]",
              "optional": false,
              "description": "The root tree items."
            }
          ],
          "description": "Sets the root tree items."
        },
        {
          "name": "setSelectedItems",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Tree",
            "description": "Returns <code>this</code> for method chaining."
          },
          "parameters": [
            {
              "name": "items",
              "type": "object|object[]",
              "optional": false,
              "description": "Tree item(s) to select in the tree."
            },
            {
              "name": "scrollToView",
              "type": "boolean",
              "optional": false,
              "description": "When set brings selected item into view. Default value is to true."
            }
          ],
          "description": "Sets the selected tree items.\n\nThis method relies on {@link #updateCollections} being called after the tree is populated/changed."
        },
        {
          "name": "setSelectionMode",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Tree",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sSelectionMode",
              "type": "sap.ui.vtm.SelectionMode",
              "optional": false,
              "description": "New value for property <code>selectionMode</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSelectionMode selectionMode}.\n\nThe tree selection mode.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Single</code>."
        },
        {
          "name": "setVisibility",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Tree",
            "description": "<code>this</code> to allow method chaining."
          },
          "parameters": [
            {
              "name": "treeItems",
              "type": "object|object[]",
              "optional": false,
              "description": "The tree item or the array of tree items."
            },
            {
              "name": "visibility",
              "type": "boolean",
              "optional": false,
              "description": "The new visibility state of the tree items."
            },
            {
              "name": "recursive",
              "type": "boolean",
              "optional": false,
              "description": "If <code>true</code> changes are applied recursively to included and excluded descendant tree items. Default value is <code>true</code>."
            },
            {
              "name": "visualOnly",
              "type": "boolean",
              "optional": false,
              "description": "If <code>true</code> changes are only made to tree items that have a defined <code>visibility</code> property value. Default value is <code>true</code>."
            },
            {
              "name": "refresh",
              "type": "boolean",
              "optional": false,
              "description": "If <code>true<code>, {@link #updateModel} is called to refresh the tree (so the check eye icons are updated) and {@link sap.ui.vtm.Viewport#refresh} is called on the corresponding {@link sap.ui.vtm.Viewport} to recalculate the display state. Default value is <code>true</code>."
            }
          ],
          "description": "Sets the <code>visibility</code> property of some tree items."
        },
        {
          "name": "traverseBranch",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Tree",
            "description": "<code>this</code> to allow method chaining."
          },
          "parameters": [
            {
              "name": "treeItem",
              "type": "object",
              "optional": false,
              "description": "The root of the branch to apply the function to."
            },
            {
              "name": "callback",
              "type": "function",
              "optional": false,
              "description": "The function to apply to tree items in the branch.<br/> The first parameter to the callback function is the current tree item object (at the current point of the traversal.<br/> The second parameter to the callback function is the set of ancestors of the current tree item in the traversal.<br/> The function may return a {@link sap.ui.vtm.ChildCollectionType} value to specify which immediate children of the tree item to traverse.<br/> If no such value is returned a default of {@link sap.ui.vtm.ChildCollectionType.Included} is used."
            }
          ],
          "description": "Recursively traverses a tree branch calling a function on each item (including the tree item that is the root of the branch)."
        },
        {
          "name": "traverseTree",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Tree",
            "description": "<code>this</code> to allow method chaining."
          },
          "parameters": [
            {
              "name": "callback",
              "type": "function",
              "optional": false,
              "description": "The function to apply to tree items in the tree.<br/> The first parameter to the callback function is the current tree item object (at the current point of the traversal.<br/> The second parameter to the callback function is the set of ancestors of the current tree item.<br/> The function may return a {@link sap.ui.vtm.ChildCollectionType} value to specify which immediate children to traverse. If no such value is returned a default of {@link sap.ui.vtm.ChildCollectionType.Included} is used."
            }
          ],
          "description": "Recursively traverses the tree calling a function on each item."
        },
        {
          "name": "updateCollections",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Tree",
            "description": "Returns <code>this</code> for method chaining."
          },
          "parameters": [
            {
              "name": "checkForHierarchyChanges",
              "type": "boolean",
              "optional": false,
              "description": "When true a <code>hierarchyChanged</code> event will be raised if the hierarchy has changed since the last time this method was called. This method is called when the tree is empty as part of the {@link sap.ui.vtm.Tree} constructor, so the first time it is called from application code a <code>hierarchyChanged</code> event will be raised if the tree has been populated. The default value for the parameter is <code>true</code>."
            }
          ],
          "description": "Updates collections used to find tree items by various criteria.<br/> This method should be called whenever the tree has been populated, when the tree structure has changed or when any of the following fields have been modified for a tree item in the tree: <ul> <li>id</li> <li>sceneNodeIds <b>*</b></li> <li>includedChildren</li> <li>excludedChildren</li> </ul> <br/> Correct usage of this method is required by the following methods: <ul> <li>{@link #getItem}</li> <li>{@link #getParentItem}</li> <li>{@link #getDescendantItems}</li> <li>{@link #getAncestorItems}</li> <li>{@link #getItemsBySceneNodeId} <b>*</b></li> <li>{@link #setExpanded}</li> <li>{@link #getExpanded}</li> <li>{@link #expandAncestors}</li> <li>{@link #scrollIntoView}</li> <li>{@link #setSelectedItems}</li> <li>{@link #isIncludedItem}</li> <li>{@link #isExcludedItem}</li> <li>{@link #traverseBranch}</li> </ul> <br/> <b>*</b> When the only changes to the tree since the last call to {@link #updateCollections} are changes to the <code>sceneNodeIds<code> properties of the tree items, {@link #updateTreeItemsBySceneNodeId} can be used instead of {@link #updateCollections}."
        },
        {
          "name": "updateModel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Tree",
            "description": "Returns <code>this</code> for method chaining."
          },
          "parameters": [
            {
              "name": "forceRecreate",
              "type": "boolean",
              "optional": false,
              "description": "If <code>true</code>, the tree control model and bindings are recreated. If <code>false</code> and the model and bindings already exist, this call only results in the bindings being refreshed. Rebuilding the model and bindings is much more expensive than refreshing the bindings, so only use a value of <code>true</code> for this parameter when a value of <code>false</code> does not result in the the tree being updated correctly."
            }
          ],
          "description": "Updates the model.\n\nThe application should call this whenever changes are made to the tree model."
        },
        {
          "name": "updateTreeItemsBySceneNodeId",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Tree",
            "description": "Returns <code>this</code> for method chaining."
          },
          "description": "Update the collection used by {@link #getItemsBySceneNodeId}.\n\nThis is useful when the only changes to the tree since the last call to {@link #updateCollections} are changes to the <code>sceneNodeIds<code> properties of the tree items."
        },
        {
          "name": "validateTree",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Tree",
            "description": "<code>this</code> for method chaining."
          },
          "description": "Validates the tree. If errors are found they are written to the console log and an exception is thrown."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.ui.vtm.TreeItemType",
      "basename": "TreeItemType",
      "resource": "sap/ui/vtm/TreeItemType.js",
      "module": "sap/ui/vtm/TreeItemType",
      "export": "",
      "static": true,
      "visibility": "public",
      "description": "Enumeration specifying the type(s) of tree item to match during tree traversal.",
      "experimental": {
        "since": "1.50.0",
        "text": "This type is experimental and might be modified or removed in future versions."
      },
      "ui5-metamodel": true,
      "properties": [
        {
          "name": "Excluded",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "A tree item that is in the object hierarchy of the tree model, but cannot be shown in the tree. A tree item is an excluded tree item when any ancestor of the tree item is included in the <code>excludedChildren</code> collection of its parent."
        },
        {
          "name": "Included",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "A tree item that can be shown in the tree. A tree item is an included tree item when it is a root tree item or is included in the <code>includedChildren</code> collection of its parent."
        },
        {
          "name": "IncludedOrExcluded",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Matches either included or excluded tree items."
        }
      ]
    },
    {
      "kind": "namespace",
      "name": "sap.ui.vtm.TreeItemUtilities",
      "basename": "TreeItemUtilities",
      "resource": "sap/ui/vtm/TreeItemUtilities.js",
      "module": "sap/ui/vtm/TreeItemUtilities",
      "export": "",
      "static": true,
      "visibility": "public",
      "description": "A set of utility functions for working with tree items for {@link sap.ui.vtm.Tree} controls.",
      "experimental": {
        "since": "1.50.0",
        "text": "This class is experimental and might be modified or removed in future versions."
      },
      "methods": [
        {
          "name": "addChild",
          "visibility": "public",
          "static": true,
          "parameters": [
            {
              "name": "item",
              "type": "object",
              "optional": false,
              "description": "The parent tree item."
            },
            {
              "name": "childItem",
              "type": "object",
              "optional": false,
              "description": "The child tree item."
            },
            {
              "name": "childCollectionType",
              "type": "sap.ui.vtm.ChildCollectionType",
              "optional": false,
              "description": "Controls which child collection to add the child tree item to. <ul> <li>{@link sap.ui.vtm.ChildCollectionType.None} - No action is performed.</li> <li>{@link sap.ui.vtm.ChildCollectionType.Included} - The child tree item will be added to the <code>includedChildren</code> collection of the tree item.</li> <li>{@link sap.ui.vtm.ChildCollectionType.Excluded} - The child tree item will be added to the <code>excludedChildren</code> collection of the tree item.</li> <li>{@link sap.ui.vtm.ChildCollectionType.IncludedAndExcluded} - Results in an exception being thrown because tree item IDs must be unique in the tree at any given point in time, so a tree item cannot be added to both collections.</li> </ul> The default value is {@link sap.ui.vtm.ChildCollectionType.Included}."
            }
          ],
          "description": "Adds a child tree item to the end of the the <code>includedChildren</code> or <code>excludedChildren</code> collection of its parent tree item."
        },
        {
          "name": "addExcludedChild",
          "visibility": "public",
          "static": true,
          "parameters": [
            {
              "name": "item",
              "type": "object",
              "optional": false,
              "description": "The parent tree item."
            },
            {
              "name": "childItem",
              "type": "object",
              "optional": false,
              "description": "The child tree item."
            }
          ],
          "description": "Adds a child tree item to the end of the the <code>excludedChildren</code> collection of its parent tree item."
        },
        {
          "name": "addIncludedChild",
          "visibility": "public",
          "static": true,
          "parameters": [
            {
              "name": "item",
              "type": "object",
              "optional": false,
              "description": "The parent tree item."
            },
            {
              "name": "childItem",
              "type": "object",
              "optional": false,
              "description": "The child tree item."
            }
          ],
          "description": "Adds a child tree item to the end of the the <code>includedChildren</code> collection of its parent tree item."
        },
        {
          "name": "addRoot",
          "visibility": "public",
          "static": true,
          "parameters": [
            {
              "name": "rootItems",
              "type": "object[]",
              "optional": false,
              "description": "The existing set of root items."
            },
            {
              "name": "rootItemToAdd",
              "type": "object",
              "optional": false,
              "description": "The root tree item to remove."
            }
          ],
          "description": "Adds a root item to the tree."
        },
        {
          "name": "calculateAbsoluteMatrix",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.vtm.Matrix",
            "description": "The calculated absolute matrix."
          },
          "parameters": [
            {
              "name": "relativeMatrix",
              "type": "sap.ui.vtm.Matrix",
              "optional": false,
              "description": "The relative matrix of the tree item."
            },
            {
              "name": "parentAbsoluteMatrix",
              "type": "sap.ui.vtm.Matrix",
              "optional": false,
              "description": "The absolute matrix of the parent tree item."
            }
          ],
          "description": "Calculates the absolute matrix that should be applied to a tree item given its relative matrix and the absolute matrix of its parent."
        },
        {
          "name": "calculateRelativeMatrix",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.vtm.Matrix",
            "description": "The calculated relative matrix."
          },
          "parameters": [
            {
              "name": "absoluteMatrix",
              "type": "sap.ui.vtm.Matrix",
              "optional": false,
              "description": "The absolute matrix of the tree item."
            },
            {
              "name": "parentAbsoluteMatrix",
              "type": "sap.ui.vtm.Matrix",
              "optional": false,
              "description": "The absolute matrix of the parent tree item."
            }
          ],
          "description": "Calculates the relative matrix that should be applied to a tree item given its absolute matrix and the absolute matrix of its parent."
        },
        {
          "name": "cloneAppData",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "object",
            "description": "A cloned copy of the appData on the passed tree item."
          },
          "parameters": [
            {
              "name": "treeItem",
              "type": "object",
              "optional": false,
              "description": "The tree item."
            }
          ],
          "description": "Returns a cloned copy of the appData on the passed tree item."
        },
        {
          "name": "cloneIdentifiers",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "object",
            "description": "A cloned copy of the metadata on the passed tree item."
          },
          "parameters": [
            {
              "name": "treeItem",
              "type": "object",
              "optional": false,
              "description": "The tree item."
            }
          ],
          "description": "Returns a cloned copy of the identifiers on the passed tree item."
        },
        {
          "name": "cloneMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "object",
            "description": "A cloned copy of the metadata on the passed tree item."
          },
          "parameters": [
            {
              "name": "treeItem",
              "type": "object",
              "optional": false,
              "description": "The tree item."
            }
          ],
          "description": "Returns a cloned copy of the metadata on the passed tree item."
        },
        {
          "name": "excludeAllChildren",
          "visibility": "public",
          "static": true,
          "parameters": [
            {
              "name": "treeItems",
              "type": "object[]|object",
              "optional": false,
              "description": "The tree item or items."
            },
            {
              "name": "recursive",
              "type": "boolean",
              "optional": false,
              "description": "When <code>true</code> the items in the <code>includedChildren</code> collections of descendants are moved to the <code>excludedChildren</code> collection of the descendant tree item. Defaults to <code>false</code>."
            }
          ],
          "description": "Moves all items from the <code>includedChildren</code> collection of a tree item (or set of tree items) to the <code>excludedChildren</code> collection."
        },
        {
          "name": "getAppDataDescriptors",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "string[]",
            "description": "The application data field descriptors for the given tree item."
          },
          "parameters": [
            {
              "name": "treeItem",
              "type": "object",
              "optional": false,
              "description": "The tree item to get application data field descriptors from."
            }
          ],
          "description": "Gets the application data field descriptors for a given tree item."
        },
        {
          "name": "getAppDataValues",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "string[]|number[]|boolean[]|object[]",
            "description": "The application data values."
          },
          "parameters": [
            {
              "name": "treeItem",
              "type": "object",
              "optional": false,
              "description": "The tree item to get application data values from."
            },
            {
              "name": "descriptor",
              "type": "string",
              "optional": false,
              "description": "The descriptor describing the application data value(s) to retrieve."
            }
          ],
          "description": "Gets the application data values associated with a particular descriptor for a tree item."
        },
        {
          "name": "getChildren",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "object[]",
            "description": "The children of the tree item of the given type."
          },
          "parameters": [
            {
              "name": "treeItem",
              "type": "object",
              "optional": false,
              "description": "The tree item."
            },
            {
              "name": "childCollectionType",
              "type": "sap.ui.vtm.ChildCollectionType",
              "optional": false,
              "description": "Specifies which child item collections to get children from. <ul> <li>{@link sap.ui.vtm.ChildCollectionType.None} - An empty array is returned.</li> <li>{@link sap.ui.vtm.ChildCollectionType.Included} - Gets the items in the <code>includedChildren</code> collection of the tree item.</li> <li>{@link sap.ui.vtm.ChildCollectionType.Excluded} - Gets the items in the <code>excludedChildren</code> collection of the tree item.</li> <li>{@link sap.ui.vtm.ChildCollectionType.IncludedAndExcluded} - Gets the items in the <code>includedChildren</code> and <code>excludedChildren</code> collections of the tree item.</li> </ul> The default value is {@link sap.ui.vtm.ChildCollectionType.Included}."
            }
          ],
          "description": "Gets the children of a tree item from the <code>includedChildren</code> and/or <code>excludedChildren</code> collections."
        },
        {
          "name": "getExcludedChildren",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "object[]",
            "description": "The excluded children of the tree item."
          },
          "parameters": [
            {
              "name": "treeItem",
              "type": "object",
              "optional": false,
              "description": "The tree item."
            }
          ],
          "description": "Gets the excluded children of a tree item."
        },
        {
          "name": "getIdentifierDescriptors",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "string[]",
            "description": "The identifier descriptors for the given tree item."
          },
          "parameters": [
            {
              "name": "treeItem",
              "type": "object",
              "optional": false,
              "description": "The tree item to get identifier descriptors from."
            }
          ],
          "description": "Gets the identifier descriptors for a given tree item."
        },
        {
          "name": "getIdentifierValues",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "string[]",
            "description": "The identifier values."
          },
          "parameters": [
            {
              "name": "treeItem",
              "type": "object",
              "optional": false,
              "description": "The tree item to retrieve values from."
            },
            {
              "name": "descriptor",
              "type": "string",
              "optional": false,
              "description": "The descriptor describing the identifier value(s) to retrieve."
            }
          ],
          "description": "Gets the identifier values associated with a particular descriptor for a tree item."
        },
        {
          "name": "getIncludedChildren",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "object[]",
            "description": "The included children of the tree item."
          },
          "parameters": [
            {
              "name": "treeItem",
              "type": "object",
              "optional": false,
              "description": "The tree item."
            }
          ],
          "description": "Gets the included children of a tree item."
        },
        {
          "name": "getMessages",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.core.Message[]",
            "description": "The tree item messages."
          },
          "parameters": [
            {
              "name": "treeItem",
              "type": "object",
              "optional": false,
              "description": "The tree item."
            }
          ],
          "description": "Gets the messages stored on a tree item."
        },
        {
          "name": "getMetadataDescriptors",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "string[]",
            "description": "The metadata field descriptors for the given tree item."
          },
          "parameters": [
            {
              "name": "treeItem",
              "type": "object",
              "optional": false,
              "description": "The tree item to get metadata field descriptors from."
            }
          ],
          "description": "Gets the metadata field descriptors for a given tree item."
        },
        {
          "name": "getMetadataValues",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "string[]|number[]|boolean[]|object[]",
            "description": "The metadata values."
          },
          "parameters": [
            {
              "name": "treeItem",
              "type": "object",
              "optional": false,
              "description": "The tree item to metadata values from."
            },
            {
              "name": "descriptor",
              "type": "string",
              "optional": false,
              "description": "The descriptor describing the metadata value(s) to retrieve."
            }
          ],
          "description": "Gets the metadata values associated with a particular descriptor for a tree item."
        },
        {
          "name": "getSceneNodeIds",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "string[]",
            "description": "The scene node IDs for the tree item."
          },
          "parameters": [
            {
              "name": "treeItem",
              "type": "object",
              "optional": false,
              "description": "The tree item."
            }
          ],
          "description": "Gets the IDs of the scene nodes associated with a tree item as an array of strings."
        },
        {
          "name": "hasChildren",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "boolean",
            "description": "Whether the tree item has children of the given type."
          },
          "parameters": [
            {
              "name": "treeItem",
              "type": "object",
              "optional": false,
              "description": "The tree item."
            },
            {
              "name": "childCollectionType",
              "type": "sap.ui.vtm.ChildCollectionType",
              "optional": false,
              "description": "The child item collections to check. <ul> <li>{@link sap.ui.vtm.ChildCollectionType.None} - Returns <code>false</code>.</li> <li>{@link sap.ui.vtm.ChildCollectionType.Included} - Gets whether there are items in the <code>includedChildren</code> collection of the tree item.</li> <li>{@link sap.ui.vtm.ChildCollectionType.Excluded} - Gets whether there are items in the <code>excludedChildren</code> collection of the tree item.</li> <li>{@link sap.ui.vtm.ChildCollectionType.IncludedAndExcluded} - Gets whether there are items in either the <code>includedChildren</code> collection or the <code>excludedChildren</code> collection of the tree item.</li> </ul> The default value is {@link sap.ui.vtm.ChildCollectionType.Included}."
            }
          ],
          "description": "Gets whether a tree item has items in the <code>includedChildren</code> and/or <code>excludedChildren</code> collections."
        },
        {
          "name": "hasExcludedChildren",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "object[]",
            "description": "The excluded children of the tree item."
          },
          "parameters": [
            {
              "name": "treeItem",
              "type": "object",
              "optional": false,
              "description": "The tree item."
            }
          ],
          "description": "Gets whether a tree item has excluded children."
        },
        {
          "name": "hasIncludedChildren",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "object[]",
            "description": "The included children of the tree item."
          },
          "parameters": [
            {
              "name": "treeItem",
              "type": "object",
              "optional": false,
              "description": "The tree item."
            }
          ],
          "description": "Gets whether a tree item has included children."
        },
        {
          "name": "hasVisibility",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "boolean",
            "description": "Whether the tree item has a <code>visibility</code> value."
          },
          "parameters": [
            {
              "name": "treeItem",
              "type": "object",
              "optional": false,
              "description": "The tree item."
            }
          ],
          "description": "Returns whether the tree item has a <code>visibility</code> value."
        },
        {
          "name": "includeAllChildren",
          "visibility": "public",
          "static": true,
          "parameters": [
            {
              "name": "treeItems",
              "type": "object[]|object",
              "optional": false,
              "description": "The tree item or items."
            },
            {
              "name": "recursive",
              "type": "boolean",
              "optional": false,
              "description": "When <code>true</code> the items in the <code>excludedChildren</code> collections of descendants are moved to the <code>includedChildren</code> collection of the descendant tree item. Defaults to <code>false</code>."
            }
          ],
          "description": "Moves all items from the <code>excludedChildren</code> collection of a tree item (or set of tree items) to the <code>includedChildren</code> collection."
        },
        {
          "name": "mapBranch",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "object",
            "description": "The mapped tree branch."
          },
          "parameters": [
            {
              "name": "treeItem",
              "type": "object",
              "optional": false,
              "description": "The tree item representing the branch to map."
            },
            {
              "name": "mapFunc",
              "type": "function",
              "optional": false,
              "description": "A function that takes a tree item and returns a new tree item."
            }
          ],
          "description": "Applies a mapping function to each tree item in a branch of a tree to create a new tree branch."
        },
        {
          "name": "mapTree",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "object[]",
            "description": "The root tree items of the mapped tree."
          },
          "parameters": [
            {
              "name": "rootTreeItems",
              "type": "object[]",
              "optional": false,
              "description": "The root tree items of the tree to map."
            },
            {
              "name": "mapFunc",
              "type": "function",
              "optional": false,
              "description": "A function that takes a tree item and returns a new tree item."
            }
          ],
          "description": "Applies a mapping function to each tree item in a tree to create a new tree."
        },
        {
          "name": "removeChild",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "object|undefined",
            "description": "Returns the deleted item or undefined if no item was removed."
          },
          "parameters": [
            {
              "name": "item",
              "type": "object",
              "optional": false,
              "description": "The parent tree item."
            },
            {
              "name": "childItem",
              "type": "string|object",
              "optional": false,
              "description": "The child tree item to remove (or its id)."
            },
            {
              "name": "childCollectionType",
              "type": "sap.ui.vtm.ChildCollectionType",
              "optional": false,
              "description": "Controls which child collection to remove the child tree item from. <ul> <li>{@link sap.ui.vtm.ChildCollectionType.None} - No action is performed.</li> <li>{@link sap.ui.vtm.ChildCollectionType.Included} - The child tree item will be removed from the <code>includedChildren</code> collection of the tree item.</li> <li>{@link sap.ui.vtm.ChildCollectionType.Excluded} - The child tree item will be removed from the <code>excludedChildren</code> collection of the tree item.</li> <li>{@link sap.ui.vtm.ChildCollectionType.IncludedAndExcluded} - The child tree item will be removed from the <code>includedChildren</code> and <code>excludedChildren</code> collections of the tree item.<br/> Note that duplicate tree item ids are not allowed in the tree, so a given tree item should exist in at most one of these collections at a given point in time.</li> </ul> The default value is {@link sap.ui.vtm.ChildCollectionType.Included}."
            }
          ],
          "description": "Removes a child tree item from the <code>includedChildren</code> and/or <code>excludedChildren</code> collection of its parent tree item."
        },
        {
          "name": "removeExcludedChild",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "object|undefined",
            "description": "Returns the deleted item or undefined if no item was removed."
          },
          "parameters": [
            {
              "name": "item",
              "type": "object",
              "optional": false,
              "description": "The parent tree item."
            },
            {
              "name": "childItem",
              "type": "string|object",
              "optional": false,
              "description": "The child tree item to remove (or its id)."
            }
          ],
          "description": "Removes a child tree item from the <code>excludedChildren</code> collection of its parent tree item."
        },
        {
          "name": "removeIncludedChild",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "object|undefined",
            "description": "Returns the deleted item or undefined if no item was removed."
          },
          "parameters": [
            {
              "name": "item",
              "type": "object",
              "optional": false,
              "description": "The parent tree item."
            },
            {
              "name": "childItem",
              "type": "string|object",
              "optional": false,
              "description": "The child tree item to remove (or its id)."
            }
          ],
          "description": "Removes a child tree item from the <code>includedChildren</code> collection of its parent tree item."
        },
        {
          "name": "removeRoot",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "object|undefined",
            "description": "Returns the deleted item or undefined if no item was removed."
          },
          "parameters": [
            {
              "name": "rootItems",
              "type": "object[]",
              "optional": false,
              "description": "The existing set of root items."
            },
            {
              "name": "rootItemToRemove",
              "type": "string|object",
              "optional": false,
              "description": "The root tree item to remove (or its id)."
            }
          ],
          "description": "Removes a root item from the tree."
        },
        {
          "name": "setAppDataValues",
          "visibility": "public",
          "static": true,
          "parameters": [
            {
              "name": "treeItem",
              "type": "object",
              "optional": false,
              "description": "The tree item to update."
            },
            {
              "name": "descriptor",
              "type": "string",
              "optional": false,
              "description": "The descriptor describing the application data value(s) to update."
            },
            {
              "name": "values",
              "type": "undefined|string|string[]|number|number[]|boolean|boolean[]|object|object[]",
              "optional": false,
              "description": "The application data value or values to apply. A value of undefined clears all values for the descriptor."
            }
          ],
          "description": "Set the application data values associated with a particular descriptor for a tree item (replacing any existing values)."
        },
        {
          "name": "setChildren",
          "visibility": "public",
          "static": true,
          "parameters": [
            {
              "name": "treeItem",
              "type": "object",
              "optional": false,
              "description": "The tree item."
            },
            {
              "name": "children",
              "type": "object[]",
              "optional": false,
              "description": "The items to set in the <code>includedChildren</code> or <code>excludedChildren</code> collection of the tree item."
            },
            {
              "name": "childCollectionType",
              "type": "sap.ui.vtm.ChildCollectionType",
              "optional": false,
              "description": "Controls which child collection to set on the tree item. <ul> <li>{@link sap.ui.vtm.ChildCollectionType.None} - No action is performed.</li> <li>{@link sap.ui.vtm.ChildCollectionType.Included} - The <code>includedChildren</code> collection of the tree item will be set.</li> <li>{@link sap.ui.vtm.ChildCollectionType.Excluded} - The <code>excludedChildren</code> collection of the tree item will be set.</li> <li>{@link sap.ui.vtm.ChildCollectionType.IncludedAndExcluded} - Results in an exception being thrown because tree item IDs must be unique in the tree at any given point in time, so a tree item cannot be added to both collections.</li> </ul> The default value is {@link sap.ui.vtm.ChildCollectionType.Included}."
            }
          ],
          "description": "Sets either the <code>includedChildren</code> or <code>excludedChildren</code> collection of a tree item."
        },
        {
          "name": "setExcludedChildren",
          "visibility": "public",
          "static": true,
          "parameters": [
            {
              "name": "treeItem",
              "type": "object",
              "optional": false,
              "description": "The tree item."
            },
            {
              "name": "excludedChildren",
              "type": "object[]",
              "optional": false,
              "description": "The items to set in the <code>includedChildren</code> collection of the tree item."
            }
          ],
          "description": "Sets the <code>excludedChildren</code> collection of a tree item."
        },
        {
          "name": "setIdentifierValues",
          "visibility": "public",
          "static": true,
          "parameters": [
            {
              "name": "treeItem",
              "type": "object",
              "optional": false,
              "description": "The tree item to update."
            },
            {
              "name": "descriptor",
              "type": "string",
              "optional": false,
              "description": "The descriptor describing the identifier value(s) to update."
            },
            {
              "name": "values",
              "type": "string|string[]|undefined",
              "optional": false,
              "description": "The identifier value or values to apply. A value of undefined clears all values for the descriptor."
            }
          ],
          "description": "Set the identifier values associated with a particular descriptor for a tree item (replacing any existing values)."
        },
        {
          "name": "setIncludedChildren",
          "visibility": "public",
          "static": true,
          "parameters": [
            {
              "name": "treeItem",
              "type": "object",
              "optional": false,
              "description": "The tree item."
            },
            {
              "name": "includedChildren",
              "type": "object[]",
              "optional": false,
              "description": "The items to set in the <code>includedChildren</code> collection of the tree item."
            }
          ],
          "description": "Sets the <code>includedChildren</code> collection of a tree item."
        },
        {
          "name": "setMessages",
          "visibility": "public",
          "static": true,
          "parameters": [
            {
              "name": "treeItem",
              "type": "object",
              "optional": false,
              "description": "The tree item."
            },
            {
              "name": "messages",
              "type": "sap.ui.core.Message[]",
              "optional": false,
              "description": "The set of messages to apply to the tree item."
            }
          ],
          "description": "Sets the messages stored on a tree item."
        },
        {
          "name": "setMetadataValues",
          "visibility": "public",
          "static": true,
          "parameters": [
            {
              "name": "treeItem",
              "type": "object",
              "optional": false,
              "description": "The tree item to update."
            },
            {
              "name": "descriptor",
              "type": "string",
              "optional": false,
              "description": "The descriptor describing the metadata value(s) to update."
            },
            {
              "name": "values",
              "type": "undefined|string|string[]|number|number[]|boolean|boolean[]|object|object[]",
              "optional": false,
              "description": "The metadata value or values to apply. A value of undefined clears all values for the descriptor."
            }
          ],
          "description": "Set the metadata values associated with a particular descriptor for a tree item (replacing any existing values)."
        },
        {
          "name": "setSceneNodeIds",
          "visibility": "public",
          "static": true,
          "parameters": [
            {
              "name": "treeItem",
              "type": "object",
              "optional": false,
              "description": "The tree item."
            },
            {
              "name": "sceneNodeIds",
              "type": "string|string[]|undefined",
              "optional": false,
              "description": "The scene node IDs for the tree item. A value of undefined clears all values for the descriptor."
            }
          ],
          "description": "Sets the IDs of the scene nodes to associate with a tree item in a memory efficient manner."
        },
        {
          "name": "traverseBranch",
          "visibility": "public",
          "static": true,
          "parameters": [
            {
              "name": "treeItem",
              "type": "object",
              "optional": false,
              "description": "The root of the branch to apply the function to."
            },
            {
              "name": "callback",
              "type": "function",
              "optional": false,
              "description": "The function to apply to tree items in the branch.<br/> The first parameter to the callback function is the current tree item object (at the current point of the traversal.<br/> The second parameter to the callback function is the set of ancestors of the current tree item.<br/> The second parameter to the callback function will not be populated unless the <code>ancestors</code> parameter of {@link sap.ui.vtm.TreeItemUtilities.traverseBranch traverseBranch} is provided.<br/> The function may return a {@link sap.ui.vtm.ChildCollectionType} value to specify which immediate children of the tree item to traverse.<br/> If no such value is returned a default of {@link sap.ui.vtm.ChildCollectionType.Included} is used."
            },
            {
              "name": "ancestors",
              "type": "object[]",
              "optional": true,
              "description": "The ancestors of the tree item. If provided this will be used to calculate the set of ancestors of each tree item during traversal (to be passed into the callback function)."
            }
          ],
          "description": "Recursively traverses a tree branch calling a function on each item (including the tree item that is the root of the branch)."
        },
        {
          "name": "traverseTree",
          "visibility": "public",
          "static": true,
          "parameters": [
            {
              "name": "rootItems",
              "type": "object[]",
              "optional": false,
              "description": "The root items of the tree."
            },
            {
              "name": "callback",
              "type": "function",
              "optional": false,
              "description": "The function to apply to tree items in the tree.<br/> The first parameter to the callback function is the current tree item object (at the current point of the traversal.<br/> The second parameter to the callback function is the set of ancestors of the current tree item.<br/> The function may return a {@link sap.ui.vtm.ChildCollectionType} value to specify which immediate children to traverse. If no such value is returned a default of {@link sap.ui.vtm.ChildCollectionType.Included} is used."
            }
          ],
          "description": "Recursively traverses a tree calling a function on each item."
        },
        {
          "name": "validateTree",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "string[]",
            "description": "The set of validation errors for the tree item."
          },
          "parameters": [
            {
              "name": "rootItems",
              "type": "object[]",
              "optional": false,
              "description": "The root tree items."
            }
          ],
          "description": "Validates a tree and returns a set of error messages."
        },
        {
          "name": "validateTreeItem",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "string[]",
            "description": "The set of validation errors for the tree item."
          },
          "parameters": [
            {
              "name": "treeItem",
              "type": "object",
              "optional": false,
              "description": "The tree item."
            }
          ],
          "description": "Validates a tree item and returns a set of error messages."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.vtm.Viewable",
      "basename": "Viewable",
      "resource": "sap/ui/vtm/Viewable.js",
      "module": "sap/ui/vtm/Viewable",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.core.Element",
      "description": "A viewable containing 3D content that can be loaded into a {@link sap.ui.vtm.Scene}.",
      "experimental": {
        "since": "1.50.0",
        "text": "This class is experimental and might be modified or removed in future versions."
      },
      "ui5-metadata": {
        "stereotype": "element",
        "properties": [
          {
            "name": "source",
            "type": "any",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The source URL (string) or File for this Viewable.",
            "methods": ["getSource", "setSource"]
          },
          {
            "name": "name",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The name for this Viewable.",
            "methods": ["getName", "setName"]
          },
          {
            "name": "rootNodeIds",
            "type": "string[]",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The root scene node IDs for this viewable.",
            "methods": ["getRootNodeIds", "setRootNodeIds"]
          },
          {
            "name": "relativeMatrix",
            "type": "sap.ui.vtm.Matrix",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The relative transformation matrix to apply to the scene node created to wrap the contents of the loaded viewable.",
            "methods": ["getRelativeMatrix", "setRelativeMatrix"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "{string",
            "type": "undefined",
            "optional": false,
            "description": "sId An optional ID for the {@link sap.ui.vtm.Viewable}."
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "An optional object with initial settings for the new {@link sap.ui.vtm.Viewable} instance"
          }
        ],
        "description": "Constructor for a new Viewable.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.vtm.Viewable with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.vtm.Viewable."
        },
        {
          "name": "getName",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>name</code>"
          },
          "description": "Gets current value of property {@link #getName name}.\n\nThe name for this Viewable."
        },
        {
          "name": "getRelativeMatrix",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Matrix",
            "description": "Value of property <code>relativeMatrix</code>"
          },
          "description": "Gets current value of property {@link #getRelativeMatrix relativeMatrix}.\n\nThe relative transformation matrix to apply to the scene node created to wrap the contents of the loaded viewable."
        },
        {
          "name": "getRootNodeIds",
          "visibility": "public",
          "returnValue": {
            "type": "string[]",
            "description": "Value of property <code>rootNodeIds</code>"
          },
          "description": "Gets current value of property {@link #getRootNodeIds rootNodeIds}.\n\nThe root scene node IDs for this viewable."
        },
        {
          "name": "getSource",
          "visibility": "public",
          "returnValue": {
            "type": "any",
            "description": "Value of property <code>source</code>"
          },
          "description": "Gets current value of property {@link #getSource source}.\n\nThe source URL (string) or File for this Viewable."
        },
        {
          "name": "getSourceId",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "The unique ID that identifies this Viewable."
          },
          "description": "Gets the unique ID that identifies this Viewable. This is an alias for {@link #getId}"
        },
        {
          "name": "getSourceString",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "A string representation of the source."
          },
          "description": "Returns a string representation of the source. If the source is a {@link File} this returns the file name (which is not guaranteed to uniquely identify the file)."
        },
        {
          "name": "setName",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Viewable",
            "description": "<code>this</code> for method chaining."
          },
          "parameters": [
            {
              "name": "name",
              "type": "string",
              "optional": false,
              "description": "The name for this Viewable."
            }
          ],
          "description": "Sets the name for this Viewable."
        },
        {
          "name": "setRelativeMatrix",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Viewable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sRelativeMatrix",
              "type": "sap.ui.vtm.Matrix",
              "optional": false,
              "description": "New value for property <code>relativeMatrix</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getRelativeMatrix relativeMatrix}.\n\nThe relative transformation matrix to apply to the scene node created to wrap the contents of the loaded viewable.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setRootNodeIds",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Viewable",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sRootNodeIds",
              "type": "string[]",
              "optional": false,
              "description": "New value for property <code>rootNodeIds</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getRootNodeIds rootNodeIds}.\n\nThe root scene node IDs for this viewable.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setSource",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Viewable",
            "description": "<code>this</code> for method chaining."
          },
          "parameters": [
            {
              "name": "source",
              "type": "string|File",
              "optional": false,
              "description": "The source URL of File for this Viewable."
            }
          ],
          "description": "Sets the source URL or File for this Viewable."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.vtm.ViewableLoadInfo",
      "basename": "ViewableLoadInfo",
      "resource": "sap/ui/vtm/ViewableLoadInfo.js",
      "module": "sap/ui/vtm/ViewableLoadInfo",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.core.Element",
      "description": "Contains information about the result of an attempt to download/load a viewable.\n\nThe {@link sap.ui.vtm.Scene.downloadCompleted} and {@link sap.ui.vtm.Scene.loadCompleted} events have a <code>results</code> parameter that is passed an array of {@link sap.ui.vtm.ViewableLoadInfo} objects. {@link sap.ui.vtm.Scene#getViewableLoadInfos} also returns a array of {@link sap.ui.vtm.ViewableLoadInfo} objects for all viewables that have been passed into calls to {@link sap.ui.vtm.Scene#loadViewablesAsync}.",
      "experimental": {
        "since": "1.50.0",
        "text": "This class is experimental and might be modified or removed in future versions."
      },
      "ui5-metadata": {
        "stereotype": "element",
        "properties": [
          {
            "name": "viewable",
            "type": "object",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The {@link sap.ui.vtm.Viewable} this {@link sap.ui.vtm.ViewableLoadInfo} relates to.",
            "methods": ["getViewable", "setViewable"]
          },
          {
            "name": "status",
            "type": "sap.ui.vtm.ViewableLoadStatus",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The download/load status of the {@link sap.ui.vtm.Viewable} this {@link sap.ui.vtm.ViewableLoadInfo} relates to.",
            "methods": ["getStatus", "setStatus"]
          },
          {
            "name": "errorCode",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The error code describing why the Viewable failed to load.\n\nUse when {@link #getSucceeded} returns false.",
            "methods": ["getErrorCode", "setErrorCode"]
          },
          {
            "name": "errorText",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The error text describing why the Viewable failed to load. This is an untranslated technical message. Use when {@link #getSucceeded} returns false.",
            "methods": ["getErrorText", "setErrorText"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "description": "This class is not intended to be instantiated directly by application code.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.vtm.ViewableLoadInfo with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
        },
        {
          "name": "getErrorCode",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>errorCode</code>"
          },
          "description": "Gets current value of property {@link #getErrorCode errorCode}.\n\nThe error code describing why the Viewable failed to load.\n\nUse when {@link #getSucceeded} returns false."
        },
        {
          "name": "getErrorText",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>errorText</code>"
          },
          "description": "Gets current value of property {@link #getErrorText errorText}.\n\nThe error text describing why the Viewable failed to load. This is an untranslated technical message. Use when {@link #getSucceeded} returns false."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.vtm.ViewableLoadInfo."
        },
        {
          "name": "getStatus",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.ViewableLoadStatus",
            "description": "Value of property <code>status</code>"
          },
          "description": "Gets current value of property {@link #getStatus status}.\n\nThe download/load status of the {@link sap.ui.vtm.Viewable} this {@link sap.ui.vtm.ViewableLoadInfo} relates to."
        },
        {
          "name": "getViewable",
          "visibility": "public",
          "returnValue": {
            "type": "object",
            "description": "Value of property <code>viewable</code>"
          },
          "description": "Gets current value of property {@link #getViewable viewable}.\n\nThe {@link sap.ui.vtm.Viewable} this {@link sap.ui.vtm.ViewableLoadInfo} relates to."
        },
        {
          "name": "setErrorCode",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.ViewableLoadInfo",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sErrorCode",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>errorCode</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getErrorCode errorCode}.\n\nThe error code describing why the Viewable failed to load.\n\nUse when {@link #getSucceeded} returns false.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setErrorText",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.ViewableLoadInfo",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sErrorText",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>errorText</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getErrorText errorText}.\n\nThe error text describing why the Viewable failed to load. This is an untranslated technical message. Use when {@link #getSucceeded} returns false.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setStatus",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.ViewableLoadInfo",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sStatus",
              "type": "sap.ui.vtm.ViewableLoadStatus",
              "optional": false,
              "description": "New value for property <code>status</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getStatus status}.\n\nThe download/load status of the {@link sap.ui.vtm.Viewable} this {@link sap.ui.vtm.ViewableLoadInfo} relates to.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setViewable",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.ViewableLoadInfo",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oViewable",
              "type": "object",
              "optional": false,
              "description": "New value for property <code>viewable</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getViewable viewable}.\n\nThe {@link sap.ui.vtm.Viewable} this {@link sap.ui.vtm.ViewableLoadInfo} relates to.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.ui.vtm.ViewableLoadStatus",
      "basename": "ViewableLoadStatus",
      "resource": "sap/ui/vtm/ViewableLoadStatus.js",
      "module": "sap/ui/vtm/ViewableLoadStatus",
      "export": "",
      "static": true,
      "visibility": "public",
      "description": "Enumeration specifying the download/load status of a {@link sap.ui.vtm.Viewable}.",
      "experimental": {
        "since": "1.50.0",
        "text": "This type is experimental and might be modified or removed in future versions."
      },
      "ui5-metamodel": true,
      "properties": [
        {
          "name": "Downloaded",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The {@link sap.ui.vtm.Viewable} was downloaded successfully."
        },
        {
          "name": "DownloadFailed",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The attempt to download the {@link sap.ui.vtm.Viewable} failed."
        },
        {
          "name": "Downloading",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The {@link sap.ui.vtm.Viewable} is being downloaded."
        },
        {
          "name": "Loaded",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The {@link sap.ui.vtm.Viewable} was loaded successfully."
        },
        {
          "name": "LoadFailed",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The attempt to load the {@link sap.ui.vtm.Viewable} failed."
        },
        {
          "name": "Loading",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The {@link sap.ui.vtm.Viewable} is being loaded."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.vtm.Viewport",
      "basename": "Viewport",
      "resource": "sap/ui/vtm/Viewport.js",
      "module": "sap/ui/vtm/Viewport",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.core.Control",
      "description": "A control that contains a 3D viewport.",
      "experimental": {
        "since": "1.50.0",
        "text": "This class is experimental and might be modified or removed in future versions."
      },
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "backgroundGradientTopColor",
            "type": "sap.ui.core.CSSColor",
            "defaultValue": "black",
            "group": "Misc",
            "visibility": "public",
            "description": "The background gradient top color.",
            "methods": [
              "getBackgroundGradientTopColor",
              "setBackgroundGradientTopColor"
            ]
          },
          {
            "name": "backgroundGradientBottomColor",
            "type": "sap.ui.core.CSSColor",
            "defaultValue": "white",
            "group": "Misc",
            "visibility": "public",
            "description": "The background gradient bottom color",
            "methods": [
              "getBackgroundGradientBottomColor",
              "setBackgroundGradientBottomColor"
            ]
          },
          {
            "name": "overrideDisplayGroups",
            "type": "object[]",
            "defaultValue": "[]",
            "group": "Misc",
            "visibility": "public",
            "description": "Allows the calculated display state of scene nodes in the viewport o be overridden.\n\nA set of {@link sap.ui.vtm.DisplayGroup} objects that each specify the display state for a set of scene nodes. Precedence is inherent in the array ordering. Any display state specified in this way takes precedence over display states specified for geometry associated with tree items or specified using {@link #contextGroups}. Call {@link #refresh} to recalculate the display state in the viewport after modifying override display groups.",
            "methods": ["getOverrideDisplayGroups", "setOverrideDisplayGroups"]
          },
          {
            "name": "contextDisplayGroups",
            "type": "object[]",
            "defaultValue": "[]",
            "group": "Misc",
            "visibility": "public",
            "description": "Allows the calculated display state for scene nodes whose display state is not determined by tree item associations or override display groups to be specified.\n\nA set of {@link sap.ui.vtm.DisplayGroup} objects objects that describe display states to apply to scene nodes. Precedence is inherent in the array ordering. Call {@link #refresh} to recalculate the display state in the viewport after modifying override display groups.",
            "methods": ["getContextDisplayGroups", "setContextDisplayGroups"]
          }
        ],
        "aggregations": [
          {
            "name": "_container",
            "singularName": "_container",
            "type": "sap.m.VBox",
            "cardinality": "0..1",
            "visibility": "hidden",
            "methods": ["get_container", "destroy_container", "set_container"]
          }
        ],
        "associations": [
          {
            "name": "headerControls",
            "singularName": "headerControl",
            "type": "sap.ui.core.Control",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "A set of controls such as toolbars to appear above the 3D viewport.",
            "methods": [
              "getHeaderControls",
              "addHeaderControl",
              "removeHeaderControl",
              "removeAllHeaderControls"
            ]
          }
        ],
        "events": [
          {
            "name": "selectionChanged",
            "visibility": "public",
            "description": "Raised when the selection is changed due to a click in the viewport (either on a node or in empty space).",
            "parameters": {
              "selectedIds": {
                "name": "selectedIds",
                "type": "string[]",
                "description": "IDs of newly selected nodes."
              },
              "unselectedIds": {
                "name": "unselectedIds",
                "type": "string[]",
                "description": "IDs of newly unselected nodes."
              },
              "userInteraction": {
                "name": "userInteraction",
                "type": "boolean",
                "description": "<code>true</code> if this event is raised as a result of a user clicking in the viewport."
              }
            },
            "methods": [
              "attachSelectionChanged",
              "detachSelectionChanged",
              "fireSelectionChanged"
            ]
          },
          {
            "name": "nodeClicked",
            "visibility": "public",
            "description": "Raised when a node in the viewport is clicked.",
            "methods": [
              "attachNodeClicked",
              "detachNodeClicked",
              "fireNodeClicked"
            ]
          },
          {
            "name": "visibilityChanged",
            "visibility": "public",
            "description": "Raised when the visibility of scene nodes changed in the viewport.",
            "parameters": {
              "visibleIds": {
                "name": "visibleIds",
                "type": "string[]",
                "description": "The IDs of newly shown nodes."
              },
              "hiddenIds": {
                "name": "hiddenIds",
                "type": "string[]",
                "description": "The IDs of newly hidden nodes."
              },
              "userInteraction": {
                "name": "userInteraction",
                "type": "boolean",
                "description": "<code>true</code> if this event is raised as a result of a user clicking in the viewport."
              }
            },
            "methods": [
              "attachVisibilityChanged",
              "detachVisibilityChanged",
              "fireVisibilityChanged"
            ]
          },
          {
            "name": "viewChanged",
            "visibility": "public",
            "description": "Raised when viewport's camera view changed.",
            "parameters": {
              "cameraInfo": {
                "name": "cameraInfo",
                "type": "object",
                "description": "Information about the current camera view. Can be passed to {@link sap.ui.vk.dvl.Viewport#setCameraInfo setCameraInfo}."
              }
            },
            "methods": [
              "attachViewChanged",
              "detachViewChanged",
              "fireViewChanged"
            ]
          },
          {
            "name": "refreshRequested",
            "visibility": "public",
            "description": "Raised when {@link sap.ui.vk.dvl.Viewport#refresh refresh} is called. This event can be used by code that is managing the viewport display state.",
            "methods": [
              "attachRefreshRequested",
              "detachRefreshRequested",
              "fireRefreshRequested"
            ]
          },
          {
            "name": "hover",
            "visibility": "public",
            "description": "Raised on mouse move over viewport.",
            "parameters": {
              "x": {
                "name": "x",
                "type": "float",
                "description": "Mouse X-coordinate within viewport"
              },
              "y": {
                "name": "y",
                "type": "float",
                "description": "Mouse Y-coordinate within viewport"
              },
              "nodeId": {
                "name": "nodeId",
                "type": "string",
                "description": "The ID of the node that is under the viewport coordinates (x, y)."
              }
            },
            "methods": ["attachHover", "detachHover", "fireHover"]
          },
          {
            "name": "beginGesture",
            "visibility": "public",
            "description": "Raised when a gesture begins.",
            "methods": [
              "attachBeginGesture",
              "detachBeginGesture",
              "fireBeginGesture"
            ]
          },
          {
            "name": "endGesture",
            "visibility": "public",
            "description": "Raised when a gesture ends.",
            "methods": [
              "attachEndGesture",
              "detachEndGesture",
              "fireEndGesture"
            ]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "description": "This class is not intended to be instantiated directly by application code. A {@link sap.ui.vtm.Viewport} object is created when a {@link sap.ui.vtm.Panel} object is instantiated.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "beginGesture",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "Raised when a gesture begins."
        },
        {
          "name": "endGesture",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "Raised when a gesture ends."
        },
        {
          "name": "hover",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "x": {
                      "name": "x",
                      "type": "float",
                      "optional": false,
                      "description": "Mouse X-coordinate within viewport"
                    },
                    "y": {
                      "name": "y",
                      "type": "float",
                      "optional": false,
                      "description": "Mouse Y-coordinate within viewport"
                    },
                    "nodeId": {
                      "name": "nodeId",
                      "type": "string",
                      "optional": false,
                      "description": "The ID of the node that is under the viewport coordinates (x, y)."
                    }
                  }
                }
              }
            }
          ],
          "description": "Raised on mouse move over viewport."
        },
        {
          "name": "nodeClicked",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "Raised when a node in the viewport is clicked."
        },
        {
          "name": "refreshRequested",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "Raised when {@link sap.ui.vk.dvl.Viewport#refresh refresh} is called. This event can be used by code that is managing the viewport display state."
        },
        {
          "name": "selectionChanged",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "selectedIds": {
                      "name": "selectedIds",
                      "type": "string[]",
                      "optional": false,
                      "description": "IDs of newly selected nodes."
                    },
                    "unselectedIds": {
                      "name": "unselectedIds",
                      "type": "string[]",
                      "optional": false,
                      "description": "IDs of newly unselected nodes."
                    },
                    "userInteraction": {
                      "name": "userInteraction",
                      "type": "boolean",
                      "optional": false,
                      "description": "<code>true</code> if this event is raised as a result of a user clicking in the viewport."
                    }
                  }
                }
              }
            }
          ],
          "description": "Raised when the selection is changed due to a click in the viewport (either on a node or in empty space)."
        },
        {
          "name": "viewChanged",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "cameraInfo": {
                      "name": "cameraInfo",
                      "type": "object",
                      "optional": false,
                      "description": "Information about the current camera view. Can be passed to {@link sap.ui.vk.dvl.Viewport#setCameraInfo setCameraInfo}."
                    }
                  }
                }
              }
            }
          ],
          "description": "Raised when viewport's camera view changed."
        },
        {
          "name": "visibilityChanged",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "visibleIds": {
                      "name": "visibleIds",
                      "type": "string[]",
                      "optional": false,
                      "description": "The IDs of newly shown nodes."
                    },
                    "hiddenIds": {
                      "name": "hiddenIds",
                      "type": "string[]",
                      "optional": false,
                      "description": "The IDs of newly hidden nodes."
                    },
                    "userInteraction": {
                      "name": "userInteraction",
                      "type": "boolean",
                      "optional": false,
                      "description": "<code>true</code> if this event is raised as a result of a user clicking in the viewport."
                    }
                  }
                }
              }
            }
          ],
          "description": "Raised when the visibility of scene nodes changed in the viewport."
        }
      ],
      "methods": [
        {
          "name": "addContextDisplayGroup",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Viewport",
            "description": "<code>this</code> for method chaining."
          },
          "parameters": [
            {
              "name": "contextDisplayGroup",
              "type": "sap.ui.vtm.DisplayGroup",
              "optional": false,
              "description": "The context display group to add to the <code>contextDisplayGroups</code> property."
            }
          ],
          "description": "Adds an override display group to the <code>overrideDisplayGroups</code> property."
        },
        {
          "name": "addHeaderControl",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Viewport",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "vHeaderControl",
              "type": "sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The headerControls to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some headerControl into the association {@link #getHeaderControls headerControls}."
        },
        {
          "name": "addOverrideDisplayGroup",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Viewport",
            "description": "<code>this</code> for method chaining."
          },
          "parameters": [
            {
              "name": "overrideDisplayGroup",
              "type": "sap.ui.vtm.DisplayGroup",
              "optional": false,
              "description": "The override display group to add to the <code>overrideDisplayGroups</code> property."
            }
          ],
          "description": "Adds an override display group to the <code>overrideDisplayGroups</code> property."
        },
        {
          "name": "attachBeginGesture",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Viewport",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.vtm.Viewport</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:beginGesture beginGesture} event of this <code>sap.ui.vtm.Viewport</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.vtm.Viewport</code> itself.\n\nRaised when a gesture begins."
        },
        {
          "name": "attachEndGesture",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Viewport",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.vtm.Viewport</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:endGesture endGesture} event of this <code>sap.ui.vtm.Viewport</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.vtm.Viewport</code> itself.\n\nRaised when a gesture ends."
        },
        {
          "name": "attachHover",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Viewport",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.vtm.Viewport</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:hover hover} event of this <code>sap.ui.vtm.Viewport</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.vtm.Viewport</code> itself.\n\nRaised on mouse move over viewport."
        },
        {
          "name": "attachNodeClicked",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Viewport",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.vtm.Viewport</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:nodeClicked nodeClicked} event of this <code>sap.ui.vtm.Viewport</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.vtm.Viewport</code> itself.\n\nRaised when a node in the viewport is clicked."
        },
        {
          "name": "attachRefreshRequested",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Viewport",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.vtm.Viewport</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:refreshRequested refreshRequested} event of this <code>sap.ui.vtm.Viewport</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.vtm.Viewport</code> itself.\n\nRaised when {@link sap.ui.vk.dvl.Viewport#refresh refresh} is called. This event can be used by code that is managing the viewport display state."
        },
        {
          "name": "attachSelectionChanged",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Viewport",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.vtm.Viewport</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:selectionChanged selectionChanged} event of this <code>sap.ui.vtm.Viewport</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.vtm.Viewport</code> itself.\n\nRaised when the selection is changed due to a click in the viewport (either on a node or in empty space)."
        },
        {
          "name": "attachViewChanged",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Viewport",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.vtm.Viewport</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:viewChanged viewChanged} event of this <code>sap.ui.vtm.Viewport</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.vtm.Viewport</code> itself.\n\nRaised when viewport's camera view changed."
        },
        {
          "name": "attachVisibilityChanged",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Viewport",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.vtm.Viewport</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:visibilityChanged visibilityChanged} event of this <code>sap.ui.vtm.Viewport</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.vtm.Viewport</code> itself.\n\nRaised when the visibility of scene nodes changed in the viewport."
        },
        {
          "name": "detachBeginGesture",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Viewport",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:beginGesture beginGesture} event of this <code>sap.ui.vtm.Viewport</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachEndGesture",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Viewport",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:endGesture endGesture} event of this <code>sap.ui.vtm.Viewport</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachHover",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Viewport",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:hover hover} event of this <code>sap.ui.vtm.Viewport</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachNodeClicked",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Viewport",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:nodeClicked nodeClicked} event of this <code>sap.ui.vtm.Viewport</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachRefreshRequested",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Viewport",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:refreshRequested refreshRequested} event of this <code>sap.ui.vtm.Viewport</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachSelectionChanged",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Viewport",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:selectionChanged selectionChanged} event of this <code>sap.ui.vtm.Viewport</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachViewChanged",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Viewport",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:viewChanged viewChanged} event of this <code>sap.ui.vtm.Viewport</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachVisibilityChanged",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Viewport",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:visibilityChanged visibilityChanged} event of this <code>sap.ui.vtm.Viewport</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.vtm.Viewport with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "fireBeginGesture",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.vtm.Viewport",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:beginGesture beginGesture} to attached listeners."
        },
        {
          "name": "fireEndGesture",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.vtm.Viewport",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:endGesture endGesture} to attached listeners."
        },
        {
          "name": "fireHover",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.vtm.Viewport",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "x": {
                  "name": "x",
                  "type": "float",
                  "optional": true,
                  "description": "Mouse X-coordinate within viewport"
                },
                "y": {
                  "name": "y",
                  "type": "float",
                  "optional": true,
                  "description": "Mouse Y-coordinate within viewport"
                },
                "nodeId": {
                  "name": "nodeId",
                  "type": "string",
                  "optional": true,
                  "description": "The ID of the node that is under the viewport coordinates (x, y)."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:hover hover} to attached listeners."
        },
        {
          "name": "fireNodeClicked",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.vtm.Viewport",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:nodeClicked nodeClicked} to attached listeners."
        },
        {
          "name": "fireRefreshRequested",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.vtm.Viewport",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:refreshRequested refreshRequested} to attached listeners."
        },
        {
          "name": "fireSelectionChanged",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.vtm.Viewport",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "selectedIds": {
                  "name": "selectedIds",
                  "type": "string[]",
                  "optional": true,
                  "description": "IDs of newly selected nodes."
                },
                "unselectedIds": {
                  "name": "unselectedIds",
                  "type": "string[]",
                  "optional": true,
                  "description": "IDs of newly unselected nodes."
                },
                "userInteraction": {
                  "name": "userInteraction",
                  "type": "boolean",
                  "optional": true,
                  "description": "<code>true</code> if this event is raised as a result of a user clicking in the viewport."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:selectionChanged selectionChanged} to attached listeners."
        },
        {
          "name": "fireViewChanged",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.vtm.Viewport",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "cameraInfo": {
                  "name": "cameraInfo",
                  "type": "object",
                  "optional": true,
                  "description": "Information about the current camera view. Can be passed to {@link sap.ui.vk.dvl.Viewport#setCameraInfo setCameraInfo}."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:viewChanged viewChanged} to attached listeners."
        },
        {
          "name": "fireVisibilityChanged",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.vtm.Viewport",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "visibleIds": {
                  "name": "visibleIds",
                  "type": "string[]",
                  "optional": true,
                  "description": "The IDs of newly shown nodes."
                },
                "hiddenIds": {
                  "name": "hiddenIds",
                  "type": "string[]",
                  "optional": true,
                  "description": "The IDs of newly hidden nodes."
                },
                "userInteraction": {
                  "name": "userInteraction",
                  "type": "boolean",
                  "optional": true,
                  "description": "<code>true</code> if this event is raised as a result of a user clicking in the viewport."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:visibilityChanged visibilityChanged} to attached listeners."
        },
        {
          "name": "getBackgroundGradientBottomColor",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.CSSColor",
            "description": "Value of property <code>backgroundGradientBottomColor</code>"
          },
          "description": "Gets current value of property {@link #getBackgroundGradientBottomColor backgroundGradientBottomColor}.\n\nThe background gradient bottom color\n\nDefault value is <code>white</code>."
        },
        {
          "name": "getBackgroundGradientTopColor",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.CSSColor",
            "description": "Value of property <code>backgroundGradientTopColor</code>"
          },
          "description": "Gets current value of property {@link #getBackgroundGradientTopColor backgroundGradientTopColor}.\n\nThe background gradient top color.\n\nDefault value is <code>black</code>."
        },
        {
          "name": "getCameraInfo",
          "visibility": "public",
          "returnValue": {
            "type": "object",
            "description": "An object containing the current camera information for this viewport."
          },
          "description": "Retrieves an object containing the current camera information for this viewport.\n\nThis value can then be passed to {@link sap.ui.vtm.Viewport#setCameraInfo setCameraInfo} to restore the camera position at a later point in time."
        },
        {
          "name": "getContextDisplayGroups",
          "visibility": "public",
          "returnValue": {
            "type": "object[]",
            "description": "Value of property <code>contextDisplayGroups</code>"
          },
          "description": "Gets current value of property {@link #getContextDisplayGroups contextDisplayGroups}.\n\nAllows the calculated display state for scene nodes whose display state is not determined by tree item associations or override display groups to be specified.\n\nA set of {@link sap.ui.vtm.DisplayGroup} objects objects that describe display states to apply to scene nodes. Precedence is inherent in the array ordering. Call {@link #refresh} to recalculate the display state in the viewport after modifying override display groups.\n\nDefault value is <code>[]</code>."
        },
        {
          "name": "getHeaderControls",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.ID[]" },
          "description": "Returns array of IDs of the elements which are the current targets of the association {@link #getHeaderControls headerControls}."
        },
        {
          "name": "getHighlightColor",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.CSSColor|sap.ui.core.CSSColor[]",
            "description": "The highlight colors for the relevant scene nodes. The"
          },
          "parameters": [
            {
              "name": "sceneNodeIds",
              "type": "string|string[]",
              "optional": false,
              "description": "A scene node ID or an array of scene node IDs."
            }
          ],
          "description": "Gets the highlight colors for a set of scene nodes in this viewport."
        },
        {
          "name": "getInitialized",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Whether the {@link sap.ui.vtm.Viewport} has been initialized."
          },
          "description": "Returns whether the {@link sap.ui.vtm.Viewport} has been initialized."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.vtm.Viewport."
        },
        {
          "name": "getOpacity",
          "visibility": "public",
          "returnValue": {
            "type": "number|number[]",
            "description": "The opacity states for the relevant scene nodes."
          },
          "parameters": [
            {
              "name": "sceneNodeIds",
              "type": "string|string[]",
              "optional": false,
              "description": "A scene node ID or an array of scene node IDs."
            }
          ],
          "description": "Gets the opacity for a set of scene nodes in this viewport. Opacity is specified as a floating point value in the interval [0,1]."
        },
        {
          "name": "getOverrideDisplayGroups",
          "visibility": "public",
          "returnValue": {
            "type": "object[]",
            "description": "Value of property <code>overrideDisplayGroups</code>"
          },
          "description": "Gets current value of property {@link #getOverrideDisplayGroups overrideDisplayGroups}.\n\nAllows the calculated display state of scene nodes in the viewport o be overridden.\n\nA set of {@link sap.ui.vtm.DisplayGroup} objects that each specify the display state for a set of scene nodes. Precedence is inherent in the array ordering. Any display state specified in this way takes precedence over display states specified for geometry associated with tree items or specified using {@link #contextGroups}. Call {@link #refresh} to recalculate the display state in the viewport after modifying override display groups.\n\nDefault value is <code>[]</code>."
        },
        {
          "name": "getPanel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Panel",
            "description": "The panel this viewport belongs to."
          },
          "description": "Gets the panel this viewport belongs to."
        },
        {
          "name": "getScene",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Scene",
            "description": "The sap.ui.vtm.Scene used by this Viewport."
          },
          "description": "Gets the {@link sap.ui.vtm.Scene} used by this {@link sap.ui.vtm.Viewport}."
        },
        {
          "name": "getSelected",
          "visibility": "public",
          "returnValue": {
            "type": "boolean|boolean[]",
            "description": "The selection states for the relevant scene nodes."
          },
          "parameters": [
            {
              "name": "sceneNodeIds",
              "type": "string|string[]",
              "optional": false,
              "description": "A scene node ID or an array of scene node IDs."
            }
          ],
          "description": "Gets the selection state for a set of scene nodes in this viewport."
        },
        {
          "name": "getSelectedIds",
          "visibility": "public",
          "returnValue": {
            "type": "string[]",
            "description": "The IDs of the scene nodes that are selected in this viewport."
          },
          "description": "Gets the IDs of the scene nodes that are selected in this viewport."
        },
        {
          "name": "getVisibility",
          "visibility": "public",
          "returnValue": {
            "type": "boolean|boolean[]",
            "description": "The visibility states for the relevant scene nodes."
          },
          "parameters": [
            {
              "name": "sceneNodeIds",
              "type": "string|string[]",
              "optional": false,
              "description": "A scene node ID or an array of scene node IDs."
            }
          ],
          "description": "Gets the visibility state for a set of scene nodes in this viewport."
        },
        {
          "name": "refresh",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Viewport",
            "description": "<code>this</code> for method chaining."
          },
          "description": "Fires a <code>refreshRequested</code> event."
        },
        {
          "name": "removeAllHeaderControls",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.ID[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls in the association named {@link #getHeaderControls headerControls}."
        },
        {
          "name": "removeHeaderControl",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.ID",
            "description": "The removed headerControl or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vHeaderControl",
              "type": "int|sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The headerControl to be removed or its index or ID"
            }
          ],
          "description": "Removes an headerControl from the association named {@link #getHeaderControls headerControls}."
        },
        {
          "name": "setBackgroundGradientBottomColor",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Viewport",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sBackgroundGradientBottomColor",
              "type": "sap.ui.core.CSSColor",
              "optional": false,
              "description": "New value for property <code>backgroundGradientBottomColor</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getBackgroundGradientBottomColor backgroundGradientBottomColor}.\n\nThe background gradient bottom color\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>white</code>."
        },
        {
          "name": "setBackgroundGradientTopColor",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Viewport",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sBackgroundGradientTopColor",
              "type": "sap.ui.core.CSSColor",
              "optional": false,
              "description": "New value for property <code>backgroundGradientTopColor</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getBackgroundGradientTopColor backgroundGradientTopColor}.\n\nThe background gradient top color.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>black</code>."
        },
        {
          "name": "setCameraInfo",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Viewport",
            "description": "A reference to <code>this</code> to allow method chaining."
          },
          "parameters": [
            {
              "name": "cameraInfo",
              "type": "object",
              "optional": false,
              "description": "An object containing camera information returned by {@link sap.ui.vtm.Viewport#getCameraInfo getCameraInfo}."
            },
            {
              "name": "flyToDuration",
              "type": "float",
              "optional": false,
              "description": "A duration in seconds for the transition to the new camera position. Defaults to 0."
            }
          ],
          "description": "Updates the camera for this viewport."
        },
        {
          "name": "setContextDisplayGroups",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Viewport",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sContextDisplayGroups",
              "type": "object[]",
              "optional": false,
              "description": "New value for property <code>contextDisplayGroups</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getContextDisplayGroups contextDisplayGroups}.\n\nAllows the calculated display state for scene nodes whose display state is not determined by tree item associations or override display groups to be specified.\n\nA set of {@link sap.ui.vtm.DisplayGroup} objects objects that describe display states to apply to scene nodes. Precedence is inherent in the array ordering. Call {@link #refresh} to recalculate the display state in the viewport after modifying override display groups.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>[]</code>."
        },
        {
          "name": "setHighlightColor",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Viewport",
            "description": "<code>this</code> for method chaining."
          },
          "parameters": [
            {
              "name": "sceneNodeIds",
              "type": "string|string[]",
              "optional": false,
              "description": "A scene node ID or an array of scene node IDs."
            },
            {
              "name": "color",
              "type": "sap.ui.core.CSSColor|null",
              "optional": false,
              "description": "The highlight color to apply to the relevant scene nodes. If null, the highlight color is removed.<br/> The alpha component of the color controls the blending ratio between the highlight color and the geometry color."
            },
            {
              "name": "recursive",
              "type": "boolean",
              "optional": false,
              "description": "If true the specified highlight color will be applied to the descendants of the specified scene nodes."
            }
          ],
          "description": "Sets the highlight color for a set of scene nodes in this viewport.\n\nThis method should not be called by application code when an extension implementing {@link sap.ui.vtm.interfaces.IDisplayStateCalculationExtension} is being used. In that case the extension implementing {@link sap.ui.vtm.interfaces.IDisplayStateCalculationExtension} should perform all management of scene node visibility in the viewports."
        },
        {
          "name": "setOpacity",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Viewport",
            "description": "<code>this</code> for method chaining."
          },
          "parameters": [
            {
              "name": "sceneNodeIds",
              "type": "string|string[]",
              "optional": false,
              "description": "A scene node ID or an array of scene node IDs."
            },
            {
              "name": "opacity",
              "type": "number",
              "optional": false,
              "description": "The opacity state to apply to the relevant scene nodes."
            },
            {
              "name": "recursive",
              "type": "boolean",
              "optional": false,
              "description": "If true the specified opacity state will be applied to the descendants of the specified scene nodes."
            }
          ],
          "description": "Sets the opacity for a set of scene nodes in this viewport. Opacity is specified as a floating point value in the interval [0,1].\n\nThis method should not be called by application code when an extension implementing {@link sap.ui.vtm.interfaces.IDisplayStateCalculationExtension} is being used. In that case the extension implementing {@link sap.ui.vtm.interfaces.IDisplayStateCalculationExtension} should perform all management of scene node visibility in the viewports."
        },
        {
          "name": "setOverrideDisplayGroups",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Viewport",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sOverrideDisplayGroups",
              "type": "object[]",
              "optional": false,
              "description": "New value for property <code>overrideDisplayGroups</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getOverrideDisplayGroups overrideDisplayGroups}.\n\nAllows the calculated display state of scene nodes in the viewport o be overridden.\n\nA set of {@link sap.ui.vtm.DisplayGroup} objects that each specify the display state for a set of scene nodes. Precedence is inherent in the array ordering. Any display state specified in this way takes precedence over display states specified for geometry associated with tree items or specified using {@link #contextGroups}. Call {@link #refresh} to recalculate the display state in the viewport after modifying override display groups.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>[]</code>."
        },
        {
          "name": "setPredefinedView",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Viewport",
            "description": "<code>this</code> for method chaining."
          },
          "parameters": [
            {
              "name": "view",
              "type": "sap.ui.vtm.PredefinedView",
              "optional": false,
              "description": "The predefined view to apply."
            }
          ],
          "description": "Sets the view in the current viewport to one of the predefined views."
        },
        {
          "name": "setSelected",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Viewport",
            "description": "<code>this</code> for method chaining."
          },
          "parameters": [
            {
              "name": "sceneNodeIds",
              "type": "string|string[]",
              "optional": false,
              "description": "A scene node ID or an array of scene node IDs."
            },
            {
              "name": "selected",
              "type": "boolean",
              "optional": false,
              "description": "The new selection state of the nodes."
            },
            {
              "name": "recursive",
              "type": "boolean",
              "optional": false,
              "description": "The flags indicates if the change needs to propagate recursively to child nodes."
            }
          ],
          "description": "Sets the selection state for a set of scene nodes in this viewport.\n\nThis method should not be called by application code when an extension implementing {@link sap.ui.vtm.interfaces.IViewportSelectionLinkingExtension} is being used. In that case the extension implementing {@link sap.ui.vtm.interfaces.IViewportSelectionLinkingExtension} should perform all management of scene node selection in the viewports."
        },
        {
          "name": "setVisibility",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Viewport",
            "description": "<code>this</code> for method chaining."
          },
          "parameters": [
            {
              "name": "sceneNodeIds",
              "type": "string|string[]",
              "optional": false,
              "description": "A scene node ID or an array of scene node IDs."
            },
            {
              "name": "visibility",
              "type": "boolean",
              "optional": false,
              "description": "The visibility state to apply to the relevant scene nodes."
            },
            {
              "name": "recursive",
              "type": "boolean",
              "optional": false,
              "description": "If true the specified visibility state will be applied to the descendants of the specified scene nodes."
            }
          ],
          "description": "Sets the visibility state for a set of scene nodes in this viewport.\n\nThis method should not be called by application code when an extension implementing {@link sap.ui.vtm.interfaces.IDisplayStateCalculationExtension} is being used. In that case the extension implementing {@link sap.ui.vtm.interfaces.IDisplayStateCalculationExtension} should perform all management of scene node visibility in the viewports."
        },
        {
          "name": "zoomToAll",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Viewport",
            "description": "Returns <code>this</code> for method chaining."
          },
          "parameters": [
            {
              "name": "durationInSeconds",
              "type": "number",
              "optional": false,
              "description": "The duration of the zoom animation in seconds."
            }
          ],
          "description": "Zooms to a view in the current viewport that can fit all geometry in the scene (visible or not)."
        },
        {
          "name": "zoomToFit",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Viewport",
            "description": "Returns <code>this</code> for method chaining."
          },
          "parameters": [
            {
              "name": "durationInSeconds",
              "type": "number",
              "optional": false,
              "description": "The duration of the zoom animation in seconds."
            }
          ],
          "description": "Calls {@link sap.ui.vtm.Viewport#zoomToSelected zoomToSelected} if any geometry is selected in this viewport, otherwise calls {@link sap.ui.vtm.Viewport#zoomToAll zoomToAll}."
        },
        {
          "name": "zoomToSelected",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Viewport",
            "description": "Returns <code>this</code> for method chaining."
          },
          "parameters": [
            {
              "name": "durationInSeconds",
              "type": "number",
              "optional": false,
              "description": "The duration of the zoom animation in seconds."
            }
          ],
          "description": "Zooms to the set of geometry that is selected in the current viewport. If no geometry is selected, no action is taken."
        },
        {
          "name": "zoomToVisible",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Viewport",
            "description": "Returns <code>this</code> for method chaining."
          },
          "parameters": [
            {
              "name": "durationInSeconds",
              "type": "number",
              "optional": false,
              "description": "The duration of the zoom animation in seconds."
            }
          ],
          "description": "Zooms to the set of geometry that is visible in the current viewport. If no geometry is visible, this zooms to all geometry in the current viewport."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.vtm.Vtm",
      "basename": "Vtm",
      "resource": "sap/ui/vtm/Vtm.js",
      "module": "sap/ui/vtm/Vtm",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.core.Element",
      "description": "The main entry point for constructing VTM controls.",
      "experimental": {
        "since": "1.50.0",
        "text": "This class is experimental and might be modified or removed in future versions."
      },
      "ui5-metadata": {
        "stereotype": "element",
        "properties": [
          {
            "name": "addDefaultExtensions",
            "type": "boolean",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "When true populates the <code>extensions</code> aggregation with the default set of extensions in the default configuration.",
            "methods": ["getAddDefaultExtensions", "setAddDefaultExtensions"]
          }
        ],
        "aggregations": [
          {
            "name": "extensions",
            "singularName": "extension",
            "type": "sap.ui.vtm.Extension",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "The set of VTM extensions. Extensions are used to provide extensibility. Default behaviors are implemented as extensions that can be replaced.",
            "methods": [
              "getExtensions",
              "destroyExtensions",
              "insertExtension",
              "addExtension",
              "removeExtension",
              "indexOfExtension",
              "removeAllExtensions"
            ]
          }
        ],
        "defaultAggregation": "extensions",
        "events": [
          {
            "name": "panelAdded",
            "visibility": "public",
            "description": "Raised when a panel has been added.",
            "parameters": {
              "panel": { "name": "panel", "type": "sap.ui.vtm.Panel" }
            },
            "methods": [
              "attachPanelAdded",
              "detachPanelAdded",
              "firePanelAdded"
            ]
          },
          {
            "name": "activePanelChanged",
            "visibility": "public",
            "description": "Raised when the active panel has changed.",
            "methods": [
              "attachActivePanelChanged",
              "detachActivePanelChanged",
              "fireActivePanelChanged"
            ]
          },
          {
            "name": "initialized",
            "visibility": "public",
            "description": "Raised when this {@link sap.ui.vtm.Vtm} instance and its extensions have been initialized.\n\nApplications should add event handlers after the {@link sap.ui.vtm.Vtm} instance has initialized so that the extensions can attach event handlers before the application attempts to attach event handlers to the same events.",
            "methods": [
              "attachInitialized",
              "detachInitialized",
              "fireInitialized"
            ]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": false,
            "description": "The id to use for the {@link sap.ui.vtm.Vtm} instance."
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": false,
            "description": "A set of settings for the {@link sap.ui.vtm.Vtm} instance (normally used to populate the <code>extensions</code> aggregation)."
          }
        ],
        "description": "Constructor for a new Vtm. This constructor can be used to construct an instance of {@link sap.ui.vtm.Vtm} with a specific set of extensions. Alternatively {@link sap.ui.vtm.createVtm} can be used to create a {@link sap.ui.vtm.Vtm} instance with a default set of extensions.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "activePanelChanged",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "Raised when the active panel has changed."
        },
        {
          "name": "initialized",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "Raised when this {@link sap.ui.vtm.Vtm} instance and its extensions have been initialized.\n\nApplications should add event handlers after the {@link sap.ui.vtm.Vtm} instance has initialized so that the extensions can attach event handlers before the application attempts to attach event handlers to the same events."
        },
        {
          "name": "panelAdded",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "panel": {
                      "name": "panel",
                      "type": "sap.ui.vtm.Panel",
                      "optional": false
                    }
                  }
                }
              }
            }
          ],
          "description": "Raised when a panel has been added."
        }
      ],
      "methods": [
        {
          "name": "addExtension",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Vtm",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oExtension",
              "type": "sap.ui.vtm.Extension",
              "optional": false,
              "description": "The extension to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some extension to the aggregation {@link #getExtensions extensions}."
        },
        {
          "name": "attachActivePanelChanged",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Vtm",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.vtm.Vtm</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:activePanelChanged activePanelChanged} event of this <code>sap.ui.vtm.Vtm</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.vtm.Vtm</code> itself.\n\nRaised when the active panel has changed."
        },
        {
          "name": "attachInitialized",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Vtm",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.vtm.Vtm</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:initialized initialized} event of this <code>sap.ui.vtm.Vtm</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.vtm.Vtm</code> itself.\n\nRaised when this {@link sap.ui.vtm.Vtm} instance and its extensions have been initialized.\n\nApplications should add event handlers after the {@link sap.ui.vtm.Vtm} instance has initialized so that the extensions can attach event handlers before the application attempts to attach event handlers to the same events."
        },
        {
          "name": "attachPanelAdded",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Vtm",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.vtm.Vtm</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:panelAdded panelAdded} event of this <code>sap.ui.vtm.Vtm</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.vtm.Vtm</code> itself.\n\nRaised when a panel has been added."
        },
        {
          "name": "createPanel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Panel",
            "description": "The created panel."
          },
          "parameters": [
            {
              "name": "sId",
              "type": "string",
              "optional": false,
              "description": "The ID to pass to the panel constructor."
            },
            {
              "name": "mSettings",
              "type": "object",
              "optional": false,
              "description": "The settings to pass to the panel constructor."
            }
          ],
          "description": "Creates a VTM panel associated with this {@link sap.ui.vtm.Vtm} instance."
        },
        {
          "name": "destroyExtensions",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Vtm",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the extensions in the aggregation {@link #getExtensions extensions}."
        },
        {
          "name": "detachActivePanelChanged",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Vtm",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:activePanelChanged activePanelChanged} event of this <code>sap.ui.vtm.Vtm</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachInitialized",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Vtm",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:initialized initialized} event of this <code>sap.ui.vtm.Vtm</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachPanelAdded",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Vtm",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:panelAdded panelAdded} event of this <code>sap.ui.vtm.Vtm</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.vtm.Vtm with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
        },
        {
          "name": "fireActivePanelChanged",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.vtm.Vtm",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:activePanelChanged activePanelChanged} to attached listeners."
        },
        {
          "name": "fireInitialized",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.vtm.Vtm",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:initialized initialized} to attached listeners."
        },
        {
          "name": "firePanelAdded",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.vtm.Vtm",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "panel": {
                  "name": "panel",
                  "type": "sap.ui.vtm.Panel",
                  "optional": true
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:panelAdded panelAdded} to attached listeners."
        },
        {
          "name": "getActivePanel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Panel|null",
            "description": "The active panel, or null if there is no active panel."
          },
          "description": "Gets the active panel."
        },
        {
          "name": "getAddDefaultExtensions",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>addDefaultExtensions</code>"
          },
          "description": "Gets current value of property {@link #getAddDefaultExtensions addDefaultExtensions}.\n\nWhen true populates the <code>extensions</code> aggregation with the default set of extensions in the default configuration."
        },
        {
          "name": "getExtensionByInterface",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Extension|undefined",
            "description": "The matching extension or <code>undefined</code> if there is not exactly one matching extension."
          },
          "parameters": [
            {
              "name": "sInterfaceName",
              "type": "string",
              "optional": false,
              "description": "The fully qualified name of the interface."
            }
          ],
          "description": "Gets the extension implementing a specified interface.\n\nReturns <code>undefined</code> if there is not exactly one matching extension."
        },
        {
          "name": "getExtensionByName",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Extension|undefined",
            "description": "The matching extension or <code>undefined</code> if there is not exactly one matching extension."
          },
          "parameters": [
            {
              "name": "sExtensionName",
              "type": "string",
              "optional": false,
              "description": "The fully qualified class name of the extension."
            }
          ],
          "description": "Gets an extension with a specified class name.\n\nReturns <code>undefined</code> if there is not exactly one matching extension."
        },
        {
          "name": "getExtensions",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.vtm.Extension[]" },
          "description": "Gets content of aggregation {@link #getExtensions extensions}.\n\nThe set of VTM extensions. Extensions are used to provide extensibility. Default behaviors are implemented as extensions that can be replaced."
        },
        {
          "name": "getExtensionsByInterface",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Extension[]",
            "description": "The matching extensions."
          },
          "parameters": [
            {
              "name": "sInterfaceName",
              "type": "string",
              "optional": false,
              "description": "The fully qualified name of the interface."
            }
          ],
          "description": "Gets the extensions implementing a specified interface."
        },
        {
          "name": "getExtensionsByName",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Extension[]",
            "description": "The matching extensions."
          },
          "parameters": [
            {
              "name": "sExtensionName",
              "type": "string",
              "optional": false,
              "description": "The fully qualified class name of the extension."
            }
          ],
          "description": "Gets the extensions with a specified class name."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.vtm.Vtm."
        },
        {
          "name": "getPanel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Panel|undefined",
            "description": "The matching panel or undefined if no match is found."
          },
          "parameters": [
            {
              "name": "panelId",
              "type": "string",
              "optional": false,
              "description": "The id of the panel to find."
            }
          ],
          "description": "Gets a panel given its id. Returns undefined if no match is found."
        },
        {
          "name": "getPanels",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Panel[]",
            "description": "The created panels."
          },
          "description": "Gets the set of created panels. Do not modify the returned array."
        },
        {
          "name": "getScene",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Scene",
            "description": "The scene."
          },
          "description": "Gets the scene."
        },
        {
          "name": "indexOfExtension",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oExtension",
              "type": "sap.ui.vtm.Extension",
              "optional": false,
              "description": "The extension whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.ui.vtm.Extension</code> in the aggregation {@link #getExtensions extensions}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "insertExtension",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Vtm",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oExtension",
              "type": "sap.ui.vtm.Extension",
              "optional": false,
              "description": "The extension to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the extension should be inserted at; for a negative value of <code>iIndex</code>, the extension is inserted at position 0; for a value greater than the current size of the aggregation, the extension is inserted at the last position"
            }
          ],
          "description": "Inserts a extension into the aggregation {@link #getExtensions extensions}."
        },
        {
          "name": "removeAllExtensions",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Extension[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getExtensions extensions}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeExtension",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Extension",
            "description": "The removed extension or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vExtension",
              "type": "int|string|sap.ui.vtm.Extension",
              "optional": false,
              "description": "The extension to remove or its index or id"
            }
          ],
          "description": "Removes a extension from the aggregation {@link #getExtensions extensions}."
        },
        {
          "name": "setActivePanel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Vtm",
            "description": "A reference to <code>this</code> for method chaining."
          },
          "parameters": [
            {
              "name": "oActivePanel",
              "type": "sap.ui.vtm.Panel",
              "optional": false,
              "description": "The active panel."
            }
          ],
          "description": "Sets the active panel."
        },
        {
          "name": "setAddDefaultExtensions",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.vtm.Vtm",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bAddDefaultExtensions",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>addDefaultExtensions</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getAddDefaultExtensions addDefaultExtensions}.\n\nWhen true populates the <code>extensions</code> aggregation with the default set of extensions in the default configuration.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        }
      ]
    }
  ]
}
