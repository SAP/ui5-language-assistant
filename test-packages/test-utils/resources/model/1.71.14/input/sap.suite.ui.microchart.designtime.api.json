{
  "$schema-ref": "http://schemas.sap.com/sapui5/designtime/api.json/1.0",
  "version": "1.71.12",
  "library": "sap.suite.ui.microchart",
  "symbols": [
    {
      "kind": "namespace",
      "name": "sap.suite.ui.microchart",
      "basename": "microchart",
      "resource": "sap/suite/ui/microchart/library.js",
      "module": "sap/suite/ui/microchart/library",
      "export": "",
      "static": true,
      "visibility": "public",
      "description": "UI5 library: sap.suite.ui.microchart."
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.microchart.AreaMicroChart",
      "basename": "AreaMicroChart",
      "resource": "sap/suite/ui/microchart/AreaMicroChart.js",
      "module": "sap/suite/ui/microchart/AreaMicroChart",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.34",
      "extends": "sap.ui.core.Control",
      "description": "<br>Note: You can assign a custom tooltip for this microchart. The custom tooltip can be set using expression binding. When no custom tooltip is defined, the tooltip is generated automatically based on the logic described in {@link sap.ui.core.Element#getTooltip_AsString}. For a combination of a generated and a custom tooltip, use <code>((AltText))</code> inside of the tooltip string. The aggregated data of the microchart can also be customized.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "size",
            "type": "sap.m.Size",
            "defaultValue": "Auto",
            "group": "Misc",
            "visibility": "public",
            "description": "The size of the microchart. If not set, the default size is applied based on the size of the device tile. Responsive size takes width and height of the parent container where the bullet micro chart is included.",
            "methods": ["getSize", "setSize"]
          },
          {
            "name": "width",
            "type": "sap.ui.core.CSSSize",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The width of the chart. Overrides the width specified in the <code>size</code> property.",
            "methods": ["getWidth", "setWidth"]
          },
          {
            "name": "height",
            "type": "sap.ui.core.CSSSize",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The height of the chart. Overrides the height specified in the <code>size</code> property.",
            "methods": ["getHeight", "setHeight"]
          },
          {
            "name": "maxXValue",
            "type": "float",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "If this property is set, it indicates the value the X-axis ends with.",
            "methods": ["getMaxXValue", "setMaxXValue"]
          },
          {
            "name": "minXValue",
            "type": "float",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "If this property is set it indicates the value X axis ends with.",
            "methods": ["getMinXValue", "setMinXValue"]
          },
          {
            "name": "maxYValue",
            "type": "float",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "If this property is set it indicates the value X axis ends with.",
            "methods": ["getMaxYValue", "setMaxYValue"]
          },
          {
            "name": "minYValue",
            "type": "float",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "If this property is set it indicates the value X axis ends with.",
            "methods": ["getMinYValue", "setMinYValue"]
          },
          {
            "name": "view",
            "type": "sap.suite.ui.microchart.AreaMicroChartViewType",
            "defaultValue": "Normal",
            "group": "Appearance",
            "visibility": "public",
            "description": "The view of the chart.",
            "methods": ["getView", "setView"]
          },
          {
            "name": "colorPalette",
            "type": "string[]",
            "defaultValue": "[]",
            "group": "Appearance",
            "visibility": "public",
            "description": "The color palette for the chart. If this property is set, semantic colors defined in AreaMicroChartItem are ignored. As a result, colors of the palette are assigned to each line. When all the palette colors are used up, assignment of the colors starts again from the beginning of the palette.",
            "methods": ["getColorPalette", "setColorPalette"]
          },
          {
            "name": "showLabel",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "description": "Determines if the labels are displayed or not.",
            "methods": ["getShowLabel", "setShowLabel"]
          },
          {
            "name": "isResponsive",
            "type": "boolean",
            "defaultValue": false,
            "group": "Appearance",
            "visibility": "public",
            "since": "1.38.0",
            "description": "If this set to true, width and height of the control are determined by the width and height of the container in which the control is placed or by the width and height property.",
            "deprecated": { "since": "1.60" },
            "methods": ["getIsResponsive", "setIsResponsive"]
          }
        ],
        "aggregations": [
          {
            "name": "chart",
            "singularName": "chart",
            "type": "sap.suite.ui.microchart.AreaMicroChartItem",
            "cardinality": "0..1",
            "visibility": "public",
            "bindable": true,
            "description": "The configuration of the actual values line. The color property defines the color of the line. Points are rendered in the same sequence as in this aggregation.",
            "methods": [
              "getChart",
              "destroyChart",
              "setChart",
              "bindChart",
              "unbindChart"
            ]
          },
          {
            "name": "maxThreshold",
            "singularName": "maxThreshold",
            "type": "sap.suite.ui.microchart.AreaMicroChartItem",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "The configuration of the max threshold area. The color property defines the color of the area above the max threshold line. Points are rendered in the same sequence as in this aggregation.",
            "methods": [
              "getMaxThreshold",
              "destroyMaxThreshold",
              "setMaxThreshold"
            ]
          },
          {
            "name": "innerMaxThreshold",
            "singularName": "innerMaxThreshold",
            "type": "sap.suite.ui.microchart.AreaMicroChartItem",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "The configuration of the upper line of the inner threshold area. The color property defines the color of the area between inner thresholds. For rendering of the inner threshold area, both innerMaxThreshold and innerMinThreshold aggregations must be defined. Points are rendered in the same sequence as in this aggregation.",
            "methods": [
              "getInnerMaxThreshold",
              "destroyInnerMaxThreshold",
              "setInnerMaxThreshold"
            ]
          },
          {
            "name": "innerMinThreshold",
            "singularName": "innerMinThreshold",
            "type": "sap.suite.ui.microchart.AreaMicroChartItem",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "The configuration of the bottom line of the inner threshold area. The color property is ignored. For rendering of the inner threshold area, both innerMaxThreshold and innerMinThreshold aggregations must be defined. Points are rendered in the same sequence as in this aggregation.",
            "methods": [
              "getInnerMinThreshold",
              "destroyInnerMinThreshold",
              "setInnerMinThreshold"
            ]
          },
          {
            "name": "minThreshold",
            "singularName": "minThreshold",
            "type": "sap.suite.ui.microchart.AreaMicroChartItem",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "The configuration of the min threshold area. The color property defines the color of the area below the min threshold line. Points are rendered in the same sequence as in this aggregation.",
            "methods": [
              "getMinThreshold",
              "destroyMinThreshold",
              "setMinThreshold"
            ]
          },
          {
            "name": "target",
            "singularName": "target",
            "type": "sap.suite.ui.microchart.AreaMicroChartItem",
            "cardinality": "0..1",
            "visibility": "public",
            "bindable": true,
            "description": "The configuration of the target values line. The color property defines the color of the line. Points are rendered in the same sequence as in this aggregation.",
            "methods": [
              "getTarget",
              "destroyTarget",
              "setTarget",
              "bindTarget",
              "unbindTarget"
            ]
          },
          {
            "name": "firstXLabel",
            "singularName": "firstXLabel",
            "type": "sap.suite.ui.microchart.AreaMicroChartLabel",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "The label on X axis for the first point of the chart.",
            "methods": [
              "getFirstXLabel",
              "destroyFirstXLabel",
              "setFirstXLabel"
            ]
          },
          {
            "name": "firstYLabel",
            "singularName": "firstYLabel",
            "type": "sap.suite.ui.microchart.AreaMicroChartLabel",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "The label on Y axis for the first point of the chart.",
            "methods": [
              "getFirstYLabel",
              "destroyFirstYLabel",
              "setFirstYLabel"
            ]
          },
          {
            "name": "lastXLabel",
            "singularName": "lastXLabel",
            "type": "sap.suite.ui.microchart.AreaMicroChartLabel",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "The label on X axis for the last point of the chart.",
            "methods": ["getLastXLabel", "destroyLastXLabel", "setLastXLabel"]
          },
          {
            "name": "lastYLabel",
            "singularName": "lastYLabel",
            "type": "sap.suite.ui.microchart.AreaMicroChartLabel",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "The label on Y axis for the last point of the chart.",
            "methods": ["getLastYLabel", "destroyLastYLabel", "setLastYLabel"]
          },
          {
            "name": "maxLabel",
            "singularName": "maxLabel",
            "type": "sap.suite.ui.microchart.AreaMicroChartLabel",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "The label for the maximum point of the chart.",
            "methods": ["getMaxLabel", "destroyMaxLabel", "setMaxLabel"]
          },
          {
            "name": "minLabel",
            "singularName": "minLabel",
            "type": "sap.suite.ui.microchart.AreaMicroChartLabel",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "The label for the minimum point of the chart.",
            "methods": ["getMinLabel", "destroyMinLabel", "setMinLabel"]
          },
          {
            "name": "lines",
            "singularName": "line",
            "type": "sap.suite.ui.microchart.AreaMicroChartItem",
            "cardinality": "0..n",
            "visibility": "public",
            "bindable": true,
            "description": "The set of lines.",
            "methods": [
              "getLines",
              "destroyLines",
              "insertLine",
              "addLine",
              "removeLine",
              "indexOfLine",
              "removeAllLines",
              "bindLines",
              "unbindLines"
            ]
          }
        ],
        "defaultAggregation": "lines",
        "associations": [
          {
            "name": "ariaLabelledBy",
            "singularName": "ariaLabelledBy",
            "type": "sap.ui.core.Control",
            "cardinality": "0..n",
            "visibility": "public",
            "since": "1.60.0",
            "description": "Controls or IDs that label this control. Can be used by screen reader software.",
            "methods": [
              "getAriaLabelledBy",
              "addAriaLabelledBy",
              "removeAriaLabelledBy",
              "removeAllAriaLabelledBy"
            ]
          }
        ],
        "events": [
          {
            "name": "press",
            "visibility": "public",
            "description": "The event is triggered when the chart is pressed.",
            "methods": ["attachPress", "detachPress", "firePress"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new AreaMicroChart control.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "press",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "The event is triggered when the chart is pressed."
        }
      ],
      "methods": [
        {
          "name": "addAriaLabelledBy",
          "visibility": "public",
          "since": "1.60.0",
          "returnValue": {
            "type": "sap.suite.ui.microchart.AreaMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "vAriaLabelledBy",
              "type": "sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaLabelledBy to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "addLine",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.AreaMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oLine",
              "type": "sap.suite.ui.microchart.AreaMicroChartItem",
              "optional": false,
              "description": "The line to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some line to the aggregation {@link #getLines lines}."
        },
        {
          "name": "attachPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.AreaMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.microchart.AreaMicroChart</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:press press} event of this <code>sap.suite.ui.microchart.AreaMicroChart</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.microchart.AreaMicroChart</code> itself.\n\nThe event is triggered when the chart is pressed."
        },
        {
          "name": "bindChart",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.AreaMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oBindingInfo",
              "type": "object",
              "optional": false,
              "description": "The binding information"
            }
          ],
          "description": "Binds aggregation {@link #getChart chart} to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a detailed description of the possible properties of <code>oBindingInfo</code>."
        },
        {
          "name": "bindLines",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.AreaMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oBindingInfo",
              "type": "object",
              "optional": false,
              "description": "The binding information"
            }
          ],
          "description": "Binds aggregation {@link #getLines lines} to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a detailed description of the possible properties of <code>oBindingInfo</code>."
        },
        {
          "name": "bindTarget",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.AreaMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oBindingInfo",
              "type": "object",
              "optional": false,
              "description": "The binding information"
            }
          ],
          "description": "Binds aggregation {@link #getTarget target} to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a detailed description of the possible properties of <code>oBindingInfo</code>."
        },
        {
          "name": "destroyChart",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.AreaMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the chart in the aggregation {@link #getChart chart}."
        },
        {
          "name": "destroyFirstXLabel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.AreaMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the firstXLabel in the aggregation {@link #getFirstXLabel firstXLabel}."
        },
        {
          "name": "destroyFirstYLabel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.AreaMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the firstYLabel in the aggregation {@link #getFirstYLabel firstYLabel}."
        },
        {
          "name": "destroyInnerMaxThreshold",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.AreaMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the innerMaxThreshold in the aggregation {@link #getInnerMaxThreshold innerMaxThreshold}."
        },
        {
          "name": "destroyInnerMinThreshold",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.AreaMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the innerMinThreshold in the aggregation {@link #getInnerMinThreshold innerMinThreshold}."
        },
        {
          "name": "destroyLastXLabel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.AreaMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the lastXLabel in the aggregation {@link #getLastXLabel lastXLabel}."
        },
        {
          "name": "destroyLastYLabel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.AreaMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the lastYLabel in the aggregation {@link #getLastYLabel lastYLabel}."
        },
        {
          "name": "destroyLines",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.AreaMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the lines in the aggregation {@link #getLines lines}."
        },
        {
          "name": "destroyMaxLabel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.AreaMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the maxLabel in the aggregation {@link #getMaxLabel maxLabel}."
        },
        {
          "name": "destroyMaxThreshold",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.AreaMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the maxThreshold in the aggregation {@link #getMaxThreshold maxThreshold}."
        },
        {
          "name": "destroyMinLabel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.AreaMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the minLabel in the aggregation {@link #getMinLabel minLabel}."
        },
        {
          "name": "destroyMinThreshold",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.AreaMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the minThreshold in the aggregation {@link #getMinThreshold minThreshold}."
        },
        {
          "name": "destroyTarget",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.AreaMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the target in the aggregation {@link #getTarget target}."
        },
        {
          "name": "detachPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.AreaMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:press press} event of this <code>sap.suite.ui.microchart.AreaMicroChart</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "enableXIndexing",
          "visibility": "protected",
          "parameters": [
            {
              "name": "useIndex",
              "type": "boolean",
              "optional": false,
              "description": "Flag to activate automatic index"
            }
          ],
          "description": "Enables x-values of all points are automatically indexed with numeric, equidistant values."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.microchart.AreaMicroChart with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "firePress",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.microchart.AreaMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:press press} to attached listeners."
        },
        {
          "name": "getAriaLabelledBy",
          "visibility": "public",
          "since": "1.60.0",
          "returnValue": { "type": "sap.ui.core.ID[]" },
          "description": "Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "getChart",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.AreaMicroChartItem"
          },
          "description": "Gets content of aggregation {@link #getChart chart}.\n\nThe configuration of the actual values line. The color property defines the color of the line. Points are rendered in the same sequence as in this aggregation."
        },
        {
          "name": "getColorPalette",
          "visibility": "public",
          "returnValue": {
            "type": "string[]",
            "description": "Value of property <code>colorPalette</code>"
          },
          "description": "Gets current value of property {@link #getColorPalette colorPalette}.\n\nThe color palette for the chart. If this property is set, semantic colors defined in AreaMicroChartItem are ignored. As a result, colors of the palette are assigned to each line. When all the palette colors are used up, assignment of the colors starts again from the beginning of the palette.\n\nDefault value is <code>[]</code>."
        },
        {
          "name": "getFirstXLabel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.AreaMicroChartLabel"
          },
          "description": "Gets content of aggregation {@link #getFirstXLabel firstXLabel}.\n\nThe label on X axis for the first point of the chart."
        },
        {
          "name": "getFirstYLabel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.AreaMicroChartLabel"
          },
          "description": "Gets content of aggregation {@link #getFirstYLabel firstYLabel}.\n\nThe label on Y axis for the first point of the chart."
        },
        {
          "name": "getHeight",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.CSSSize",
            "description": "Value of property <code>height</code>"
          },
          "description": "Gets current value of property {@link #getHeight height}.\n\nThe height of the chart. Overrides the height specified in the <code>size</code> property."
        },
        {
          "name": "getInnerMaxThreshold",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.AreaMicroChartItem"
          },
          "description": "Gets content of aggregation {@link #getInnerMaxThreshold innerMaxThreshold}.\n\nThe configuration of the upper line of the inner threshold area. The color property defines the color of the area between inner thresholds. For rendering of the inner threshold area, both innerMaxThreshold and innerMinThreshold aggregations must be defined. Points are rendered in the same sequence as in this aggregation."
        },
        {
          "name": "getInnerMinThreshold",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.AreaMicroChartItem"
          },
          "description": "Gets content of aggregation {@link #getInnerMinThreshold innerMinThreshold}.\n\nThe configuration of the bottom line of the inner threshold area. The color property is ignored. For rendering of the inner threshold area, both innerMaxThreshold and innerMinThreshold aggregations must be defined. Points are rendered in the same sequence as in this aggregation."
        },
        {
          "name": "getIsResponsive",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>isResponsive</code>"
          },
          "description": "Gets current value of property {@link #getIsResponsive isResponsive}.\n\nIf this set to true, width and height of the control are determined by the width and height of the container in which the control is placed or by the width and height property.\n\nDefault value is <code>false</code>.",
          "deprecated": { "since": "1.60" }
        },
        {
          "name": "getLastXLabel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.AreaMicroChartLabel"
          },
          "description": "Gets content of aggregation {@link #getLastXLabel lastXLabel}.\n\nThe label on X axis for the last point of the chart."
        },
        {
          "name": "getLastYLabel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.AreaMicroChartLabel"
          },
          "description": "Gets content of aggregation {@link #getLastYLabel lastYLabel}.\n\nThe label on Y axis for the last point of the chart."
        },
        {
          "name": "getLines",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.AreaMicroChartItem[]"
          },
          "description": "Gets content of aggregation {@link #getLines lines}.\n\nThe set of lines."
        },
        {
          "name": "getMaxLabel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.AreaMicroChartLabel"
          },
          "description": "Gets content of aggregation {@link #getMaxLabel maxLabel}.\n\nThe label for the maximum point of the chart."
        },
        {
          "name": "getMaxThreshold",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.AreaMicroChartItem"
          },
          "description": "Gets content of aggregation {@link #getMaxThreshold maxThreshold}.\n\nThe configuration of the max threshold area. The color property defines the color of the area above the max threshold line. Points are rendered in the same sequence as in this aggregation."
        },
        {
          "name": "getMaxXValue",
          "visibility": "public",
          "returnValue": {
            "type": "float",
            "description": "Value of property <code>maxXValue</code>"
          },
          "description": "Gets current value of property {@link #getMaxXValue maxXValue}.\n\nIf this property is set, it indicates the value the X-axis ends with."
        },
        {
          "name": "getMaxYValue",
          "visibility": "public",
          "returnValue": {
            "type": "float",
            "description": "Value of property <code>maxYValue</code>"
          },
          "description": "Gets current value of property {@link #getMaxYValue maxYValue}.\n\nIf this property is set it indicates the value X axis ends with."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.microchart.AreaMicroChart."
        },
        {
          "name": "getMinLabel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.AreaMicroChartLabel"
          },
          "description": "Gets content of aggregation {@link #getMinLabel minLabel}.\n\nThe label for the minimum point of the chart."
        },
        {
          "name": "getMinThreshold",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.AreaMicroChartItem"
          },
          "description": "Gets content of aggregation {@link #getMinThreshold minThreshold}.\n\nThe configuration of the min threshold area. The color property defines the color of the area below the min threshold line. Points are rendered in the same sequence as in this aggregation."
        },
        {
          "name": "getMinXValue",
          "visibility": "public",
          "returnValue": {
            "type": "float",
            "description": "Value of property <code>minXValue</code>"
          },
          "description": "Gets current value of property {@link #getMinXValue minXValue}.\n\nIf this property is set it indicates the value X axis ends with."
        },
        {
          "name": "getMinYValue",
          "visibility": "public",
          "returnValue": {
            "type": "float",
            "description": "Value of property <code>minYValue</code>"
          },
          "description": "Gets current value of property {@link #getMinYValue minYValue}.\n\nIf this property is set it indicates the value X axis ends with."
        },
        {
          "name": "getShowLabel",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showLabel</code>"
          },
          "description": "Gets current value of property {@link #getShowLabel showLabel}.\n\nDetermines if the labels are displayed or not.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getSize",
          "visibility": "public",
          "returnValue": {
            "type": "sap.m.Size",
            "description": "Value of property <code>size</code>"
          },
          "description": "Gets current value of property {@link #getSize size}.\n\nThe size of the microchart. If not set, the default size is applied based on the size of the device tile. Responsive size takes width and height of the parent container where the bullet micro chart is included.\n\nDefault value is <code>Auto</code>."
        },
        {
          "name": "getTarget",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.AreaMicroChartItem"
          },
          "description": "Gets content of aggregation {@link #getTarget target}.\n\nThe configuration of the target values line. The color property defines the color of the line. Points are rendered in the same sequence as in this aggregation."
        },
        {
          "name": "getView",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.AreaMicroChartViewType",
            "description": "Value of property <code>view</code>"
          },
          "description": "Gets current value of property {@link #getView view}.\n\nThe view of the chart.\n\nDefault value is <code>Normal</code>."
        },
        {
          "name": "getWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.CSSSize",
            "description": "Value of property <code>width</code>"
          },
          "description": "Gets current value of property {@link #getWidth width}.\n\nThe width of the chart. Overrides the width specified in the <code>size</code> property."
        },
        {
          "name": "indexOfLine",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oLine",
              "type": "sap.suite.ui.microchart.AreaMicroChartItem",
              "optional": false,
              "description": "The line whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.suite.ui.microchart.AreaMicroChartItem</code> in the aggregation {@link #getLines lines}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "insertLine",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.AreaMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oLine",
              "type": "sap.suite.ui.microchart.AreaMicroChartItem",
              "optional": false,
              "description": "The line to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the line should be inserted at; for a negative value of <code>iIndex</code>, the line is inserted at position 0; for a value greater than the current size of the aggregation, the line is inserted at the last position"
            }
          ],
          "description": "Inserts a line into the aggregation {@link #getLines lines}."
        },
        {
          "name": "removeAllAriaLabelledBy",
          "visibility": "public",
          "since": "1.60.0",
          "returnValue": {
            "type": "sap.ui.core.ID[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "removeAllLines",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.AreaMicroChartItem[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getLines lines}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeAriaLabelledBy",
          "visibility": "public",
          "since": "1.60.0",
          "returnValue": {
            "type": "sap.ui.core.ID",
            "description": "The removed ariaLabelledBy or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vAriaLabelledBy",
              "type": "int|sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaLabelledBy to be removed or its index or ID"
            }
          ],
          "description": "Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "removeLine",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.AreaMicroChartItem",
            "description": "The removed line or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vLine",
              "type": "int|string|sap.suite.ui.microchart.AreaMicroChartItem",
              "optional": false,
              "description": "The line to remove or its index or id"
            }
          ],
          "description": "Removes a line from the aggregation {@link #getLines lines}."
        },
        {
          "name": "setChart",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.AreaMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oChart",
              "type": "sap.suite.ui.microchart.AreaMicroChartItem",
              "optional": false,
              "description": "The chart to set"
            }
          ],
          "description": "Sets the aggregated {@link #getChart chart}."
        },
        {
          "name": "setColorPalette",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.AreaMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sColorPalette",
              "type": "string[]",
              "optional": false,
              "description": "New value for property <code>colorPalette</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getColorPalette colorPalette}.\n\nThe color palette for the chart. If this property is set, semantic colors defined in AreaMicroChartItem are ignored. As a result, colors of the palette are assigned to each line. When all the palette colors are used up, assignment of the colors starts again from the beginning of the palette.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>[]</code>."
        },
        {
          "name": "setFirstXLabel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.AreaMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oFirstXLabel",
              "type": "sap.suite.ui.microchart.AreaMicroChartLabel",
              "optional": false,
              "description": "The firstXLabel to set"
            }
          ],
          "description": "Sets the aggregated {@link #getFirstXLabel firstXLabel}."
        },
        {
          "name": "setFirstYLabel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.AreaMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oFirstYLabel",
              "type": "sap.suite.ui.microchart.AreaMicroChartLabel",
              "optional": false,
              "description": "The firstYLabel to set"
            }
          ],
          "description": "Sets the aggregated {@link #getFirstYLabel firstYLabel}."
        },
        {
          "name": "setHeight",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.AreaMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sHeight",
              "type": "sap.ui.core.CSSSize",
              "optional": false,
              "description": "New value for property <code>height</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getHeight height}.\n\nThe height of the chart. Overrides the height specified in the <code>size</code> property.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setInnerMaxThreshold",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.AreaMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oInnerMaxThreshold",
              "type": "sap.suite.ui.microchart.AreaMicroChartItem",
              "optional": false,
              "description": "The innerMaxThreshold to set"
            }
          ],
          "description": "Sets the aggregated {@link #getInnerMaxThreshold innerMaxThreshold}."
        },
        {
          "name": "setInnerMinThreshold",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.AreaMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oInnerMinThreshold",
              "type": "sap.suite.ui.microchart.AreaMicroChartItem",
              "optional": false,
              "description": "The innerMinThreshold to set"
            }
          ],
          "description": "Sets the aggregated {@link #getInnerMinThreshold innerMinThreshold}."
        },
        {
          "name": "setIsResponsive",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": {
            "type": "sap.suite.ui.microchart.AreaMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bIsResponsive",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>isResponsive</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getIsResponsive isResponsive}.\n\nIf this set to true, width and height of the control are determined by the width and height of the container in which the control is placed or by the width and height property.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>.",
          "deprecated": { "since": "1.60" }
        },
        {
          "name": "setLastXLabel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.AreaMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oLastXLabel",
              "type": "sap.suite.ui.microchart.AreaMicroChartLabel",
              "optional": false,
              "description": "The lastXLabel to set"
            }
          ],
          "description": "Sets the aggregated {@link #getLastXLabel lastXLabel}."
        },
        {
          "name": "setLastYLabel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.AreaMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oLastYLabel",
              "type": "sap.suite.ui.microchart.AreaMicroChartLabel",
              "optional": false,
              "description": "The lastYLabel to set"
            }
          ],
          "description": "Sets the aggregated {@link #getLastYLabel lastYLabel}."
        },
        {
          "name": "setMaxLabel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.AreaMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oMaxLabel",
              "type": "sap.suite.ui.microchart.AreaMicroChartLabel",
              "optional": false,
              "description": "The maxLabel to set"
            }
          ],
          "description": "Sets the aggregated {@link #getMaxLabel maxLabel}."
        },
        {
          "name": "setMaxThreshold",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.AreaMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oMaxThreshold",
              "type": "sap.suite.ui.microchart.AreaMicroChartItem",
              "optional": false,
              "description": "The maxThreshold to set"
            }
          ],
          "description": "Sets the aggregated {@link #getMaxThreshold maxThreshold}."
        },
        {
          "name": "setMaxXValue",
          "visibility": "public",
          "parameters": [
            {
              "name": "value",
              "type": "float",
              "optional": false,
              "description": "new value Max X"
            },
            {
              "name": "bSuppressInvalidate",
              "type": "boolean",
              "optional": false,
              "description": "Suppress in validate"
            }
          ],
          "description": "Property setter for the Max X value"
        },
        {
          "name": "setMaxYValue",
          "visibility": "public",
          "parameters": [
            {
              "name": "value",
              "type": "float",
              "optional": false,
              "description": "new value Max Y"
            },
            {
              "name": "bSuppressInvalidate",
              "type": "boolean",
              "optional": false,
              "description": "Suppress in validate"
            }
          ],
          "description": "Property setter for the Max Y value"
        },
        {
          "name": "setMinLabel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.AreaMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oMinLabel",
              "type": "sap.suite.ui.microchart.AreaMicroChartLabel",
              "optional": false,
              "description": "The minLabel to set"
            }
          ],
          "description": "Sets the aggregated {@link #getMinLabel minLabel}."
        },
        {
          "name": "setMinThreshold",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.AreaMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oMinThreshold",
              "type": "sap.suite.ui.microchart.AreaMicroChartItem",
              "optional": false,
              "description": "The minThreshold to set"
            }
          ],
          "description": "Sets the aggregated {@link #getMinThreshold minThreshold}."
        },
        {
          "name": "setMinXValue",
          "visibility": "public",
          "parameters": [
            {
              "name": "value",
              "type": "float",
              "optional": false,
              "description": "new value Min X"
            },
            {
              "name": "bSuppressInvalidate",
              "type": "boolean",
              "optional": false,
              "description": "Suppress in validate"
            }
          ],
          "description": "Property setter for the Min X value"
        },
        {
          "name": "setMinYValue",
          "visibility": "public",
          "parameters": [
            {
              "name": "value",
              "type": "float",
              "optional": false,
              "description": "new value Min Y"
            },
            {
              "name": "bSuppressInvalidate",
              "type": "boolean",
              "optional": false,
              "description": "Suppress in validate"
            }
          ],
          "description": "Property setter for the Min Y value"
        },
        {
          "name": "setShowLabel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.AreaMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowLabel",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showLabel</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowLabel showLabel}.\n\nDetermines if the labels are displayed or not.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setSize",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.AreaMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sSize",
              "type": "sap.m.Size",
              "optional": false,
              "description": "New value for property <code>size</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSize size}.\n\nThe size of the microchart. If not set, the default size is applied based on the size of the device tile. Responsive size takes width and height of the parent container where the bullet micro chart is included.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Auto</code>."
        },
        {
          "name": "setTarget",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.AreaMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oTarget",
              "type": "sap.suite.ui.microchart.AreaMicroChartItem",
              "optional": false,
              "description": "The target to set"
            }
          ],
          "description": "Sets the aggregated {@link #getTarget target}."
        },
        {
          "name": "setView",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.AreaMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sView",
              "type": "sap.suite.ui.microchart.AreaMicroChartViewType",
              "optional": false,
              "description": "New value for property <code>view</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getView view}.\n\nThe view of the chart.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Normal</code>."
        },
        {
          "name": "setWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.AreaMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sWidth",
              "type": "sap.ui.core.CSSSize",
              "optional": false,
              "description": "New value for property <code>width</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getWidth width}.\n\nThe width of the chart. Overrides the width specified in the <code>size</code> property.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "unbindChart",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.AreaMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Unbinds aggregation {@link #getChart chart} from model data."
        },
        {
          "name": "unbindLines",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.AreaMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Unbinds aggregation {@link #getLines lines} from model data."
        },
        {
          "name": "unbindTarget",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.AreaMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Unbinds aggregation {@link #getTarget target} from model data."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.microchart.AreaMicroChartItem",
      "basename": "AreaMicroChartItem",
      "resource": "sap/suite/ui/microchart/AreaMicroChartItem.js",
      "module": "sap/suite/ui/microchart/AreaMicroChartItem",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.34",
      "extends": "sap.ui.core.Element",
      "description": "Graphical representation of the area micro chart regarding the value lines, the thresholds, and the target values.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "element",
        "properties": [
          {
            "name": "color",
            "type": "sap.m.ValueCSSColor",
            "defaultValue": "Neutral",
            "group": "Misc",
            "visibility": "public",
            "description": "The graphic element color.",
            "methods": ["getColor", "setColor"]
          },
          {
            "name": "title",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The line title.",
            "methods": ["getTitle", "setTitle"]
          }
        ],
        "aggregations": [
          {
            "name": "points",
            "singularName": "point",
            "type": "sap.suite.ui.microchart.AreaMicroChartPoint",
            "cardinality": "0..n",
            "visibility": "public",
            "bindable": true,
            "description": "The set of points for this graphic element.",
            "methods": [
              "getPoints",
              "destroyPoints",
              "insertPoint",
              "addPoint",
              "removePoint",
              "indexOfPoint",
              "removeAllPoints",
              "bindPoints",
              "unbindPoints"
            ]
          }
        ],
        "defaultAggregation": "points"
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "The configuration of the graphic element on the chart.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "addPoint",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.AreaMicroChartItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oPoint",
              "type": "sap.suite.ui.microchart.AreaMicroChartPoint",
              "optional": false,
              "description": "The point to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some point to the aggregation {@link #getPoints points}."
        },
        {
          "name": "bindPoints",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.AreaMicroChartItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oBindingInfo",
              "type": "object",
              "optional": false,
              "description": "The binding information"
            }
          ],
          "description": "Binds aggregation {@link #getPoints points} to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a detailed description of the possible properties of <code>oBindingInfo</code>."
        },
        {
          "name": "destroyPoints",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.AreaMicroChartItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the points in the aggregation {@link #getPoints points}."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.microchart.AreaMicroChartItem with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
        },
        {
          "name": "getColor",
          "visibility": "public",
          "returnValue": {
            "type": "sap.m.ValueCSSColor",
            "description": "Value of property <code>color</code>"
          },
          "description": "Gets current value of property {@link #getColor color}.\n\nThe graphic element color.\n\nDefault value is <code>Neutral</code>."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.microchart.AreaMicroChartItem."
        },
        {
          "name": "getPoints",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.AreaMicroChartPoint[]"
          },
          "description": "Gets content of aggregation {@link #getPoints points}.\n\nThe set of points for this graphic element."
        },
        {
          "name": "getTitle",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>title</code>"
          },
          "description": "Gets current value of property {@link #getTitle title}.\n\nThe line title."
        },
        {
          "name": "indexOfPoint",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oPoint",
              "type": "sap.suite.ui.microchart.AreaMicroChartPoint",
              "optional": false,
              "description": "The point whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.suite.ui.microchart.AreaMicroChartPoint</code> in the aggregation {@link #getPoints points}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "insertPoint",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.AreaMicroChartItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oPoint",
              "type": "sap.suite.ui.microchart.AreaMicroChartPoint",
              "optional": false,
              "description": "The point to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the point should be inserted at; for a negative value of <code>iIndex</code>, the point is inserted at position 0; for a value greater than the current size of the aggregation, the point is inserted at the last position"
            }
          ],
          "description": "Inserts a point into the aggregation {@link #getPoints points}."
        },
        {
          "name": "removeAllPoints",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.AreaMicroChartPoint[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getPoints points}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removePoint",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.AreaMicroChartPoint",
            "description": "The removed point or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vPoint",
              "type": "int|string|sap.suite.ui.microchart.AreaMicroChartPoint",
              "optional": false,
              "description": "The point to remove or its index or id"
            }
          ],
          "description": "Removes a point from the aggregation {@link #getPoints points}."
        },
        {
          "name": "setColor",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.AreaMicroChartItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sColor",
              "type": "sap.m.ValueCSSColor",
              "optional": false,
              "description": "New value for property <code>color</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getColor color}.\n\nThe graphic element color.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Neutral</code>."
        },
        {
          "name": "setTitle",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.AreaMicroChartItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sTitle",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>title</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getTitle title}.\n\nThe line title.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "unbindPoints",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.AreaMicroChartItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Unbinds aggregation {@link #getPoints points} from model data."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.microchart.AreaMicroChartLabel",
      "basename": "AreaMicroChartLabel",
      "resource": "sap/suite/ui/microchart/AreaMicroChartLabel.js",
      "module": "sap/suite/ui/microchart/AreaMicroChartLabel",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.34",
      "extends": "sap.ui.core.Element",
      "description": "Displays or hides the labels for start and end dates, start and end values, and minimum and maximum values.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "element",
        "properties": [
          {
            "name": "color",
            "type": "sap.m.ValueCSSColor",
            "defaultValue": "Neutral",
            "group": "Misc",
            "visibility": "public",
            "description": "The graphic element color.",
            "methods": ["getColor", "setColor"]
          },
          {
            "name": "label",
            "type": "string",
            "defaultValue": "",
            "group": "Misc",
            "visibility": "public",
            "description": "The line title.",
            "methods": ["getLabel", "setLabel"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new AreaMicroChart control.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.microchart.AreaMicroChartLabel with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
        },
        {
          "name": "getColor",
          "visibility": "public",
          "returnValue": {
            "type": "sap.m.ValueCSSColor",
            "description": "Value of property <code>color</code>"
          },
          "description": "Gets current value of property {@link #getColor color}.\n\nThe graphic element color.\n\nDefault value is <code>Neutral</code>."
        },
        {
          "name": "getLabel",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>label</code>"
          },
          "description": "Gets current value of property {@link #getLabel label}.\n\nThe line title.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.microchart.AreaMicroChartLabel."
        },
        {
          "name": "setColor",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.AreaMicroChartLabel",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sColor",
              "type": "sap.m.ValueCSSColor",
              "optional": false,
              "description": "New value for property <code>color</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getColor color}.\n\nThe graphic element color.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Neutral</code>."
        },
        {
          "name": "setLabel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.AreaMicroChartLabel",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sLabel",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>label</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getLabel label}.\n\nThe line title.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>empty string</code>."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.microchart.AreaMicroChartPoint",
      "basename": "AreaMicroChartPoint",
      "resource": "sap/suite/ui/microchart/AreaMicroChartPoint.js",
      "module": "sap/suite/ui/microchart/AreaMicroChartPoint",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.34",
      "extends": "sap.ui.core.Element",
      "description": "Contains the data for the point.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "element",
        "properties": [
          {
            "name": "x",
            "type": "float",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "X value for the given point.",
            "methods": ["getX", "setX"]
          },
          {
            "name": "y",
            "type": "float",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Y value for the given point.",
            "methods": ["getY", "setY"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "This control contains data for the point.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.microchart.AreaMicroChartPoint with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.microchart.AreaMicroChartPoint."
        },
        {
          "name": "getX",
          "visibility": "public",
          "returnValue": {
            "type": "float",
            "description": "Value of property <code>x</code>"
          },
          "description": "Gets current value of property {@link #getX x}.\n\nX value for the given point."
        },
        {
          "name": "getXValue",
          "visibility": "public",
          "returnValue": {
            "type": "float",
            "description": "The x-value, or undefined if the value set was invalid"
          },
          "description": "Returns the x value. It returns 'undefined', if the x property was not set or an invalid number was set."
        },
        {
          "name": "getY",
          "visibility": "public",
          "returnValue": {
            "type": "float",
            "description": "Value of property <code>y</code>"
          },
          "description": "Gets current value of property {@link #getY y}.\n\nY value for the given point."
        },
        {
          "name": "getYValue",
          "visibility": "public",
          "returnValue": {
            "type": "float",
            "description": "The y-value, or undefined if the value set was invalid"
          },
          "description": "Returns the y value. It returns 'undefined', if the y property was not set or an invalid number was set."
        },
        {
          "name": "setX",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.AreaMicroChartPoint",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fX",
              "type": "float",
              "optional": false,
              "description": "New value for property <code>x</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getX x}.\n\nX value for the given point.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setY",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.AreaMicroChartPoint",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fY",
              "type": "float",
              "optional": false,
              "description": "New value for property <code>y</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getY y}.\n\nY value for the given point.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.suite.ui.microchart.AreaMicroChartViewType",
      "basename": "AreaMicroChartViewType",
      "resource": "sap/suite/ui/microchart/library.js",
      "module": "sap/suite/ui/microchart/library",
      "export": "AreaMicroChartViewType",
      "static": true,
      "visibility": "public",
      "since": "1.34",
      "description": "Enum of available views for the area micro chart concerning the position of the labels.",
      "ui5-metamodel": true,
      "properties": [
        {
          "name": "Normal",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The view with labels on the top and bottom."
        },
        {
          "name": "Wide",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The view with labels on the left and right."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.microchart.BulletMicroChart",
      "basename": "BulletMicroChart",
      "resource": "sap/suite/ui/microchart/BulletMicroChart.js",
      "module": "sap/suite/ui/microchart/BulletMicroChart",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.34",
      "extends": "sap.ui.core.Control",
      "description": "Displays a colored horizontal bar representing a current value on top of a background bar representing the compared value. The vertical bars can represent the numeric values, the scaling factors, the thresholds, and the target values. This control replaces the deprecated sap.suite.ui.commons.BulletChart. <br>Note: You can assign a custom tooltip for this microchart. The custom tooltip can be set using expression binding. When no custom tooltip is defined, the tooltip is generated automatically based on the logic described in {@link sap.ui.core.Element#getTooltip_AsString}. For a combination of a generated and a custom tooltip, use <code>((AltText))</code> inside of the tooltip string. The aggregated data of the microchart can also be customized.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "size",
            "type": "sap.m.Size",
            "defaultValue": "Auto",
            "group": "Misc",
            "visibility": "public",
            "description": "The size of the microchart. If not set, the default size is applied based on the size of the device tile. Responsive size takes width and height of the parent container where the bullet micro chart is included.",
            "methods": ["getSize", "setSize"]
          },
          {
            "name": "mode",
            "type": "sap.suite.ui.microchart.BulletMicroChartModeType",
            "defaultValue": "Actual",
            "group": "Misc",
            "visibility": "public",
            "description": "The mode of displaying the actual value itself or the delta between the actual value and the target value. If not set, the actual value is displayed.",
            "methods": ["getMode", "setMode"]
          },
          {
            "name": "scale",
            "type": "string",
            "defaultValue": "",
            "group": "Misc",
            "visibility": "public",
            "description": "The scaling suffix that is added to all values.",
            "methods": ["getScale", "setScale"]
          },
          {
            "name": "forecastValue",
            "type": "float",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The forecast value that is displayed in Actual mode only. If set, the forecast value bar appears in the background of the actual value bar.",
            "methods": ["getForecastValue", "setForecastValue"]
          },
          {
            "name": "targetValue",
            "type": "float",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The target value that is displayed as a black vertical bar.",
            "methods": ["getTargetValue", "setTargetValue"]
          },
          {
            "name": "minValue",
            "type": "float",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The minimum scale value for the bar chart used for defining a fixed size of the scale in different instances of this control.",
            "methods": ["getMinValue", "setMinValue"]
          },
          {
            "name": "maxValue",
            "type": "float",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The maximum scale value for the bar chart used for defining a fixed size of the scale in different instances of this control.",
            "methods": ["getMaxValue", "setMaxValue"]
          },
          {
            "name": "showActualValue",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "description": "If set to true, shows the numeric actual value. This property works in Actual mode only.",
            "methods": ["getShowActualValue", "setShowActualValue"]
          },
          {
            "name": "showDeltaValue",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "description": "If set to true, shows the calculated delta value instead of the numeric actual value regardless of the showActualValue setting. This property works in Delta mode only.",
            "methods": ["getShowDeltaValue", "setShowDeltaValue"]
          },
          {
            "name": "showActualValueInDeltaMode",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "description": "If set to true, shows the numeric actual value and possibly hides the delta value, if showDeltaValue is set to true. This property works in Delta mode only and has priority over showDeltaValue.",
            "methods": [
              "getShowActualValueInDeltaMode",
              "setShowActualValueInDeltaMode"
            ]
          },
          {
            "name": "showTargetValue",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "description": "If set to true, shows the numeric target value.",
            "methods": ["getShowTargetValue", "setShowTargetValue"]
          },
          {
            "name": "showValueMarker",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "description": "If set to true, shows the value marker.",
            "methods": ["getShowValueMarker", "setShowValueMarker"]
          },
          {
            "name": "showThresholds",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "description": "If set to true, shows the threshold markers.",
            "methods": ["getShowThresholds", "setShowThresholds"]
          },
          {
            "name": "actualValueLabel",
            "type": "string",
            "defaultValue": "",
            "group": "Misc",
            "visibility": "public",
            "description": "If set, displays a specified label instead of the numeric actual value.",
            "methods": ["getActualValueLabel", "setActualValueLabel"]
          },
          {
            "name": "deltaValueLabel",
            "type": "string",
            "defaultValue": "",
            "group": "Misc",
            "visibility": "public",
            "description": "If set, displays a specified label instead of the calculated numeric delta value.",
            "methods": ["getDeltaValueLabel", "setDeltaValueLabel"]
          },
          {
            "name": "targetValueLabel",
            "type": "string",
            "defaultValue": "",
            "group": "Misc",
            "visibility": "public",
            "description": "If set, displays a specified label instead of the numeric target value.",
            "methods": ["getTargetValueLabel", "setTargetValueLabel"]
          },
          {
            "name": "width",
            "type": "sap.ui.core.CSSSize",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The width of the chart. Overrides the width specified in the <code>size</code> property.",
            "methods": ["getWidth", "setWidth"]
          },
          {
            "name": "height",
            "type": "sap.ui.core.CSSSize",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The height of the chart. Overrides the height specified in the <code>size</code> property.",
            "methods": ["getHeight", "setHeight"]
          },
          {
            "name": "scaleColor",
            "type": "sap.suite.ui.microchart.CommonBackgroundType",
            "defaultValue": "MediumLight",
            "group": "Misc",
            "visibility": "public",
            "description": "The background color of the scale. The theming is enabled only for the default value of this property.",
            "methods": ["getScaleColor", "setScaleColor"]
          },
          {
            "name": "isResponsive",
            "type": "boolean",
            "defaultValue": false,
            "group": "Appearance",
            "visibility": "public",
            "since": "1.38.0",
            "description": "If this set to true, width and height of the control are determined by the width and height of the container in which the control is placed or by the width and height property.",
            "deprecated": { "since": "1.58" },
            "methods": ["getIsResponsive", "setIsResponsive"]
          }
        ],
        "aggregations": [
          {
            "name": "actual",
            "singularName": "actual",
            "type": "sap.suite.ui.microchart.BulletMicroChartData",
            "cardinality": "0..1",
            "visibility": "public",
            "bindable": true,
            "description": "Actual data of the BulletMicroChart.",
            "methods": [
              "getActual",
              "destroyActual",
              "setActual",
              "bindActual",
              "unbindActual"
            ]
          },
          {
            "name": "thresholds",
            "singularName": "threshold",
            "type": "sap.suite.ui.microchart.BulletMicroChartData",
            "cardinality": "0..n",
            "visibility": "public",
            "bindable": true,
            "description": "Threshold data of the BulletMicroChart.",
            "methods": [
              "getThresholds",
              "destroyThresholds",
              "insertThreshold",
              "addThreshold",
              "removeThreshold",
              "indexOfThreshold",
              "removeAllThresholds",
              "bindThresholds",
              "unbindThresholds"
            ]
          }
        ],
        "defaultAggregation": "actual",
        "associations": [
          {
            "name": "ariaLabelledBy",
            "singularName": "ariaLabelledBy",
            "type": "sap.ui.core.Control",
            "cardinality": "0..n",
            "visibility": "public",
            "since": "1.60.0",
            "description": "Controls or IDs that label this control. Can be used by screen reader software.",
            "methods": [
              "getAriaLabelledBy",
              "addAriaLabelledBy",
              "removeAriaLabelledBy",
              "removeAllAriaLabelledBy"
            ]
          }
        ],
        "events": [
          {
            "name": "press",
            "visibility": "public",
            "description": "The event is triggered when the chart is pressed.",
            "methods": ["attachPress", "detachPress", "firePress"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new BulletMicroChart control.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "press",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "The event is triggered when the chart is pressed."
        }
      ],
      "methods": [
        {
          "name": "addAriaLabelledBy",
          "visibility": "public",
          "since": "1.60.0",
          "returnValue": {
            "type": "sap.suite.ui.microchart.BulletMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "vAriaLabelledBy",
              "type": "sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaLabelledBy to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "addThreshold",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.BulletMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oThreshold",
              "type": "sap.suite.ui.microchart.BulletMicroChartData",
              "optional": false,
              "description": "The threshold to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some threshold to the aggregation {@link #getThresholds thresholds}."
        },
        {
          "name": "attachPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.BulletMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.microchart.BulletMicroChart</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:press press} event of this <code>sap.suite.ui.microchart.BulletMicroChart</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.microchart.BulletMicroChart</code> itself.\n\nThe event is triggered when the chart is pressed."
        },
        {
          "name": "bindActual",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.BulletMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oBindingInfo",
              "type": "object",
              "optional": false,
              "description": "The binding information"
            }
          ],
          "description": "Binds aggregation {@link #getActual actual} to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a detailed description of the possible properties of <code>oBindingInfo</code>."
        },
        {
          "name": "bindThresholds",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.BulletMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oBindingInfo",
              "type": "object",
              "optional": false,
              "description": "The binding information"
            }
          ],
          "description": "Binds aggregation {@link #getThresholds thresholds} to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a detailed description of the possible properties of <code>oBindingInfo</code>."
        },
        {
          "name": "destroyActual",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.BulletMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the actual in the aggregation {@link #getActual actual}."
        },
        {
          "name": "destroyThresholds",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.BulletMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the thresholds in the aggregation {@link #getThresholds thresholds}."
        },
        {
          "name": "detachPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.BulletMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:press press} event of this <code>sap.suite.ui.microchart.BulletMicroChart</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.microchart.BulletMicroChart with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "firePress",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.microchart.BulletMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:press press} to attached listeners."
        },
        {
          "name": "getActual",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.BulletMicroChartData"
          },
          "description": "Gets content of aggregation {@link #getActual actual}.\n\nActual data of the BulletMicroChart."
        },
        {
          "name": "getActualValueLabel",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>actualValueLabel</code>"
          },
          "description": "Gets current value of property {@link #getActualValueLabel actualValueLabel}.\n\nIf set, displays a specified label instead of the numeric actual value.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "getAriaLabelledBy",
          "visibility": "public",
          "since": "1.60.0",
          "returnValue": { "type": "sap.ui.core.ID[]" },
          "description": "Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "getDeltaValueLabel",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>deltaValueLabel</code>"
          },
          "description": "Gets current value of property {@link #getDeltaValueLabel deltaValueLabel}.\n\nIf set, displays a specified label instead of the calculated numeric delta value.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "getForecastValue",
          "visibility": "public",
          "returnValue": {
            "type": "float",
            "description": "Value of property <code>forecastValue</code>"
          },
          "description": "Gets current value of property {@link #getForecastValue forecastValue}.\n\nThe forecast value that is displayed in Actual mode only. If set, the forecast value bar appears in the background of the actual value bar."
        },
        {
          "name": "getHeight",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.CSSSize",
            "description": "Value of property <code>height</code>"
          },
          "description": "Gets current value of property {@link #getHeight height}.\n\nThe height of the chart. Overrides the height specified in the <code>size</code> property."
        },
        {
          "name": "getIsResponsive",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>isResponsive</code>"
          },
          "description": "Gets current value of property {@link #getIsResponsive isResponsive}.\n\nIf this set to true, width and height of the control are determined by the width and height of the container in which the control is placed or by the width and height property.\n\nDefault value is <code>false</code>.",
          "deprecated": { "since": "1.58" }
        },
        {
          "name": "getMaxValue",
          "visibility": "public",
          "returnValue": {
            "type": "float",
            "description": "Value of property <code>maxValue</code>"
          },
          "description": "Gets current value of property {@link #getMaxValue maxValue}.\n\nThe maximum scale value for the bar chart used for defining a fixed size of the scale in different instances of this control."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.microchart.BulletMicroChart."
        },
        {
          "name": "getMinValue",
          "visibility": "public",
          "returnValue": {
            "type": "float",
            "description": "Value of property <code>minValue</code>"
          },
          "description": "Gets current value of property {@link #getMinValue minValue}.\n\nThe minimum scale value for the bar chart used for defining a fixed size of the scale in different instances of this control."
        },
        {
          "name": "getMode",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.BulletMicroChartModeType",
            "description": "Value of property <code>mode</code>"
          },
          "description": "Gets current value of property {@link #getMode mode}.\n\nThe mode of displaying the actual value itself or the delta between the actual value and the target value. If not set, the actual value is displayed.\n\nDefault value is <code>Actual</code>."
        },
        {
          "name": "getScale",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>scale</code>"
          },
          "description": "Gets current value of property {@link #getScale scale}.\n\nThe scaling suffix that is added to all values.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "getScaleColor",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.CommonBackgroundType",
            "description": "Value of property <code>scaleColor</code>"
          },
          "description": "Gets current value of property {@link #getScaleColor scaleColor}.\n\nThe background color of the scale. The theming is enabled only for the default value of this property.\n\nDefault value is <code>MediumLight</code>."
        },
        {
          "name": "getShowActualValue",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showActualValue</code>"
          },
          "description": "Gets current value of property {@link #getShowActualValue showActualValue}.\n\nIf set to true, shows the numeric actual value. This property works in Actual mode only.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getShowActualValueInDeltaMode",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showActualValueInDeltaMode</code>"
          },
          "description": "Gets current value of property {@link #getShowActualValueInDeltaMode showActualValueInDeltaMode}.\n\nIf set to true, shows the numeric actual value and possibly hides the delta value, if showDeltaValue is set to true. This property works in Delta mode only and has priority over showDeltaValue.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getShowDeltaValue",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showDeltaValue</code>"
          },
          "description": "Gets current value of property {@link #getShowDeltaValue showDeltaValue}.\n\nIf set to true, shows the calculated delta value instead of the numeric actual value regardless of the showActualValue setting. This property works in Delta mode only.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getShowTargetValue",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showTargetValue</code>"
          },
          "description": "Gets current value of property {@link #getShowTargetValue showTargetValue}.\n\nIf set to true, shows the numeric target value.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getShowThresholds",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showThresholds</code>"
          },
          "description": "Gets current value of property {@link #getShowThresholds showThresholds}.\n\nIf set to true, shows the threshold markers.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getShowValueMarker",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showValueMarker</code>"
          },
          "description": "Gets current value of property {@link #getShowValueMarker showValueMarker}.\n\nIf set to true, shows the value marker.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getSize",
          "visibility": "public",
          "returnValue": {
            "type": "sap.m.Size",
            "description": "Value of property <code>size</code>"
          },
          "description": "Gets current value of property {@link #getSize size}.\n\nThe size of the microchart. If not set, the default size is applied based on the size of the device tile. Responsive size takes width and height of the parent container where the bullet micro chart is included.\n\nDefault value is <code>Auto</code>."
        },
        {
          "name": "getTargetValue",
          "visibility": "public",
          "returnValue": {
            "type": "float",
            "description": "Value of property <code>targetValue</code>"
          },
          "description": "Gets current value of property {@link #getTargetValue targetValue}.\n\nThe target value that is displayed as a black vertical bar."
        },
        {
          "name": "getTargetValueLabel",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>targetValueLabel</code>"
          },
          "description": "Gets current value of property {@link #getTargetValueLabel targetValueLabel}.\n\nIf set, displays a specified label instead of the numeric target value.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "getThresholds",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.BulletMicroChartData[]"
          },
          "description": "Gets content of aggregation {@link #getThresholds thresholds}.\n\nThreshold data of the BulletMicroChart."
        },
        {
          "name": "getWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.CSSSize",
            "description": "Value of property <code>width</code>"
          },
          "description": "Gets current value of property {@link #getWidth width}.\n\nThe width of the chart. Overrides the width specified in the <code>size</code> property."
        },
        {
          "name": "indexOfThreshold",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oThreshold",
              "type": "sap.suite.ui.microchart.BulletMicroChartData",
              "optional": false,
              "description": "The threshold whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.suite.ui.microchart.BulletMicroChartData</code> in the aggregation {@link #getThresholds thresholds}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "insertThreshold",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.BulletMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oThreshold",
              "type": "sap.suite.ui.microchart.BulletMicroChartData",
              "optional": false,
              "description": "The threshold to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the threshold should be inserted at; for a negative value of <code>iIndex</code>, the threshold is inserted at position 0; for a value greater than the current size of the aggregation, the threshold is inserted at the last position"
            }
          ],
          "description": "Inserts a threshold into the aggregation {@link #getThresholds thresholds}."
        },
        {
          "name": "removeAllAriaLabelledBy",
          "visibility": "public",
          "since": "1.60.0",
          "returnValue": {
            "type": "sap.ui.core.ID[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "removeAllThresholds",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.BulletMicroChartData[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getThresholds thresholds}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeAriaLabelledBy",
          "visibility": "public",
          "since": "1.60.0",
          "returnValue": {
            "type": "sap.ui.core.ID",
            "description": "The removed ariaLabelledBy or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vAriaLabelledBy",
              "type": "int|sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaLabelledBy to be removed or its index or ID"
            }
          ],
          "description": "Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "removeThreshold",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.BulletMicroChartData",
            "description": "The removed threshold or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vThreshold",
              "type": "int|string|sap.suite.ui.microchart.BulletMicroChartData",
              "optional": false,
              "description": "The threshold to remove or its index or id"
            }
          ],
          "description": "Removes a threshold from the aggregation {@link #getThresholds thresholds}."
        },
        {
          "name": "setActual",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.BulletMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oActual",
              "type": "sap.suite.ui.microchart.BulletMicroChartData",
              "optional": false,
              "description": "The actual to set"
            }
          ],
          "description": "Sets the aggregated {@link #getActual actual}."
        },
        {
          "name": "setActualValueLabel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.BulletMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sActualValueLabel",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>actualValueLabel</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getActualValueLabel actualValueLabel}.\n\nIf set, displays a specified label instead of the numeric actual value.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "setDeltaValueLabel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.BulletMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sDeltaValueLabel",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>deltaValueLabel</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getDeltaValueLabel deltaValueLabel}.\n\nIf set, displays a specified label instead of the calculated numeric delta value.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "setForecastValue",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.BulletMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fForecastValue",
              "type": "float",
              "optional": false,
              "description": "New value for property <code>forecastValue</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getForecastValue forecastValue}.\n\nThe forecast value that is displayed in Actual mode only. If set, the forecast value bar appears in the background of the actual value bar.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setHeight",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.BulletMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sHeight",
              "type": "sap.ui.core.CSSSize",
              "optional": false,
              "description": "New value for property <code>height</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getHeight height}.\n\nThe height of the chart. Overrides the height specified in the <code>size</code> property.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setIsResponsive",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": {
            "type": "sap.suite.ui.microchart.BulletMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bIsResponsive",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>isResponsive</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getIsResponsive isResponsive}.\n\nIf this set to true, width and height of the control are determined by the width and height of the container in which the control is placed or by the width and height property.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>.",
          "deprecated": { "since": "1.58" }
        },
        {
          "name": "setMaxValue",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.BulletMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fMaxValue",
              "type": "float",
              "optional": false,
              "description": "New value for property <code>maxValue</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getMaxValue maxValue}.\n\nThe maximum scale value for the bar chart used for defining a fixed size of the scale in different instances of this control.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setMinValue",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.BulletMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fMinValue",
              "type": "float",
              "optional": false,
              "description": "New value for property <code>minValue</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getMinValue minValue}.\n\nThe minimum scale value for the bar chart used for defining a fixed size of the scale in different instances of this control.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setMode",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.BulletMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sMode",
              "type": "sap.suite.ui.microchart.BulletMicroChartModeType",
              "optional": false,
              "description": "New value for property <code>mode</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getMode mode}.\n\nThe mode of displaying the actual value itself or the delta between the actual value and the target value. If not set, the actual value is displayed.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Actual</code>."
        },
        {
          "name": "setScale",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.BulletMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sScale",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>scale</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getScale scale}.\n\nThe scaling suffix that is added to all values.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "setScaleColor",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.BulletMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sScaleColor",
              "type": "sap.suite.ui.microchart.CommonBackgroundType",
              "optional": false,
              "description": "New value for property <code>scaleColor</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getScaleColor scaleColor}.\n\nThe background color of the scale. The theming is enabled only for the default value of this property.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>MediumLight</code>."
        },
        {
          "name": "setShowActualValue",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.BulletMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowActualValue",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showActualValue</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowActualValue showActualValue}.\n\nIf set to true, shows the numeric actual value. This property works in Actual mode only.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setShowActualValueInDeltaMode",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.BulletMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowActualValueInDeltaMode",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showActualValueInDeltaMode</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowActualValueInDeltaMode showActualValueInDeltaMode}.\n\nIf set to true, shows the numeric actual value and possibly hides the delta value, if showDeltaValue is set to true. This property works in Delta mode only and has priority over showDeltaValue.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setShowDeltaValue",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.BulletMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowDeltaValue",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showDeltaValue</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowDeltaValue showDeltaValue}.\n\nIf set to true, shows the calculated delta value instead of the numeric actual value regardless of the showActualValue setting. This property works in Delta mode only.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setShowTargetValue",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.BulletMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowTargetValue",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showTargetValue</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowTargetValue showTargetValue}.\n\nIf set to true, shows the numeric target value.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setShowThresholds",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.BulletMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowThresholds",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showThresholds</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowThresholds showThresholds}.\n\nIf set to true, shows the threshold markers.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setShowValueMarker",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.BulletMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowValueMarker",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showValueMarker</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowValueMarker showValueMarker}.\n\nIf set to true, shows the value marker.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setSize",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.BulletMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sSize",
              "type": "sap.m.Size",
              "optional": false,
              "description": "New value for property <code>size</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSize size}.\n\nThe size of the microchart. If not set, the default size is applied based on the size of the device tile. Responsive size takes width and height of the parent container where the bullet micro chart is included.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Auto</code>."
        },
        {
          "name": "setTargetValue",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.BulletMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fTargetValue",
              "type": "float",
              "optional": false,
              "description": "New value for property <code>targetValue</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getTargetValue targetValue}.\n\nThe target value that is displayed as a black vertical bar.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setTargetValueLabel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.BulletMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sTargetValueLabel",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>targetValueLabel</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getTargetValueLabel targetValueLabel}.\n\nIf set, displays a specified label instead of the numeric target value.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "setWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.BulletMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sWidth",
              "type": "sap.ui.core.CSSSize",
              "optional": false,
              "description": "New value for property <code>width</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getWidth width}.\n\nThe width of the chart. Overrides the width specified in the <code>size</code> property.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "unbindActual",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.BulletMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Unbinds aggregation {@link #getActual actual} from model data."
        },
        {
          "name": "unbindThresholds",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.BulletMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Unbinds aggregation {@link #getThresholds thresholds} from model data."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.microchart.BulletMicroChartData",
      "basename": "BulletMicroChartData",
      "resource": "sap/suite/ui/microchart/BulletMicroChartData.js",
      "module": "sap/suite/ui/microchart/BulletMicroChartData",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.34",
      "extends": "sap.ui.core.Element",
      "description": "Contains the thresholds data.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "element",
        "properties": [
          {
            "name": "value",
            "type": "float",
            "defaultValue": "0",
            "group": "Misc",
            "visibility": "public",
            "description": "The actual value.",
            "methods": ["getValue", "setValue"]
          },
          {
            "name": "color",
            "type": "sap.m.ValueColor",
            "defaultValue": "Neutral",
            "group": "Misc",
            "visibility": "public",
            "description": "The semantic color of the actual value.",
            "methods": ["getColor", "setColor"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new BulletMicroChartData.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.microchart.BulletMicroChartData with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
        },
        {
          "name": "getColor",
          "visibility": "public",
          "returnValue": {
            "type": "sap.m.ValueColor",
            "description": "Value of property <code>color</code>"
          },
          "description": "Gets current value of property {@link #getColor color}.\n\nThe semantic color of the actual value.\n\nDefault value is <code>Neutral</code>."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.microchart.BulletMicroChartData."
        },
        {
          "name": "getValue",
          "visibility": "public",
          "returnValue": {
            "type": "float",
            "description": "Value of property <code>value</code>"
          },
          "description": "Gets current value of property {@link #getValue value}.\n\nThe actual value.\n\nDefault value is <code>0</code>."
        },
        {
          "name": "setColor",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.BulletMicroChartData",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sColor",
              "type": "sap.m.ValueColor",
              "optional": false,
              "description": "New value for property <code>color</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getColor color}.\n\nThe semantic color of the actual value.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Neutral</code>."
        },
        {
          "name": "setValue",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.BulletMicroChartData",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fValue",
              "type": "float",
              "optional": false,
              "description": "New value for property <code>value</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getValue value}.\n\nThe actual value.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>0</code>."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.suite.ui.microchart.BulletMicroChartModeType",
      "basename": "BulletMicroChartModeType",
      "resource": "sap/suite/ui/microchart/library.js",
      "module": "sap/suite/ui/microchart/library",
      "export": "BulletMicroChartModeType",
      "static": true,
      "visibility": "public",
      "since": "1.34",
      "description": "Defines if the horizontal bar represents a current value only or if it represents the delta between a current value and a threshold value.",
      "ui5-metamodel": true,
      "properties": [
        {
          "name": "Actual",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Displays the Actual value."
        },
        {
          "name": "Delta",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Displays delta between the Actual and Threshold values."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.microchart.ColumnMicroChart",
      "basename": "ColumnMicroChart",
      "resource": "sap/suite/ui/microchart/ColumnMicroChart.js",
      "module": "sap/suite/ui/microchart/ColumnMicroChart",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.34",
      "extends": "sap.ui.core.Control",
      "description": "Compares different values which are represented as vertical bars. This control replaces the deprecated sap.suite.ui.commons.ColumnMicroChart. <br>Note: You can assign a custom tooltip for this microchart. The custom tooltip can be set using expression binding. When no custom tooltip is defined, the tooltip is generated automatically based on the logic described in {@link sap.ui.core.Element#getTooltip_AsString}. For a combination of a generated and a custom tooltip, use <code>((AltText))</code> inside of the tooltip string. The aggregated data of the microchart can also be customized.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "size",
            "type": "sap.m.Size",
            "defaultValue": "Auto",
            "group": "Misc",
            "visibility": "public",
            "description": "The size of the microchart. If not set, the default size is applied based on the size of the device tile. Responsive size takes width and height of the parent container where the column micro chart is included.",
            "methods": ["getSize", "setSize"]
          },
          {
            "name": "width",
            "type": "sap.ui.core.CSSSize",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The width of the chart. Overrides the width specified in the <code>size</code> property.",
            "methods": ["getWidth", "setWidth"]
          },
          {
            "name": "height",
            "type": "sap.ui.core.CSSSize",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The height of the chart. Overrides the height specified in the <code>size</code> property.",
            "methods": ["getHeight", "setHeight"]
          },
          {
            "name": "isResponsive",
            "type": "boolean",
            "defaultValue": false,
            "group": "Appearance",
            "visibility": "public",
            "since": "1.38.0",
            "description": "If set to true, width and height of the control are determined by the width and height of the container in which the control is placed. Size, width and height properties are ignored in this case.",
            "deprecated": { "since": "1.60.0" },
            "methods": ["getIsResponsive", "setIsResponsive"]
          },
          {
            "name": "showTopLabels",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "description": "If this property is set to <code>false</code>, both top labels are hidden.",
            "methods": ["getShowTopLabels", "setShowTopLabels"]
          },
          {
            "name": "showBottomLabels",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "description": "If this property is set to <code>false</code>, both bottom labels are hidden.",
            "methods": ["getShowBottomLabels", "setShowBottomLabels"]
          },
          {
            "name": "allowColumnLabels",
            "type": "boolean",
            "defaultValue": false,
            "group": "Appearance",
            "visibility": "public",
            "description": "If set to true and there is enough space, top labels of the chart are hidden and labels for each column are shown instead.\n\n* @since 1.60.0",
            "methods": ["getAllowColumnLabels", "setAllowColumnLabels"]
          }
        ],
        "aggregations": [
          {
            "name": "columns",
            "singularName": "column",
            "type": "sap.suite.ui.microchart.ColumnMicroChartData",
            "cardinality": "0..n",
            "visibility": "public",
            "bindable": true,
            "description": "The column chart data.",
            "methods": [
              "getColumns",
              "destroyColumns",
              "insertColumn",
              "addColumn",
              "removeColumn",
              "indexOfColumn",
              "removeAllColumns",
              "bindColumns",
              "unbindColumns"
            ]
          },
          {
            "name": "leftTopLabel",
            "singularName": "leftTopLabel",
            "type": "sap.suite.ui.microchart.ColumnMicroChartLabel",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "The label on the left top corner of the chart.",
            "methods": [
              "getLeftTopLabel",
              "destroyLeftTopLabel",
              "setLeftTopLabel"
            ]
          },
          {
            "name": "rightTopLabel",
            "singularName": "rightTopLabel",
            "type": "sap.suite.ui.microchart.ColumnMicroChartLabel",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "The label on the right top corner of the chart.",
            "methods": [
              "getRightTopLabel",
              "destroyRightTopLabel",
              "setRightTopLabel"
            ]
          },
          {
            "name": "leftBottomLabel",
            "singularName": "leftBottomLabel",
            "type": "sap.suite.ui.microchart.ColumnMicroChartLabel",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "The label on the left bottom corner of the chart.",
            "methods": [
              "getLeftBottomLabel",
              "destroyLeftBottomLabel",
              "setLeftBottomLabel"
            ]
          },
          {
            "name": "rightBottomLabel",
            "singularName": "rightBottomLabel",
            "type": "sap.suite.ui.microchart.ColumnMicroChartLabel",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "The label on the right bottom corner of the chart.",
            "methods": [
              "getRightBottomLabel",
              "destroyRightBottomLabel",
              "setRightBottomLabel"
            ]
          }
        ],
        "defaultAggregation": "columns",
        "associations": [
          {
            "name": "ariaLabelledBy",
            "singularName": "ariaLabelledBy",
            "type": "sap.ui.core.Control",
            "cardinality": "0..n",
            "visibility": "public",
            "since": "1.60.0",
            "description": "Controls or IDs that label this control. Can be used by screen reader software.",
            "methods": [
              "getAriaLabelledBy",
              "addAriaLabelledBy",
              "removeAriaLabelledBy",
              "removeAllAriaLabelledBy"
            ]
          }
        ],
        "events": [
          {
            "name": "press",
            "visibility": "public",
            "description": "The event is triggered when the chart is pressed.",
            "methods": ["attachPress", "detachPress", "firePress"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new ColumnMicroChart control.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "press",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "The event is triggered when the chart is pressed."
        }
      ],
      "methods": [
        {
          "name": "addAriaLabelledBy",
          "visibility": "public",
          "since": "1.60.0",
          "returnValue": {
            "type": "sap.suite.ui.microchart.ColumnMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "vAriaLabelledBy",
              "type": "sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaLabelledBy to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "addColumn",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.ColumnMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oColumn",
              "type": "sap.suite.ui.microchart.ColumnMicroChartData",
              "optional": false,
              "description": "The column to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some column to the aggregation {@link #getColumns columns}."
        },
        {
          "name": "attachPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.ColumnMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.microchart.ColumnMicroChart</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:press press} event of this <code>sap.suite.ui.microchart.ColumnMicroChart</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.microchart.ColumnMicroChart</code> itself.\n\nThe event is triggered when the chart is pressed."
        },
        {
          "name": "bindColumns",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.ColumnMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oBindingInfo",
              "type": "object",
              "optional": false,
              "description": "The binding information"
            }
          ],
          "description": "Binds aggregation {@link #getColumns columns} to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a detailed description of the possible properties of <code>oBindingInfo</code>."
        },
        {
          "name": "destroyColumns",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.ColumnMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the columns in the aggregation {@link #getColumns columns}."
        },
        {
          "name": "destroyLeftBottomLabel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.ColumnMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the leftBottomLabel in the aggregation {@link #getLeftBottomLabel leftBottomLabel}."
        },
        {
          "name": "destroyLeftTopLabel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.ColumnMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the leftTopLabel in the aggregation {@link #getLeftTopLabel leftTopLabel}."
        },
        {
          "name": "destroyRightBottomLabel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.ColumnMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the rightBottomLabel in the aggregation {@link #getRightBottomLabel rightBottomLabel}."
        },
        {
          "name": "destroyRightTopLabel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.ColumnMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the rightTopLabel in the aggregation {@link #getRightTopLabel rightTopLabel}."
        },
        {
          "name": "detachPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.ColumnMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:press press} event of this <code>sap.suite.ui.microchart.ColumnMicroChart</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.microchart.ColumnMicroChart with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "firePress",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.microchart.ColumnMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:press press} to attached listeners."
        },
        {
          "name": "getAllowColumnLabels",
          "visibility": "public",
          "since": "1.60.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>allowColumnLabels</code>"
          },
          "description": "Gets current value of property {@link #getAllowColumnLabels allowColumnLabels}.\n\nIf set to true and there is enough space, top labels of the chart are hidden and labels for each column are shown instead."
        },
        {
          "name": "getAriaLabelledBy",
          "visibility": "public",
          "since": "1.60.0",
          "returnValue": { "type": "sap.ui.core.ID[]" },
          "description": "Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "getColumns",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.ColumnMicroChartData[]"
          },
          "description": "Gets content of aggregation {@link #getColumns columns}.\n\nThe column chart data."
        },
        {
          "name": "getHeight",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.CSSSize",
            "description": "Value of property <code>height</code>"
          },
          "description": "Gets current value of property {@link #getHeight height}.\n\nThe height of the chart. Overrides the height specified in the <code>size</code> property."
        },
        {
          "name": "getIsResponsive",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>isResponsive</code>"
          },
          "description": "Gets current value of property {@link #getIsResponsive isResponsive}.\n\nIf set to true, width and height of the control are determined by the width and height of the container in which the control is placed. Size, width and height properties are ignored in this case.\n\nDefault value is <code>false</code>.",
          "deprecated": { "since": "1.60.0" }
        },
        {
          "name": "getLeftBottomLabel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.ColumnMicroChartLabel"
          },
          "description": "Gets content of aggregation {@link #getLeftBottomLabel leftBottomLabel}.\n\nThe label on the left bottom corner of the chart."
        },
        {
          "name": "getLeftTopLabel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.ColumnMicroChartLabel"
          },
          "description": "Gets content of aggregation {@link #getLeftTopLabel leftTopLabel}.\n\nThe label on the left top corner of the chart."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.microchart.ColumnMicroChart."
        },
        {
          "name": "getRightBottomLabel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.ColumnMicroChartLabel"
          },
          "description": "Gets content of aggregation {@link #getRightBottomLabel rightBottomLabel}.\n\nThe label on the right bottom corner of the chart."
        },
        {
          "name": "getRightTopLabel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.ColumnMicroChartLabel"
          },
          "description": "Gets content of aggregation {@link #getRightTopLabel rightTopLabel}.\n\nThe label on the right top corner of the chart."
        },
        {
          "name": "getShowBottomLabels",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showBottomLabels</code>"
          },
          "description": "Gets current value of property {@link #getShowBottomLabels showBottomLabels}.\n\nIf this property is set to <code>false</code>, both bottom labels are hidden.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getShowTopLabels",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showTopLabels</code>"
          },
          "description": "Gets current value of property {@link #getShowTopLabels showTopLabels}.\n\nIf this property is set to <code>false</code>, both top labels are hidden.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getSize",
          "visibility": "public",
          "returnValue": {
            "type": "sap.m.Size",
            "description": "Value of property <code>size</code>"
          },
          "description": "Gets current value of property {@link #getSize size}.\n\nThe size of the microchart. If not set, the default size is applied based on the size of the device tile. Responsive size takes width and height of the parent container where the column micro chart is included.\n\nDefault value is <code>Auto</code>."
        },
        {
          "name": "getWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.CSSSize",
            "description": "Value of property <code>width</code>"
          },
          "description": "Gets current value of property {@link #getWidth width}.\n\nThe width of the chart. Overrides the width specified in the <code>size</code> property."
        },
        {
          "name": "indexOfColumn",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oColumn",
              "type": "sap.suite.ui.microchart.ColumnMicroChartData",
              "optional": false,
              "description": "The column whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.suite.ui.microchart.ColumnMicroChartData</code> in the aggregation {@link #getColumns columns}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "insertColumn",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.ColumnMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oColumn",
              "type": "sap.suite.ui.microchart.ColumnMicroChartData",
              "optional": false,
              "description": "The column to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the column should be inserted at; for a negative value of <code>iIndex</code>, the column is inserted at position 0; for a value greater than the current size of the aggregation, the column is inserted at the last position"
            }
          ],
          "description": "Inserts a column into the aggregation {@link #getColumns columns}."
        },
        {
          "name": "removeAllAriaLabelledBy",
          "visibility": "public",
          "since": "1.60.0",
          "returnValue": {
            "type": "sap.ui.core.ID[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "removeAllColumns",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.ColumnMicroChartData[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getColumns columns}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeAriaLabelledBy",
          "visibility": "public",
          "since": "1.60.0",
          "returnValue": {
            "type": "sap.ui.core.ID",
            "description": "The removed ariaLabelledBy or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vAriaLabelledBy",
              "type": "int|sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaLabelledBy to be removed or its index or ID"
            }
          ],
          "description": "Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "removeColumn",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.ColumnMicroChartData",
            "description": "The removed column or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vColumn",
              "type": "int|string|sap.suite.ui.microchart.ColumnMicroChartData",
              "optional": false,
              "description": "The column to remove or its index or id"
            }
          ],
          "description": "Removes a column from the aggregation {@link #getColumns columns}."
        },
        {
          "name": "setAllowColumnLabels",
          "visibility": "public",
          "since": "1.60.0",
          "returnValue": {
            "type": "sap.suite.ui.microchart.ColumnMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bAllowColumnLabels",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>allowColumnLabels</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getAllowColumnLabels allowColumnLabels}.\n\nIf set to true and there is enough space, top labels of the chart are hidden and labels for each column are shown instead."
        },
        {
          "name": "setHeight",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.ColumnMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sHeight",
              "type": "sap.ui.core.CSSSize",
              "optional": false,
              "description": "New value for property <code>height</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getHeight height}.\n\nThe height of the chart. Overrides the height specified in the <code>size</code> property.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setIsResponsive",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": {
            "type": "sap.suite.ui.microchart.ColumnMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bIsResponsive",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>isResponsive</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getIsResponsive isResponsive}.\n\nIf set to true, width and height of the control are determined by the width and height of the container in which the control is placed. Size, width and height properties are ignored in this case.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>.",
          "deprecated": { "since": "1.60.0" }
        },
        {
          "name": "setLeftBottomLabel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.ColumnMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oLeftBottomLabel",
              "type": "sap.suite.ui.microchart.ColumnMicroChartLabel",
              "optional": false,
              "description": "The leftBottomLabel to set"
            }
          ],
          "description": "Sets the aggregated {@link #getLeftBottomLabel leftBottomLabel}."
        },
        {
          "name": "setLeftTopLabel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.ColumnMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oLeftTopLabel",
              "type": "sap.suite.ui.microchart.ColumnMicroChartLabel",
              "optional": false,
              "description": "The leftTopLabel to set"
            }
          ],
          "description": "Sets the aggregated {@link #getLeftTopLabel leftTopLabel}."
        },
        {
          "name": "setRightBottomLabel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.ColumnMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oRightBottomLabel",
              "type": "sap.suite.ui.microchart.ColumnMicroChartLabel",
              "optional": false,
              "description": "The rightBottomLabel to set"
            }
          ],
          "description": "Sets the aggregated {@link #getRightBottomLabel rightBottomLabel}."
        },
        {
          "name": "setRightTopLabel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.ColumnMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oRightTopLabel",
              "type": "sap.suite.ui.microchart.ColumnMicroChartLabel",
              "optional": false,
              "description": "The rightTopLabel to set"
            }
          ],
          "description": "Sets the aggregated {@link #getRightTopLabel rightTopLabel}."
        },
        {
          "name": "setShowBottomLabels",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.ColumnMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowBottomLabels",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showBottomLabels</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowBottomLabels showBottomLabels}.\n\nIf this property is set to <code>false</code>, both bottom labels are hidden.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setShowTopLabels",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.ColumnMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowTopLabels",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showTopLabels</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowTopLabels showTopLabels}.\n\nIf this property is set to <code>false</code>, both top labels are hidden.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setSize",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.ColumnMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sSize",
              "type": "sap.m.Size",
              "optional": false,
              "description": "New value for property <code>size</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSize size}.\n\nThe size of the microchart. If not set, the default size is applied based on the size of the device tile. Responsive size takes width and height of the parent container where the column micro chart is included.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Auto</code>."
        },
        {
          "name": "setWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.ColumnMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sWidth",
              "type": "sap.ui.core.CSSSize",
              "optional": false,
              "description": "New value for property <code>width</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getWidth width}.\n\nThe width of the chart. Overrides the width specified in the <code>size</code> property.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "unbindColumns",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.ColumnMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Unbinds aggregation {@link #getColumns columns} from model data."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.microchart.ColumnMicroChartData",
      "basename": "ColumnMicroChartData",
      "resource": "sap/suite/ui/microchart/ColumnMicroChartData.js",
      "module": "sap/suite/ui/microchart/ColumnMicroChartData",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.34",
      "extends": "sap.ui.core.Element",
      "description": "Defines the column chart data.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "element",
        "properties": [
          {
            "name": "color",
            "type": "sap.m.ValueCSSColor",
            "defaultValue": "Neutral",
            "group": "Misc",
            "visibility": "public",
            "description": "The graphic element color.",
            "methods": ["getColor", "setColor"]
          },
          {
            "name": "label",
            "type": "string",
            "defaultValue": "",
            "group": "Misc",
            "visibility": "public",
            "description": "The line title.",
            "methods": ["getLabel", "setLabel"]
          },
          {
            "name": "displayValue",
            "type": "string",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "description": "Overrides the value with a string that is shown when used in combination with {@link sap.suite.ui.microchart.ColumnMicroChart} <code>allowColumnLabels</code>.",
            "methods": ["getDisplayValue", "setDisplayValue"]
          },
          {
            "name": "value",
            "type": "float",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The actual value.",
            "methods": ["getValue", "setValue"]
          }
        ],
        "events": [
          {
            "name": "press",
            "visibility": "public",
            "description": "The event is fired when the user chooses the column data.",
            "methods": ["attachPress", "detachPress", "firePress"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new ColumnMicroChartData control.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "press",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "The event is fired when the user chooses the column data."
        }
      ],
      "methods": [
        {
          "name": "attachPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.ColumnMicroChartData",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.microchart.ColumnMicroChartData</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:press press} event of this <code>sap.suite.ui.microchart.ColumnMicroChartData</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.microchart.ColumnMicroChartData</code> itself.\n\nThe event is fired when the user chooses the column data."
        },
        {
          "name": "detachPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.ColumnMicroChartData",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:press press} event of this <code>sap.suite.ui.microchart.ColumnMicroChartData</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.microchart.ColumnMicroChartData with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
        },
        {
          "name": "firePress",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.microchart.ColumnMicroChartData",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:press press} to attached listeners."
        },
        {
          "name": "getColor",
          "visibility": "public",
          "returnValue": {
            "type": "sap.m.ValueCSSColor",
            "description": "Value of property <code>color</code>"
          },
          "description": "Gets current value of property {@link #getColor color}.\n\nThe graphic element color.\n\nDefault value is <code>Neutral</code>."
        },
        {
          "name": "getDisplayValue",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>displayValue</code>"
          },
          "description": "Gets current value of property {@link #getDisplayValue displayValue}.\n\nOverrides the value with a string that is shown when used in combination with {@link sap.suite.ui.microchart.ColumnMicroChart} <code>allowColumnLabels</code>."
        },
        {
          "name": "getLabel",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>label</code>"
          },
          "description": "Gets current value of property {@link #getLabel label}.\n\nThe line title.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.microchart.ColumnMicroChartData."
        },
        {
          "name": "getValue",
          "visibility": "public",
          "returnValue": {
            "type": "float",
            "description": "Value of property <code>value</code>"
          },
          "description": "Gets current value of property {@link #getValue value}.\n\nThe actual value."
        },
        {
          "name": "setColor",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.ColumnMicroChartData",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sColor",
              "type": "sap.m.ValueCSSColor",
              "optional": false,
              "description": "New value for property <code>color</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getColor color}.\n\nThe graphic element color.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Neutral</code>."
        },
        {
          "name": "setDisplayValue",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.ColumnMicroChartData",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sDisplayValue",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>displayValue</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getDisplayValue displayValue}.\n\nOverrides the value with a string that is shown when used in combination with {@link sap.suite.ui.microchart.ColumnMicroChart} <code>allowColumnLabels</code>.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setLabel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.ColumnMicroChartData",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sLabel",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>label</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getLabel label}.\n\nThe line title.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "setValue",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.ColumnMicroChartData",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fValue",
              "type": "float",
              "optional": false,
              "description": "New value for property <code>value</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getValue value}.\n\nThe actual value.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.microchart.ColumnMicroChartLabel",
      "basename": "ColumnMicroChartLabel",
      "resource": "sap/suite/ui/microchart/ColumnMicroChartLabel.js",
      "module": "sap/suite/ui/microchart/ColumnMicroChartLabel",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.34",
      "extends": "sap.ui.core.Element",
      "description": "Displays or hides the labels of a column micro chart.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "element",
        "properties": [
          {
            "name": "color",
            "type": "sap.m.ValueCSSColor",
            "defaultValue": "Neutral",
            "group": "Misc",
            "visibility": "public",
            "description": "The graphic element color.",
            "methods": ["getColor", "setColor"]
          },
          {
            "name": "label",
            "type": "string",
            "defaultValue": "",
            "group": "Misc",
            "visibility": "public",
            "description": "The line title.",
            "methods": ["getLabel", "setLabel"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new ColumnMicroChartLabel control.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.microchart.ColumnMicroChartLabel with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
        },
        {
          "name": "getColor",
          "visibility": "public",
          "returnValue": {
            "type": "sap.m.ValueCSSColor",
            "description": "Value of property <code>color</code>"
          },
          "description": "Gets current value of property {@link #getColor color}.\n\nThe graphic element color.\n\nDefault value is <code>Neutral</code>."
        },
        {
          "name": "getLabel",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>label</code>"
          },
          "description": "Gets current value of property {@link #getLabel label}.\n\nThe line title.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.microchart.ColumnMicroChartLabel."
        },
        {
          "name": "setColor",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.ColumnMicroChartLabel",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sColor",
              "type": "sap.m.ValueCSSColor",
              "optional": false,
              "description": "New value for property <code>color</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getColor color}.\n\nThe graphic element color.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Neutral</code>."
        },
        {
          "name": "setLabel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.ColumnMicroChartLabel",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sLabel",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>label</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getLabel label}.\n\nThe line title.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>empty string</code>."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.suite.ui.microchart.CommonBackgroundType",
      "basename": "CommonBackgroundType",
      "resource": "sap/suite/ui/microchart/library.js",
      "module": "sap/suite/ui/microchart/library",
      "export": "CommonBackgroundType",
      "static": true,
      "visibility": "public",
      "since": "1.34",
      "description": "Lists the available theme-specific background colors.",
      "ui5-metamodel": true,
      "properties": [
        {
          "name": "Dark",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Dark background color."
        },
        {
          "name": "Darkest",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The darkest background color."
        },
        {
          "name": "ExtraDark",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Extra dark background color."
        },
        {
          "name": "ExtraLight",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Extra light background color."
        },
        {
          "name": "Light",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Light background color."
        },
        {
          "name": "Lightest",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The lightest background color."
        },
        {
          "name": "Medium",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Medium background color."
        },
        {
          "name": "MediumLight",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Medium light background color."
        },
        {
          "name": "Transparent",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The transparent background color."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.microchart.ComparisonMicroChart",
      "basename": "ComparisonMicroChart",
      "resource": "sap/suite/ui/microchart/ComparisonMicroChart.js",
      "module": "sap/suite/ui/microchart/ComparisonMicroChart",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.34",
      "extends": "sap.ui.core.Control",
      "description": "Illustrates values as colored bar charts with title, numeric value, and scaling factor in the content area. This control replaces the deprecated sap.suite.ui.commons.ComparisonChart. <br>Note: You can assign a custom tooltip for this microchart. The custom tooltip can be set using expression binding. When no custom tooltip is defined, the tooltip is generated automatically based on the logic described in {@link sap.ui.core.Element#getTooltip_AsString}. For a combination of a generated and a custom tooltip, use <code>((AltText))</code> inside of the tooltip string. The aggregated data of the microchart can also be customized.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "size",
            "type": "sap.m.Size",
            "defaultValue": "Auto",
            "group": "Misc",
            "visibility": "public",
            "description": "The size of the microchart. If not set, the default size is applied based on the size of the device tile. Responsive size takes width and height of the parent container where the bullet micro chart is included.",
            "methods": ["getSize", "setSize"]
          },
          {
            "name": "scale",
            "type": "string",
            "defaultValue": "",
            "group": "Misc",
            "visibility": "public",
            "description": "The scaling suffix that is added to the actual and target values.",
            "methods": ["getScale", "setScale"]
          },
          {
            "name": "minValue",
            "type": "float",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "since": "1.42.0",
            "description": "The minimum scale value for the chart used to define the value range of the scale for comparing different values.",
            "methods": ["getMinValue", "setMinValue"]
          },
          {
            "name": "maxValue",
            "type": "float",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "since": "1.42.0",
            "description": "The maximum scale value for the chart used to define the value range of the scale for comparing different values.",
            "methods": ["getMaxValue", "setMaxValue"]
          },
          {
            "name": "view",
            "type": "sap.suite.ui.microchart.ComparisonMicroChartViewType",
            "defaultValue": "Normal",
            "group": "Appearance",
            "visibility": "public",
            "description": "The view of the chart. If not set, the Normal view is used by default.",
            "methods": ["getView", "setView"]
          },
          {
            "name": "colorPalette",
            "type": "string[]",
            "defaultValue": "[]",
            "group": "Appearance",
            "visibility": "public",
            "description": "The color palette for the chart. If this property is set, semantic colors defined in ComparisonData are ignored. Colors from the palette are assigned to each bar consequentially. When all the palette colors are used, assignment of the colors begins from the first palette color.",
            "methods": ["getColorPalette", "setColorPalette"]
          },
          {
            "name": "shrinkable",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "description": "If it is set to true, the height of the control is defined by its content.",
            "methods": ["getShrinkable", "setShrinkable"]
          },
          {
            "name": "width",
            "type": "sap.ui.core.CSSSize",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "description": "The width of the chart. Overrides the width specified in the <code>size</code> property.",
            "methods": ["getWidth", "setWidth"]
          },
          {
            "name": "height",
            "type": "sap.ui.core.CSSSize",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "description": "The height of the chart. Overrides the height specified in the <code>size</code> property.",
            "methods": ["getHeight", "setHeight"]
          },
          {
            "name": "isResponsive",
            "type": "boolean",
            "defaultValue": false,
            "group": "Appearance",
            "visibility": "public",
            "since": "1.38.0",
            "description": "If this set to true, width and height of the control are determined by the width and height of the container in which the control is placed. Size and Width properties are ignored in such case.",
            "deprecated": { "since": "1.58" },
            "methods": ["getIsResponsive", "setIsResponsive"]
          }
        ],
        "aggregations": [
          {
            "name": "data",
            "singularName": "data",
            "type": "sap.suite.ui.microchart.ComparisonMicroChartData",
            "cardinality": "0..n",
            "visibility": "public",
            "bindable": true,
            "description": "The comparison chart bar data.",
            "methods": [
              "getData",
              "destroyData",
              "insertData",
              "addData",
              "removeData",
              "indexOfData",
              "removeAllData",
              "bindData",
              "unbindData"
            ]
          }
        ],
        "defaultAggregation": "data",
        "associations": [
          {
            "name": "ariaLabelledBy",
            "singularName": "ariaLabelledBy",
            "type": "sap.ui.core.Control",
            "cardinality": "0..n",
            "visibility": "public",
            "since": "1.60.0",
            "description": "Controls or IDs that label this control. Can be used by screen reader software.",
            "methods": [
              "getAriaLabelledBy",
              "addAriaLabelledBy",
              "removeAriaLabelledBy",
              "removeAllAriaLabelledBy"
            ]
          }
        ],
        "events": [
          {
            "name": "press",
            "visibility": "public",
            "description": "The event is triggered when the chart is pressed.",
            "methods": ["attachPress", "detachPress", "firePress"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new ComparisonMicroChart control.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "press",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "The event is triggered when the chart is pressed."
        }
      ],
      "methods": [
        {
          "name": "addAriaLabelledBy",
          "visibility": "public",
          "since": "1.60.0",
          "returnValue": {
            "type": "sap.suite.ui.microchart.ComparisonMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "vAriaLabelledBy",
              "type": "sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaLabelledBy to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "addData",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.ComparisonMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "sap.suite.ui.microchart.ComparisonMicroChartData",
              "optional": false,
              "description": "The data to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some data to the aggregation {@link #getData data}."
        },
        {
          "name": "attachPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.ComparisonMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.microchart.ComparisonMicroChart</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:press press} event of this <code>sap.suite.ui.microchart.ComparisonMicroChart</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.microchart.ComparisonMicroChart</code> itself.\n\nThe event is triggered when the chart is pressed."
        },
        {
          "name": "bindData",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.ComparisonMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oBindingInfo",
              "type": "object",
              "optional": false,
              "description": "The binding information"
            }
          ],
          "description": "Binds aggregation {@link #getData data} to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a detailed description of the possible properties of <code>oBindingInfo</code>."
        },
        {
          "name": "destroyData",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.ComparisonMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the data in the aggregation {@link #getData data}."
        },
        {
          "name": "detachPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.ComparisonMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:press press} event of this <code>sap.suite.ui.microchart.ComparisonMicroChart</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.microchart.ComparisonMicroChart with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "firePress",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.microchart.ComparisonMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:press press} to attached listeners."
        },
        {
          "name": "getAriaLabelledBy",
          "visibility": "public",
          "since": "1.60.0",
          "returnValue": { "type": "sap.ui.core.ID[]" },
          "description": "Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "getColorPalette",
          "visibility": "public",
          "returnValue": {
            "type": "string[]",
            "description": "Value of property <code>colorPalette</code>"
          },
          "description": "Gets current value of property {@link #getColorPalette colorPalette}.\n\nThe color palette for the chart. If this property is set, semantic colors defined in ComparisonData are ignored. Colors from the palette are assigned to each bar consequentially. When all the palette colors are used, assignment of the colors begins from the first palette color.\n\nDefault value is <code>[]</code>."
        },
        {
          "name": "getData",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.ComparisonMicroChartData[]"
          },
          "description": "Gets content of aggregation {@link #getData data}.\n\nThe comparison chart bar data."
        },
        {
          "name": "getHeight",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.CSSSize",
            "description": "Value of property <code>height</code>"
          },
          "description": "Gets current value of property {@link #getHeight height}.\n\nThe height of the chart. Overrides the height specified in the <code>size</code> property."
        },
        {
          "name": "getIsResponsive",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>isResponsive</code>"
          },
          "description": "Gets current value of property {@link #getIsResponsive isResponsive}.\n\nIf this set to true, width and height of the control are determined by the width and height of the container in which the control is placed. Size and Width properties are ignored in such case.\n\nDefault value is <code>false</code>.",
          "deprecated": { "since": "1.58" }
        },
        {
          "name": "getMaxValue",
          "visibility": "public",
          "since": "1.42.0",
          "returnValue": {
            "type": "float",
            "description": "Value of property <code>maxValue</code>"
          },
          "description": "Gets current value of property {@link #getMaxValue maxValue}.\n\nThe maximum scale value for the chart used to define the value range of the scale for comparing different values."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.microchart.ComparisonMicroChart."
        },
        {
          "name": "getMinValue",
          "visibility": "public",
          "since": "1.42.0",
          "returnValue": {
            "type": "float",
            "description": "Value of property <code>minValue</code>"
          },
          "description": "Gets current value of property {@link #getMinValue minValue}.\n\nThe minimum scale value for the chart used to define the value range of the scale for comparing different values."
        },
        {
          "name": "getScale",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>scale</code>"
          },
          "description": "Gets current value of property {@link #getScale scale}.\n\nThe scaling suffix that is added to the actual and target values.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "getShrinkable",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>shrinkable</code>"
          },
          "description": "Gets current value of property {@link #getShrinkable shrinkable}.\n\nIf it is set to true, the height of the control is defined by its content.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getSize",
          "visibility": "public",
          "returnValue": {
            "type": "sap.m.Size",
            "description": "Value of property <code>size</code>"
          },
          "description": "Gets current value of property {@link #getSize size}.\n\nThe size of the microchart. If not set, the default size is applied based on the size of the device tile. Responsive size takes width and height of the parent container where the bullet micro chart is included.\n\nDefault value is <code>Auto</code>."
        },
        {
          "name": "getView",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.ComparisonMicroChartViewType",
            "description": "Value of property <code>view</code>"
          },
          "description": "Gets current value of property {@link #getView view}.\n\nThe view of the chart. If not set, the Normal view is used by default.\n\nDefault value is <code>Normal</code>."
        },
        {
          "name": "getWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.CSSSize",
            "description": "Value of property <code>width</code>"
          },
          "description": "Gets current value of property {@link #getWidth width}.\n\nThe width of the chart. Overrides the width specified in the <code>size</code> property."
        },
        {
          "name": "indexOfData",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "sap.suite.ui.microchart.ComparisonMicroChartData",
              "optional": false,
              "description": "The data whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.suite.ui.microchart.ComparisonMicroChartData</code> in the aggregation {@link #getData data}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "insertData",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.ComparisonMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "sap.suite.ui.microchart.ComparisonMicroChartData",
              "optional": false,
              "description": "The data to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the data should be inserted at; for a negative value of <code>iIndex</code>, the data is inserted at position 0; for a value greater than the current size of the aggregation, the data is inserted at the last position"
            }
          ],
          "description": "Inserts a data into the aggregation {@link #getData data}."
        },
        {
          "name": "removeAllAriaLabelledBy",
          "visibility": "public",
          "since": "1.60.0",
          "returnValue": {
            "type": "sap.ui.core.ID[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "removeAllData",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.ComparisonMicroChartData[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getData data}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeAriaLabelledBy",
          "visibility": "public",
          "since": "1.60.0",
          "returnValue": {
            "type": "sap.ui.core.ID",
            "description": "The removed ariaLabelledBy or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vAriaLabelledBy",
              "type": "int|sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaLabelledBy to be removed or its index or ID"
            }
          ],
          "description": "Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "removeData",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.ComparisonMicroChartData",
            "description": "The removed data or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vData",
              "type": "int|string|sap.suite.ui.microchart.ComparisonMicroChartData",
              "optional": false,
              "description": "The data to remove or its index or id"
            }
          ],
          "description": "Removes a data from the aggregation {@link #getData data}."
        },
        {
          "name": "setColorPalette",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.ComparisonMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sColorPalette",
              "type": "string[]",
              "optional": false,
              "description": "New value for property <code>colorPalette</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getColorPalette colorPalette}.\n\nThe color palette for the chart. If this property is set, semantic colors defined in ComparisonData are ignored. Colors from the palette are assigned to each bar consequentially. When all the palette colors are used, assignment of the colors begins from the first palette color.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>[]</code>."
        },
        {
          "name": "setHeight",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.ComparisonMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sHeight",
              "type": "sap.ui.core.CSSSize",
              "optional": false,
              "description": "New value for property <code>height</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getHeight height}.\n\nThe height of the chart. Overrides the height specified in the <code>size</code> property.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setIsResponsive",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": {
            "type": "sap.suite.ui.microchart.ComparisonMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bIsResponsive",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>isResponsive</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getIsResponsive isResponsive}.\n\nIf this set to true, width and height of the control are determined by the width and height of the container in which the control is placed. Size and Width properties are ignored in such case.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>.",
          "deprecated": { "since": "1.58" }
        },
        {
          "name": "setMaxValue",
          "visibility": "public",
          "since": "1.42.0",
          "returnValue": {
            "type": "sap.suite.ui.microchart.ComparisonMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fMaxValue",
              "type": "float",
              "optional": false,
              "description": "New value for property <code>maxValue</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getMaxValue maxValue}.\n\nThe maximum scale value for the chart used to define the value range of the scale for comparing different values.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setMinValue",
          "visibility": "public",
          "since": "1.42.0",
          "returnValue": {
            "type": "sap.suite.ui.microchart.ComparisonMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fMinValue",
              "type": "float",
              "optional": false,
              "description": "New value for property <code>minValue</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getMinValue minValue}.\n\nThe minimum scale value for the chart used to define the value range of the scale for comparing different values.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setScale",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.ComparisonMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sScale",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>scale</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getScale scale}.\n\nThe scaling suffix that is added to the actual and target values.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "setShrinkable",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.ComparisonMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShrinkable",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>shrinkable</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShrinkable shrinkable}.\n\nIf it is set to true, the height of the control is defined by its content.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setSize",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.ComparisonMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sSize",
              "type": "sap.m.Size",
              "optional": false,
              "description": "New value for property <code>size</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSize size}.\n\nThe size of the microchart. If not set, the default size is applied based on the size of the device tile. Responsive size takes width and height of the parent container where the bullet micro chart is included.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Auto</code>."
        },
        {
          "name": "setView",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.ComparisonMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sView",
              "type": "sap.suite.ui.microchart.ComparisonMicroChartViewType",
              "optional": false,
              "description": "New value for property <code>view</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getView view}.\n\nThe view of the chart. If not set, the Normal view is used by default.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Normal</code>."
        },
        {
          "name": "setWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.ComparisonMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sWidth",
              "type": "sap.ui.core.CSSSize",
              "optional": false,
              "description": "New value for property <code>width</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getWidth width}.\n\nThe width of the chart. Overrides the width specified in the <code>size</code> property.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "unbindData",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.ComparisonMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Unbinds aggregation {@link #getData data} from model data."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.microchart.ComparisonMicroChartData",
      "basename": "ComparisonMicroChartData",
      "resource": "sap/suite/ui/microchart/ComparisonMicroChartData.js",
      "module": "sap/suite/ui/microchart/ComparisonMicroChartData",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.34",
      "extends": "sap.ui.core.Element",
      "description": "Contains the values of the comparison chart.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "element",
        "properties": [
          {
            "name": "value",
            "type": "float",
            "defaultValue": "0",
            "group": "Misc",
            "visibility": "public",
            "description": "The value for comparison.",
            "methods": ["getValue", "setValue"]
          },
          {
            "name": "color",
            "type": "sap.m.ValueCSSColor",
            "defaultValue": "Neutral",
            "group": "Misc",
            "visibility": "public",
            "description": "The semantic color of the value.",
            "methods": ["getColor", "setColor"]
          },
          {
            "name": "title",
            "type": "string",
            "defaultValue": "",
            "group": "Misc",
            "visibility": "public",
            "description": "The comparison bar title.",
            "methods": ["getTitle", "setTitle"]
          },
          {
            "name": "displayValue",
            "type": "string",
            "defaultValue": "",
            "group": "Misc",
            "visibility": "public",
            "description": "If this property is set then it will be displayed instead of value.",
            "methods": ["getDisplayValue", "setDisplayValue"]
          }
        ],
        "events": [
          {
            "name": "press",
            "visibility": "public",
            "description": "The event is fired when the user chooses the comparison chart bar.",
            "methods": ["attachPress", "detachPress", "firePress"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new ComparisonMicroChartData.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "press",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "The event is fired when the user chooses the comparison chart bar."
        }
      ],
      "methods": [
        {
          "name": "attachPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.ComparisonMicroChartData",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.microchart.ComparisonMicroChartData</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:press press} event of this <code>sap.suite.ui.microchart.ComparisonMicroChartData</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.microchart.ComparisonMicroChartData</code> itself.\n\nThe event is fired when the user chooses the comparison chart bar."
        },
        {
          "name": "detachPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.ComparisonMicroChartData",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:press press} event of this <code>sap.suite.ui.microchart.ComparisonMicroChartData</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.microchart.ComparisonMicroChartData with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
        },
        {
          "name": "firePress",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.microchart.ComparisonMicroChartData",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:press press} to attached listeners."
        },
        {
          "name": "getColor",
          "visibility": "public",
          "returnValue": {
            "type": "sap.m.ValueCSSColor",
            "description": "Value of property <code>color</code>"
          },
          "description": "Gets current value of property {@link #getColor color}.\n\nThe semantic color of the value.\n\nDefault value is <code>Neutral</code>."
        },
        {
          "name": "getDisplayValue",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>displayValue</code>"
          },
          "description": "Gets current value of property {@link #getDisplayValue displayValue}.\n\nIf this property is set then it will be displayed instead of value.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.microchart.ComparisonMicroChartData."
        },
        {
          "name": "getTitle",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>title</code>"
          },
          "description": "Gets current value of property {@link #getTitle title}.\n\nThe comparison bar title.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "getValue",
          "visibility": "public",
          "returnValue": {
            "type": "float",
            "description": "Value of property <code>value</code>"
          },
          "description": "Gets current value of property {@link #getValue value}.\n\nThe value for comparison.\n\nDefault value is <code>0</code>."
        },
        {
          "name": "setColor",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.ComparisonMicroChartData",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sColor",
              "type": "sap.m.ValueCSSColor",
              "optional": false,
              "description": "New value for property <code>color</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getColor color}.\n\nThe semantic color of the value.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Neutral</code>."
        },
        {
          "name": "setDisplayValue",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.ComparisonMicroChartData",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sDisplayValue",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>displayValue</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getDisplayValue displayValue}.\n\nIf this property is set then it will be displayed instead of value.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "setTitle",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.ComparisonMicroChartData",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sTitle",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>title</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getTitle title}.\n\nThe comparison bar title.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "setValue",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.ComparisonMicroChartData",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fValue",
              "type": "float",
              "optional": false,
              "description": "New value for property <code>value</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getValue value}.\n\nThe value for comparison.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>0</code>."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.suite.ui.microchart.ComparisonMicroChartViewType",
      "basename": "ComparisonMicroChartViewType",
      "resource": "sap/suite/ui/microchart/library.js",
      "module": "sap/suite/ui/microchart/library",
      "export": "ComparisonMicroChartViewType",
      "static": true,
      "visibility": "public",
      "since": "1.34",
      "description": "Lists the views of the comparison micro chart concerning the position of titles and labels.",
      "ui5-metamodel": true,
      "properties": [
        {
          "name": "Normal",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Titles and values are displayed above the bars."
        },
        {
          "name": "Responsive",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Behavior changes based on the current width of the chart. <code>Normal</code> view is used for charts up to 192px wide, and <code>Wide</code> is used for wider charts."
        },
        {
          "name": "Wide",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Titles and values are displayed in the same line with the bars."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.microchart.DeltaMicroChart",
      "basename": "DeltaMicroChart",
      "resource": "sap/suite/ui/microchart/DeltaMicroChart.js",
      "module": "sap/suite/ui/microchart/DeltaMicroChart",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.34",
      "extends": "sap.ui.core.Control",
      "description": "Represents the delta of two values as a chart. This control replaces the deprecated sap.suite.ui.commons.DeltaMicroChart. <br>Note: You can assign a custom tooltip for this microchart. The custom tooltip can be set using expression binding. When no custom tooltip is defined, the tooltip is generated automatically based on the logic described in {@link sap.ui.core.Element#getTooltip_AsString}. For a combination of a generated and a custom tooltip, use <code>((AltText))</code> inside of the tooltip string.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "value1",
            "type": "float",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The first value for delta calculation.",
            "methods": ["getValue1", "setValue1"]
          },
          {
            "name": "value2",
            "type": "float",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The second value for delta calculation.",
            "methods": ["getValue2", "setValue2"]
          },
          {
            "name": "title1",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The first value title.",
            "methods": ["getTitle1", "setTitle1"]
          },
          {
            "name": "title2",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The second value title.",
            "methods": ["getTitle2", "setTitle2"]
          },
          {
            "name": "displayValue1",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "If this property is set, it is rendered instead of value1.",
            "methods": ["getDisplayValue1", "setDisplayValue1"]
          },
          {
            "name": "displayValue2",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "If this property is set, it is rendered instead of value2.",
            "methods": ["getDisplayValue2", "setDisplayValue2"]
          },
          {
            "name": "deltaDisplayValue",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "If this property is set, it is rendered instead of a calculated delta.",
            "methods": ["getDeltaDisplayValue", "setDeltaDisplayValue"]
          },
          {
            "name": "color",
            "type": "sap.m.ValueCSSColor",
            "defaultValue": "Neutral",
            "group": "Misc",
            "visibility": "public",
            "description": "The semantic color of the delta value.",
            "methods": ["getColor", "setColor"]
          },
          {
            "name": "view",
            "type": "sap.suite.ui.microchart.DeltaMicroChartViewType",
            "defaultValue": "Normal",
            "group": "Appearance",
            "visibility": "public",
            "since": "1.61.0",
            "description": "The view of the chart. If not set, the <code>Normal</code> view is used by default.",
            "methods": ["getView", "setView"]
          },
          {
            "name": "width",
            "type": "sap.ui.core.CSSSize",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The width of the chart. Overrides the width specified in the <code>size</code> property.",
            "methods": ["getWidth", "setWidth"]
          },
          {
            "name": "height",
            "type": "sap.ui.core.CSSSize",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The height of the chart. Overrides the height specified in the <code>size</code> property.",
            "methods": ["getHeight", "setHeight"]
          },
          {
            "name": "size",
            "type": "sap.m.Size",
            "defaultValue": "Auto",
            "group": "Misc",
            "visibility": "public",
            "description": "The size of the microchart. If not set, the default size is applied based on the size of the device tile. Responsive size takes width and height of the parent container where the delta micro chart is included.",
            "methods": ["getSize", "setSize"]
          },
          {
            "name": "isResponsive",
            "type": "boolean",
            "defaultValue": false,
            "group": "Appearance",
            "visibility": "public",
            "since": "1.38.0",
            "description": "If this set to true, width and height of the control are determined by the width and height of the container in which the control is placed. Size and Width properties are ignored in such case.",
            "deprecated": { "since": "1.61.0" },
            "methods": ["getIsResponsive", "setIsResponsive"]
          }
        ],
        "associations": [
          {
            "name": "ariaLabelledBy",
            "singularName": "ariaLabelledBy",
            "type": "sap.ui.core.Control",
            "cardinality": "0..n",
            "visibility": "public",
            "since": "1.60.0",
            "description": "Controls or IDs that label this control. Can be used by screen reader software.",
            "methods": [
              "getAriaLabelledBy",
              "addAriaLabelledBy",
              "removeAriaLabelledBy",
              "removeAllAriaLabelledBy"
            ]
          }
        ],
        "events": [
          {
            "name": "press",
            "visibility": "public",
            "description": "The event is triggered when the chart is pressed.",
            "methods": ["attachPress", "detachPress", "firePress"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new DeltaMicroChart control.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "press",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "The event is triggered when the chart is pressed."
        }
      ],
      "methods": [
        {
          "name": "addAriaLabelledBy",
          "visibility": "public",
          "since": "1.60.0",
          "returnValue": {
            "type": "sap.suite.ui.microchart.DeltaMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "vAriaLabelledBy",
              "type": "sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaLabelledBy to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "attachPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.DeltaMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.microchart.DeltaMicroChart</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:press press} event of this <code>sap.suite.ui.microchart.DeltaMicroChart</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.microchart.DeltaMicroChart</code> itself.\n\nThe event is triggered when the chart is pressed."
        },
        {
          "name": "detachPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.DeltaMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:press press} event of this <code>sap.suite.ui.microchart.DeltaMicroChart</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.microchart.DeltaMicroChart with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "firePress",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.microchart.DeltaMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:press press} to attached listeners."
        },
        {
          "name": "getAriaLabelledBy",
          "visibility": "public",
          "since": "1.60.0",
          "returnValue": { "type": "sap.ui.core.ID[]" },
          "description": "Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "getColor",
          "visibility": "public",
          "returnValue": {
            "type": "sap.m.ValueCSSColor",
            "description": "Value of property <code>color</code>"
          },
          "description": "Gets current value of property {@link #getColor color}.\n\nThe semantic color of the delta value.\n\nDefault value is <code>Neutral</code>."
        },
        {
          "name": "getDeltaDisplayValue",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>deltaDisplayValue</code>"
          },
          "description": "Gets current value of property {@link #getDeltaDisplayValue deltaDisplayValue}.\n\nIf this property is set, it is rendered instead of a calculated delta."
        },
        {
          "name": "getDisplayValue1",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>displayValue1</code>"
          },
          "description": "Gets current value of property {@link #getDisplayValue1 displayValue1}.\n\nIf this property is set, it is rendered instead of value1."
        },
        {
          "name": "getDisplayValue2",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>displayValue2</code>"
          },
          "description": "Gets current value of property {@link #getDisplayValue2 displayValue2}.\n\nIf this property is set, it is rendered instead of value2."
        },
        {
          "name": "getHeight",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.CSSSize",
            "description": "Value of property <code>height</code>"
          },
          "description": "Gets current value of property {@link #getHeight height}.\n\nThe height of the chart. Overrides the height specified in the <code>size</code> property."
        },
        {
          "name": "getIsResponsive",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>isResponsive</code>"
          },
          "description": "Gets current value of property {@link #getIsResponsive isResponsive}.\n\nIf this set to true, width and height of the control are determined by the width and height of the container in which the control is placed. Size and Width properties are ignored in such case.\n\nDefault value is <code>false</code>.",
          "deprecated": { "since": "1.61.0" }
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.microchart.DeltaMicroChart."
        },
        {
          "name": "getSize",
          "visibility": "public",
          "returnValue": {
            "type": "sap.m.Size",
            "description": "Value of property <code>size</code>"
          },
          "description": "Gets current value of property {@link #getSize size}.\n\nThe size of the microchart. If not set, the default size is applied based on the size of the device tile. Responsive size takes width and height of the parent container where the delta micro chart is included.\n\nDefault value is <code>Auto</code>."
        },
        {
          "name": "getTitle1",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>title1</code>"
          },
          "description": "Gets current value of property {@link #getTitle1 title1}.\n\nThe first value title."
        },
        {
          "name": "getTitle2",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>title2</code>"
          },
          "description": "Gets current value of property {@link #getTitle2 title2}.\n\nThe second value title."
        },
        {
          "name": "getValue1",
          "visibility": "public",
          "returnValue": {
            "type": "float",
            "description": "Value of property <code>value1</code>"
          },
          "description": "Gets current value of property {@link #getValue1 value1}.\n\nThe first value for delta calculation."
        },
        {
          "name": "getValue2",
          "visibility": "public",
          "returnValue": {
            "type": "float",
            "description": "Value of property <code>value2</code>"
          },
          "description": "Gets current value of property {@link #getValue2 value2}.\n\nThe second value for delta calculation."
        },
        {
          "name": "getView",
          "visibility": "public",
          "since": "1.61.0",
          "returnValue": {
            "type": "sap.suite.ui.microchart.DeltaMicroChartViewType",
            "description": "Value of property <code>view</code>"
          },
          "description": "Gets current value of property {@link #getView view}.\n\nThe view of the chart. If not set, the <code>Normal</code> view is used by default.\n\nDefault value is <code>Normal</code>."
        },
        {
          "name": "getWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.CSSSize",
            "description": "Value of property <code>width</code>"
          },
          "description": "Gets current value of property {@link #getWidth width}.\n\nThe width of the chart. Overrides the width specified in the <code>size</code> property."
        },
        {
          "name": "removeAllAriaLabelledBy",
          "visibility": "public",
          "since": "1.60.0",
          "returnValue": {
            "type": "sap.ui.core.ID[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "removeAriaLabelledBy",
          "visibility": "public",
          "since": "1.60.0",
          "returnValue": {
            "type": "sap.ui.core.ID",
            "description": "The removed ariaLabelledBy or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vAriaLabelledBy",
              "type": "int|sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaLabelledBy to be removed or its index or ID"
            }
          ],
          "description": "Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "setColor",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.DeltaMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sColor",
              "type": "sap.m.ValueCSSColor",
              "optional": false,
              "description": "New value for property <code>color</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getColor color}.\n\nThe semantic color of the delta value.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Neutral</code>."
        },
        {
          "name": "setDeltaDisplayValue",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.DeltaMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sDeltaDisplayValue",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>deltaDisplayValue</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getDeltaDisplayValue deltaDisplayValue}.\n\nIf this property is set, it is rendered instead of a calculated delta.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setDisplayValue1",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.DeltaMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sDisplayValue1",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>displayValue1</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getDisplayValue1 displayValue1}.\n\nIf this property is set, it is rendered instead of value1.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setDisplayValue2",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.DeltaMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sDisplayValue2",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>displayValue2</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getDisplayValue2 displayValue2}.\n\nIf this property is set, it is rendered instead of value2.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setHeight",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.DeltaMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sHeight",
              "type": "sap.ui.core.CSSSize",
              "optional": false,
              "description": "New value for property <code>height</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getHeight height}.\n\nThe height of the chart. Overrides the height specified in the <code>size</code> property.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setIsResponsive",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": {
            "type": "sap.suite.ui.microchart.DeltaMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bIsResponsive",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>isResponsive</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getIsResponsive isResponsive}.\n\nIf this set to true, width and height of the control are determined by the width and height of the container in which the control is placed. Size and Width properties are ignored in such case.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>.",
          "deprecated": { "since": "1.61.0" }
        },
        {
          "name": "setSize",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.DeltaMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sSize",
              "type": "sap.m.Size",
              "optional": false,
              "description": "New value for property <code>size</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSize size}.\n\nThe size of the microchart. If not set, the default size is applied based on the size of the device tile. Responsive size takes width and height of the parent container where the delta micro chart is included.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Auto</code>."
        },
        {
          "name": "setTitle1",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.DeltaMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sTitle1",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>title1</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getTitle1 title1}.\n\nThe first value title.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setTitle2",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.DeltaMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sTitle2",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>title2</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getTitle2 title2}.\n\nThe second value title.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setValue1",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.DeltaMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fValue1",
              "type": "float",
              "optional": false,
              "description": "New value for property <code>value1</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getValue1 value1}.\n\nThe first value for delta calculation.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setValue2",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.DeltaMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fValue2",
              "type": "float",
              "optional": false,
              "description": "New value for property <code>value2</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getValue2 value2}.\n\nThe second value for delta calculation.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setView",
          "visibility": "public",
          "since": "1.61.0",
          "returnValue": {
            "type": "sap.suite.ui.microchart.DeltaMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sView",
              "type": "sap.suite.ui.microchart.DeltaMicroChartViewType",
              "optional": false,
              "description": "New value for property <code>view</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getView view}.\n\nThe view of the chart. If not set, the <code>Normal</code> view is used by default.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Normal</code>."
        },
        {
          "name": "setWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.DeltaMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sWidth",
              "type": "sap.ui.core.CSSSize",
              "optional": false,
              "description": "New value for property <code>width</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getWidth width}.\n\nThe width of the chart. Overrides the width specified in the <code>size</code> property.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.suite.ui.microchart.DeltaMicroChartViewType",
      "basename": "DeltaMicroChartViewType",
      "resource": "sap/suite/ui/microchart/library.js",
      "module": "sap/suite/ui/microchart/library",
      "export": "DeltaMicroChartViewType",
      "static": true,
      "visibility": "public",
      "since": "1.61",
      "description": "Lists the views of the delta micro chart concerning the position of titles.",
      "ui5-metamodel": true,
      "properties": [
        {
          "name": "Normal",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Titles are displayed above the bars."
        },
        {
          "name": "Responsive",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Behavior changes based on the current width of the chart. <code>Normal</code> view is used for charts up to 192px wide, and <code>Wide</code> is used for wider charts."
        },
        {
          "name": "Wide",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Titles are displayed in the same line with the bars."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.microchart.HarveyBallMicroChart",
      "basename": "HarveyBallMicroChart",
      "resource": "sap/suite/ui/microchart/HarveyBallMicroChart.js",
      "module": "sap/suite/ui/microchart/HarveyBallMicroChart",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.34",
      "extends": "sap.ui.core.Control",
      "description": "A radial chart that displays a value compared to its total. <br>Unlike a pie chart, which shows multiple values or sectors, a Harvey Ball microchart shows only one value from a total. <br>The sector that represents a value being compared to a total is defined by {@link sap.suite.ui.microchart.HarveyBallMicroChartItem}. <br>Note: You can assign a custom tooltip for this microchart. The custom tooltip can be set using expression binding. When no custom tooltip is defined, the tooltip is generated automatically based on the logic described in {@link sap.ui.core.Element#getTooltip_AsString}. For a combination of a generated and a custom tooltip, use <code>((AltText))</code> inside of the tooltip string. The aggregated data of the microchart can also be customized.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "total",
            "type": "float",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The total value. The total value is represented by a full circle, or 360 degrees value on the chart.",
            "methods": ["getTotal", "setTotal"]
          },
          {
            "name": "totalLabel",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The total label. If specified, it is displayed instead of the total value.",
            "methods": ["getTotalLabel", "setTotalLabel"]
          },
          {
            "name": "totalScale",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The scaling factor that is displayed next to the total value.",
            "methods": ["getTotalScale", "setTotalScale"]
          },
          {
            "name": "formattedLabel",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "description": "If set to <code>true</code>, the <code>totalLabel</code> property is used instead of the combination of the total value and its scaling factor. <br>The default value is <code>false</code>, which means that the total value, defined by the <code>total</code> property, and the scaling factor, defined by the <code>totalScale</code> property, are displayed separately.",
            "methods": ["getFormattedLabel", "setFormattedLabel"]
          },
          {
            "name": "showTotal",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "description": "If set to <code>true</code>, the total value is displayed next to the chart. The default setting is <code>true</code>.",
            "methods": ["getShowTotal", "setShowTotal"]
          },
          {
            "name": "showFractions",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "description": "If set to <code>true</code>, the fraction values are displayed next to the chart. The default setting is <code>true</code>.",
            "methods": ["getShowFractions", "setShowFractions"]
          },
          {
            "name": "size",
            "type": "sap.m.Size",
            "defaultValue": "Auto",
            "group": "Misc",
            "visibility": "public",
            "description": "The size of the chart. If not set, the default size is applied based on the device type.",
            "methods": ["getSize", "setSize"]
          },
          {
            "name": "colorPalette",
            "type": "string[]",
            "defaultValue": "[]",
            "group": "Appearance",
            "visibility": "public",
            "description": "The color palette for the chart. Currently only a single color (first color in the array) is supported. <br>If this property is defined, the semantic color defined in the {@link sap.suite.ui.microchart.HarveyBallMicroChartItem} is ignored.",
            "methods": ["getColorPalette", "setColorPalette"]
          },
          {
            "name": "width",
            "type": "sap.ui.core.CSSSize",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The width of the chart. Overrides the width specified in the <code>size</code> property.",
            "methods": ["getWidth", "setWidth"]
          },
          {
            "name": "height",
            "type": "sap.ui.core.CSSSize",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.62.0",
            "description": "The height of the chart. Overrides the height specified in the <code>size</code> property.",
            "methods": ["getHeight", "setHeight"]
          },
          {
            "name": "alignContent",
            "type": "sap.suite.ui.microchart.HorizontalAlignmentType",
            "defaultValue": "Left",
            "group": "Misc",
            "visibility": "public",
            "since": "1.62.0",
            "description": "The alignment of the content. If not set, the <code>Left</code> alignment type is used.",
            "methods": ["getAlignContent", "setAlignContent"]
          },
          {
            "name": "isResponsive",
            "type": "boolean",
            "defaultValue": false,
            "group": "Appearance",
            "visibility": "public",
            "since": "1.38.0",
            "description": "If set to <code>true</code>, the width and height of the control are determined by the width and height of the parent container, in which case the <code>size</code> and <code>width</code> properties are ignored.",
            "deprecated": { "since": "1.62.0" },
            "methods": ["getIsResponsive", "setIsResponsive"]
          }
        ],
        "aggregations": [
          {
            "name": "items",
            "singularName": "item",
            "type": "sap.suite.ui.microchart.HarveyBallMicroChartItem",
            "cardinality": "0..n",
            "visibility": "public",
            "bindable": true,
            "description": "The set of items. Currently only a single item is supported.",
            "methods": [
              "getItems",
              "destroyItems",
              "insertItem",
              "addItem",
              "removeItem",
              "indexOfItem",
              "removeAllItems",
              "bindItems",
              "unbindItems"
            ]
          }
        ],
        "defaultAggregation": "items",
        "associations": [
          {
            "name": "ariaLabelledBy",
            "singularName": "ariaLabelledBy",
            "type": "sap.ui.core.Control",
            "cardinality": "0..n",
            "visibility": "public",
            "since": "1.60.0",
            "description": "Controls or IDs that label this control. Can be used by screen reader software.",
            "methods": [
              "getAriaLabelledBy",
              "addAriaLabelledBy",
              "removeAriaLabelledBy",
              "removeAllAriaLabelledBy"
            ]
          }
        ],
        "events": [
          {
            "name": "press",
            "visibility": "public",
            "description": "This event is fired when the chart is clicked or tapped.",
            "methods": ["attachPress", "detachPress", "firePress"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new HarveyBallMicroChart.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "press",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "This event is fired when the chart is clicked or tapped."
        }
      ],
      "methods": [
        {
          "name": "addAriaLabelledBy",
          "visibility": "public",
          "since": "1.60.0",
          "returnValue": {
            "type": "sap.suite.ui.microchart.HarveyBallMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "vAriaLabelledBy",
              "type": "sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaLabelledBy to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "addItem",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.HarveyBallMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oItem",
              "type": "sap.suite.ui.microchart.HarveyBallMicroChartItem",
              "optional": false,
              "description": "The item to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some item to the aggregation {@link #getItems items}."
        },
        {
          "name": "attachPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.HarveyBallMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.microchart.HarveyBallMicroChart</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:press press} event of this <code>sap.suite.ui.microchart.HarveyBallMicroChart</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.microchart.HarveyBallMicroChart</code> itself.\n\nThis event is fired when the chart is clicked or tapped."
        },
        {
          "name": "bindItems",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.HarveyBallMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oBindingInfo",
              "type": "object",
              "optional": false,
              "description": "The binding information"
            }
          ],
          "description": "Binds aggregation {@link #getItems items} to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a detailed description of the possible properties of <code>oBindingInfo</code>."
        },
        {
          "name": "destroyItems",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.HarveyBallMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the items in the aggregation {@link #getItems items}."
        },
        {
          "name": "detachPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.HarveyBallMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:press press} event of this <code>sap.suite.ui.microchart.HarveyBallMicroChart</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.microchart.HarveyBallMicroChart with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "firePress",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.microchart.HarveyBallMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:press press} to attached listeners."
        },
        {
          "name": "getAlignContent",
          "visibility": "public",
          "since": "1.62.0",
          "returnValue": {
            "type": "sap.suite.ui.microchart.HorizontalAlignmentType",
            "description": "Value of property <code>alignContent</code>"
          },
          "description": "Gets current value of property {@link #getAlignContent alignContent}.\n\nThe alignment of the content. If not set, the <code>Left</code> alignment type is used.\n\nDefault value is <code>Left</code>."
        },
        {
          "name": "getAriaLabelledBy",
          "visibility": "public",
          "since": "1.60.0",
          "returnValue": { "type": "sap.ui.core.ID[]" },
          "description": "Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "getColorPalette",
          "visibility": "public",
          "returnValue": {
            "type": "string[]",
            "description": "Value of property <code>colorPalette</code>"
          },
          "description": "Gets current value of property {@link #getColorPalette colorPalette}.\n\nThe color palette for the chart. Currently only a single color (first color in the array) is supported. <br>If this property is defined, the semantic color defined in the {@link sap.suite.ui.microchart.HarveyBallMicroChartItem} is ignored.\n\nDefault value is <code>[]</code>."
        },
        {
          "name": "getFormattedLabel",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>formattedLabel</code>"
          },
          "description": "Gets current value of property {@link #getFormattedLabel formattedLabel}.\n\nIf set to <code>true</code>, the <code>totalLabel</code> property is used instead of the combination of the total value and its scaling factor. <br>The default value is <code>false</code>, which means that the total value, defined by the <code>total</code> property, and the scaling factor, defined by the <code>totalScale</code> property, are displayed separately.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getHeight",
          "visibility": "public",
          "since": "1.62.0",
          "returnValue": {
            "type": "sap.ui.core.CSSSize",
            "description": "Value of property <code>height</code>"
          },
          "description": "Gets current value of property {@link #getHeight height}.\n\nThe height of the chart. Overrides the height specified in the <code>size</code> property."
        },
        {
          "name": "getIsResponsive",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>isResponsive</code>"
          },
          "description": "Gets current value of property {@link #getIsResponsive isResponsive}.\n\nIf set to <code>true</code>, the width and height of the control are determined by the width and height of the parent container, in which case the <code>size</code> and <code>width</code> properties are ignored.\n\nDefault value is <code>false</code>.",
          "deprecated": { "since": "1.62.0" }
        },
        {
          "name": "getItems",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.HarveyBallMicroChartItem[]"
          },
          "description": "Gets content of aggregation {@link #getItems items}.\n\nThe set of items. Currently only a single item is supported."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.microchart.HarveyBallMicroChart."
        },
        {
          "name": "getShowFractions",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showFractions</code>"
          },
          "description": "Gets current value of property {@link #getShowFractions showFractions}.\n\nIf set to <code>true</code>, the fraction values are displayed next to the chart. The default setting is <code>true</code>.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getShowTotal",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showTotal</code>"
          },
          "description": "Gets current value of property {@link #getShowTotal showTotal}.\n\nIf set to <code>true</code>, the total value is displayed next to the chart. The default setting is <code>true</code>.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getSize",
          "visibility": "public",
          "returnValue": {
            "type": "sap.m.Size",
            "description": "Value of property <code>size</code>"
          },
          "description": "Gets current value of property {@link #getSize size}.\n\nThe size of the chart. If not set, the default size is applied based on the device type.\n\nDefault value is <code>Auto</code>."
        },
        {
          "name": "getTotal",
          "visibility": "public",
          "returnValue": {
            "type": "float",
            "description": "Value of property <code>total</code>"
          },
          "description": "Gets current value of property {@link #getTotal total}.\n\nThe total value. The total value is represented by a full circle, or 360 degrees value on the chart."
        },
        {
          "name": "getTotalLabel",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>totalLabel</code>"
          },
          "description": "Gets current value of property {@link #getTotalLabel totalLabel}.\n\nThe total label. If specified, it is displayed instead of the total value."
        },
        {
          "name": "getTotalScale",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>totalScale</code>"
          },
          "description": "Gets current value of property {@link #getTotalScale totalScale}.\n\nThe scaling factor that is displayed next to the total value."
        },
        {
          "name": "getWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.CSSSize",
            "description": "Value of property <code>width</code>"
          },
          "description": "Gets current value of property {@link #getWidth width}.\n\nThe width of the chart. Overrides the width specified in the <code>size</code> property."
        },
        {
          "name": "indexOfItem",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oItem",
              "type": "sap.suite.ui.microchart.HarveyBallMicroChartItem",
              "optional": false,
              "description": "The item whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.suite.ui.microchart.HarveyBallMicroChartItem</code> in the aggregation {@link #getItems items}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "insertItem",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.HarveyBallMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oItem",
              "type": "sap.suite.ui.microchart.HarveyBallMicroChartItem",
              "optional": false,
              "description": "The item to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the item should be inserted at; for a negative value of <code>iIndex</code>, the item is inserted at position 0; for a value greater than the current size of the aggregation, the item is inserted at the last position"
            }
          ],
          "description": "Inserts a item into the aggregation {@link #getItems items}."
        },
        {
          "name": "removeAllAriaLabelledBy",
          "visibility": "public",
          "since": "1.60.0",
          "returnValue": {
            "type": "sap.ui.core.ID[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "removeAllItems",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.HarveyBallMicroChartItem[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getItems items}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeAriaLabelledBy",
          "visibility": "public",
          "since": "1.60.0",
          "returnValue": {
            "type": "sap.ui.core.ID",
            "description": "The removed ariaLabelledBy or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vAriaLabelledBy",
              "type": "int|sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaLabelledBy to be removed or its index or ID"
            }
          ],
          "description": "Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "removeItem",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.HarveyBallMicroChartItem",
            "description": "The removed item or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vItem",
              "type": "int|string|sap.suite.ui.microchart.HarveyBallMicroChartItem",
              "optional": false,
              "description": "The item to remove or its index or id"
            }
          ],
          "description": "Removes a item from the aggregation {@link #getItems items}."
        },
        {
          "name": "setAlignContent",
          "visibility": "public",
          "since": "1.62.0",
          "returnValue": {
            "type": "sap.suite.ui.microchart.HarveyBallMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sAlignContent",
              "type": "sap.suite.ui.microchart.HorizontalAlignmentType",
              "optional": false,
              "description": "New value for property <code>alignContent</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getAlignContent alignContent}.\n\nThe alignment of the content. If not set, the <code>Left</code> alignment type is used.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Left</code>."
        },
        {
          "name": "setColorPalette",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.HarveyBallMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sColorPalette",
              "type": "string[]",
              "optional": false,
              "description": "New value for property <code>colorPalette</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getColorPalette colorPalette}.\n\nThe color palette for the chart. Currently only a single color (first color in the array) is supported. <br>If this property is defined, the semantic color defined in the {@link sap.suite.ui.microchart.HarveyBallMicroChartItem} is ignored.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>[]</code>."
        },
        {
          "name": "setFormattedLabel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.HarveyBallMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bFormattedLabel",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>formattedLabel</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getFormattedLabel formattedLabel}.\n\nIf set to <code>true</code>, the <code>totalLabel</code> property is used instead of the combination of the total value and its scaling factor. <br>The default value is <code>false</code>, which means that the total value, defined by the <code>total</code> property, and the scaling factor, defined by the <code>totalScale</code> property, are displayed separately.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setHeight",
          "visibility": "public",
          "since": "1.62.0",
          "returnValue": {
            "type": "sap.suite.ui.microchart.HarveyBallMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sHeight",
              "type": "sap.ui.core.CSSSize",
              "optional": false,
              "description": "New value for property <code>height</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getHeight height}.\n\nThe height of the chart. Overrides the height specified in the <code>size</code> property.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setIsResponsive",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": {
            "type": "sap.suite.ui.microchart.HarveyBallMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bIsResponsive",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>isResponsive</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getIsResponsive isResponsive}.\n\nIf set to <code>true</code>, the width and height of the control are determined by the width and height of the parent container, in which case the <code>size</code> and <code>width</code> properties are ignored.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>.",
          "deprecated": { "since": "1.62.0" }
        },
        {
          "name": "setShowFractions",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.HarveyBallMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowFractions",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showFractions</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowFractions showFractions}.\n\nIf set to <code>true</code>, the fraction values are displayed next to the chart. The default setting is <code>true</code>.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setShowTotal",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.HarveyBallMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowTotal",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showTotal</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowTotal showTotal}.\n\nIf set to <code>true</code>, the total value is displayed next to the chart. The default setting is <code>true</code>.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setSize",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.HarveyBallMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sSize",
              "type": "sap.m.Size",
              "optional": false,
              "description": "New value for property <code>size</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSize size}.\n\nThe size of the chart. If not set, the default size is applied based on the device type.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Auto</code>."
        },
        {
          "name": "setTotal",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.HarveyBallMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fTotal",
              "type": "float",
              "optional": false,
              "description": "New value for property <code>total</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getTotal total}.\n\nThe total value. The total value is represented by a full circle, or 360 degrees value on the chart.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setTotalLabel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.HarveyBallMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sTotalLabel",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>totalLabel</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getTotalLabel totalLabel}.\n\nThe total label. If specified, it is displayed instead of the total value.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setTotalScale",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.HarveyBallMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sTotalScale",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>totalScale</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getTotalScale totalScale}.\n\nThe scaling factor that is displayed next to the total value.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.HarveyBallMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sWidth",
              "type": "sap.ui.core.CSSSize",
              "optional": false,
              "description": "New value for property <code>width</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getWidth width}.\n\nThe width of the chart. Overrides the width specified in the <code>size</code> property.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "unbindItems",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.HarveyBallMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Unbinds aggregation {@link #getItems items} from model data."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.microchart.HarveyBallMicroChartItem",
      "basename": "HarveyBallMicroChartItem",
      "resource": "sap/suite/ui/microchart/HarveyBallMicroChartItem.js",
      "module": "sap/suite/ui/microchart/HarveyBallMicroChartItem",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.34",
      "extends": "sap.ui.core.Element",
      "description": "Defines the fraction value that is compared with total in a {@link sap.suite.ui.microchart.HarveyBallMicroChart}.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "element",
        "properties": [
          {
            "name": "color",
            "type": "sap.m.ValueCSSColor",
            "defaultValue": "Neutral",
            "group": "Misc",
            "visibility": "public",
            "description": "The color of the sector representing the fraction value.<br>The same color is used for the fraction value label defined either by the <code>fraction</code> property or by the <code>fractionLabel</code> property.",
            "methods": ["getColor", "setColor"]
          },
          {
            "name": "fraction",
            "type": "float",
            "defaultValue": 0,
            "group": "Misc",
            "visibility": "public",
            "description": "The fraction value that defines the size of the colored sector. <br>This property must be set to a value that is a fraction of the <code>total</code> value defined for the {@link sap.suite.ui.microchart.HarveyBallMicroChart}.",
            "methods": ["getFraction", "setFraction"]
          },
          {
            "name": "fractionLabel",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The fraction label. If this property is specified, it is displayed instead of the label that is based on the <code>fraction</code> property.",
            "methods": ["getFractionLabel", "setFractionLabel"]
          },
          {
            "name": "fractionScale",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The scaling factor that is displayed after the fraction value.",
            "methods": ["getFractionScale", "setFractionScale"]
          },
          {
            "name": "formattedLabel",
            "type": "boolean",
            "defaultValue": false,
            "group": "Misc",
            "visibility": "public",
            "description": "If set to <code>true</code>, the <code>fractionLabel</code> property is used instead of the combination of the fraction value and scaling factor. <br>The default value is <code>false</code>, which means that the fraction value, defined by the <code>fraction</code> property, and the scaling factor, defined by the <code>fractionScale</code> property are displayed separately.",
            "methods": ["getFormattedLabel", "setFormattedLabel"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new HarveyBallMicroChartItem to be used in a {@link sap.suite.ui.microchart.HarveyBallMicroChart}.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.microchart.HarveyBallMicroChartItem with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
        },
        {
          "name": "getColor",
          "visibility": "public",
          "returnValue": {
            "type": "sap.m.ValueCSSColor",
            "description": "Value of property <code>color</code>"
          },
          "description": "Gets current value of property {@link #getColor color}.\n\nThe color of the sector representing the fraction value.<br>The same color is used for the fraction value label defined either by the <code>fraction</code> property or by the <code>fractionLabel</code> property.\n\nDefault value is <code>Neutral</code>."
        },
        {
          "name": "getFormattedLabel",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>formattedLabel</code>"
          },
          "description": "Gets current value of property {@link #getFormattedLabel formattedLabel}.\n\nIf set to <code>true</code>, the <code>fractionLabel</code> property is used instead of the combination of the fraction value and scaling factor. <br>The default value is <code>false</code>, which means that the fraction value, defined by the <code>fraction</code> property, and the scaling factor, defined by the <code>fractionScale</code> property are displayed separately.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getFraction",
          "visibility": "public",
          "returnValue": {
            "type": "float",
            "description": "Value of property <code>fraction</code>"
          },
          "description": "Gets current value of property {@link #getFraction fraction}.\n\nThe fraction value that defines the size of the colored sector. <br>This property must be set to a value that is a fraction of the <code>total</code> value defined for the {@link sap.suite.ui.microchart.HarveyBallMicroChart}.\n\nDefault value is <code>0</code>."
        },
        {
          "name": "getFractionLabel",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>fractionLabel</code>"
          },
          "description": "Gets current value of property {@link #getFractionLabel fractionLabel}.\n\nThe fraction label. If this property is specified, it is displayed instead of the label that is based on the <code>fraction</code> property."
        },
        {
          "name": "getFractionScale",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>fractionScale</code>"
          },
          "description": "Gets current value of property {@link #getFractionScale fractionScale}.\n\nThe scaling factor that is displayed after the fraction value."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.microchart.HarveyBallMicroChartItem."
        },
        {
          "name": "setColor",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.HarveyBallMicroChartItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sColor",
              "type": "sap.m.ValueCSSColor",
              "optional": false,
              "description": "New value for property <code>color</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getColor color}.\n\nThe color of the sector representing the fraction value.<br>The same color is used for the fraction value label defined either by the <code>fraction</code> property or by the <code>fractionLabel</code> property.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Neutral</code>."
        },
        {
          "name": "setFormattedLabel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.HarveyBallMicroChartItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bFormattedLabel",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>formattedLabel</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getFormattedLabel formattedLabel}.\n\nIf set to <code>true</code>, the <code>fractionLabel</code> property is used instead of the combination of the fraction value and scaling factor. <br>The default value is <code>false</code>, which means that the fraction value, defined by the <code>fraction</code> property, and the scaling factor, defined by the <code>fractionScale</code> property are displayed separately.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setFraction",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.HarveyBallMicroChartItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fFraction",
              "type": "float",
              "optional": false,
              "description": "New value for property <code>fraction</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getFraction fraction}.\n\nThe fraction value that defines the size of the colored sector. <br>This property must be set to a value that is a fraction of the <code>total</code> value defined for the {@link sap.suite.ui.microchart.HarveyBallMicroChart}.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>0</code>."
        },
        {
          "name": "setFractionLabel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.HarveyBallMicroChartItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sFractionLabel",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>fractionLabel</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getFractionLabel fractionLabel}.\n\nThe fraction label. If this property is specified, it is displayed instead of the label that is based on the <code>fraction</code> property.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setFractionScale",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.HarveyBallMicroChartItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sFractionScale",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>fractionScale</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getFractionScale fractionScale}.\n\nThe scaling factor that is displayed after the fraction value.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.suite.ui.microchart.HorizontalAlignmentType",
      "basename": "HorizontalAlignmentType",
      "resource": "sap/suite/ui/microchart/library.js",
      "module": "sap/suite/ui/microchart/library",
      "export": "HorizontalAlignmentType",
      "static": true,
      "visibility": "public",
      "since": "1.62",
      "description": "Alignment type for the microchart content.",
      "ui5-metamodel": true,
      "properties": [
        {
          "name": "Center",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Center alignment."
        },
        {
          "name": "Left",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Left alignment."
        },
        {
          "name": "Right",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Right alignment."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.microchart.InteractiveBarChart",
      "basename": "InteractiveBarChart",
      "resource": "sap/suite/ui/microchart/InteractiveBarChart.js",
      "module": "sap/suite/ui/microchart/InteractiveBarChart",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.42.0",
      "extends": "sap.ui.core.Control",
      "description": "The InteractiveBarChart control belongs to a chart control group in the MicroChart library with a number of interactive features. These interactive features provide more information on a chart value. For example, by selecting a bar you can get more details on the displayed value.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "displayedBars",
            "type": "int",
            "defaultValue": 3,
            "group": "Appearance",
            "visibility": "public",
            "description": "The number of displayed bars.",
            "methods": ["getDisplayedBars", "setDisplayedBars"]
          },
          {
            "name": "labelWidth",
            "type": "sap.ui.core.Percentage",
            "defaultValue": "40%",
            "group": "Appearance",
            "visibility": "public",
            "description": "Width of the labels column in the resulting layout (in percentage). Possible range of values from 0 to 100. A value of 40 results in the labels column taking up 40% of available space.",
            "methods": ["getLabelWidth", "setLabelWidth"]
          },
          {
            "name": "selectionEnabled",
            "type": "boolean",
            "defaultValue": true,
            "group": "Behavior",
            "visibility": "public",
            "description": "Enables the selection in the chart.",
            "methods": ["getSelectionEnabled", "setSelectionEnabled"]
          },
          {
            "name": "min",
            "type": "float",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "description": "Begin of displayed scale.",
            "methods": ["getMin", "setMin"]
          },
          {
            "name": "max",
            "type": "float",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "description": "End of displayed scale.",
            "methods": ["getMax", "setMax"]
          }
        ],
        "aggregations": [
          {
            "name": "bars",
            "singularName": "bar",
            "type": "sap.suite.ui.microchart.InteractiveBarChartBar",
            "cardinality": "0..n",
            "visibility": "public",
            "bindable": true,
            "description": "Bars displayed on the chart.",
            "methods": [
              "getBars",
              "destroyBars",
              "insertBar",
              "addBar",
              "removeBar",
              "indexOfBar",
              "removeAllBars",
              "bindBars",
              "unbindBars"
            ]
          }
        ],
        "defaultAggregation": "bars",
        "associations": [
          {
            "name": "ariaLabelledBy",
            "singularName": "ariaLabelledBy",
            "type": "sap.ui.core.Control",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Association to controls which label this control (see WAI-ARIA attribute aria-labelledby).",
            "methods": [
              "getAriaLabelledBy",
              "addAriaLabelledBy",
              "removeAriaLabelledBy",
              "removeAllAriaLabelledBy"
            ]
          }
        ],
        "events": [
          {
            "name": "selectionChanged",
            "visibility": "public",
            "description": "Event is fired when user has selected or deselected a bar.",
            "parameters": {
              "selectedBars": {
                "name": "selectedBars",
                "type": "sap.suite.ui.microchart.InteractiveBarChartBar[]",
                "description": "All bars which are in selected state."
              },
              "bar": {
                "name": "bar",
                "type": "sap.suite.ui.microchart.InteractiveBarChartBar",
                "description": "The bar being selected or deselected."
              },
              "selected": {
                "name": "selected",
                "type": "boolean",
                "description": "The selection state of the bar being selected or deselected."
              }
            },
            "methods": [
              "attachSelectionChanged",
              "detachSelectionChanged",
              "fireSelectionChanged"
            ]
          },
          {
            "name": "press",
            "visibility": "public",
            "description": "The event is fired when the user presses the chart while its bars are not selectable in non-interactive mode. This is decided internally, depending on the size of the bars.",
            "methods": ["attachPress", "detachPress", "firePress"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new InteractiveBarChart control.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "press",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "The event is fired when the user presses the chart while its bars are not selectable in non-interactive mode. This is decided internally, depending on the size of the bars."
        },
        {
          "name": "selectionChanged",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "selectedBars": {
                      "name": "selectedBars",
                      "type": "sap.suite.ui.microchart.InteractiveBarChartBar[]",
                      "optional": false,
                      "description": "All bars which are in selected state."
                    },
                    "bar": {
                      "name": "bar",
                      "type": "sap.suite.ui.microchart.InteractiveBarChartBar",
                      "optional": false,
                      "description": "The bar being selected or deselected."
                    },
                    "selected": {
                      "name": "selected",
                      "type": "boolean",
                      "optional": false,
                      "description": "The selection state of the bar being selected or deselected."
                    }
                  }
                }
              }
            }
          ],
          "description": "Event is fired when user has selected or deselected a bar."
        }
      ],
      "methods": [
        {
          "name": "addAriaLabelledBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.InteractiveBarChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "vAriaLabelledBy",
              "type": "sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaLabelledBy to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "addBar",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.InteractiveBarChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oBar",
              "type": "sap.suite.ui.microchart.InteractiveBarChartBar",
              "optional": false,
              "description": "The bar to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some bar to the aggregation {@link #getBars bars}."
        },
        {
          "name": "attachPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.InteractiveBarChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.microchart.InteractiveBarChart</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:press press} event of this <code>sap.suite.ui.microchart.InteractiveBarChart</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.microchart.InteractiveBarChart</code> itself.\n\nThe event is fired when the user presses the chart while its bars are not selectable in non-interactive mode. This is decided internally, depending on the size of the bars."
        },
        {
          "name": "attachSelectionChanged",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.InteractiveBarChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.microchart.InteractiveBarChart</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:selectionChanged selectionChanged} event of this <code>sap.suite.ui.microchart.InteractiveBarChart</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.microchart.InteractiveBarChart</code> itself.\n\nEvent is fired when user has selected or deselected a bar."
        },
        {
          "name": "bindBars",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.InteractiveBarChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oBindingInfo",
              "type": "object",
              "optional": false,
              "description": "The binding information"
            }
          ],
          "description": "Binds aggregation {@link #getBars bars} to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a detailed description of the possible properties of <code>oBindingInfo</code>."
        },
        {
          "name": "destroyBars",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.InteractiveBarChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the bars in the aggregation {@link #getBars bars}."
        },
        {
          "name": "detachPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.InteractiveBarChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:press press} event of this <code>sap.suite.ui.microchart.InteractiveBarChart</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachSelectionChanged",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.InteractiveBarChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:selectionChanged selectionChanged} event of this <code>sap.suite.ui.microchart.InteractiveBarChart</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.microchart.InteractiveBarChart with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "firePress",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.microchart.InteractiveBarChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:press press} to attached listeners."
        },
        {
          "name": "fireSelectionChanged",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.microchart.InteractiveBarChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "selectedBars": {
                  "name": "selectedBars",
                  "type": "sap.suite.ui.microchart.InteractiveBarChartBar[]",
                  "optional": true,
                  "description": "All bars which are in selected state."
                },
                "bar": {
                  "name": "bar",
                  "type": "sap.suite.ui.microchart.InteractiveBarChartBar",
                  "optional": true,
                  "description": "The bar being selected or deselected."
                },
                "selected": {
                  "name": "selected",
                  "type": "boolean",
                  "optional": true,
                  "description": "The selection state of the bar being selected or deselected."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:selectionChanged selectionChanged} to attached listeners."
        },
        {
          "name": "getAriaLabelledBy",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.ID[]" },
          "description": "Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "getBars",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.InteractiveBarChartBar[]"
          },
          "description": "Gets content of aggregation {@link #getBars bars}.\n\nBars displayed on the chart."
        },
        {
          "name": "getDisplayedBars",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>displayedBars</code>"
          },
          "description": "Gets current value of property {@link #getDisplayedBars displayedBars}.\n\nThe number of displayed bars.\n\nDefault value is <code>3</code>."
        },
        {
          "name": "getLabelWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.Percentage",
            "description": "Value of property <code>labelWidth</code>"
          },
          "description": "Gets current value of property {@link #getLabelWidth labelWidth}.\n\nWidth of the labels column in the resulting layout (in percentage). Possible range of values from 0 to 100. A value of 40 results in the labels column taking up 40% of available space.\n\nDefault value is <code>40%</code>."
        },
        {
          "name": "getMax",
          "visibility": "public",
          "returnValue": {
            "type": "float",
            "description": "Value of property <code>max</code>"
          },
          "description": "Gets current value of property {@link #getMax max}.\n\nEnd of displayed scale."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.microchart.InteractiveBarChart."
        },
        {
          "name": "getMin",
          "visibility": "public",
          "returnValue": {
            "type": "float",
            "description": "Value of property <code>min</code>"
          },
          "description": "Gets current value of property {@link #getMin min}.\n\nBegin of displayed scale."
        },
        {
          "name": "getSelectedBars",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.InteractiveBarChartBar[]",
            "description": "All selected bars"
          },
          "description": "Gets all selected bars."
        },
        {
          "name": "getSelectionEnabled",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>selectionEnabled</code>"
          },
          "description": "Gets current value of property {@link #getSelectionEnabled selectionEnabled}.\n\nEnables the selection in the chart.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "indexOfBar",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oBar",
              "type": "sap.suite.ui.microchart.InteractiveBarChartBar",
              "optional": false,
              "description": "The bar whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.suite.ui.microchart.InteractiveBarChartBar</code> in the aggregation {@link #getBars bars}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "insertBar",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.InteractiveBarChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oBar",
              "type": "sap.suite.ui.microchart.InteractiveBarChartBar",
              "optional": false,
              "description": "The bar to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the bar should be inserted at; for a negative value of <code>iIndex</code>, the bar is inserted at position 0; for a value greater than the current size of the aggregation, the bar is inserted at the last position"
            }
          ],
          "description": "Inserts a bar into the aggregation {@link #getBars bars}."
        },
        {
          "name": "removeAllAriaLabelledBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.ID[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "removeAllBars",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.InteractiveBarChartBar[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getBars bars}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeAriaLabelledBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.ID",
            "description": "The removed ariaLabelledBy or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vAriaLabelledBy",
              "type": "int|sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaLabelledBy to be removed or its index or ID"
            }
          ],
          "description": "Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "removeBar",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.InteractiveBarChartBar",
            "description": "The removed bar or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vBar",
              "type": "int|string|sap.suite.ui.microchart.InteractiveBarChartBar",
              "optional": false,
              "description": "The bar to remove or its index or id"
            }
          ],
          "description": "Removes a bar from the aggregation {@link #getBars bars}."
        },
        {
          "name": "setDisplayedBars",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.InteractiveBarChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iDisplayedBars",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>displayedBars</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getDisplayedBars displayedBars}.\n\nThe number of displayed bars.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>3</code>."
        },
        {
          "name": "setLabelWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.InteractiveBarChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sLabelWidth",
              "type": "sap.ui.core.Percentage",
              "optional": false,
              "description": "New value for property <code>labelWidth</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getLabelWidth labelWidth}.\n\nWidth of the labels column in the resulting layout (in percentage). Possible range of values from 0 to 100. A value of 40 results in the labels column taking up 40% of available space.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>40%</code>."
        },
        {
          "name": "setMax",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.InteractiveBarChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fMax",
              "type": "float",
              "optional": false,
              "description": "New value for property <code>max</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getMax max}.\n\nEnd of displayed scale.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setMin",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.InteractiveBarChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fMin",
              "type": "float",
              "optional": false,
              "description": "New value for property <code>min</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getMin min}.\n\nBegin of displayed scale.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setSelectedBars",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.InteractiveBarChart",
            "description": "this to allow method chaining"
          },
          "parameters": [
            {
              "name": "selectedBars",
              "type": "sap.suite.ui.microchart.InteractiveBarChartBar|sap.suite.ui.microchart.InteractiveBarChartBar[]",
              "optional": false,
              "description": "A bar element or an array of bars for which the status should be set to selected."
            }
          ],
          "description": "Already selected bars will be deselected and members of the selectedBars parameter which are part of the bars aggregation will be set to selected state."
        },
        {
          "name": "setSelectionEnabled",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.InteractiveBarChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bSelectionEnabled",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>selectionEnabled</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSelectionEnabled selectionEnabled}.\n\nEnables the selection in the chart.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "unbindBars",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.InteractiveBarChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Unbinds aggregation {@link #getBars bars} from model data."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.microchart.InteractiveBarChartBar",
      "basename": "InteractiveBarChartBar",
      "resource": "sap/suite/ui/microchart/InteractiveBarChartBar.js",
      "module": "sap/suite/ui/microchart/InteractiveBarChartBar",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.42.0",
      "extends": "sap.ui.core.Element",
      "description": "A bar element for the InteractiveBarChart.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "element",
        "properties": [
          {
            "name": "label",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The label for the chart bar.",
            "methods": ["getLabel", "setLabel"]
          },
          {
            "name": "selected",
            "type": "boolean",
            "defaultValue": false,
            "group": "Appearance",
            "visibility": "public",
            "description": "Determines if the chart bar is selected.",
            "methods": ["getSelected", "setSelected"]
          },
          {
            "name": "displayedValue",
            "type": "string",
            "defaultValue": null,
            "group": "Data",
            "visibility": "public",
            "description": "The value label to be displayed on the bar in the chart.",
            "methods": ["getDisplayedValue", "setDisplayedValue"]
          },
          {
            "name": "color",
            "type": "sap.m.ValueColor",
            "defaultValue": "Neutral",
            "group": "Misc",
            "visibility": "public",
            "since": "1.50.0",
            "description": "Determines the color of the bar.",
            "methods": ["getColor", "setColor"]
          },
          {
            "name": "value",
            "type": "float",
            "defaultValue": null,
            "group": "Data",
            "visibility": "public",
            "description": "The numeric value of the chart bar to be displayed on the bar.",
            "methods": ["getValue", "setValue"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for the bar element of the InteractiveBarChart.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.microchart.InteractiveBarChartBar with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
        },
        {
          "name": "getColor",
          "visibility": "public",
          "since": "1.50.0",
          "returnValue": {
            "type": "sap.m.ValueColor",
            "description": "Value of property <code>color</code>"
          },
          "description": "Gets current value of property {@link #getColor color}.\n\nDetermines the color of the bar.\n\nDefault value is <code>Neutral</code>."
        },
        {
          "name": "getDisplayedValue",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>displayedValue</code>"
          },
          "description": "Gets current value of property {@link #getDisplayedValue displayedValue}.\n\nThe value label to be displayed on the bar in the chart."
        },
        {
          "name": "getLabel",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>label</code>"
          },
          "description": "Gets current value of property {@link #getLabel label}.\n\nThe label for the chart bar."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.microchart.InteractiveBarChartBar."
        },
        {
          "name": "getSelected",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>selected</code>"
          },
          "description": "Gets current value of property {@link #getSelected selected}.\n\nDetermines if the chart bar is selected.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getValue",
          "visibility": "public",
          "returnValue": {
            "type": "float",
            "description": "Value of property <code>value</code>"
          },
          "description": "Gets current value of property {@link #getValue value}.\n\nThe numeric value of the chart bar to be displayed on the bar."
        },
        {
          "name": "setColor",
          "visibility": "public",
          "since": "1.50.0",
          "returnValue": {
            "type": "sap.suite.ui.microchart.InteractiveBarChartBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sColor",
              "type": "sap.m.ValueColor",
              "optional": false,
              "description": "New value for property <code>color</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getColor color}.\n\nDetermines the color of the bar.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Neutral</code>."
        },
        {
          "name": "setDisplayedValue",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.InteractiveBarChartBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sDisplayedValue",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>displayedValue</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getDisplayedValue displayedValue}.\n\nThe value label to be displayed on the bar in the chart.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setLabel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.InteractiveBarChartBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sLabel",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>label</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getLabel label}.\n\nThe label for the chart bar.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setSelected",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.InteractiveBarChartBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bSelected",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>selected</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSelected selected}.\n\nDetermines if the chart bar is selected.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setValue",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.InteractiveBarChartBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fValue",
              "type": "float",
              "optional": false,
              "description": "New value for property <code>value</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getValue value}.\n\nThe numeric value of the chart bar to be displayed on the bar.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.microchart.InteractiveDonutChart",
      "basename": "InteractiveDonutChart",
      "resource": "sap/suite/ui/microchart/InteractiveDonutChart.js",
      "module": "sap/suite/ui/microchart/InteractiveDonutChart",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.42.0",
      "extends": "sap.ui.core.Control",
      "description": "The InteractiveDonutChart control belongs to a chart control group in the MicroChart library with a number of interactive features. These interactive features provide more information on a chart value. For example, by selecting a segment you can get more details on the displayed value.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "displayedSegments",
            "type": "int",
            "defaultValue": 3,
            "group": "Appearance",
            "visibility": "public",
            "description": "Number of segments to be displayed.",
            "methods": ["getDisplayedSegments", "setDisplayedSegments"]
          },
          {
            "name": "selectionEnabled",
            "type": "boolean",
            "defaultValue": true,
            "group": "Behavior",
            "visibility": "public",
            "description": "Switch which enables or disables selection.",
            "methods": ["getSelectionEnabled", "setSelectionEnabled"]
          }
        ],
        "aggregations": [
          {
            "name": "segments",
            "singularName": "segment",
            "type": "sap.suite.ui.microchart.InteractiveDonutChartSegment",
            "cardinality": "0..n",
            "visibility": "public",
            "bindable": true,
            "description": "Aggregation which contains all segments.",
            "methods": [
              "getSegments",
              "destroySegments",
              "insertSegment",
              "addSegment",
              "removeSegment",
              "indexOfSegment",
              "removeAllSegments",
              "bindSegments",
              "unbindSegments"
            ]
          }
        ],
        "defaultAggregation": "segments",
        "associations": [
          {
            "name": "ariaLabelledBy",
            "singularName": "ariaLabelledBy",
            "type": "sap.ui.core.Control",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Association to controls which label this control (see WAI-ARIA attribute aria-labelledby).",
            "methods": [
              "getAriaLabelledBy",
              "addAriaLabelledBy",
              "removeAriaLabelledBy",
              "removeAllAriaLabelledBy"
            ]
          }
        ],
        "events": [
          {
            "name": "selectionChanged",
            "visibility": "public",
            "description": "Event is fired when a user has selected or deselected a segment or a legend entry.",
            "parameters": {
              "selectedSegments": {
                "name": "selectedSegments",
                "type": "sap.suite.ui.microchart.InteractiveDonutChartSegment[]",
                "description": "Contains all selected segments."
              },
              "segment": {
                "name": "segment",
                "type": "sap.suite.ui.microchart.InteractiveDonutChartSegment",
                "description": "The segment whose selection state has changed."
              },
              "selected": {
                "name": "selected",
                "type": "boolean",
                "description": "Indicates whether the segment \"segment\" is selected or not."
              }
            },
            "methods": [
              "attachSelectionChanged",
              "detachSelectionChanged",
              "fireSelectionChanged"
            ]
          },
          {
            "name": "press",
            "visibility": "public",
            "description": "The event is fired when the user presses the chart while its segments are not selectable in non-interactive mode. This is decided internally, depending on the size of the chart.",
            "methods": ["attachPress", "detachPress", "firePress"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for InteractiveDonutChart control.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "press",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "The event is fired when the user presses the chart while its segments are not selectable in non-interactive mode. This is decided internally, depending on the size of the chart."
        },
        {
          "name": "selectionChanged",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "selectedSegments": {
                      "name": "selectedSegments",
                      "type": "sap.suite.ui.microchart.InteractiveDonutChartSegment[]",
                      "optional": false,
                      "description": "Contains all selected segments."
                    },
                    "segment": {
                      "name": "segment",
                      "type": "sap.suite.ui.microchart.InteractiveDonutChartSegment",
                      "optional": false,
                      "description": "The segment whose selection state has changed."
                    },
                    "selected": {
                      "name": "selected",
                      "type": "boolean",
                      "optional": false,
                      "description": "Indicates whether the segment \"segment\" is selected or not."
                    }
                  }
                }
              }
            }
          ],
          "description": "Event is fired when a user has selected or deselected a segment or a legend entry."
        }
      ],
      "methods": [
        {
          "name": "addAriaLabelledBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.InteractiveDonutChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "vAriaLabelledBy",
              "type": "sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaLabelledBy to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "addSegment",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.InteractiveDonutChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oSegment",
              "type": "sap.suite.ui.microchart.InteractiveDonutChartSegment",
              "optional": false,
              "description": "The segment to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some segment to the aggregation {@link #getSegments segments}."
        },
        {
          "name": "attachPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.InteractiveDonutChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.microchart.InteractiveDonutChart</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:press press} event of this <code>sap.suite.ui.microchart.InteractiveDonutChart</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.microchart.InteractiveDonutChart</code> itself.\n\nThe event is fired when the user presses the chart while its segments are not selectable in non-interactive mode. This is decided internally, depending on the size of the chart."
        },
        {
          "name": "attachSelectionChanged",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.InteractiveDonutChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.microchart.InteractiveDonutChart</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:selectionChanged selectionChanged} event of this <code>sap.suite.ui.microchart.InteractiveDonutChart</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.microchart.InteractiveDonutChart</code> itself.\n\nEvent is fired when a user has selected or deselected a segment or a legend entry."
        },
        {
          "name": "bindSegments",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.InteractiveDonutChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oBindingInfo",
              "type": "object",
              "optional": false,
              "description": "The binding information"
            }
          ],
          "description": "Binds aggregation {@link #getSegments segments} to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a detailed description of the possible properties of <code>oBindingInfo</code>."
        },
        {
          "name": "destroySegments",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.InteractiveDonutChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the segments in the aggregation {@link #getSegments segments}."
        },
        {
          "name": "detachPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.InteractiveDonutChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:press press} event of this <code>sap.suite.ui.microchart.InteractiveDonutChart</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachSelectionChanged",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.InteractiveDonutChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:selectionChanged selectionChanged} event of this <code>sap.suite.ui.microchart.InteractiveDonutChart</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.microchart.InteractiveDonutChart with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "firePress",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.microchart.InteractiveDonutChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:press press} to attached listeners."
        },
        {
          "name": "fireSelectionChanged",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.microchart.InteractiveDonutChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "selectedSegments": {
                  "name": "selectedSegments",
                  "type": "sap.suite.ui.microchart.InteractiveDonutChartSegment[]",
                  "optional": true,
                  "description": "Contains all selected segments."
                },
                "segment": {
                  "name": "segment",
                  "type": "sap.suite.ui.microchart.InteractiveDonutChartSegment",
                  "optional": true,
                  "description": "The segment whose selection state has changed."
                },
                "selected": {
                  "name": "selected",
                  "type": "boolean",
                  "optional": true,
                  "description": "Indicates whether the segment \"segment\" is selected or not."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:selectionChanged selectionChanged} to attached listeners."
        },
        {
          "name": "getAriaLabelledBy",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.ID[]" },
          "description": "Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "getDisplayedSegments",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>displayedSegments</code>"
          },
          "description": "Gets current value of property {@link #getDisplayedSegments displayedSegments}.\n\nNumber of segments to be displayed.\n\nDefault value is <code>3</code>."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.microchart.InteractiveDonutChart."
        },
        {
          "name": "getSegments",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.InteractiveDonutChartSegment[]"
          },
          "description": "Gets content of aggregation {@link #getSegments segments}.\n\nAggregation which contains all segments."
        },
        {
          "name": "getSelectedSegments",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.InteractiveDonutChartSegment[]",
            "description": "All selected segments"
          },
          "description": "Gets all selected segments or an empty array if there is no segment selected yet"
        },
        {
          "name": "getSelectionEnabled",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>selectionEnabled</code>"
          },
          "description": "Gets current value of property {@link #getSelectionEnabled selectionEnabled}.\n\nSwitch which enables or disables selection.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "indexOfSegment",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oSegment",
              "type": "sap.suite.ui.microchart.InteractiveDonutChartSegment",
              "optional": false,
              "description": "The segment whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.suite.ui.microchart.InteractiveDonutChartSegment</code> in the aggregation {@link #getSegments segments}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "insertSegment",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.InteractiveDonutChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oSegment",
              "type": "sap.suite.ui.microchart.InteractiveDonutChartSegment",
              "optional": false,
              "description": "The segment to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the segment should be inserted at; for a negative value of <code>iIndex</code>, the segment is inserted at position 0; for a value greater than the current size of the aggregation, the segment is inserted at the last position"
            }
          ],
          "description": "Inserts a segment into the aggregation {@link #getSegments segments}."
        },
        {
          "name": "removeAllAriaLabelledBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.ID[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "removeAllSegments",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.InteractiveDonutChartSegment[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getSegments segments}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeAriaLabelledBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.ID",
            "description": "The removed ariaLabelledBy or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vAriaLabelledBy",
              "type": "int|sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaLabelledBy to be removed or its index or ID"
            }
          ],
          "description": "Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "removeSegment",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.InteractiveDonutChartSegment",
            "description": "The removed segment or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vSegment",
              "type": "int|string|sap.suite.ui.microchart.InteractiveDonutChartSegment",
              "optional": false,
              "description": "The segment to remove or its index or id"
            }
          ],
          "description": "Removes a segment from the aggregation {@link #getSegments segments}."
        },
        {
          "name": "setDisplayedSegments",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.InteractiveDonutChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iDisplayedSegments",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>displayedSegments</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getDisplayedSegments displayedSegments}.\n\nNumber of segments to be displayed.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>3</code>."
        },
        {
          "name": "setSelectedSegments",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.InteractiveDonutChart",
            "description": "The current object in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "selectedSegments",
              "type": "sap.suite.ui.microchart.InteractiveDonutChartSegment|sap.suite.ui.microchart.InteractiveDonutChartSegment[]",
              "optional": false,
              "description": "A segment element or an array of segments for which the status should be set to selected"
            }
          ],
          "description": "Already selected segments will be unselected and members of selectedSegments attribute which are part of the segments aggregation will be set to selected state."
        },
        {
          "name": "setSelectionEnabled",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.InteractiveDonutChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bSelectionEnabled",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>selectionEnabled</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSelectionEnabled selectionEnabled}.\n\nSwitch which enables or disables selection.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "unbindSegments",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.InteractiveDonutChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Unbinds aggregation {@link #getSegments segments} from model data."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.microchart.InteractiveDonutChartSegment",
      "basename": "InteractiveDonutChartSegment",
      "resource": "sap/suite/ui/microchart/InteractiveDonutChartSegment.js",
      "module": "sap/suite/ui/microchart/InteractiveDonutChartSegment",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.42.0",
      "extends": "sap.ui.core.Element",
      "description": "A donut chart segment.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "element",
        "properties": [
          {
            "name": "label",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Displayed text for the segment.",
            "methods": ["getLabel", "setLabel"]
          },
          {
            "name": "selected",
            "type": "boolean",
            "defaultValue": false,
            "group": "Appearance",
            "visibility": "public",
            "description": "Indicator for the selected state.",
            "methods": ["getSelected", "setSelected"]
          },
          {
            "name": "value",
            "type": "float",
            "defaultValue": null,
            "group": "Data",
            "visibility": "public",
            "description": "The value representing a percentage or an absolute value.",
            "methods": ["getValue", "setValue"]
          },
          {
            "name": "displayedValue",
            "type": "string",
            "defaultValue": null,
            "group": "Data",
            "visibility": "public",
            "description": "The value that is directly displayed on the legend.",
            "methods": ["getDisplayedValue", "setDisplayedValue"]
          },
          {
            "name": "color",
            "type": "sap.m.ValueColor",
            "defaultValue": "Neutral",
            "group": "Misc",
            "visibility": "public",
            "since": "1.50.0",
            "description": "Determines the color of the segment.",
            "methods": ["getColor", "setColor"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new element"
          }
        ],
        "description": "Constructor for InteractiveDonutChartSegment element.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.microchart.InteractiveDonutChartSegment with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
        },
        {
          "name": "getColor",
          "visibility": "public",
          "since": "1.50.0",
          "returnValue": {
            "type": "sap.m.ValueColor",
            "description": "Value of property <code>color</code>"
          },
          "description": "Gets current value of property {@link #getColor color}.\n\nDetermines the color of the segment.\n\nDefault value is <code>Neutral</code>."
        },
        {
          "name": "getDisplayedValue",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>displayedValue</code>"
          },
          "description": "Gets current value of property {@link #getDisplayedValue displayedValue}.\n\nThe value that is directly displayed on the legend."
        },
        {
          "name": "getLabel",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>label</code>"
          },
          "description": "Gets current value of property {@link #getLabel label}.\n\nDisplayed text for the segment."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.microchart.InteractiveDonutChartSegment."
        },
        {
          "name": "getSelected",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>selected</code>"
          },
          "description": "Gets current value of property {@link #getSelected selected}.\n\nIndicator for the selected state.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getValue",
          "visibility": "public",
          "returnValue": {
            "type": "float",
            "description": "Value of property <code>value</code>"
          },
          "description": "Gets current value of property {@link #getValue value}.\n\nThe value representing a percentage or an absolute value."
        },
        {
          "name": "setColor",
          "visibility": "public",
          "since": "1.50.0",
          "returnValue": {
            "type": "sap.suite.ui.microchart.InteractiveDonutChartSegment",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sColor",
              "type": "sap.m.ValueColor",
              "optional": false,
              "description": "New value for property <code>color</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getColor color}.\n\nDetermines the color of the segment.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Neutral</code>."
        },
        {
          "name": "setDisplayedValue",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.InteractiveDonutChartSegment",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sDisplayedValue",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>displayedValue</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getDisplayedValue displayedValue}.\n\nThe value that is directly displayed on the legend.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setLabel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.InteractiveDonutChartSegment",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sLabel",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>label</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getLabel label}.\n\nDisplayed text for the segment.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setSelected",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.InteractiveDonutChartSegment",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bSelected",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>selected</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSelected selected}.\n\nIndicator for the selected state.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setValue",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.InteractiveDonutChartSegment",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fValue",
              "type": "float",
              "optional": false,
              "description": "New value for property <code>value</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getValue value}.\n\nThe value representing a percentage or an absolute value.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.microchart.InteractiveLineChart",
      "basename": "InteractiveLineChart",
      "resource": "sap/suite/ui/microchart/InteractiveLineChart.js",
      "module": "sap/suite/ui/microchart/InteractiveLineChart",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.42.0",
      "extends": "sap.ui.core.Control",
      "description": "The InteractiveLineChart control belongs to a chart control group in the MicroChart library having a number of interactive features.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "displayedPoints",
            "type": "int",
            "defaultValue": 6,
            "group": "Appearance",
            "visibility": "public",
            "description": "The maximum number of points to be displayed on the chart.",
            "methods": ["getDisplayedPoints", "setDisplayedPoints"]
          },
          {
            "name": "precedingPoint",
            "type": "float",
            "defaultValue": 0,
            "group": "Data",
            "visibility": "public",
            "description": "Abstract invisible point outside of the chart that ensures that the graph flows smoothly into the visible part of the chart.",
            "methods": ["getPrecedingPoint", "setPrecedingPoint"]
          },
          {
            "name": "succeedingPoint",
            "type": "float",
            "defaultValue": 0,
            "group": "Data",
            "visibility": "public",
            "description": "Abstract invisible point outside of the chart that ensures that the graph flows smoothly out of the visible part of the chart.",
            "methods": ["getSucceedingPoint", "setSucceedingPoint"]
          },
          {
            "name": "selectionEnabled",
            "type": "boolean",
            "defaultValue": true,
            "group": "Behavior",
            "visibility": "public",
            "description": "If this property is set to true, one or multiple points are selectable.",
            "methods": ["getSelectionEnabled", "setSelectionEnabled"]
          }
        ],
        "aggregations": [
          {
            "name": "points",
            "singularName": "point",
            "type": "sap.suite.ui.microchart.InteractiveLineChartPoint",
            "cardinality": "0..n",
            "visibility": "public",
            "bindable": true,
            "description": "Points displayed in the chart.",
            "methods": [
              "getPoints",
              "destroyPoints",
              "insertPoint",
              "addPoint",
              "removePoint",
              "indexOfPoint",
              "removeAllPoints",
              "bindPoints",
              "unbindPoints"
            ]
          }
        ],
        "defaultAggregation": "points",
        "associations": [
          {
            "name": "ariaLabelledBy",
            "singularName": "ariaLabelledBy",
            "type": "sap.ui.core.Control",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Association to controls which label this control (see WAI-ARIA attribute aria-labelledby).",
            "methods": [
              "getAriaLabelledBy",
              "addAriaLabelledBy",
              "removeAriaLabelledBy",
              "removeAllAriaLabelledBy"
            ]
          }
        ],
        "events": [
          {
            "name": "selectionChanged",
            "visibility": "public",
            "description": "Event is fired when a user has selected or deselected a point.",
            "parameters": {
              "selectedPoints": {
                "name": "selectedPoints",
                "type": "sap.suite.ui.microchart.InteractiveLineChartPoint[]",
                "description": "All points which are in selected state."
              },
              "point": {
                "name": "point",
                "type": "sap.suite.ui.microchart.InteractiveLineChartPoint",
                "description": "The point which is pressed."
              },
              "selected": {
                "name": "selected",
                "type": "boolean",
                "description": "The selection state of the point which is pressed."
              }
            },
            "methods": [
              "attachSelectionChanged",
              "detachSelectionChanged",
              "fireSelectionChanged"
            ]
          },
          {
            "name": "press",
            "visibility": "public",
            "description": "The event is fired only in non-interactive mode when the user presses the chart; in this mode, the points and surrounding areas are not selectable. Non-interactive mode is decided upon internally, depending on the size of the areas surrounding the points.",
            "methods": ["attachPress", "detachPress", "firePress"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new InteractiveLineChart control.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "press",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "The event is fired only in non-interactive mode when the user presses the chart; in this mode, the points and surrounding areas are not selectable. Non-interactive mode is decided upon internally, depending on the size of the areas surrounding the points."
        },
        {
          "name": "selectionChanged",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "selectedPoints": {
                      "name": "selectedPoints",
                      "type": "sap.suite.ui.microchart.InteractiveLineChartPoint[]",
                      "optional": false,
                      "description": "All points which are in selected state."
                    },
                    "point": {
                      "name": "point",
                      "type": "sap.suite.ui.microchart.InteractiveLineChartPoint",
                      "optional": false,
                      "description": "The point which is pressed."
                    },
                    "selected": {
                      "name": "selected",
                      "type": "boolean",
                      "optional": false,
                      "description": "The selection state of the point which is pressed."
                    }
                  }
                }
              }
            }
          ],
          "description": "Event is fired when a user has selected or deselected a point."
        }
      ],
      "methods": [
        {
          "name": "addAriaLabelledBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.InteractiveLineChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "vAriaLabelledBy",
              "type": "sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaLabelledBy to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "addPoint",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.InteractiveLineChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oPoint",
              "type": "sap.suite.ui.microchart.InteractiveLineChartPoint",
              "optional": false,
              "description": "The point to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some point to the aggregation {@link #getPoints points}."
        },
        {
          "name": "attachPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.InteractiveLineChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.microchart.InteractiveLineChart</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:press press} event of this <code>sap.suite.ui.microchart.InteractiveLineChart</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.microchart.InteractiveLineChart</code> itself.\n\nThe event is fired only in non-interactive mode when the user presses the chart; in this mode, the points and surrounding areas are not selectable. Non-interactive mode is decided upon internally, depending on the size of the areas surrounding the points."
        },
        {
          "name": "attachSelectionChanged",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.InteractiveLineChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.microchart.InteractiveLineChart</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:selectionChanged selectionChanged} event of this <code>sap.suite.ui.microchart.InteractiveLineChart</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.microchart.InteractiveLineChart</code> itself.\n\nEvent is fired when a user has selected or deselected a point."
        },
        {
          "name": "bindPoints",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.InteractiveLineChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oBindingInfo",
              "type": "object",
              "optional": false,
              "description": "The binding information"
            }
          ],
          "description": "Binds aggregation {@link #getPoints points} to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a detailed description of the possible properties of <code>oBindingInfo</code>."
        },
        {
          "name": "destroyPoints",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.InteractiveLineChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the points in the aggregation {@link #getPoints points}."
        },
        {
          "name": "detachPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.InteractiveLineChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:press press} event of this <code>sap.suite.ui.microchart.InteractiveLineChart</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachSelectionChanged",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.InteractiveLineChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:selectionChanged selectionChanged} event of this <code>sap.suite.ui.microchart.InteractiveLineChart</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.microchart.InteractiveLineChart with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "firePress",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.microchart.InteractiveLineChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:press press} to attached listeners."
        },
        {
          "name": "fireSelectionChanged",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.microchart.InteractiveLineChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "selectedPoints": {
                  "name": "selectedPoints",
                  "type": "sap.suite.ui.microchart.InteractiveLineChartPoint[]",
                  "optional": true,
                  "description": "All points which are in selected state."
                },
                "point": {
                  "name": "point",
                  "type": "sap.suite.ui.microchart.InteractiveLineChartPoint",
                  "optional": true,
                  "description": "The point which is pressed."
                },
                "selected": {
                  "name": "selected",
                  "type": "boolean",
                  "optional": true,
                  "description": "The selection state of the point which is pressed."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:selectionChanged selectionChanged} to attached listeners."
        },
        {
          "name": "getAriaLabelledBy",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.ID[]" },
          "description": "Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "getDisplayedPoints",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>displayedPoints</code>"
          },
          "description": "Gets current value of property {@link #getDisplayedPoints displayedPoints}.\n\nThe maximum number of points to be displayed on the chart.\n\nDefault value is <code>6</code>."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.microchart.InteractiveLineChart."
        },
        {
          "name": "getPoints",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.InteractiveLineChartPoint[]"
          },
          "description": "Gets content of aggregation {@link #getPoints points}.\n\nPoints displayed in the chart."
        },
        {
          "name": "getPrecedingPoint",
          "visibility": "public",
          "returnValue": {
            "type": "float",
            "description": "Value of property <code>precedingPoint</code>"
          },
          "description": "Gets current value of property {@link #getPrecedingPoint precedingPoint}.\n\nAbstract invisible point outside of the chart that ensures that the graph flows smoothly into the visible part of the chart.\n\nDefault value is <code>0</code>."
        },
        {
          "name": "getSelectedPoints",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.InteractiveLineChartPoint[]",
            "description": "Array of sap.suite.ui.microchart.InteractiveLineChartPoint instances."
          },
          "description": "Retrieves the selected point elements from the points aggregation and returns them."
        },
        {
          "name": "getSelectionEnabled",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>selectionEnabled</code>"
          },
          "description": "Gets current value of property {@link #getSelectionEnabled selectionEnabled}.\n\nIf this property is set to true, one or multiple points are selectable.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getSucceedingPoint",
          "visibility": "public",
          "returnValue": {
            "type": "float",
            "description": "Value of property <code>succeedingPoint</code>"
          },
          "description": "Gets current value of property {@link #getSucceedingPoint succeedingPoint}.\n\nAbstract invisible point outside of the chart that ensures that the graph flows smoothly out of the visible part of the chart.\n\nDefault value is <code>0</code>."
        },
        {
          "name": "indexOfPoint",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oPoint",
              "type": "sap.suite.ui.microchart.InteractiveLineChartPoint",
              "optional": false,
              "description": "The point whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.suite.ui.microchart.InteractiveLineChartPoint</code> in the aggregation {@link #getPoints points}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "insertPoint",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.InteractiveLineChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oPoint",
              "type": "sap.suite.ui.microchart.InteractiveLineChartPoint",
              "optional": false,
              "description": "The point to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the point should be inserted at; for a negative value of <code>iIndex</code>, the point is inserted at position 0; for a value greater than the current size of the aggregation, the point is inserted at the last position"
            }
          ],
          "description": "Inserts a point into the aggregation {@link #getPoints points}."
        },
        {
          "name": "removeAllAriaLabelledBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.ID[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "removeAllPoints",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.InteractiveLineChartPoint[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getPoints points}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeAriaLabelledBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.ID",
            "description": "The removed ariaLabelledBy or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vAriaLabelledBy",
              "type": "int|sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaLabelledBy to be removed or its index or ID"
            }
          ],
          "description": "Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "removePoint",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.InteractiveLineChartPoint",
            "description": "The removed point or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vPoint",
              "type": "int|string|sap.suite.ui.microchart.InteractiveLineChartPoint",
              "optional": false,
              "description": "The point to remove or its index or id"
            }
          ],
          "description": "Removes a point from the aggregation {@link #getPoints points}."
        },
        {
          "name": "setDisplayedPoints",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.InteractiveLineChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iDisplayedPoints",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>displayedPoints</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getDisplayedPoints displayedPoints}.\n\nThe maximum number of points to be displayed on the chart.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>6</code>."
        },
        {
          "name": "setPrecedingPoint",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.InteractiveLineChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fPrecedingPoint",
              "type": "float",
              "optional": false,
              "description": "New value for property <code>precedingPoint</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getPrecedingPoint precedingPoint}.\n\nAbstract invisible point outside of the chart that ensures that the graph flows smoothly into the visible part of the chart.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>0</code>."
        },
        {
          "name": "setSelectedPoints",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.InteractiveLineChart",
            "description": "this to allow method chaining"
          },
          "parameters": [
            {
              "name": "selectedPoints",
              "type": "sap.suite.ui.microchart.InteractiveLineChartPoint|sap.suite.ui.microchart.InteractiveLineChartPoint[]",
              "optional": false,
              "description": "A point element or an array of points for which the status should be set to selected."
            }
          ],
          "description": "Already selected points will be deselected and members of the selectedPoints attribute which are part of the points aggregation will be set to selected state."
        },
        {
          "name": "setSelectionEnabled",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.InteractiveLineChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bSelectionEnabled",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>selectionEnabled</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSelectionEnabled selectionEnabled}.\n\nIf this property is set to true, one or multiple points are selectable.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setSucceedingPoint",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.InteractiveLineChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fSucceedingPoint",
              "type": "float",
              "optional": false,
              "description": "New value for property <code>succeedingPoint</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSucceedingPoint succeedingPoint}.\n\nAbstract invisible point outside of the chart that ensures that the graph flows smoothly out of the visible part of the chart.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>0</code>."
        },
        {
          "name": "unbindPoints",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.InteractiveLineChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Unbinds aggregation {@link #getPoints points} from model data."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.microchart.InteractiveLineChartPoint",
      "basename": "InteractiveLineChartPoint",
      "resource": "sap/suite/ui/microchart/InteractiveLineChartPoint.js",
      "module": "sap/suite/ui/microchart/InteractiveLineChartPoint",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.42.0",
      "extends": "sap.ui.core.Element",
      "description": "A point element for the InteractiveLineChart.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "element",
        "properties": [
          {
            "name": "label",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The bottom label for the chart point.",
            "methods": ["getLabel", "setLabel"]
          },
          {
            "name": "secondaryLabel",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The label that is displayed right below the <code>label</code>..",
            "methods": ["getSecondaryLabel", "setSecondaryLabel"]
          },
          {
            "name": "selected",
            "type": "boolean",
            "defaultValue": false,
            "group": "Appearance",
            "visibility": "public",
            "description": "Determines if the chart point is selected.",
            "methods": ["getSelected", "setSelected"]
          },
          {
            "name": "value",
            "type": "float",
            "defaultValue": null,
            "group": "Data",
            "visibility": "public",
            "description": "The numeric value of the chart point.",
            "methods": ["getValue", "setValue"]
          },
          {
            "name": "displayedValue",
            "type": "string",
            "defaultValue": null,
            "group": "Data",
            "visibility": "public",
            "description": "The value label to be displayed near the point in the chart.",
            "methods": ["getDisplayedValue", "setDisplayedValue"]
          },
          {
            "name": "color",
            "type": "sap.m.ValueColor",
            "defaultValue": "Neutral",
            "group": "Misc",
            "visibility": "public",
            "since": "1.50.0",
            "description": "Determines the color of the point.",
            "methods": ["getColor", "setColor"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for the point element of the InteractiveLineChart.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.microchart.InteractiveLineChartPoint with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
        },
        {
          "name": "getColor",
          "visibility": "public",
          "since": "1.50.0",
          "returnValue": {
            "type": "sap.m.ValueColor",
            "description": "Value of property <code>color</code>"
          },
          "description": "Gets current value of property {@link #getColor color}.\n\nDetermines the color of the point.\n\nDefault value is <code>Neutral</code>."
        },
        {
          "name": "getDisplayedValue",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>displayedValue</code>"
          },
          "description": "Gets current value of property {@link #getDisplayedValue displayedValue}.\n\nThe value label to be displayed near the point in the chart."
        },
        {
          "name": "getLabel",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>label</code>"
          },
          "description": "Gets current value of property {@link #getLabel label}.\n\nThe bottom label for the chart point."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.microchart.InteractiveLineChartPoint."
        },
        {
          "name": "getSecondaryLabel",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>secondaryLabel</code>"
          },
          "description": "Gets current value of property {@link #getSecondaryLabel secondaryLabel}.\n\nThe label that is displayed right below the <code>label</code>.."
        },
        {
          "name": "getSelected",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>selected</code>"
          },
          "description": "Gets current value of property {@link #getSelected selected}.\n\nDetermines if the chart point is selected.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getValue",
          "visibility": "public",
          "returnValue": {
            "type": "float",
            "description": "Value of property <code>value</code>"
          },
          "description": "Gets current value of property {@link #getValue value}.\n\nThe numeric value of the chart point."
        },
        {
          "name": "setColor",
          "visibility": "public",
          "since": "1.50.0",
          "returnValue": {
            "type": "sap.suite.ui.microchart.InteractiveLineChartPoint",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sColor",
              "type": "sap.m.ValueColor",
              "optional": false,
              "description": "New value for property <code>color</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getColor color}.\n\nDetermines the color of the point.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Neutral</code>."
        },
        {
          "name": "setDisplayedValue",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.InteractiveLineChartPoint",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sDisplayedValue",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>displayedValue</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getDisplayedValue displayedValue}.\n\nThe value label to be displayed near the point in the chart.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setLabel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.InteractiveLineChartPoint",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sLabel",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>label</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getLabel label}.\n\nThe bottom label for the chart point.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setSecondaryLabel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.InteractiveLineChartPoint",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sSecondaryLabel",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>secondaryLabel</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSecondaryLabel secondaryLabel}.\n\nThe label that is displayed right below the <code>label</code>..\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setSelected",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.InteractiveLineChartPoint",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bSelected",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>selected</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSelected selected}.\n\nDetermines if the chart point is selected.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setValue",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.InteractiveLineChartPoint",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fValue",
              "type": "float",
              "optional": false,
              "description": "New value for property <code>value</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getValue value}.\n\nThe numeric value of the chart point.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.microchart.LineMicroChart",
      "basename": "LineMicroChart",
      "resource": "sap/suite/ui/microchart/LineMicroChart.js",
      "module": "sap/suite/ui/microchart/LineMicroChart",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.48.0",
      "extends": "sap.ui.core.Control",
      "description": "Chart that displays the history of values as segmented lines along a threshold line. The scale is optional and showing the points is also optional. <br>Note: You can assign a custom tooltip for this microchart. The custom tooltip can be set using expression binding. When no custom tooltip is defined, the tooltip is generated automatically based on the logic described in {@link sap.ui.core.Element#getTooltip_AsString}. For a combination of a generated and a custom tooltip, use <code>((AltText))</code> inside of the tooltip string.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "size",
            "type": "sap.m.Size",
            "defaultValue": "Auto",
            "group": "Appearance",
            "visibility": "public",
            "description": "The size of the chart. If not set, the default size is applied based on the type of the device.",
            "methods": ["getSize", "setSize"]
          },
          {
            "name": "threshold",
            "type": "float",
            "defaultValue": 0,
            "group": "Appearance",
            "visibility": "public",
            "description": "Determines the chart threshold which is used for vertical normalization. If the threshold does not belong to the value range given by minYValue...maxYValue, the threshold is ignored. By setting the threshold property's value to null, the threshold is disabled and excluded from range calculations.",
            "methods": ["getThreshold", "setThreshold"]
          },
          {
            "name": "showThresholdLine",
            "type": "boolean",
            "defaultValue": true,
            "group": "Appearance",
            "visibility": "public",
            "description": "If this property is set to <code>false</code>, the threshold line is hidden.",
            "methods": ["getShowThresholdLine", "setShowThresholdLine"]
          },
          {
            "name": "showThresholdValue",
            "type": "boolean",
            "defaultValue": false,
            "group": "Appearance",
            "visibility": "public",
            "description": "If this property is set to <code>false</code>, the threshold value is hidden. <br>If this property is set to <code>true</code>, the value will be shown only if the <code>showThresholdLine</code> property is also set to <code>true</code>.",
            "methods": ["getShowThresholdValue", "setShowThresholdValue"]
          },
          {
            "name": "thresholdDisplayValue",
            "type": "string",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "description": "Overrides the threshold value with a string that is shown instead.",
            "methods": ["getThresholdDisplayValue", "setThresholdDisplayValue"]
          },
          {
            "name": "minXValue",
            "type": "float",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "description": "If this property is set, it indicates the value the X-axis starts with.",
            "methods": ["getMinXValue", "setMinXValue"]
          },
          {
            "name": "maxXValue",
            "type": "float",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "description": "If this property is set, it indicates the value the X-axis ends with.",
            "methods": ["getMaxXValue", "setMaxXValue"]
          },
          {
            "name": "minYValue",
            "type": "float",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "description": "If this property is set, it indicates the value the Y-axis starts with.",
            "methods": ["getMinYValue", "setMinYValue"]
          },
          {
            "name": "maxYValue",
            "type": "float",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "description": "If this property is set, it indicates the value the Y-axis ends with.",
            "methods": ["getMaxYValue", "setMaxYValue"]
          },
          {
            "name": "leftTopLabel",
            "type": "string",
            "defaultValue": null,
            "group": "Data",
            "visibility": "public",
            "description": "Describes the left top label of the chart. The label color is determined by the color property of the first LineMicroChartPoint in the points aggregation. The space for the label is not reserved if the label is not set.",
            "methods": ["getLeftTopLabel", "setLeftTopLabel"]
          },
          {
            "name": "rightTopLabel",
            "type": "string",
            "defaultValue": null,
            "group": "Data",
            "visibility": "public",
            "description": "Describes the right top label of the chart. The label color is determined by the color property of the last LineMicroChartPoint in the points aggregation. The space for the label is not reserved if the label is not set.",
            "methods": ["getRightTopLabel", "setRightTopLabel"]
          },
          {
            "name": "leftBottomLabel",
            "type": "string",
            "defaultValue": null,
            "group": "Data",
            "visibility": "public",
            "description": "Describes the left bottom label of the chart. The label color is set internally. The space for the label is not reserved if the label is not set.",
            "methods": ["getLeftBottomLabel", "setLeftBottomLabel"]
          },
          {
            "name": "rightBottomLabel",
            "type": "string",
            "defaultValue": null,
            "group": "Data",
            "visibility": "public",
            "description": "Describes the right bottom label of the chart. The label color is set automatically. The space for the label is not reserved if the label is not set.",
            "methods": ["getRightBottomLabel", "setRightBottomLabel"]
          },
          {
            "name": "showTopLabels",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "description": "If this property is set to <code>false</code>, both top labels are hidden.",
            "methods": ["getShowTopLabels", "setShowTopLabels"]
          },
          {
            "name": "showBottomLabels",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "description": "If this property is set to <code>false</code>, both bottom labels are hidden.",
            "methods": ["getShowBottomLabels", "setShowBottomLabels"]
          },
          {
            "name": "color",
            "type": "any",
            "defaultValue": "Neutral",
            "group": "Appearance",
            "visibility": "public",
            "description": "Describes the color of the chart. <br>In conjunction with emphasized points, it is only used if all points have the sap.m.ValueColor.Neutral color. <br>The color can be set as an {@link sap.m.ValueCSSColor} or as a plain object. It has the 'above|' and 'below' properties that determine the color of the graph above and below the threshold, respectively.\n\n<br>The <code>color</code> property of {@link sap.suite.ui.microchart.LineMicroChartLine} has priority over this property in case it is set.",
            "methods": ["getColor", "setColor"]
          },
          {
            "name": "showPoints",
            "type": "boolean",
            "defaultValue": false,
            "group": "Appearance",
            "visibility": "public",
            "description": "Defines if the control renders the points or not. <br>If emphasized points are used, there is no effect. <br>If the value is true, the points in the aggregation are shown.\n\n<br>The <code>showPoints</code> property of the {@link sap.suite.ui.microchart.LineMicroChartLine} control has priority over this property in case it is set.",
            "methods": ["getShowPoints", "setShowPoints"]
          },
          {
            "name": "width",
            "type": "sap.ui.core.CSSSize",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The width of the chart. Overrides the width specified in the <code>size</code> property.",
            "methods": ["getWidth", "setWidth"]
          },
          {
            "name": "height",
            "type": "sap.ui.core.CSSSize",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The height of the chart. Overrides the height specified in the <code>size</code> property.",
            "methods": ["getHeight", "setHeight"]
          }
        ],
        "aggregations": [
          {
            "name": "points",
            "singularName": "point",
            "type": "sap.suite.ui.microchart.LineMicroChartPoint",
            "cardinality": "0..n",
            "visibility": "public",
            "bindable": true,
            "description": "Aggregation that contains all data points that should be provided in an ordered way. If both the <code>points</code> and <code>lines</code> aggregations are used, the chart is rendered based on the <code>points</code> aggregation, while the lines from the <code>lines</code> aggregations are ignored. <br>The <code>points</code> aggregation can be used to ensure backward compatibility. However in general, the <code>lines</code> aggregation should be preferred.",
            "methods": [
              "getPoints",
              "destroyPoints",
              "insertPoint",
              "addPoint",
              "removePoint",
              "indexOfPoint",
              "removeAllPoints",
              "bindPoints",
              "unbindPoints"
            ]
          },
          {
            "name": "lines",
            "singularName": "line",
            "type": "sap.suite.ui.microchart.LineMicroChartLine",
            "cardinality": "0..n",
            "visibility": "public",
            "bindable": true,
            "description": "Aggregation that containes lines with data points. <br>This aggregation should be used instead of the <code>points</code> aggregation.",
            "methods": [
              "getLines",
              "destroyLines",
              "insertLine",
              "addLine",
              "removeLine",
              "indexOfLine",
              "removeAllLines",
              "bindLines",
              "unbindLines"
            ]
          },
          {
            "name": "_line",
            "singularName": "_line",
            "type": "sap.suite.ui.microchart.LineMicroChartLine",
            "cardinality": "0..1",
            "visibility": "hidden",
            "description": "{@link sap.suite.ui.microchart.LineMicroChartLine} for the cases when a single line with the legacy <code>points</code> aggregation is used. Rest of the control can than work with LineMicroChartLines, regardless of this use case.",
            "methods": ["get_line", "destroy_line", "set_line"]
          }
        ],
        "defaultAggregation": "points",
        "associations": [
          {
            "name": "ariaLabelledBy",
            "singularName": "ariaLabelledBy",
            "type": "sap.ui.core.Control",
            "cardinality": "0..n",
            "visibility": "public",
            "since": "1.60.0",
            "description": "Controls or IDs that label this control. Can be used by screen reader software.",
            "methods": [
              "getAriaLabelledBy",
              "addAriaLabelledBy",
              "removeAriaLabelledBy",
              "removeAllAriaLabelledBy"
            ]
          }
        ],
        "events": [
          {
            "name": "press",
            "visibility": "public",
            "description": "The event is triggered when the chart is pressed.",
            "methods": ["attachPress", "detachPress", "firePress"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new LineMicroChart control.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "press",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "The event is triggered when the chart is pressed."
        }
      ],
      "methods": [
        {
          "name": "addAriaLabelledBy",
          "visibility": "public",
          "since": "1.60.0",
          "returnValue": {
            "type": "sap.suite.ui.microchart.LineMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "vAriaLabelledBy",
              "type": "sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaLabelledBy to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "addLine",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.LineMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oLine",
              "type": "sap.suite.ui.microchart.LineMicroChartLine",
              "optional": false,
              "description": "The line to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some line to the aggregation {@link #getLines lines}."
        },
        {
          "name": "addPoint",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.LineMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oPoint",
              "type": "sap.suite.ui.microchart.LineMicroChartPoint",
              "optional": false,
              "description": "The point to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some point to the aggregation {@link #getPoints points}."
        },
        {
          "name": "attachPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.LineMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.microchart.LineMicroChart</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:press press} event of this <code>sap.suite.ui.microchart.LineMicroChart</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.microchart.LineMicroChart</code> itself.\n\nThe event is triggered when the chart is pressed."
        },
        {
          "name": "bindLines",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.LineMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oBindingInfo",
              "type": "object",
              "optional": false,
              "description": "The binding information"
            }
          ],
          "description": "Binds aggregation {@link #getLines lines} to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a detailed description of the possible properties of <code>oBindingInfo</code>."
        },
        {
          "name": "bindPoints",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.LineMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oBindingInfo",
              "type": "object",
              "optional": false,
              "description": "The binding information"
            }
          ],
          "description": "Binds aggregation {@link #getPoints points} to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a detailed description of the possible properties of <code>oBindingInfo</code>."
        },
        {
          "name": "destroyLines",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.LineMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the lines in the aggregation {@link #getLines lines}."
        },
        {
          "name": "destroyPoints",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.LineMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the points in the aggregation {@link #getPoints points}."
        },
        {
          "name": "detachPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.LineMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:press press} event of this <code>sap.suite.ui.microchart.LineMicroChart</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.microchart.LineMicroChart with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "firePress",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.microchart.LineMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:press press} to attached listeners."
        },
        {
          "name": "getAriaLabelledBy",
          "visibility": "public",
          "since": "1.60.0",
          "returnValue": { "type": "sap.ui.core.ID[]" },
          "description": "Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "getColor",
          "visibility": "public",
          "returnValue": {
            "type": "any",
            "description": "Value of property <code>color</code>"
          },
          "description": "Gets current value of property {@link #getColor color}.\n\nDescribes the color of the chart. <br>In conjunction with emphasized points, it is only used if all points have the sap.m.ValueColor.Neutral color. <br>The color can be set as an {@link sap.m.ValueCSSColor} or as a plain object. It has the 'above|' and 'below' properties that determine the color of the graph above and below the threshold, respectively.\n\n<br>The <code>color</code> property of {@link sap.suite.ui.microchart.LineMicroChartLine} has priority over this property in case it is set.\n\nDefault value is <code>Neutral</code>."
        },
        {
          "name": "getHeight",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.CSSSize",
            "description": "Value of property <code>height</code>"
          },
          "description": "Gets current value of property {@link #getHeight height}.\n\nThe height of the chart. Overrides the height specified in the <code>size</code> property."
        },
        {
          "name": "getLeftBottomLabel",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>leftBottomLabel</code>"
          },
          "description": "Gets current value of property {@link #getLeftBottomLabel leftBottomLabel}.\n\nDescribes the left bottom label of the chart. The label color is set internally. The space for the label is not reserved if the label is not set."
        },
        {
          "name": "getLeftTopLabel",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>leftTopLabel</code>"
          },
          "description": "Gets current value of property {@link #getLeftTopLabel leftTopLabel}.\n\nDescribes the left top label of the chart. The label color is determined by the color property of the first LineMicroChartPoint in the points aggregation. The space for the label is not reserved if the label is not set."
        },
        {
          "name": "getLines",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.LineMicroChartLine[]"
          },
          "description": "Gets content of aggregation {@link #getLines lines}.\n\nAggregation that containes lines with data points. <br>This aggregation should be used instead of the <code>points</code> aggregation."
        },
        {
          "name": "getMaxXValue",
          "visibility": "public",
          "returnValue": {
            "type": "float",
            "description": "Value of property <code>maxXValue</code>"
          },
          "description": "Gets current value of property {@link #getMaxXValue maxXValue}.\n\nIf this property is set, it indicates the value the X-axis ends with."
        },
        {
          "name": "getMaxYValue",
          "visibility": "public",
          "returnValue": {
            "type": "float",
            "description": "Value of property <code>maxYValue</code>"
          },
          "description": "Gets current value of property {@link #getMaxYValue maxYValue}.\n\nIf this property is set, it indicates the value the Y-axis ends with."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.microchart.LineMicroChart."
        },
        {
          "name": "getMinXValue",
          "visibility": "public",
          "returnValue": {
            "type": "float",
            "description": "Value of property <code>minXValue</code>"
          },
          "description": "Gets current value of property {@link #getMinXValue minXValue}.\n\nIf this property is set, it indicates the value the X-axis starts with."
        },
        {
          "name": "getMinYValue",
          "visibility": "public",
          "returnValue": {
            "type": "float",
            "description": "Value of property <code>minYValue</code>"
          },
          "description": "Gets current value of property {@link #getMinYValue minYValue}.\n\nIf this property is set, it indicates the value the Y-axis starts with."
        },
        {
          "name": "getPoints",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.LineMicroChartPoint[]"
          },
          "description": "Gets content of aggregation {@link #getPoints points}.\n\nAggregation that contains all data points that should be provided in an ordered way. If both the <code>points</code> and <code>lines</code> aggregations are used, the chart is rendered based on the <code>points</code> aggregation, while the lines from the <code>lines</code> aggregations are ignored. <br>The <code>points</code> aggregation can be used to ensure backward compatibility. However in general, the <code>lines</code> aggregation should be preferred."
        },
        {
          "name": "getRightBottomLabel",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>rightBottomLabel</code>"
          },
          "description": "Gets current value of property {@link #getRightBottomLabel rightBottomLabel}.\n\nDescribes the right bottom label of the chart. The label color is set automatically. The space for the label is not reserved if the label is not set."
        },
        {
          "name": "getRightTopLabel",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>rightTopLabel</code>"
          },
          "description": "Gets current value of property {@link #getRightTopLabel rightTopLabel}.\n\nDescribes the right top label of the chart. The label color is determined by the color property of the last LineMicroChartPoint in the points aggregation. The space for the label is not reserved if the label is not set."
        },
        {
          "name": "getShowBottomLabels",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showBottomLabels</code>"
          },
          "description": "Gets current value of property {@link #getShowBottomLabels showBottomLabels}.\n\nIf this property is set to <code>false</code>, both bottom labels are hidden.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getShowPoints",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showPoints</code>"
          },
          "description": "Gets current value of property {@link #getShowPoints showPoints}.\n\nDefines if the control renders the points or not. <br>If emphasized points are used, there is no effect. <br>If the value is true, the points in the aggregation are shown.\n\n<br>The <code>showPoints</code> property of the {@link sap.suite.ui.microchart.LineMicroChartLine} control has priority over this property in case it is set.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getShowThresholdLine",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showThresholdLine</code>"
          },
          "description": "Gets current value of property {@link #getShowThresholdLine showThresholdLine}.\n\nIf this property is set to <code>false</code>, the threshold line is hidden.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getShowThresholdValue",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showThresholdValue</code>"
          },
          "description": "Gets current value of property {@link #getShowThresholdValue showThresholdValue}.\n\nIf this property is set to <code>false</code>, the threshold value is hidden. <br>If this property is set to <code>true</code>, the value will be shown only if the <code>showThresholdLine</code> property is also set to <code>true</code>.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getShowTopLabels",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showTopLabels</code>"
          },
          "description": "Gets current value of property {@link #getShowTopLabels showTopLabels}.\n\nIf this property is set to <code>false</code>, both top labels are hidden.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getSize",
          "visibility": "public",
          "returnValue": {
            "type": "sap.m.Size",
            "description": "Value of property <code>size</code>"
          },
          "description": "Gets current value of property {@link #getSize size}.\n\nThe size of the chart. If not set, the default size is applied based on the type of the device.\n\nDefault value is <code>Auto</code>."
        },
        {
          "name": "getThreshold",
          "visibility": "public",
          "returnValue": {
            "type": "float",
            "description": "Value of property <code>threshold</code>"
          },
          "description": "Gets current value of property {@link #getThreshold threshold}.\n\nDetermines the chart threshold which is used for vertical normalization. If the threshold does not belong to the value range given by minYValue...maxYValue, the threshold is ignored. By setting the threshold property's value to null, the threshold is disabled and excluded from range calculations.\n\nDefault value is <code>0</code>."
        },
        {
          "name": "getThresholdDisplayValue",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>thresholdDisplayValue</code>"
          },
          "description": "Gets current value of property {@link #getThresholdDisplayValue thresholdDisplayValue}.\n\nOverrides the threshold value with a string that is shown instead."
        },
        {
          "name": "getWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.CSSSize",
            "description": "Value of property <code>width</code>"
          },
          "description": "Gets current value of property {@link #getWidth width}.\n\nThe width of the chart. Overrides the width specified in the <code>size</code> property."
        },
        {
          "name": "indexOfLine",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oLine",
              "type": "sap.suite.ui.microchart.LineMicroChartLine",
              "optional": false,
              "description": "The line whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.suite.ui.microchart.LineMicroChartLine</code> in the aggregation {@link #getLines lines}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "indexOfPoint",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oPoint",
              "type": "sap.suite.ui.microchart.LineMicroChartPoint",
              "optional": false,
              "description": "The point whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.suite.ui.microchart.LineMicroChartPoint</code> in the aggregation {@link #getPoints points}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "insertLine",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.LineMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oLine",
              "type": "sap.suite.ui.microchart.LineMicroChartLine",
              "optional": false,
              "description": "The line to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the line should be inserted at; for a negative value of <code>iIndex</code>, the line is inserted at position 0; for a value greater than the current size of the aggregation, the line is inserted at the last position"
            }
          ],
          "description": "Inserts a line into the aggregation {@link #getLines lines}."
        },
        {
          "name": "insertPoint",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.LineMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oPoint",
              "type": "sap.suite.ui.microchart.LineMicroChartPoint",
              "optional": false,
              "description": "The point to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the point should be inserted at; for a negative value of <code>iIndex</code>, the point is inserted at position 0; for a value greater than the current size of the aggregation, the point is inserted at the last position"
            }
          ],
          "description": "Inserts a point into the aggregation {@link #getPoints points}."
        },
        {
          "name": "removeAllAriaLabelledBy",
          "visibility": "public",
          "since": "1.60.0",
          "returnValue": {
            "type": "sap.ui.core.ID[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "removeAllLines",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.LineMicroChartLine[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getLines lines}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeAllPoints",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.LineMicroChartPoint[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getPoints points}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeAriaLabelledBy",
          "visibility": "public",
          "since": "1.60.0",
          "returnValue": {
            "type": "sap.ui.core.ID",
            "description": "The removed ariaLabelledBy or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vAriaLabelledBy",
              "type": "int|sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaLabelledBy to be removed or its index or ID"
            }
          ],
          "description": "Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "removeLine",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.LineMicroChartLine",
            "description": "The removed line or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vLine",
              "type": "int|string|sap.suite.ui.microchart.LineMicroChartLine",
              "optional": false,
              "description": "The line to remove or its index or id"
            }
          ],
          "description": "Removes a line from the aggregation {@link #getLines lines}."
        },
        {
          "name": "removePoint",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.LineMicroChartPoint",
            "description": "The removed point or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vPoint",
              "type": "int|string|sap.suite.ui.microchart.LineMicroChartPoint",
              "optional": false,
              "description": "The point to remove or its index or id"
            }
          ],
          "description": "Removes a point from the aggregation {@link #getPoints points}."
        },
        {
          "name": "setColor",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.LineMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oColor",
              "type": "any",
              "optional": false,
              "description": "New value for property <code>color</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getColor color}.\n\nDescribes the color of the chart. <br>In conjunction with emphasized points, it is only used if all points have the sap.m.ValueColor.Neutral color. <br>The color can be set as an {@link sap.m.ValueCSSColor} or as a plain object. It has the 'above|' and 'below' properties that determine the color of the graph above and below the threshold, respectively.\n\n<br>The <code>color</code> property of {@link sap.suite.ui.microchart.LineMicroChartLine} has priority over this property in case it is set.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Neutral</code>."
        },
        {
          "name": "setHeight",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.LineMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sHeight",
              "type": "sap.ui.core.CSSSize",
              "optional": false,
              "description": "New value for property <code>height</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getHeight height}.\n\nThe height of the chart. Overrides the height specified in the <code>size</code> property.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setLeftBottomLabel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.LineMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sLeftBottomLabel",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>leftBottomLabel</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getLeftBottomLabel leftBottomLabel}.\n\nDescribes the left bottom label of the chart. The label color is set internally. The space for the label is not reserved if the label is not set.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setLeftTopLabel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.LineMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sLeftTopLabel",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>leftTopLabel</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getLeftTopLabel leftTopLabel}.\n\nDescribes the left top label of the chart. The label color is determined by the color property of the first LineMicroChartPoint in the points aggregation. The space for the label is not reserved if the label is not set.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setMaxXValue",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.LineMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fMaxXValue",
              "type": "float",
              "optional": false,
              "description": "New value for property <code>maxXValue</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getMaxXValue maxXValue}.\n\nIf this property is set, it indicates the value the X-axis ends with.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setMaxYValue",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.LineMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fMaxYValue",
              "type": "float",
              "optional": false,
              "description": "New value for property <code>maxYValue</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getMaxYValue maxYValue}.\n\nIf this property is set, it indicates the value the Y-axis ends with.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setMinXValue",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.LineMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fMinXValue",
              "type": "float",
              "optional": false,
              "description": "New value for property <code>minXValue</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getMinXValue minXValue}.\n\nIf this property is set, it indicates the value the X-axis starts with.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setMinYValue",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.LineMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fMinYValue",
              "type": "float",
              "optional": false,
              "description": "New value for property <code>minYValue</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getMinYValue minYValue}.\n\nIf this property is set, it indicates the value the Y-axis starts with.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setRightBottomLabel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.LineMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sRightBottomLabel",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>rightBottomLabel</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getRightBottomLabel rightBottomLabel}.\n\nDescribes the right bottom label of the chart. The label color is set automatically. The space for the label is not reserved if the label is not set.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setRightTopLabel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.LineMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sRightTopLabel",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>rightTopLabel</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getRightTopLabel rightTopLabel}.\n\nDescribes the right top label of the chart. The label color is determined by the color property of the last LineMicroChartPoint in the points aggregation. The space for the label is not reserved if the label is not set.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setShowBottomLabels",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.LineMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowBottomLabels",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showBottomLabels</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowBottomLabels showBottomLabels}.\n\nIf this property is set to <code>false</code>, both bottom labels are hidden.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setShowPoints",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.LineMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowPoints",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showPoints</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowPoints showPoints}.\n\nDefines if the control renders the points or not. <br>If emphasized points are used, there is no effect. <br>If the value is true, the points in the aggregation are shown.\n\n<br>The <code>showPoints</code> property of the {@link sap.suite.ui.microchart.LineMicroChartLine} control has priority over this property in case it is set.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setShowThresholdLine",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.LineMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowThresholdLine",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showThresholdLine</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowThresholdLine showThresholdLine}.\n\nIf this property is set to <code>false</code>, the threshold line is hidden.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setShowThresholdValue",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.LineMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowThresholdValue",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showThresholdValue</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowThresholdValue showThresholdValue}.\n\nIf this property is set to <code>false</code>, the threshold value is hidden. <br>If this property is set to <code>true</code>, the value will be shown only if the <code>showThresholdLine</code> property is also set to <code>true</code>.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setShowTopLabels",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.LineMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowTopLabels",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showTopLabels</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowTopLabels showTopLabels}.\n\nIf this property is set to <code>false</code>, both top labels are hidden.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setSize",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.LineMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sSize",
              "type": "sap.m.Size",
              "optional": false,
              "description": "New value for property <code>size</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSize size}.\n\nThe size of the chart. If not set, the default size is applied based on the type of the device.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Auto</code>."
        },
        {
          "name": "setThreshold",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.LineMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fThreshold",
              "type": "float",
              "optional": false,
              "description": "New value for property <code>threshold</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getThreshold threshold}.\n\nDetermines the chart threshold which is used for vertical normalization. If the threshold does not belong to the value range given by minYValue...maxYValue, the threshold is ignored. By setting the threshold property's value to null, the threshold is disabled and excluded from range calculations.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>0</code>."
        },
        {
          "name": "setThresholdDisplayValue",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.LineMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sThresholdDisplayValue",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>thresholdDisplayValue</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getThresholdDisplayValue thresholdDisplayValue}.\n\nOverrides the threshold value with a string that is shown instead.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.LineMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sWidth",
              "type": "sap.ui.core.CSSSize",
              "optional": false,
              "description": "New value for property <code>width</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getWidth width}.\n\nThe width of the chart. Overrides the width specified in the <code>size</code> property.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "unbindLines",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.LineMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Unbinds aggregation {@link #getLines lines} from model data."
        },
        {
          "name": "unbindPoints",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.LineMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Unbinds aggregation {@link #getPoints points} from model data."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.microchart.LineMicroChartEmphasizedPoint",
      "basename": "LineMicroChartEmphasizedPoint",
      "resource": "sap/suite/ui/microchart/LineMicroChartEmphasizedPoint.js",
      "module": "sap/suite/ui/microchart/LineMicroChartEmphasizedPoint",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.48.0",
      "extends": "sap.suite.ui.microchart.LineMicroChartPoint",
      "description": "Contains the emphasized point of the line micro chart.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "element",
        "properties": [
          {
            "name": "color",
            "type": "sap.m.ValueCSSColor",
            "defaultValue": "Neutral",
            "group": "Misc",
            "visibility": "public",
            "description": "Determines the color of the emphasized point. The property has an effect only if the 'show' property is true. If at least one emphasized point has a color different from Neutral, the graph is grey; otherwise, the graph is blue.",
            "methods": ["getColor", "setColor"]
          },
          {
            "name": "show",
            "type": "boolean",
            "defaultValue": false,
            "group": "Appearance",
            "visibility": "public",
            "description": "Determines whether the chart point should be displayed or not.",
            "methods": ["getShow", "setShow"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new LineMicroChartEmphasizedPoint.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.microchart.LineMicroChartEmphasizedPoint with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.suite.ui.microchart.LineMicroChartPoint.extend}."
        },
        {
          "name": "getColor",
          "visibility": "public",
          "returnValue": {
            "type": "sap.m.ValueCSSColor",
            "description": "Value of property <code>color</code>"
          },
          "description": "Gets current value of property {@link #getColor color}.\n\nDetermines the color of the emphasized point. The property has an effect only if the 'show' property is true. If at least one emphasized point has a color different from Neutral, the graph is grey; otherwise, the graph is blue.\n\nDefault value is <code>Neutral</code>."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.microchart.LineMicroChartEmphasizedPoint."
        },
        {
          "name": "getShow",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>show</code>"
          },
          "description": "Gets current value of property {@link #getShow show}.\n\nDetermines whether the chart point should be displayed or not.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setColor",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.LineMicroChartEmphasizedPoint",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sColor",
              "type": "sap.m.ValueCSSColor",
              "optional": false,
              "description": "New value for property <code>color</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getColor color}.\n\nDetermines the color of the emphasized point. The property has an effect only if the 'show' property is true. If at least one emphasized point has a color different from Neutral, the graph is grey; otherwise, the graph is blue.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Neutral</code>."
        },
        {
          "name": "setShow",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.LineMicroChartEmphasizedPoint",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShow",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>show</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShow show}.\n\nDetermines whether the chart point should be displayed or not.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.microchart.LineMicroChartLine",
      "basename": "LineMicroChartLine",
      "resource": "sap/suite/ui/microchart/LineMicroChartLine.js",
      "module": "sap/suite/ui/microchart/LineMicroChartLine",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.60",
      "extends": "sap.ui.core.Element",
      "description": "The container containing all the points of the line.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "element",
        "properties": [
          {
            "name": "color",
            "type": "any",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "description": "Defines the color of the chart. <br>In conjunction with emphasized points, this property is only used if all points have the {@link sap.m.ValueColor.Neutral} color. The color can be set as an {@link sap.m.ValueCSSColor} or as a plain object. It has the <code>above</code> and <code>below</code> properties that determine the color of the graph above and below the threshold, respectively.\n\n<br>This property has priority over the property <code>color</code> of {@link sap.suite.ui.microchart.LineMicroChart} in case it is set. <br>If this property is not defined, the value of the <code>color</code> property from the parent {@link sap.suite.ui.microchart.LineMicroChart} is used instead.",
            "methods": ["getColor", "setColor"]
          },
          {
            "name": "showPoints",
            "type": "boolean",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "description": "Defines whether the points are shown. <br>If emphasized points are used, this property is ignored. <br>If this property is set to <code>true</code>, the points in the <code>points</code> aggregation are shown.\n\n<br>This property has priority over the property <code>showPoints</code> of {@link sap.suite.ui.microchart.LineMicroChart} in case it is set. <br>If this property is not defined, the <code>showPoints</code> property of the {@link sap.suite.ui.microchart.LineMicroChart} is used instead.",
            "methods": ["getShowPoints", "setShowPoints"]
          },
          {
            "name": "type",
            "type": "sap.suite.ui.microchart.LineType",
            "defaultValue": "Solid",
            "group": "Appearance",
            "visibility": "public",
            "description": "Defines the type of the line.",
            "methods": ["getType", "setType"]
          }
        ],
        "aggregations": [
          {
            "name": "points",
            "singularName": "point",
            "type": "sap.suite.ui.microchart.LineMicroChartPoint",
            "cardinality": "0..n",
            "visibility": "public",
            "bindable": true,
            "description": "Aggregation that contains all data points that should be provided in an ordered way.\n\n<br><b>Note:</b> Points can be bound without template/factory method. <br>This approach is more efficient when many points are used, because no new objects will be created for them and only their representation in the model will be kept. See the {@link https://ui5.sap.com/#/sample/sap.suite.ui.microchart.sample.LineMicroChartBinding/preview samples}. <br>To use emphasized points, the <code>emphasized</code> property has to be set in the model of the point and can be used together with the properties <code>show</code> and <code>color</code>, as shown in the sample. When this binding method is used, the #getPoints method will always return an empty array.",
            "methods": [
              "getPoints",
              "destroyPoints",
              "insertPoint",
              "addPoint",
              "removePoint",
              "indexOfPoint",
              "removeAllPoints",
              "bindPoints",
              "unbindPoints"
            ]
          }
        ],
        "defaultAggregation": "points"
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new LineMicroChartLine.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "addPoint",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.LineMicroChartLine",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oPoint",
              "type": "sap.suite.ui.microchart.LineMicroChartPoint",
              "optional": false,
              "description": "The point to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some point to the aggregation {@link #getPoints points}."
        },
        {
          "name": "bindPoints",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.LineMicroChartLine",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oBindingInfo",
              "type": "object",
              "optional": false,
              "description": "The binding information"
            }
          ],
          "description": "Binds aggregation {@link #getPoints points} to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a detailed description of the possible properties of <code>oBindingInfo</code>."
        },
        {
          "name": "destroyPoints",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.LineMicroChartLine",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the points in the aggregation {@link #getPoints points}."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.microchart.LineMicroChartLine with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
        },
        {
          "name": "getColor",
          "visibility": "public",
          "returnValue": {
            "type": "any",
            "description": "Value of property <code>color</code>"
          },
          "description": "Gets current value of property {@link #getColor color}.\n\nDefines the color of the chart. <br>In conjunction with emphasized points, this property is only used if all points have the {@link sap.m.ValueColor.Neutral} color. The color can be set as an {@link sap.m.ValueCSSColor} or as a plain object. It has the <code>above</code> and <code>below</code> properties that determine the color of the graph above and below the threshold, respectively.\n\n<br>This property has priority over the property <code>color</code> of {@link sap.suite.ui.microchart.LineMicroChart} in case it is set. <br>If this property is not defined, the value of the <code>color</code> property from the parent {@link sap.suite.ui.microchart.LineMicroChart} is used instead."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.microchart.LineMicroChartLine."
        },
        {
          "name": "getPoints",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.LineMicroChartPoint[]"
          },
          "description": "Gets content of aggregation {@link #getPoints points}.\n\nAggregation that contains all data points that should be provided in an ordered way.\n\n<br><b>Note:</b> Points can be bound without template/factory method. <br>This approach is more efficient when many points are used, because no new objects will be created for them and only their representation in the model will be kept. See the {@link https://ui5.sap.com/#/sample/sap.suite.ui.microchart.sample.LineMicroChartBinding/preview samples}. <br>To use emphasized points, the <code>emphasized</code> property has to be set in the model of the point and can be used together with the properties <code>show</code> and <code>color</code>, as shown in the sample. When this binding method is used, the #getPoints method will always return an empty array."
        },
        {
          "name": "getShowPoints",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showPoints</code>"
          },
          "description": "Gets current value of property {@link #getShowPoints showPoints}.\n\nDefines whether the points are shown. <br>If emphasized points are used, this property is ignored. <br>If this property is set to <code>true</code>, the points in the <code>points</code> aggregation are shown.\n\n<br>This property has priority over the property <code>showPoints</code> of {@link sap.suite.ui.microchart.LineMicroChart} in case it is set. <br>If this property is not defined, the <code>showPoints</code> property of the {@link sap.suite.ui.microchart.LineMicroChart} is used instead."
        },
        {
          "name": "getType",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.LineType",
            "description": "Value of property <code>type</code>"
          },
          "description": "Gets current value of property {@link #getType type}.\n\nDefines the type of the line.\n\nDefault value is <code>Solid</code>."
        },
        {
          "name": "indexOfPoint",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oPoint",
              "type": "sap.suite.ui.microchart.LineMicroChartPoint",
              "optional": false,
              "description": "The point whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.suite.ui.microchart.LineMicroChartPoint</code> in the aggregation {@link #getPoints points}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "insertPoint",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.LineMicroChartLine",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oPoint",
              "type": "sap.suite.ui.microchart.LineMicroChartPoint",
              "optional": false,
              "description": "The point to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the point should be inserted at; for a negative value of <code>iIndex</code>, the point is inserted at position 0; for a value greater than the current size of the aggregation, the point is inserted at the last position"
            }
          ],
          "description": "Inserts a point into the aggregation {@link #getPoints points}."
        },
        {
          "name": "removeAllPoints",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.LineMicroChartPoint[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getPoints points}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removePoint",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.LineMicroChartPoint",
            "description": "The removed point or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vPoint",
              "type": "int|string|sap.suite.ui.microchart.LineMicroChartPoint",
              "optional": false,
              "description": "The point to remove or its index or id"
            }
          ],
          "description": "Removes a point from the aggregation {@link #getPoints points}."
        },
        {
          "name": "setColor",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.LineMicroChartLine",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oColor",
              "type": "any",
              "optional": false,
              "description": "New value for property <code>color</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getColor color}.\n\nDefines the color of the chart. <br>In conjunction with emphasized points, this property is only used if all points have the {@link sap.m.ValueColor.Neutral} color. The color can be set as an {@link sap.m.ValueCSSColor} or as a plain object. It has the <code>above</code> and <code>below</code> properties that determine the color of the graph above and below the threshold, respectively.\n\n<br>This property has priority over the property <code>color</code> of {@link sap.suite.ui.microchart.LineMicroChart} in case it is set. <br>If this property is not defined, the value of the <code>color</code> property from the parent {@link sap.suite.ui.microchart.LineMicroChart} is used instead.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setShowPoints",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.LineMicroChartLine",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowPoints",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showPoints</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowPoints showPoints}.\n\nDefines whether the points are shown. <br>If emphasized points are used, this property is ignored. <br>If this property is set to <code>true</code>, the points in the <code>points</code> aggregation are shown.\n\n<br>This property has priority over the property <code>showPoints</code> of {@link sap.suite.ui.microchart.LineMicroChart} in case it is set. <br>If this property is not defined, the <code>showPoints</code> property of the {@link sap.suite.ui.microchart.LineMicroChart} is used instead.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setType",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.LineMicroChartLine",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sType",
              "type": "sap.suite.ui.microchart.LineType",
              "optional": false,
              "description": "New value for property <code>type</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getType type}.\n\nDefines the type of the line.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Solid</code>."
        },
        {
          "name": "unbindPoints",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.LineMicroChartLine",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Unbinds aggregation {@link #getPoints points} from model data."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.microchart.LineMicroChartPoint",
      "basename": "LineMicroChartPoint",
      "resource": "sap/suite/ui/microchart/LineMicroChartPoint.js",
      "module": "sap/suite/ui/microchart/LineMicroChartPoint",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.48.0",
      "extends": "sap.ui.core.Element",
      "description": "Contains the point of the line micro chart.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "element",
        "properties": [
          {
            "name": "x",
            "type": "float",
            "defaultValue": 0,
            "group": "Data",
            "visibility": "public",
            "description": "The point's horizontal position.",
            "methods": ["getX", "setX"]
          },
          {
            "name": "y",
            "type": "float",
            "defaultValue": 0,
            "group": "Data",
            "visibility": "public",
            "description": "The point's vertical position.",
            "methods": ["getY", "setY"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new LineMicroChartPoint.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.microchart.LineMicroChartPoint with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.microchart.LineMicroChartPoint."
        },
        {
          "name": "getX",
          "visibility": "public",
          "returnValue": {
            "type": "float",
            "description": "Value of property <code>x</code>"
          },
          "description": "Gets current value of property {@link #getX x}.\n\nThe point's horizontal position.\n\nDefault value is <code>0</code>."
        },
        {
          "name": "getY",
          "visibility": "public",
          "returnValue": {
            "type": "float",
            "description": "Value of property <code>y</code>"
          },
          "description": "Gets current value of property {@link #getY y}.\n\nThe point's vertical position.\n\nDefault value is <code>0</code>."
        },
        {
          "name": "setX",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.LineMicroChartPoint",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fX",
              "type": "float",
              "optional": false,
              "description": "New value for property <code>x</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getX x}.\n\nThe point's horizontal position.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>0</code>."
        },
        {
          "name": "setY",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.LineMicroChartPoint",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fY",
              "type": "float",
              "optional": false,
              "description": "New value for property <code>y</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getY y}.\n\nThe point's vertical position.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>0</code>."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.suite.ui.microchart.LineType",
      "basename": "LineType",
      "resource": "sap/suite/ui/microchart/library.js",
      "module": "sap/suite/ui/microchart/library",
      "export": "LineType",
      "static": true,
      "visibility": "public",
      "since": "1.60",
      "description": "Type of the microchart line.",
      "ui5-metamodel": true,
      "properties": [
        {
          "name": "Dashed",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Dashed line."
        },
        {
          "name": "Dotted",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Dotted line."
        },
        {
          "name": "Solid",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Solid line."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.microchart.RadialMicroChart",
      "basename": "RadialMicroChart",
      "resource": "sap/suite/ui/microchart/RadialMicroChart.js",
      "module": "sap/suite/ui/microchart/RadialMicroChart",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.36.0",
      "extends": "sap.ui.core.Control",
      "description": "Displays a ring chart highlighting a current status. The status is displayed with a semantically colored radial bar and a percentage value. <br>Note: You can assign a custom tooltip for this microchart. The custom tooltip can be set using expression binding. When no custom tooltip is defined, the tooltip is generated automatically based on the logic described in {@link sap.ui.core.Element#getTooltip_AsString}. For a combination of a generated and a custom tooltip, use <code>((AltText))</code> inside of the tooltip string.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "total",
            "type": "float",
            "defaultValue": null,
            "group": "Data",
            "visibility": "public",
            "description": "The total value. This is taken as 360 degrees value on the chart.",
            "methods": ["getTotal", "setTotal"]
          },
          {
            "name": "fraction",
            "type": "float",
            "defaultValue": null,
            "group": "Data",
            "visibility": "public",
            "description": "The fraction of the total value that is displayed.",
            "methods": ["getFraction", "setFraction"]
          },
          {
            "name": "percentage",
            "type": "float",
            "defaultValue": null,
            "group": "Data",
            "visibility": "public",
            "description": "The percentage that is displayed. When a percentage is set, properties total and fraction are not considered.",
            "methods": ["getPercentage", "setPercentage"]
          },
          {
            "name": "valueColor",
            "type": "sap.m.ValueCSSColor",
            "defaultValue": "Neutral",
            "group": "Appearance",
            "visibility": "public",
            "description": "The color shown in the completed path.",
            "methods": ["getValueColor", "setValueColor"]
          },
          {
            "name": "size",
            "type": "sap.m.Size",
            "defaultValue": "Auto",
            "group": "Misc",
            "visibility": "public",
            "since": "1.44.0",
            "description": "The size of the chart. If it is not set, the Auto size is used.",
            "methods": ["getSize", "setSize"]
          },
          {
            "name": "width",
            "type": "sap.ui.core.CSSSize",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.62.0",
            "description": "The width of the chart. Overrides the width specified in the <code>size</code> property.",
            "methods": ["getWidth", "setWidth"]
          },
          {
            "name": "height",
            "type": "sap.ui.core.CSSSize",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.62.0",
            "description": "The height of the chart. Overrides the height specified in the <code>size</code> property.",
            "methods": ["getHeight", "setHeight"]
          },
          {
            "name": "alignContent",
            "type": "sap.suite.ui.microchart.HorizontalAlignmentType",
            "defaultValue": "Left",
            "group": "Misc",
            "visibility": "public",
            "since": "1.62.0",
            "description": "The alignment of the content. If it is not set, the <code>Left</code> alignment type is used.",
            "methods": ["getAlignContent", "setAlignContent"]
          }
        ],
        "associations": [
          {
            "name": "ariaLabelledBy",
            "singularName": "ariaLabelledBy",
            "type": "sap.ui.core.Control",
            "cardinality": "0..n",
            "visibility": "public",
            "since": "1.60.0",
            "description": "Controls or IDs that label this control. Can be used by screen reader software.",
            "methods": [
              "getAriaLabelledBy",
              "addAriaLabelledBy",
              "removeAriaLabelledBy",
              "removeAllAriaLabelledBy"
            ]
          }
        ],
        "events": [
          {
            "name": "press",
            "visibility": "public",
            "description": "The event is triggered when the chart is pressed.",
            "methods": ["attachPress", "detachPress", "firePress"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "description": "Describes the configuration of the graphic element on the chart.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "press",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "The event is triggered when the chart is pressed."
        }
      ],
      "methods": [
        {
          "name": "addAriaLabelledBy",
          "visibility": "public",
          "since": "1.60.0",
          "returnValue": {
            "type": "sap.suite.ui.microchart.RadialMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "vAriaLabelledBy",
              "type": "sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaLabelledBy to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "attachPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.RadialMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.microchart.RadialMicroChart</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:press press} event of this <code>sap.suite.ui.microchart.RadialMicroChart</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.microchart.RadialMicroChart</code> itself.\n\nThe event is triggered when the chart is pressed."
        },
        {
          "name": "detachPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.RadialMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:press press} event of this <code>sap.suite.ui.microchart.RadialMicroChart</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.microchart.RadialMicroChart with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "firePress",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.microchart.RadialMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:press press} to attached listeners."
        },
        {
          "name": "getAlignContent",
          "visibility": "public",
          "since": "1.62.0",
          "returnValue": {
            "type": "sap.suite.ui.microchart.HorizontalAlignmentType",
            "description": "Value of property <code>alignContent</code>"
          },
          "description": "Gets current value of property {@link #getAlignContent alignContent}.\n\nThe alignment of the content. If it is not set, the <code>Left</code> alignment type is used.\n\nDefault value is <code>Left</code>."
        },
        {
          "name": "getAriaLabelledBy",
          "visibility": "public",
          "since": "1.60.0",
          "returnValue": { "type": "sap.ui.core.ID[]" },
          "description": "Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "getFraction",
          "visibility": "public",
          "returnValue": {
            "type": "float",
            "description": "Value of property <code>fraction</code>"
          },
          "description": "Gets current value of property {@link #getFraction fraction}.\n\nThe fraction of the total value that is displayed."
        },
        {
          "name": "getHeight",
          "visibility": "public",
          "since": "1.62.0",
          "returnValue": {
            "type": "sap.ui.core.CSSSize",
            "description": "Value of property <code>height</code>"
          },
          "description": "Gets current value of property {@link #getHeight height}.\n\nThe height of the chart. Overrides the height specified in the <code>size</code> property."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.microchart.RadialMicroChart."
        },
        {
          "name": "getPercentage",
          "visibility": "public",
          "returnValue": {
            "type": "float",
            "description": "Value of property <code>percentage</code>"
          },
          "description": "Gets current value of property {@link #getPercentage percentage}.\n\nThe percentage that is displayed. When a percentage is set, properties total and fraction are not considered."
        },
        {
          "name": "getSize",
          "visibility": "public",
          "since": "1.44.0",
          "returnValue": {
            "type": "sap.m.Size",
            "description": "Value of property <code>size</code>"
          },
          "description": "Gets current value of property {@link #getSize size}.\n\nThe size of the chart. If it is not set, the Auto size is used.\n\nDefault value is <code>Auto</code>."
        },
        {
          "name": "getTotal",
          "visibility": "public",
          "returnValue": {
            "type": "float",
            "description": "Value of property <code>total</code>"
          },
          "description": "Gets current value of property {@link #getTotal total}.\n\nThe total value. This is taken as 360 degrees value on the chart."
        },
        {
          "name": "getValueColor",
          "visibility": "public",
          "returnValue": {
            "type": "sap.m.ValueCSSColor",
            "description": "Value of property <code>valueColor</code>"
          },
          "description": "Gets current value of property {@link #getValueColor valueColor}.\n\nThe color shown in the completed path.\n\nDefault value is <code>Neutral</code>."
        },
        {
          "name": "getWidth",
          "visibility": "public",
          "since": "1.62.0",
          "returnValue": {
            "type": "sap.ui.core.CSSSize",
            "description": "Value of property <code>width</code>"
          },
          "description": "Gets current value of property {@link #getWidth width}.\n\nThe width of the chart. Overrides the width specified in the <code>size</code> property."
        },
        {
          "name": "removeAllAriaLabelledBy",
          "visibility": "public",
          "since": "1.60.0",
          "returnValue": {
            "type": "sap.ui.core.ID[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "removeAriaLabelledBy",
          "visibility": "public",
          "since": "1.60.0",
          "returnValue": {
            "type": "sap.ui.core.ID",
            "description": "The removed ariaLabelledBy or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vAriaLabelledBy",
              "type": "int|sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaLabelledBy to be removed or its index or ID"
            }
          ],
          "description": "Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "setAlignContent",
          "visibility": "public",
          "since": "1.62.0",
          "returnValue": {
            "type": "sap.suite.ui.microchart.RadialMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sAlignContent",
              "type": "sap.suite.ui.microchart.HorizontalAlignmentType",
              "optional": false,
              "description": "New value for property <code>alignContent</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getAlignContent alignContent}.\n\nThe alignment of the content. If it is not set, the <code>Left</code> alignment type is used.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Left</code>."
        },
        {
          "name": "setFraction",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.RadialMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fFraction",
              "type": "float",
              "optional": false,
              "description": "New value for property <code>fraction</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getFraction fraction}.\n\nThe fraction of the total value that is displayed.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setHeight",
          "visibility": "public",
          "since": "1.62.0",
          "returnValue": {
            "type": "sap.suite.ui.microchart.RadialMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sHeight",
              "type": "sap.ui.core.CSSSize",
              "optional": false,
              "description": "New value for property <code>height</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getHeight height}.\n\nThe height of the chart. Overrides the height specified in the <code>size</code> property.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setPercentage",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.RadialMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fPercentage",
              "type": "float",
              "optional": false,
              "description": "New value for property <code>percentage</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getPercentage percentage}.\n\nThe percentage that is displayed. When a percentage is set, properties total and fraction are not considered.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setSize",
          "visibility": "public",
          "since": "1.44.0",
          "returnValue": {
            "type": "sap.suite.ui.microchart.RadialMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sSize",
              "type": "sap.m.Size",
              "optional": false,
              "description": "New value for property <code>size</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSize size}.\n\nThe size of the chart. If it is not set, the Auto size is used.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Auto</code>."
        },
        {
          "name": "setTotal",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.RadialMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fTotal",
              "type": "float",
              "optional": false,
              "description": "New value for property <code>total</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getTotal total}.\n\nThe total value. This is taken as 360 degrees value on the chart.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setValueColor",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.RadialMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sValueColor",
              "type": "sap.m.ValueCSSColor",
              "optional": false,
              "description": "New value for property <code>valueColor</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getValueColor valueColor}.\n\nThe color shown in the completed path.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Neutral</code>."
        },
        {
          "name": "setWidth",
          "visibility": "public",
          "since": "1.62.0",
          "returnValue": {
            "type": "sap.suite.ui.microchart.RadialMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sWidth",
              "type": "sap.ui.core.CSSSize",
              "optional": false,
              "description": "New value for property <code>width</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getWidth width}.\n\nThe width of the chart. Overrides the width specified in the <code>size</code> property.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.microchart.StackedBarMicroChart",
      "basename": "StackedBarMicroChart",
      "resource": "sap/suite/ui/microchart/StackedBarMicroChart.js",
      "module": "sap/suite/ui/microchart/StackedBarMicroChart",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.44.0",
      "extends": "sap.ui.core.Control",
      "description": "Illustrates values as stacked and colored bar charts displaying numeric values (as absolute values or percentages) inside the bars. <br>Note: You can assign a custom tooltip for this microchart. The custom tooltip can be set using expression binding. When no custom tooltip is defined, the tooltip is generated automatically based on the logic described in {@link sap.ui.core.Element#getTooltip_AsString}. For a combination of a generated and a custom tooltip, use <code>((AltText))</code> inside of the tooltip string. The aggregated data of the microchart can also be customized.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "size",
            "type": "sap.m.Size",
            "defaultValue": "Auto",
            "group": "Appearance",
            "visibility": "public",
            "description": "The size of the chart. If not set, the default size is applied based on the size of the device tile. Responsive size takes width and height of the parent container where the stacked bar micro chart is included.",
            "methods": ["getSize", "setSize"]
          },
          {
            "name": "maxValue",
            "type": "float",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "description": "The maximum value can be set to scale StackedBarMicroChartBar values to the same base. If maxValue is smaller than the sum of all StackedMicroChartBar values, the maxValue is ignored. All values are shown as percentage values (same behavior as maxValue is not used). If maxValue is equal or bigger than the sum of all StackedMicroChartBars, all values are scaled to the value of maxValue and the percentage mode is turned off. Absolute values are shown instead. The difference between the sum and maxValue is shown as invisible bar, thus e.g. different StackedBarMicroChart instances can be compared.",
            "methods": ["getMaxValue", "setMaxValue"]
          },
          {
            "name": "precision",
            "type": "int",
            "defaultValue": 1,
            "group": "Appearance",
            "visibility": "public",
            "description": "The precision of the rounding for the calculated percentage values of the bars. It defines how many digits after the decimal point are displayed. The default is set to 1 digit.",
            "methods": ["getPrecision", "setPrecision"]
          },
          {
            "name": "displayZeroValue",
            "type": "boolean",
            "defaultValue": true,
            "group": "Appearance",
            "visibility": "public",
            "since": "1.71.14",
            "description": "Defines whether stacked bars with zero value should be rendered. The default is <code>true</code> where these zero value stacked bars are rendered with a minimum width of 0.25rem.",
            "methods": ["getDisplayZeroValue", "setDisplayZeroValue"]
          },
          {
            "name": "width",
            "type": "sap.ui.core.CSSSize",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The width of the chart. Overrides the width specified in the <code>size</code> property.",
            "methods": ["getWidth", "setWidth"]
          },
          {
            "name": "height",
            "type": "sap.ui.core.CSSSize",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The height of the chart. Overrides the height specified in the <code>size</code> property.",
            "methods": ["getHeight", "setHeight"]
          },
          {
            "name": "showLabels",
            "type": "boolean",
            "defaultValue": true,
            "group": "Misc",
            "visibility": "public",
            "description": "Defines whether the bar labels should be rendered. If set to <code>true</code>, the labels that were specified for each bar become visible.",
            "methods": ["getShowLabels", "setShowLabels"]
          }
        ],
        "aggregations": [
          {
            "name": "bars",
            "singularName": "bar",
            "type": "sap.suite.ui.microchart.StackedBarMicroChartBar",
            "cardinality": "0..n",
            "visibility": "public",
            "bindable": true,
            "description": "The stacked bar chart items.",
            "methods": [
              "getBars",
              "destroyBars",
              "insertBar",
              "addBar",
              "removeBar",
              "indexOfBar",
              "removeAllBars",
              "bindBars",
              "unbindBars"
            ]
          }
        ],
        "defaultAggregation": "bars",
        "associations": [
          {
            "name": "ariaLabelledBy",
            "singularName": "ariaLabelledBy",
            "type": "sap.ui.core.Control",
            "cardinality": "0..n",
            "visibility": "public",
            "since": "1.60.0",
            "description": "Controls or IDs that label this control. Can be used by screen reader software.",
            "methods": [
              "getAriaLabelledBy",
              "addAriaLabelledBy",
              "removeAriaLabelledBy",
              "removeAllAriaLabelledBy"
            ]
          }
        ],
        "events": [
          {
            "name": "press",
            "visibility": "public",
            "description": "The event is fired when the user chooses the microchart.",
            "methods": ["attachPress", "detachPress", "firePress"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new StackedBarMicroChart control.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "press",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "The event is fired when the user chooses the microchart."
        }
      ],
      "methods": [
        {
          "name": "addAriaLabelledBy",
          "visibility": "public",
          "since": "1.60.0",
          "returnValue": {
            "type": "sap.suite.ui.microchart.StackedBarMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "vAriaLabelledBy",
              "type": "sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaLabelledBy to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "addBar",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.StackedBarMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oBar",
              "type": "sap.suite.ui.microchart.StackedBarMicroChartBar",
              "optional": false,
              "description": "The bar to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some bar to the aggregation {@link #getBars bars}."
        },
        {
          "name": "attachPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.StackedBarMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.microchart.StackedBarMicroChart</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:press press} event of this <code>sap.suite.ui.microchart.StackedBarMicroChart</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.suite.ui.microchart.StackedBarMicroChart</code> itself.\n\nThe event is fired when the user chooses the microchart."
        },
        {
          "name": "bindBars",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.StackedBarMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oBindingInfo",
              "type": "object",
              "optional": false,
              "description": "The binding information"
            }
          ],
          "description": "Binds aggregation {@link #getBars bars} to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a detailed description of the possible properties of <code>oBindingInfo</code>."
        },
        {
          "name": "destroyBars",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.StackedBarMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the bars in the aggregation {@link #getBars bars}."
        },
        {
          "name": "detachPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.StackedBarMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:press press} event of this <code>sap.suite.ui.microchart.StackedBarMicroChart</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.microchart.StackedBarMicroChart with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "firePress",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.suite.ui.microchart.StackedBarMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:press press} to attached listeners."
        },
        {
          "name": "getAriaLabelledBy",
          "visibility": "public",
          "since": "1.60.0",
          "returnValue": { "type": "sap.ui.core.ID[]" },
          "description": "Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "getBars",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.StackedBarMicroChartBar[]"
          },
          "description": "Gets content of aggregation {@link #getBars bars}.\n\nThe stacked bar chart items."
        },
        {
          "name": "getDisplayZeroValue",
          "visibility": "public",
          "since": "1.71.14",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>displayZeroValue</code>"
          },
          "description": "Gets current value of property {@link #getDisplayZeroValue displayZeroValue}.\n\nDefines whether stacked bars with zero value should be rendered. The default is <code>true</code> where these zero value stacked bars are rendered with a minimum width of 0.25rem.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getHeight",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.CSSSize",
            "description": "Value of property <code>height</code>"
          },
          "description": "Gets current value of property {@link #getHeight height}.\n\nThe height of the chart. Overrides the height specified in the <code>size</code> property."
        },
        {
          "name": "getMaxValue",
          "visibility": "public",
          "returnValue": {
            "type": "float",
            "description": "Value of property <code>maxValue</code>"
          },
          "description": "Gets current value of property {@link #getMaxValue maxValue}.\n\nThe maximum value can be set to scale StackedBarMicroChartBar values to the same base. If maxValue is smaller than the sum of all StackedMicroChartBar values, the maxValue is ignored. All values are shown as percentage values (same behavior as maxValue is not used). If maxValue is equal or bigger than the sum of all StackedMicroChartBars, all values are scaled to the value of maxValue and the percentage mode is turned off. Absolute values are shown instead. The difference between the sum and maxValue is shown as invisible bar, thus e.g. different StackedBarMicroChart instances can be compared."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.microchart.StackedBarMicroChart."
        },
        {
          "name": "getPrecision",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>precision</code>"
          },
          "description": "Gets current value of property {@link #getPrecision precision}.\n\nThe precision of the rounding for the calculated percentage values of the bars. It defines how many digits after the decimal point are displayed. The default is set to 1 digit.\n\nDefault value is <code>1</code>."
        },
        {
          "name": "getShowLabels",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showLabels</code>"
          },
          "description": "Gets current value of property {@link #getShowLabels showLabels}.\n\nDefines whether the bar labels should be rendered. If set to <code>true</code>, the labels that were specified for each bar become visible.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getSize",
          "visibility": "public",
          "returnValue": {
            "type": "sap.m.Size",
            "description": "Value of property <code>size</code>"
          },
          "description": "Gets current value of property {@link #getSize size}.\n\nThe size of the chart. If not set, the default size is applied based on the size of the device tile. Responsive size takes width and height of the parent container where the stacked bar micro chart is included.\n\nDefault value is <code>Auto</code>."
        },
        {
          "name": "getWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.CSSSize",
            "description": "Value of property <code>width</code>"
          },
          "description": "Gets current value of property {@link #getWidth width}.\n\nThe width of the chart. Overrides the width specified in the <code>size</code> property."
        },
        {
          "name": "indexOfBar",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oBar",
              "type": "sap.suite.ui.microchart.StackedBarMicroChartBar",
              "optional": false,
              "description": "The bar whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.suite.ui.microchart.StackedBarMicroChartBar</code> in the aggregation {@link #getBars bars}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "insertBar",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.StackedBarMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oBar",
              "type": "sap.suite.ui.microchart.StackedBarMicroChartBar",
              "optional": false,
              "description": "The bar to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the bar should be inserted at; for a negative value of <code>iIndex</code>, the bar is inserted at position 0; for a value greater than the current size of the aggregation, the bar is inserted at the last position"
            }
          ],
          "description": "Inserts a bar into the aggregation {@link #getBars bars}."
        },
        {
          "name": "removeAllAriaLabelledBy",
          "visibility": "public",
          "since": "1.60.0",
          "returnValue": {
            "type": "sap.ui.core.ID[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "removeAllBars",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.StackedBarMicroChartBar[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getBars bars}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeAriaLabelledBy",
          "visibility": "public",
          "since": "1.60.0",
          "returnValue": {
            "type": "sap.ui.core.ID",
            "description": "The removed ariaLabelledBy or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vAriaLabelledBy",
              "type": "int|sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaLabelledBy to be removed or its index or ID"
            }
          ],
          "description": "Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "removeBar",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.StackedBarMicroChartBar",
            "description": "The removed bar or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vBar",
              "type": "int|string|sap.suite.ui.microchart.StackedBarMicroChartBar",
              "optional": false,
              "description": "The bar to remove or its index or id"
            }
          ],
          "description": "Removes a bar from the aggregation {@link #getBars bars}."
        },
        {
          "name": "setDisplayZeroValue",
          "visibility": "public",
          "since": "1.71.14",
          "returnValue": {
            "type": "sap.suite.ui.microchart.StackedBarMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bDisplayZeroValue",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>displayZeroValue</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getDisplayZeroValue displayZeroValue}.\n\nDefines whether stacked bars with zero value should be rendered. The default is <code>true</code> where these zero value stacked bars are rendered with a minimum width of 0.25rem.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setHeight",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.StackedBarMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sHeight",
              "type": "sap.ui.core.CSSSize",
              "optional": false,
              "description": "New value for property <code>height</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getHeight height}.\n\nThe height of the chart. Overrides the height specified in the <code>size</code> property.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setMaxValue",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.StackedBarMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fMaxValue",
              "type": "float",
              "optional": false,
              "description": "New value for property <code>maxValue</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getMaxValue maxValue}.\n\nThe maximum value can be set to scale StackedBarMicroChartBar values to the same base. If maxValue is smaller than the sum of all StackedMicroChartBar values, the maxValue is ignored. All values are shown as percentage values (same behavior as maxValue is not used). If maxValue is equal or bigger than the sum of all StackedMicroChartBars, all values are scaled to the value of maxValue and the percentage mode is turned off. Absolute values are shown instead. The difference between the sum and maxValue is shown as invisible bar, thus e.g. different StackedBarMicroChart instances can be compared.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setPrecision",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.StackedBarMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iPrecision",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>precision</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getPrecision precision}.\n\nThe precision of the rounding for the calculated percentage values of the bars. It defines how many digits after the decimal point are displayed. The default is set to 1 digit.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>1</code>."
        },
        {
          "name": "setShowLabels",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.StackedBarMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowLabels",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showLabels</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowLabels showLabels}.\n\nDefines whether the bar labels should be rendered. If set to <code>true</code>, the labels that were specified for each bar become visible.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setSize",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.StackedBarMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sSize",
              "type": "sap.m.Size",
              "optional": false,
              "description": "New value for property <code>size</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSize size}.\n\nThe size of the chart. If not set, the default size is applied based on the size of the device tile. Responsive size takes width and height of the parent container where the stacked bar micro chart is included.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Auto</code>."
        },
        {
          "name": "setWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.StackedBarMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sWidth",
              "type": "sap.ui.core.CSSSize",
              "optional": false,
              "description": "New value for property <code>width</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getWidth width}.\n\nThe width of the chart. Overrides the width specified in the <code>size</code> property.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "unbindBars",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.StackedBarMicroChart",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Unbinds aggregation {@link #getBars bars} from model data."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.suite.ui.microchart.StackedBarMicroChartBar",
      "basename": "StackedBarMicroChartBar",
      "resource": "sap/suite/ui/microchart/StackedBarMicroChartBar.js",
      "module": "sap/suite/ui/microchart/StackedBarMicroChartBar",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.44.0",
      "extends": "sap.ui.core.Element",
      "description": "Contains the values of the stacked bar chart.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "element",
        "properties": [
          {
            "name": "value",
            "type": "float",
            "defaultValue": "0",
            "group": "Data",
            "visibility": "public",
            "description": "The value for stacked bar chart. It is used in order to determine the width of the bar",
            "methods": ["getValue", "setValue"]
          },
          {
            "name": "valueColor",
            "type": "sap.m.ValueCSSColor",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "description": "The color of the bar.",
            "methods": ["getValueColor", "setValueColor"]
          },
          {
            "name": "displayValue",
            "type": "string",
            "defaultValue": null,
            "group": "Data",
            "visibility": "public",
            "description": "If this property is set, then it will be displayed instead of value.",
            "methods": ["getDisplayValue", "setDisplayValue"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new StackedBarMicroChartBar.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
            }
          ],
          "description": "Creates a new subclass of class sap.suite.ui.microchart.StackedBarMicroChartBar with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
        },
        {
          "name": "getDisplayValue",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>displayValue</code>"
          },
          "description": "Gets current value of property {@link #getDisplayValue displayValue}.\n\nIf this property is set, then it will be displayed instead of value."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.base.Metadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.suite.ui.microchart.StackedBarMicroChartBar."
        },
        {
          "name": "getValue",
          "visibility": "public",
          "returnValue": {
            "type": "float",
            "description": "Value of property <code>value</code>"
          },
          "description": "Gets current value of property {@link #getValue value}.\n\nThe value for stacked bar chart. It is used in order to determine the width of the bar\n\nDefault value is <code>0</code>."
        },
        {
          "name": "getValueColor",
          "visibility": "public",
          "returnValue": {
            "type": "sap.m.ValueCSSColor",
            "description": "Value of property <code>valueColor</code>"
          },
          "description": "Gets current value of property {@link #getValueColor valueColor}.\n\nThe color of the bar."
        },
        {
          "name": "setDisplayValue",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.StackedBarMicroChartBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sDisplayValue",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>displayValue</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getDisplayValue displayValue}.\n\nIf this property is set, then it will be displayed instead of value.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setValue",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.StackedBarMicroChartBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fValue",
              "type": "float",
              "optional": false,
              "description": "New value for property <code>value</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getValue value}.\n\nThe value for stacked bar chart. It is used in order to determine the width of the bar\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>0</code>."
        },
        {
          "name": "setValueColor",
          "visibility": "public",
          "returnValue": {
            "type": "sap.suite.ui.microchart.StackedBarMicroChartBar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sValueColor",
              "type": "sap.m.ValueCSSColor",
              "optional": false,
              "description": "New value for property <code>valueColor</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getValueColor valueColor}.\n\nThe color of the bar.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        }
      ]
    }
  ]
}
